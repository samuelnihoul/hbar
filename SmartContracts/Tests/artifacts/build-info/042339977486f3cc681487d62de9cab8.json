{
	"id": "042339977486f3cc681487d62de9cab8",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"hbar/SmartContracts/Tests/MintAndTransfer3.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity 0.8.17;\r\n\r\nimport \"../Auction2/hts-precompile/HederaResponseCodes.sol\";\r\nimport \"../Auction2/hts-precompile/IHederaTokenService.sol\";\r\nimport \"../Auction2/hts-precompile/HederaTokenService.sol\";\r\nimport \"../Auction2/hts-precompile/KeyHelper.sol\";\r\nimport \"../Auction2/hts-precompile/ExpiryHelper.sol\";\r\n\r\ncontract NFTCreator is ExpiryHelper, HederaTokenService {\r\n    function createNft(\r\n        string memory name,\r\n        string memory symbol,\r\n        string memory memo,\r\n        uint32 maxSupply,\r\n        uint32 autoRenewPeriod\r\n    ) external payable returns (address) {\r\n        IHederaTokenService.TokenKey[]\r\n            memory keys = new IHederaTokenService.TokenKey[](1);\r\n        // Set this contract as supply\r\n        keys[0] = getSingleKey(\r\n            KeyType.SUPPLY,\r\n            KeyValueType.CONTRACT_ID,\r\n            address(this)\r\n        );\r\n\r\n        IHederaTokenService.HederaToken memory token;\r\n        token.name = name;\r\n        token.symbol = symbol;\r\n        token.memo = memo;\r\n        token.treasury = address(this);\r\n        token.tokenSupplyType = true; // set supply to FINITE\r\n        token.maxSupply = maxSupply;\r\n        token.tokenKeys = keys;\r\n        token.freezeDefault = false;\r\n        token.expiry = createAutoRenewExpiry(address(this), autoRenewPeriod); // Contract automatically renew by himself\r\n\r\n        (int responseCode, address createdToken) = HederaTokenService\r\n            .createNonFungibleToken(token);\r\n\r\n        if (responseCode != HederaResponseCodes.SUCCESS) {\r\n            //revert(\"Failed to create non-fungible token\");\r\n        }\r\n        return createdToken;\r\n    }\r\n\r\n    function mintNft(\r\n        address token,\r\n        bytes[] memory metadata\r\n    ) external returns (int64) {\r\n        (int response, , int64[] memory serial) = HederaTokenService.mintToken(\r\n            token,\r\n            0,\r\n            metadata\r\n        );\r\n\r\n        if (response != HederaResponseCodes.SUCCESS) {\r\n            revert(\"Failed to mint non-fungible token\");\r\n        }\r\n\r\n        return serial[0];\r\n    }\r\n\r\n    function transferNft(\r\n        address token,\r\n        address receiver,\r\n        int64 serial\r\n    ) external returns (int) {\r\n        HederaTokenService.associateToken(receiver, token);\r\n        int response = HederaTokenService.transferNFT(\r\n            token,\r\n            address(this),\r\n            receiver,\r\n            serial\r\n        );\r\n\r\n        if (response != HederaResponseCodes.SUCCESS) {\r\n            revert(\"Failed to transfer non-fungible token\");\r\n        }\r\n\r\n        return response;\r\n    }\r\n}"
			},
			"hbar/SmartContracts/Auction2/hts-precompile/ExpiryHelper.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity >=0.5.0 <0.9.0;\npragma experimental ABIEncoderV2;\n\nimport \"./HederaTokenService.sol\";\nimport \"./FeeHelper.sol\";\n\ncontract ExpiryHelper is FeeHelper {\n\n    function createAutoRenewExpiry(\n        address autoRenewAccount,\n        uint32 autoRenewPeriod\n    ) internal view returns (IHederaTokenService.Expiry memory expiry) {\n        expiry.autoRenewAccount = autoRenewAccount;\n        expiry.autoRenewPeriod = autoRenewPeriod;\n    }\n\n    function createSecondExpiry(uint32 second) internal view returns (IHederaTokenService.Expiry memory expiry) {\n        expiry.second = second;\n    }\n}"
			},
			"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity >=0.5.0 <0.9.0;\npragma experimental ABIEncoderV2;\n\nimport \"./HederaTokenService.sol\";\n\nabstract contract KeyHelper {\n    using Bits for uint256;\n    address supplyContract;\n\n    mapping(KeyType => uint256) keyTypes;\n\n    enum KeyType {\n        ADMIN,\n        KYC,\n        FREEZE,\n        WIPE,\n        SUPPLY,\n        FEE,\n        PAUSE\n    }\n    enum KeyValueType {\n        INHERIT_ACCOUNT_KEY,\n        CONTRACT_ID,\n        ED25519,\n        SECP256K1,\n        DELEGETABLE_CONTRACT_ID\n    }\n\n    constructor() {\n        keyTypes[KeyType.ADMIN] = 1;\n        keyTypes[KeyType.KYC] = 2;\n        keyTypes[KeyType.FREEZE] = 4;\n        keyTypes[KeyType.WIPE] = 8;\n        keyTypes[KeyType.SUPPLY] = 16;\n        keyTypes[KeyType.FEE] = 32;\n        keyTypes[KeyType.PAUSE] = 64;\n    }\n\n    function getDefaultKeys()\n        internal\n        view\n        returns (IHederaTokenService.TokenKey[] memory keys)\n    {\n        keys = new IHederaTokenService.TokenKey[](2);\n        keys[0] = getSingleKey(KeyType.KYC, KeyValueType.CONTRACT_ID, \"\");\n        keys[1] = IHederaTokenService.TokenKey(\n            getDuplexKeyType(KeyType.SUPPLY, KeyType.PAUSE),\n            getKeyValueType(KeyValueType.CONTRACT_ID, \"\")\n        );\n    }\n\n    function getAllTypeKeys(\n        KeyValueType keyValueType,\n        bytes memory key\n    ) internal view returns (IHederaTokenService.TokenKey[] memory keys) {\n        keys = new IHederaTokenService.TokenKey[](1);\n        keys[0] = IHederaTokenService.TokenKey(\n            getAllKeyTypes(),\n            getKeyValueType(keyValueType, key)\n        );\n    }\n\n    function getCustomSingleTypeKeys(\n        KeyType keyType,\n        KeyValueType keyValueType,\n        bytes memory key\n    ) internal view returns (IHederaTokenService.TokenKey[] memory keys) {\n        keys = new IHederaTokenService.TokenKey[](1);\n        keys[0] = IHederaTokenService.TokenKey(\n            getKeyType(keyType),\n            getKeyValueType(keyValueType, key)\n        );\n    }\n\n    function getCustomDuplexTypeKeys(\n        KeyType firstType,\n        KeyType secondType,\n        KeyValueType keyValueType,\n        bytes memory key\n    ) internal view returns (IHederaTokenService.TokenKey[] memory keys) {\n        keys = new IHederaTokenService.TokenKey[](1);\n        keys[0] = IHederaTokenService.TokenKey(\n            getDuplexKeyType(firstType, secondType),\n            getKeyValueType(keyValueType, key)\n        );\n    }\n\n    function getSingleKey(\n        KeyType keyType,\n        KeyValueType keyValueType,\n        bytes memory key\n    ) internal view returns (IHederaTokenService.TokenKey memory tokenKey) {\n        tokenKey = IHederaTokenService.TokenKey(\n            getKeyType(keyType),\n            getKeyValueType(keyValueType, key)\n        );\n    }\n\n    function getSingleKey(\n        KeyType keyType,\n        KeyValueType keyValueType,\n        address key\n    ) internal view returns (IHederaTokenService.TokenKey memory tokenKey) {\n        tokenKey = IHederaTokenService.TokenKey(\n            getKeyType(keyType),\n            getKeyValueType(keyValueType, key)\n        );\n    }\n\n    function getSingleKey(\n        KeyType firstType,\n        KeyType secondType,\n        KeyValueType keyValueType,\n        bytes memory key\n    ) internal view returns (IHederaTokenService.TokenKey memory tokenKey) {\n        tokenKey = IHederaTokenService.TokenKey(\n            getDuplexKeyType(firstType, secondType),\n            getKeyValueType(keyValueType, key)\n        );\n    }\n\n    function getDuplexKeyType(\n        KeyType firstType,\n        KeyType secondType\n    ) internal pure returns (uint256 keyType) {\n        keyType = keyType.setBit(uint8(firstType));\n        keyType = keyType.setBit(uint8(secondType));\n    }\n\n    function getAllKeyTypes() internal pure returns (uint256 keyType) {\n        keyType = keyType.setBit(uint8(KeyType.ADMIN));\n        keyType = keyType.setBit(uint8(KeyType.KYC));\n        keyType = keyType.setBit(uint8(KeyType.FREEZE));\n        keyType = keyType.setBit(uint8(KeyType.WIPE));\n        keyType = keyType.setBit(uint8(KeyType.SUPPLY));\n        keyType = keyType.setBit(uint8(KeyType.FEE));\n        keyType = keyType.setBit(uint8(KeyType.PAUSE));\n    }\n\n    function getKeyType(KeyType keyType) internal view returns (uint256) {\n        return keyTypes[keyType];\n    }\n\n    function getKeyValueType(\n        KeyValueType keyValueType,\n        bytes memory key\n    ) internal view returns (IHederaTokenService.KeyValue memory keyValue) {\n        if (keyValueType == KeyValueType.INHERIT_ACCOUNT_KEY) {\n            keyValue.inheritAccountKey = true;\n        } else if (keyValueType == KeyValueType.CONTRACT_ID) {\n            keyValue.contractId = supplyContract;\n        } else if (keyValueType == KeyValueType.ED25519) {\n            keyValue.ed25519 = key;\n        } else if (keyValueType == KeyValueType.SECP256K1) {\n            keyValue.ECDSA_secp256k1 = key;\n        } else if (keyValueType == KeyValueType.DELEGETABLE_CONTRACT_ID) {\n            keyValue.delegatableContractId = supplyContract;\n        }\n    }\n\n    function getKeyValueType(\n        KeyValueType keyValueType,\n        address keyAddress\n    ) internal pure returns (IHederaTokenService.KeyValue memory keyValue) {\n        if (keyValueType == KeyValueType.CONTRACT_ID) {\n            keyValue.contractId = keyAddress;\n        } else if (keyValueType == KeyValueType.DELEGETABLE_CONTRACT_ID) {\n            keyValue.delegatableContractId = keyAddress;\n        }\n    }\n}\n\nlibrary Bits {\n    uint256 internal constant ONE = uint256(1);\n\n    // Sets the bit at the given 'index' in 'self' to '1'.\n    // Returns the modified value.\n    function setBit(uint256 self, uint8 index) internal pure returns (uint256) {\n        return self | (ONE << index);\n    }\n}\n"
			},
			"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity >=0.5.0 <0.9.0;\npragma experimental ABIEncoderV2;\nimport \"./HederaResponseCodes.sol\";\nimport \"./IHederaTokenService.sol\";\n\nabstract contract HederaTokenService is HederaResponseCodes {\n    address constant precompileAddress = address(0x167);\n    // 90 days in seconds\n    uint32 constant defaultAutoRenewPeriod = 7776000;\n\n    uint constant ADMIN_KEY_TYPE = 1;\n    uint constant KYC_KEY_TYPE = 2;\n    uint constant FREEZE_KEY_TYPE = 4;\n    uint constant WIPE_KEY_TYPE = 8;\n    uint constant SUPPLY_KEY_TYPE = 16;\n    uint constant FEE_SCHEDULE_KEY_TYPE = 32;\n    uint constant PAUSE_KEY_TYPE = 64;\n\n    modifier nonEmptyExpiry(IHederaTokenService.HederaToken memory token) {\n        if (token.expiry.second == 0 && token.expiry.autoRenewPeriod == 0) {\n            token.expiry.autoRenewPeriod = defaultAutoRenewPeriod;\n        }\n        _;\n    }\n\n    /// Initiates a Token Transfer\n    /// @param tokenTransfers the list of transfers to do\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    function cryptoTransfer(\n        IHederaTokenService.TokenTransferList[] memory tokenTransfers\n    ) internal returns (int responseCode) {\n        (bool success, bytes memory result) = precompileAddress.call(\n            abi.encodeWithSelector(\n                IHederaTokenService.cryptoTransfer.selector,\n                tokenTransfers\n            )\n        );\n        responseCode = success\n            ? abi.decode(result, (int32))\n            : HederaResponseCodes.UNKNOWN;\n    }\n\n    /// Mints an amount of the token to the defined treasury account\n    /// @param token The token for which to mint tokens. If token does not exist, transaction results in\n    ///              INVALID_TOKEN_ID\n    /// @param amount Applicable to tokens of type FUNGIBLE_COMMON. The amount to mint to the Treasury Account.\n    ///               Amount must be a positive non-zero number represented in the lowest denomination of the\n    ///               token. The new supply must be lower than 2^63.\n    /// @param metadata Applicable to tokens of type NON_FUNGIBLE_UNIQUE. A list of metadata that are being created.\n    ///                 Maximum allowed size of each metadata is 100 bytes\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    /// @return newTotalSupply The new supply of tokens. For NFTs it is the total count of NFTs\n    /// @return serialNumbers If the token is an NFT the newly generate serial numbers, otherwise empty.\n    function mintToken(\n        address token,\n        uint64 amount,\n        bytes[] memory metadata\n    )\n        internal\n        returns (\n            int responseCode,\n            uint64 newTotalSupply,\n            int64[] memory serialNumbers\n        )\n    {\n        (bool success, bytes memory result) = precompileAddress.call(\n            abi.encodeWithSelector(\n                IHederaTokenService.mintToken.selector,\n                token,\n                amount,\n                metadata\n            )\n        );\n        (responseCode, newTotalSupply, serialNumbers) = success\n            ? abi.decode(result, (int32, uint64, int64[]))\n            : (HederaResponseCodes.UNKNOWN, 0, new int64[](0));\n    }\n\n    /// Burns an amount of the token from the defined treasury account\n    /// @param token The token for which to burn tokens. If token does not exist, transaction results in\n    ///              INVALID_TOKEN_ID\n    /// @param amount  Applicable to tokens of type FUNGIBLE_COMMON. The amount to burn from the Treasury Account.\n    ///                Amount must be a positive non-zero number, not bigger than the token balance of the treasury\n    ///                account (0; balance], represented in the lowest denomination.\n    /// @param serialNumbers Applicable to tokens of type NON_FUNGIBLE_UNIQUE. The list of serial numbers to be burned.\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    /// @return newTotalSupply The new supply of tokens. For NFTs it is the total count of NFTs\n    function burnToken(\n        address token,\n        uint64 amount,\n        int64[] memory serialNumbers\n    ) internal returns (int responseCode, uint64 newTotalSupply) {\n        (bool success, bytes memory result) = precompileAddress.call(\n            abi.encodeWithSelector(\n                IHederaTokenService.burnToken.selector,\n                token,\n                amount,\n                serialNumbers\n            )\n        );\n        (responseCode, newTotalSupply) = success\n            ? abi.decode(result, (int32, uint64))\n            : (HederaResponseCodes.UNKNOWN, 0);\n    }\n\n    ///  Associates the provided account with the provided tokens. Must be signed by the provided\n    ///  Account's key or called from the accounts contract key\n    ///  If the provided account is not found, the transaction will resolve to INVALID_ACCOUNT_ID.\n    ///  If the provided account has been deleted, the transaction will resolve to ACCOUNT_DELETED.\n    ///  If any of the provided tokens is not found, the transaction will resolve to INVALID_TOKEN_REF.\n    ///  If any of the provided tokens has been deleted, the transaction will resolve to TOKEN_WAS_DELETED.\n    ///  If an association between the provided account and any of the tokens already exists, the\n    ///  transaction will resolve to TOKEN_ALREADY_ASSOCIATED_TO_ACCOUNT.\n    ///  If the provided account's associations count exceed the constraint of maximum token associations\n    ///    per account, the transaction will resolve to TOKENS_PER_ACCOUNT_LIMIT_EXCEEDED.\n    ///  On success, associations between the provided account and tokens are made and the account is\n    ///    ready to interact with the tokens.\n    /// @param account The account to be associated with the provided tokens\n    /// @param tokens The tokens to be associated with the provided account. In the case of NON_FUNGIBLE_UNIQUE\n    ///               Type, once an account is associated, it can hold any number of NFTs (serial numbers) of that\n    ///               token type\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    function associateTokens(\n        address account,\n        address[] memory tokens\n    ) internal returns (int responseCode) {\n        (bool success, bytes memory result) = precompileAddress.call(\n            abi.encodeWithSelector(\n                IHederaTokenService.associateTokens.selector,\n                account,\n                tokens\n            )\n        );\n        responseCode = success\n            ? abi.decode(result, (int32))\n            : HederaResponseCodes.UNKNOWN;\n    }\n\n    function associateToken(\n        address account,\n        address token\n    ) internal returns (int responseCode) {\n        (bool success, bytes memory result) = precompileAddress.call(\n            abi.encodeWithSelector(\n                IHederaTokenService.associateToken.selector,\n                account,\n                token\n            )\n        );\n        responseCode = success\n            ? abi.decode(result, (int32))\n            : HederaResponseCodes.UNKNOWN;\n    }\n\n    /// Dissociates the provided account with the provided tokens. Must be signed by the provided\n    /// Account's key.\n    /// If the provided account is not found, the transaction will resolve to INVALID_ACCOUNT_ID.\n    /// If the provided account has been deleted, the transaction will resolve to ACCOUNT_DELETED.\n    /// If any of the provided tokens is not found, the transaction will resolve to INVALID_TOKEN_REF.\n    /// If any of the provided tokens has been deleted, the transaction will resolve to TOKEN_WAS_DELETED.\n    /// If an association between the provided account and any of the tokens does not exist, the\n    /// transaction will resolve to TOKEN_NOT_ASSOCIATED_TO_ACCOUNT.\n    /// If a token has not been deleted and has not expired, and the user has a nonzero balance, the\n    /// transaction will resolve to TRANSACTION_REQUIRES_ZERO_TOKEN_BALANCES.\n    /// If a <b>fungible token</b> has expired, the user can disassociate even if their token balance is\n    /// not zero.\n    /// If a <b>non fungible token</b> has expired, the user can <b>not</b> disassociate if their token\n    /// balance is not zero. The transaction will resolve to TRANSACTION_REQUIRED_ZERO_TOKEN_BALANCES.\n    /// On success, associations between the provided account and tokens are removed.\n    /// @param account The account to be dissociated from the provided tokens\n    /// @param tokens The tokens to be dissociated from the provided account.\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    function dissociateTokens(\n        address account,\n        address[] memory tokens\n    ) internal returns (int responseCode) {\n        (bool success, bytes memory result) = precompileAddress.call(\n            abi.encodeWithSelector(\n                IHederaTokenService.dissociateTokens.selector,\n                account,\n                tokens\n            )\n        );\n        responseCode = success\n            ? abi.decode(result, (int32))\n            : HederaResponseCodes.UNKNOWN;\n    }\n\n    function dissociateToken(\n        address account,\n        address token\n    ) internal returns (int responseCode) {\n        (bool success, bytes memory result) = precompileAddress.call(\n            abi.encodeWithSelector(\n                IHederaTokenService.dissociateToken.selector,\n                account,\n                token\n            )\n        );\n        responseCode = success\n            ? abi.decode(result, (int32))\n            : HederaResponseCodes.UNKNOWN;\n    }\n\n    /// Creates a Fungible Token with the specified properties\n    /// @param token the basic properties of the token being created\n    /// @param initialTotalSupply Specifies the initial supply of tokens to be put in circulation. The\n    /// initial supply is sent to the Treasury Account. The supply is in the lowest denomination possible.\n    /// @param decimals the number of decimal places a token is divisible by\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    /// @return tokenAddress the created token's address\n    function createFungibleToken(\n        IHederaTokenService.HederaToken memory token,\n        uint initialTotalSupply,\n        uint decimals\n    )\n        internal\n        nonEmptyExpiry(token)\n        returns (int responseCode, address tokenAddress)\n    {\n        (bool success, bytes memory result) = precompileAddress.call{\n            value: msg.value\n        }(\n            abi.encodeWithSelector(\n                IHederaTokenService.createFungibleToken.selector,\n                token,\n                initialTotalSupply,\n                decimals\n            )\n        );\n\n        (responseCode, tokenAddress) = success\n            ? abi.decode(result, (int32, address))\n            : (HederaResponseCodes.UNKNOWN, address(0));\n    }\n\n    /// Creates a Fungible Token with the specified properties\n    /// @param token the basic properties of the token being created\n    /// @param initialTotalSupply Specifies the initial supply of tokens to be put in circulation. The\n    /// initial supply is sent to the Treasury Account. The supply is in the lowest denomination possible.\n    /// @param decimals the number of decimal places a token is divisible by\n    /// @param fixedFees list of fixed fees to apply to the token\n    /// @param fractionalFees list of fractional fees to apply to the token\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    /// @return tokenAddress the created token's address\n    function createFungibleTokenWithCustomFees(\n        IHederaTokenService.HederaToken memory token,\n        uint initialTotalSupply,\n        uint decimals,\n        IHederaTokenService.FixedFee[] memory fixedFees,\n        IHederaTokenService.FractionalFee[] memory fractionalFees\n    )\n        internal\n        nonEmptyExpiry(token)\n        returns (int responseCode, address tokenAddress)\n    {\n        (bool success, bytes memory result) = precompileAddress.call{\n            value: msg.value\n        }(\n            abi.encodeWithSelector(\n                IHederaTokenService.createFungibleTokenWithCustomFees.selector,\n                token,\n                initialTotalSupply,\n                decimals,\n                fixedFees,\n                fractionalFees\n            )\n        );\n        (responseCode, tokenAddress) = success\n            ? abi.decode(result, (int32, address))\n            : (HederaResponseCodes.UNKNOWN, address(0));\n    }\n\n    /// Creates an Non Fungible Unique Token with the specified properties\n    /// @param token the basic properties of the token being created\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    /// @return tokenAddress the created token's address\n    function createNonFungibleToken(\n        IHederaTokenService.HederaToken memory token\n    )\n        internal\n        nonEmptyExpiry(token)\n        returns (int responseCode, address tokenAddress)\n    {\n        (bool success, bytes memory result) = precompileAddress.call{\n            value: msg.value\n        }(\n            abi.encodeWithSelector(\n                IHederaTokenService.createNonFungibleToken.selector,\n                token\n            )\n        );\n        (responseCode, tokenAddress) = success\n            ? abi.decode(result, (int32, address))\n            : (HederaResponseCodes.UNKNOWN, address(0));\n    }\n\n    /// Creates an Non Fungible Unique Token with the specified properties\n    /// @param token the basic properties of the token being created\n    /// @param fixedFees list of fixed fees to apply to the token\n    /// @param royaltyFees list of royalty fees to apply to the token\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    /// @return tokenAddress the created token's address\n    function createNonFungibleTokenWithCustomFees(\n        IHederaTokenService.HederaToken memory token,\n        IHederaTokenService.FixedFee[] memory fixedFees,\n        IHederaTokenService.RoyaltyFee[] memory royaltyFees\n    )\n        internal\n        nonEmptyExpiry(token)\n        returns (int responseCode, address tokenAddress)\n    {\n        (bool success, bytes memory result) = precompileAddress.call{\n            value: msg.value\n        }(\n            abi.encodeWithSelector(\n                IHederaTokenService\n                    .createNonFungibleTokenWithCustomFees\n                    .selector,\n                token,\n                fixedFees,\n                royaltyFees\n            )\n        );\n        (responseCode, tokenAddress) = success\n            ? abi.decode(result, (int32, address))\n            : (HederaResponseCodes.UNKNOWN, address(0));\n    }\n\n    /// Allows spender to withdraw from your account multiple times, up to the value amount. If this function is called\n    /// again it overwrites the current allowance with value.\n    /// Only Applicable to Fungible Tokens\n    /// @param token The hedera token address to approve\n    /// @param spender the account authorized to spend\n    /// @param amount the amount of tokens authorized to spend.\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    function approve(\n        address token,\n        address spender,\n        uint256 amount\n    ) internal returns (int responseCode) {\n        (bool success, bytes memory result) = precompileAddress.call(\n            abi.encodeWithSelector(\n                IHederaTokenService.approve.selector,\n                token,\n                spender,\n                amount\n            )\n        );\n        responseCode = success\n            ? abi.decode(result, (int32))\n            : HederaResponseCodes.UNKNOWN;\n    }\n\n    /// Returns the amount which spender is still allowed to withdraw from owner.\n    /// Only Applicable to Fungible Tokens\n    /// @param token The Hedera token address to check the allowance of\n    /// @param owner the owner of the tokens to be spent\n    /// @param spender the spender of the tokens\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    function allowance(\n        address token,\n        address owner,\n        address spender\n    ) internal returns (int responseCode, uint256 amount) {\n        (bool success, bytes memory result) = precompileAddress.call(\n            abi.encodeWithSelector(\n                IHederaTokenService.allowance.selector,\n                token,\n                owner,\n                spender\n            )\n        );\n        (responseCode, amount) = success\n            ? abi.decode(result, (int32, uint256))\n            : (HederaResponseCodes.UNKNOWN, 0);\n    }\n\n    /// Allow or reaffirm the approved address to transfer an NFT the approved address does not own.\n    /// Only Applicable to NFT Tokens\n    /// @param token The Hedera NFT token address to approve\n    /// @param approved The new approved NFT controller.  To revoke approvals pass in the zero address.\n    /// @param serialNumber The NFT serial number  to approve\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    function approveNFT(\n        address token,\n        address approved,\n        uint256 serialNumber\n    ) internal returns (int responseCode) {\n        (bool success, bytes memory result) = precompileAddress.call(\n            abi.encodeWithSelector(\n                IHederaTokenService.approveNFT.selector,\n                token,\n                approved,\n                serialNumber\n            )\n        );\n        responseCode = success\n            ? abi.decode(result, (int32))\n            : HederaResponseCodes.UNKNOWN;\n    }\n\n    /// Get the approved address for a single NFT\n    /// Only Applicable to NFT Tokens\n    /// @param token The Hedera NFT token address to check approval\n    /// @param serialNumber The NFT to find the approved address for\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    /// @return approved The approved address for this NFT, or the zero address if there is none\n    function getApproved(\n        address token,\n        uint256 serialNumber\n    ) internal returns (int responseCode, address approved) {\n        (bool success, bytes memory result) = precompileAddress.call(\n            abi.encodeWithSelector(\n                IHederaTokenService.getApproved.selector,\n                token,\n                serialNumber\n            )\n        );\n        (responseCode, approved) = success\n            ? abi.decode(result, (int32, address))\n            : (HederaResponseCodes.UNKNOWN, address(0));\n    }\n\n    /// Enable or disable approval for a third party (\"operator\") to manage\n    ///  all of `msg.sender`'s assets\n    /// @param token The Hedera NFT token address to approve\n    /// @param operator Address to add to the set of authorized operators\n    /// @param approved True if the operator is approved, false to revoke approval\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    function setApprovalForAll(\n        address token,\n        address operator,\n        bool approved\n    ) internal returns (int responseCode) {\n        (bool success, bytes memory result) = precompileAddress.call(\n            abi.encodeWithSelector(\n                IHederaTokenService.setApprovalForAll.selector,\n                token,\n                operator,\n                approved\n            )\n        );\n        responseCode = success\n            ? abi.decode(result, (int32))\n            : HederaResponseCodes.UNKNOWN;\n    }\n\n    /// Query if an address is an authorized operator for another address\n    /// Only Applicable to NFT Tokens\n    /// @param token The Hedera NFT token address to approve\n    /// @param owner The address that owns the NFTs\n    /// @param operator The address that acts on behalf of the owner\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    /// @return approved True if `operator` is an approved operator for `owner`, false otherwise\n    function isApprovedForAll(\n        address token,\n        address owner,\n        address operator\n    ) internal returns (int responseCode, bool approved) {\n        (bool success, bytes memory result) = precompileAddress.call(\n            abi.encodeWithSelector(\n                IHederaTokenService.isApprovedForAll.selector,\n                token,\n                owner,\n                operator\n            )\n        );\n        (responseCode, approved) = success\n            ? abi.decode(result, (int32, bool))\n            : (HederaResponseCodes.UNKNOWN, false);\n    }\n\n    /**********************\n     * ABI v1 calls       *\n     **********************/\n\n    /// Initiates a Fungible Token Transfer\n    /// @param token The ID of the token as a solidity address\n    /// @param accountIds account to do a transfer to/from\n    /// @param amounts The amount from the accountId at the same index\n    function transferTokens(\n        address token,\n        address[] memory accountIds,\n        int64[] memory amounts\n    ) internal returns (int responseCode) {\n        (bool success, bytes memory result) = precompileAddress.call(\n            abi.encodeWithSelector(\n                IHederaTokenService.transferTokens.selector,\n                token,\n                accountIds,\n                amounts\n            )\n        );\n        responseCode = success\n            ? abi.decode(result, (int32))\n            : HederaResponseCodes.UNKNOWN;\n    }\n\n    /// Initiates a Non-Fungable Token Transfer\n    /// @param token The ID of the token as a solidity address\n    /// @param sender the sender of an nft\n    /// @param receiver the receiver of the nft sent by the same index at sender\n    /// @param serialNumber the serial number of the nft sent by the same index at sender\n    function transferNFTs(\n        address token,\n        address[] memory sender,\n        address[] memory receiver,\n        int64[] memory serialNumber\n    ) internal returns (int responseCode) {\n        (bool success, bytes memory result) = precompileAddress.call(\n            abi.encodeWithSelector(\n                IHederaTokenService.transferNFTs.selector,\n                token,\n                sender,\n                receiver,\n                serialNumber\n            )\n        );\n        responseCode = success\n            ? abi.decode(result, (int32))\n            : HederaResponseCodes.UNKNOWN;\n    }\n\n    /// Transfers tokens where the calling account/contract is implicitly the first entry in the token transfer list,\n    /// where the amount is the value needed to zero balance the transfers. Regular signing rules apply for sending\n    /// (positive amount) or receiving (negative amount)\n    /// @param token The token to transfer to/from\n    /// @param sender The sender for the transaction\n    /// @param receiver The receiver of the transaction\n    /// @param amount Non-negative value to send. a negative value will result in a failure.\n    function transferToken(\n        address token,\n        address sender,\n        address receiver,\n        int64 amount\n    ) internal returns (int responseCode) {\n        (bool success, bytes memory result) = precompileAddress.call(\n            abi.encodeWithSelector(\n                IHederaTokenService.transferToken.selector,\n                token,\n                sender,\n                receiver,\n                amount\n            )\n        );\n        responseCode = success\n            ? abi.decode(result, (int32))\n            : HederaResponseCodes.UNKNOWN;\n    }\n\n    /// Transfers tokens where the calling account/contract is implicitly the first entry in the token transfer list,\n    /// where the amount is the value needed to zero balance the transfers. Regular signing rules apply for sending\n    /// (positive amount) or receiving (negative amount)\n    /// @param token The token to transfer to/from\n    /// @param sender The sender for the transaction\n    /// @param receiver The receiver of the transaction\n    /// @param serialNumber The serial number of the NFT to transfer.\n    function transferNFT(\n        address token,\n        address sender,\n        address receiver,\n        int64 serialNumber\n    ) internal returns (int responseCode) {\n        (bool success, bytes memory result) = precompileAddress.call(\n            abi.encodeWithSelector(\n                IHederaTokenService.transferNFT.selector,\n                token,\n                sender,\n                receiver,\n                serialNumber\n            )\n        );\n        responseCode = success\n            ? abi.decode(result, (int32))\n            : HederaResponseCodes.UNKNOWN;\n    }\n}\n"
			},
			"hbar/SmartContracts/Auction2/hts-precompile/IHederaTokenService.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity >=0.4.9 <0.9.0;\npragma experimental ABIEncoderV2;\n\ninterface IHederaTokenService {\n\n    /// Transfers cryptocurrency among two or more accounts by making the desired adjustments to their\n    /// balances. Each transfer list can specify up to 10 adjustments. Each negative amount is withdrawn\n    /// from the corresponding account (a sender), and each positive one is added to the corresponding\n    /// account (a receiver). The amounts list must sum to zero. Each amount is a number of tinybars\n    /// (there are 100,000,000 tinybars in one hbar).  If any sender account fails to have sufficient\n    /// hbars, then the entire transaction fails, and none of those transfers occur, though the\n    /// transaction fee is still charged. This transaction must be signed by the keys for all the sending\n    /// accounts, and for any receiving accounts that have receiverSigRequired == true. The signatures\n    /// are in the same order as the accounts, skipping those accounts that don't need a signature.\n    struct AccountAmount {\n        // The Account ID, as a solidity address, that sends/receives cryptocurrency or tokens\n        address accountID;\n\n        // The amount of  the lowest denomination of the given token that\n        // the account sends(negative) or receives(positive)\n        int64 amount;\n    }\n\n    /// A sender account, a receiver account, and the serial number of an NFT of a Token with\n    /// NON_FUNGIBLE_UNIQUE type. When minting NFTs the sender will be the default AccountID instance\n    /// (0.0.0 aka 0x0) and when burning NFTs, the receiver will be the default AccountID instance.\n    struct NftTransfer {\n        // The solidity address of the sender\n        address senderAccountID;\n\n        // The solidity address of the receiver\n        address receiverAccountID;\n\n        // The serial number of the NFT\n        int64 serialNumber;\n    }\n\n    struct TokenTransferList {\n        // The ID of the token as a solidity address\n        address token;\n\n        // Applicable to tokens of type FUNGIBLE_COMMON. Multiple list of AccountAmounts, each of which\n        // has an account and amount.\n        AccountAmount[] transfers;\n\n        // Applicable to tokens of type NON_FUNGIBLE_UNIQUE. Multiple list of NftTransfers, each of\n        // which has a sender and receiver account, including the serial number of the NFT\n        NftTransfer[] nftTransfers;\n    }\n\n    /// Expiry properties of a Hedera token - second, autoRenewAccount, autoRenewPeriod\n    struct Expiry {\n        // The epoch second at which the token should expire; if an auto-renew account and period are\n        // specified, this is coerced to the current epoch second plus the autoRenewPeriod\n        uint32 second;\n\n        // ID of an account which will be automatically charged to renew the token's expiration, at\n        // autoRenewPeriod interval, expressed as a solidity address\n        address autoRenewAccount;\n\n        // The interval at which the auto-renew account will be charged to extend the token's expiry\n        uint32 autoRenewPeriod;\n    }\n\n    /// A Key can be a public key from either the Ed25519 or ECDSA(secp256k1) signature schemes, where\n    /// in the ECDSA(secp256k1) case we require the 33-byte compressed form of the public key. We call\n    /// these public keys <b>primitive keys</b>.\n    /// A Key can also be the ID of a smart contract instance, which is then authorized to perform any\n    /// precompiled contract action that requires this key to sign.\n    /// Note that when a Key is a smart contract ID, it <i>doesn't</i> mean the contract with that ID\n    /// will actually create a cryptographic signature. It only means that when the contract calls a\n    /// precompiled contract, the resulting \"child transaction\" will be authorized to perform any action\n    /// controlled by the Key.\n    /// Exactly one of the possible values should be populated in order for the Key to be valid.\n    struct KeyValue {\n\n        // if set to true, the key of the calling Hedera account will be inherited as the token key\n        bool inheritAccountKey;\n\n        // smart contract instance that is authorized as if it had signed with a key\n        address contractId;\n\n        // Ed25519 public key bytes\n        bytes ed25519;\n\n        // Compressed ECDSA(secp256k1) public key bytes\n        bytes ECDSA_secp256k1;\n\n        // A smart contract that, if the recipient of the active message frame, should be treated\n        // as having signed. (Note this does not mean the <i>code being executed in the frame</i>\n        // will belong to the given contract, since it could be running another contract's code via\n        // <tt>delegatecall</tt>. So setting this key is a more permissive version of setting the\n        // contractID key, which also requires the code in the active message frame belong to the\n        // the contract with the given id.)\n        address delegatableContractId;\n    }\n\n    /// A list of token key types the key should be applied to and the value of the key\n    struct TokenKey {\n\n        // bit field representing the key type. Keys of all types that have corresponding bits set to 1\n        // will be created for the token.\n        // 0th bit: adminKey\n        // 1st bit: kycKey\n        // 2nd bit: freezeKey\n        // 3rd bit: wipeKey\n        // 4th bit: supplyKey\n        // 5th bit: feeScheduleKey\n        // 6th bit: pauseKey\n        // 7th bit: ignored\n        uint keyType;\n\n        // the value that will be set to the key type\n        KeyValue key;\n    }\n\n    /// Basic properties of a Hedera Token - name, symbol, memo, tokenSupplyType, maxSupply,\n    /// treasury, freezeDefault. These properties are related both to Fungible and NFT token types.\n    struct HederaToken {\n        // The publicly visible name of the token. The token name is specified as a Unicode string.\n        // Its UTF-8 encoding cannot exceed 100 bytes, and cannot contain the 0 byte (NUL).\n        string name;\n\n        // The publicly visible token symbol. The token symbol is specified as a Unicode string.\n        // Its UTF-8 encoding cannot exceed 100 bytes, and cannot contain the 0 byte (NUL).\n        string symbol;\n\n        // The ID of the account which will act as a treasury for the token as a solidity address.\n        // This account will receive the specified initial supply or the newly minted NFTs in\n        // the case for NON_FUNGIBLE_UNIQUE Type\n        address treasury;\n\n        // The memo associated with the token (UTF-8 encoding max 100 bytes)\n        string memo;\n\n        // IWA compatibility. Specified the token supply type. Defaults to INFINITE\n        bool tokenSupplyType;\n\n        // IWA Compatibility. Depends on TokenSupplyType. For tokens of type FUNGIBLE_COMMON - the\n        // maximum number of tokens that can be in circulation. For tokens of type NON_FUNGIBLE_UNIQUE -\n        // the maximum number of NFTs (serial numbers) that can be minted. This field can never be changed!\n        uint32 maxSupply;\n\n        // The default Freeze status (frozen or unfrozen) of Hedera accounts relative to this token. If\n        // true, an account must be unfrozen before it can receive the token\n        bool freezeDefault;\n\n        // list of keys to set to the token\n        TokenKey[] tokenKeys;\n\n        // expiry properties of a Hedera token - second, autoRenewAccount, autoRenewPeriod\n        Expiry expiry;\n    }\n\n    /// Additional post creation fungible and non fungible properties of a Hedera Token.\n    struct TokenInfo {\n        /// The hedera token;\n        HederaToken hedera;\n\n        /// The fixed fees collected when transferring the token\n        FixedFee[] fixedFees;\n\n        /// The fractional fees collected when transferring the token\n        FractionalFee[] fractionalFees;\n\n        /// The royalty fees collected when transferring the token\n        RoyaltyFee[] royaltyFees;\n\n        /// Specifies whether the token kyc was defaulted with KycNotApplicable (true) or Revoked (false) \n        bool defaultKycStatus;\n\n        /// Specifies whether the token is deleted or not\n        bool deleted;\n\n        /// The ID of the network ledger\n        string ledgerId;\n\n        /// Specifies whether the token is currently paused or not\n        bool pauseStatus;\n\n        /// The number of tokens (fungible) or serials (non-fungible) of the token\n        uint64 totalSupply;\n    }\n\n    /// Additional fungible properties of a Hedera Token.\n    struct FungibleTokenInfo {\n        /// The shared hedera token info\n        TokenInfo tokenInfo;\n\n        /// The number of decimal places a token is divisible by\n        uint32 decimals;\n    }\n\n    /// Additional non fungible properties of a Hedera Token.\n    struct NonFungibleTokenInfo {\n        /// The shared hedera token info\n        TokenInfo tokenInfo;\n\n        /// The serial number of the nft\n        int64 serialNumber;\n\n        /// The account id specifying the owner of the non fungible token\n        address ownerId;\n\n        /// The epoch second at which the token was created.\n        int32 creationTime;\n\n        /// The unique metadata of the NFT\n        bytes metadata;\n\n        /// The account id specifying an account that has been granted spending permissions on this nft\n        address spenderId;\n    }\n\n    /// A fixed number of units (hbar or token) to assess as a fee during a transfer of\n    /// units of the token to which this fixed fee is attached. The denomination of\n    /// the fee depends on the values of tokenId, useHbarsForPayment and\n    /// useCurrentTokenForPayment. Exactly one of the values should be set.\n    struct FixedFee {\n\n        uint32 amount;\n\n        // Specifies ID of token that should be used for fixed fee denomination\n        address tokenId;\n\n        // Specifies this fixed fee should be denominated in Hbar\n        bool useHbarsForPayment;\n\n        // Specifies this fixed fee should be denominated in the Token currently being created\n        bool useCurrentTokenForPayment;\n\n        // The ID of the account to receive the custom fee, expressed as a solidity address\n        address feeCollector;\n    }\n\n    /// A fraction of the transferred units of a token to assess as a fee. The amount assessed will never\n    /// be less than the given minimumAmount, and never greater than the given maximumAmount.  The\n    /// denomination is always units of the token to which this fractional fee is attached.\n    struct FractionalFee {\n        // A rational number's numerator, used to set the amount of a value transfer to collect as a custom fee\n        uint32 numerator;\n\n        // A rational number's denominator, used to set the amount of a value transfer to collect as a custom fee\n        uint32 denominator;\n\n        // The minimum amount to assess\n        uint32 minimumAmount;\n\n        // The maximum amount to assess (zero implies no maximum)\n        uint32 maximumAmount;\n        bool netOfTransfers;\n\n        // The ID of the account to receive the custom fee, expressed as a solidity address\n        address feeCollector;\n    }\n\n    /// A fee to assess during a transfer that changes ownership of an NFT. Defines the fraction of\n    /// the fungible value exchanged for an NFT that the ledger should collect as a royalty. (\"Fungible\n    /// value\" includes both ℏ and units of fungible HTS tokens.) When the NFT sender does not receive\n    /// any fungible value, the ledger will assess the fallback fee, if present, to the new NFT owner.\n    /// Royalty fees can only be added to tokens of type type NON_FUNGIBLE_UNIQUE.\n    struct RoyaltyFee {\n        // A fraction's numerator of fungible value exchanged for an NFT to collect as royalty\n        uint32 numerator;\n\n        // A fraction's denominator of fungible value exchanged for an NFT to collect as royalty\n        uint32 denominator;\n\n        // If present, the fee to assess to the NFT receiver when no fungible value\n        // is exchanged with the sender. Consists of:\n        // amount: the amount to charge for the fee\n        // tokenId: Specifies ID of token that should be used for fixed fee denomination\n        // useHbarsForPayment: Specifies this fee should be denominated in Hbar\n        uint32 amount;\n        address tokenId;\n        bool useHbarsForPayment;\n\n        // The ID of the account to receive the custom fee, expressed as a solidity address\n        address feeCollector;\n    }\n\n    /**********************\n     * Direct HTS Calls   *\n     **********************/\n\n    /// Initiates a Token Transfer\n    /// @param tokenTransfers the list of transfers to do\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    function cryptoTransfer(TokenTransferList[] memory tokenTransfers)\n        external\n        returns (int64 responseCode);\n\n    /// Mints an amount of the token to the defined treasury account\n    /// @param token The token for which to mint tokens. If token does not exist, transaction results in\n    ///              INVALID_TOKEN_ID\n    /// @param amount Applicable to tokens of type FUNGIBLE_COMMON. The amount to mint to the Treasury Account.\n    ///               Amount must be a positive non-zero number represented in the lowest denomination of the\n    ///               token. The new supply must be lower than 2^63.\n    /// @param metadata Applicable to tokens of type NON_FUNGIBLE_UNIQUE. A list of metadata that are being created.\n    ///                 Maximum allowed size of each metadata is 100 bytes\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    /// @return newTotalSupply The new supply of tokens. For NFTs it is the total count of NFTs\n    /// @return serialNumbers If the token is an NFT the newly generate serial numbers, othersise empty.\n    function mintToken(\n        address token,\n        uint64 amount,\n        bytes[] memory metadata\n    )\n        external\n        returns (\n            int64 responseCode,\n            uint64 newTotalSupply,\n            int64[] memory serialNumbers\n        );\n\n    /// Burns an amount of the token from the defined treasury account\n    /// @param token The token for which to burn tokens. If token does not exist, transaction results in\n    ///              INVALID_TOKEN_ID\n    /// @param amount  Applicable to tokens of type FUNGIBLE_COMMON. The amount to burn from the Treasury Account.\n    ///                Amount must be a positive non-zero number, not bigger than the token balance of the treasury\n    ///                account (0; balance], represented in the lowest denomination.\n    /// @param serialNumbers Applicable to tokens of type NON_FUNGIBLE_UNIQUE. The list of serial numbers to be burned.\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    /// @return newTotalSupply The new supply of tokens. For NFTs it is the total count of NFTs\n    function burnToken(\n        address token,\n        uint64 amount,\n        int64[] memory serialNumbers\n    ) external returns (int64 responseCode, uint64 newTotalSupply);\n\n    ///  Associates the provided account with the provided tokens. Must be signed by the provided\n    ///  Account's key or called from the accounts contract key\n    ///  If the provided account is not found, the transaction will resolve to INVALID_ACCOUNT_ID.\n    ///  If the provided account has been deleted, the transaction will resolve to ACCOUNT_DELETED.\n    ///  If any of the provided tokens is not found, the transaction will resolve to INVALID_TOKEN_REF.\n    ///  If any of the provided tokens has been deleted, the transaction will resolve to TOKEN_WAS_DELETED.\n    ///  If an association between the provided account and any of the tokens already exists, the\n    ///  transaction will resolve to TOKEN_ALREADY_ASSOCIATED_TO_ACCOUNT.\n    ///  If the provided account's associations count exceed the constraint of maximum token associations\n    ///    per account, the transaction will resolve to TOKENS_PER_ACCOUNT_LIMIT_EXCEEDED.\n    ///  On success, associations between the provided account and tokens are made and the account is\n    ///    ready to interact with the tokens.\n    /// @param account The account to be associated with the provided tokens\n    /// @param tokens The tokens to be associated with the provided account. In the case of NON_FUNGIBLE_UNIQUE\n    ///               Type, once an account is associated, it can hold any number of NFTs (serial numbers) of that\n    ///               token type\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    function associateTokens(address account, address[] memory tokens)\n        external\n        returns (int64 responseCode);\n\n    /// Single-token variant of associateTokens. Will be mapped to a single entry array call of associateTokens\n    /// @param account The account to be associated with the provided token\n    /// @param token The token to be associated with the provided account\n    function associateToken(address account, address token)\n        external\n        returns (int64 responseCode);\n\n    /// Dissociates the provided account with the provided tokens. Must be signed by the provided\n    /// Account's key.\n    /// If the provided account is not found, the transaction will resolve to INVALID_ACCOUNT_ID.\n    /// If the provided account has been deleted, the transaction will resolve to ACCOUNT_DELETED.\n    /// If any of the provided tokens is not found, the transaction will resolve to INVALID_TOKEN_REF.\n    /// If any of the provided tokens has been deleted, the transaction will resolve to TOKEN_WAS_DELETED.\n    /// If an association between the provided account and any of the tokens does not exist, the\n    /// transaction will resolve to TOKEN_NOT_ASSOCIATED_TO_ACCOUNT.\n    /// If a token has not been deleted and has not expired, and the user has a nonzero balance, the\n    /// transaction will resolve to TRANSACTION_REQUIRES_ZERO_TOKEN_BALANCES.\n    /// If a <b>fungible token</b> has expired, the user can disassociate even if their token balance is\n    /// not zero.\n    /// If a <b>non fungible token</b> has expired, the user can <b>not</b> disassociate if their token\n    /// balance is not zero. The transaction will resolve to TRANSACTION_REQUIRED_ZERO_TOKEN_BALANCES.\n    /// On success, associations between the provided account and tokens are removed.\n    /// @param account The account to be dissociated from the provided tokens\n    /// @param tokens The tokens to be dissociated from the provided account.\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    function dissociateTokens(address account, address[] memory tokens)\n        external\n        returns (int64 responseCode);\n\n    /// Single-token variant of dissociateTokens. Will be mapped to a single entry array call of dissociateTokens\n    /// @param account The account to be associated with the provided token\n    /// @param token The token to be associated with the provided account\n    function dissociateToken(address account, address token)\n        external\n        returns (int64 responseCode);\n\n    /// Creates a Fungible Token with the specified properties\n    /// @param token the basic properties of the token being created\n    /// @param initialTotalSupply Specifies the initial supply of tokens to be put in circulation. The\n    /// initial supply is sent to the Treasury Account. The supply is in the lowest denomination possible.\n    /// @param decimals the number of decimal places a token is divisible by\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    /// @return tokenAddress the created token's address\n    function createFungibleToken(\n        HederaToken memory token,\n        uint initialTotalSupply,\n        uint decimals\n    ) external payable returns (int64 responseCode, address tokenAddress);\n\n    /// Creates a Fungible Token with the specified properties\n    /// @param token the basic properties of the token being created\n    /// @param initialTotalSupply Specifies the initial supply of tokens to be put in circulation. The\n    /// initial supply is sent to the Treasury Account. The supply is in the lowest denomination possible.\n    /// @param decimals the number of decimal places a token is divisible by.\n    /// @param fixedFees list of fixed fees to apply to the token\n    /// @param fractionalFees list of fractional fees to apply to the token\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    /// @return tokenAddress the created token's address\n    function createFungibleTokenWithCustomFees(\n        HederaToken memory token,\n        uint initialTotalSupply,\n        uint decimals,\n        FixedFee[] memory fixedFees,\n        FractionalFee[] memory fractionalFees\n    ) external payable returns (int64 responseCode, address tokenAddress);\n\n    /// Creates an Non Fungible Unique Token with the specified properties\n    /// @param token the basic properties of the token being created\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    /// @return tokenAddress the created token's address\n    function createNonFungibleToken(HederaToken memory token)\n        external\n        payable\n        returns (int64 responseCode, address tokenAddress);\n\n    /// Creates an Non Fungible Unique Token with the specified properties\n    /// @param token the basic properties of the token being created\n    /// @param fixedFees list of fixed fees to apply to the token\n    /// @param royaltyFees list of royalty fees to apply to the token\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    /// @return tokenAddress the created token's address\n    function createNonFungibleTokenWithCustomFees(\n        HederaToken memory token,\n        FixedFee[] memory fixedFees,\n        RoyaltyFee[] memory royaltyFees\n    ) external payable returns (int64 responseCode, address tokenAddress);\n\n    /**********************\n     * ABIV1 calls        *\n     **********************/\n\n    /// Initiates a Fungible Token Transfer\n    /// @param token The ID of the token as a solidity address\n    /// @param accountId account to do a transfer to/from\n    /// @param amount The amount from the accountId at the same index\n    function transferTokens(\n        address token,\n        address[] memory accountId,\n        int64[] memory amount\n    ) external returns (int64 responseCode);\n\n    /// Initiates a Non-Fungable Token Transfer\n    /// @param token The ID of the token as a solidity address\n    /// @param sender the sender of an nft\n    /// @param receiver the receiver of the nft sent by the same index at sender\n    /// @param serialNumber the serial number of the nft sent by the same index at sender\n    function transferNFTs(\n        address token,\n        address[] memory sender,\n        address[] memory receiver,\n        int64[] memory serialNumber\n    ) external returns (int64 responseCode);\n\n    /// Transfers tokens where the calling account/contract is implicitly the first entry in the token transfer list,\n    /// where the amount is the value needed to zero balance the transfers. Regular signing rules apply for sending\n    /// (positive amount) or receiving (negative amount)\n    /// @param token The token to transfer to/from\n    /// @param sender The sender for the transaction\n    /// @param recipient The receiver of the transaction\n    /// @param amount Non-negative value to send. a negative value will result in a failure.\n    function transferToken(\n        address token,\n        address sender,\n        address recipient,\n        int64 amount\n    ) external returns (int64 responseCode);\n\n    /// Transfers tokens where the calling account/contract is implicitly the first entry in the token transfer list,\n    /// where the amount is the value needed to zero balance the transfers. Regular signing rules apply for sending\n    /// (positive amount) or receiving (negative amount)\n    /// @param token The token to transfer to/from\n    /// @param sender The sender for the transaction\n    /// @param recipient The receiver of the transaction\n    /// @param serialNumber The serial number of the NFT to transfer.\n    function transferNFT(\n        address token,\n        address sender,\n        address recipient,\n        int64 serialNumber\n    ) external returns (int64 responseCode);\n\n    /// Allows spender to withdraw from your account multiple times, up to the value amount. If this function is called\n    /// again it overwrites the current allowance with value.\n    /// Only Applicable to Fungible Tokens\n    /// @param token The hedera token address to approve\n    /// @param spender the account address authorized to spend\n    /// @param amount the amount of tokens authorized to spend.\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    function approve(\n        address token,\n        address spender,\n        uint256 amount\n    ) external returns (int64 responseCode);\n\n    /// Returns the amount which spender is still allowed to withdraw from owner.\n    /// Only Applicable to Fungible Tokens\n    /// @param token The Hedera token address to check the allowance of\n    /// @param owner the owner of the tokens to be spent\n    /// @param spender the spender of the tokens\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    /// @return allowance The amount which spender is still allowed to withdraw from owner.\n    function allowance(\n        address token,\n        address owner,\n        address spender\n    ) external returns (int64 responseCode, uint256 allowance);\n\n    /// Allow or reaffirm the approved address to transfer an NFT the approved address does not own.\n    /// Only Applicable to NFT Tokens\n    /// @param token The Hedera NFT token address to approve\n    /// @param approved The new approved NFT controller.  To revoke approvals pass in the zero address.\n    /// @param serialNumber The NFT serial number  to approve\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    function approveNFT(\n        address token,\n        address approved,\n        int64 serialNumber\n    ) external returns (int64 responseCode);\n\n    /// Get the approved address for a single NFT\n    /// Only Applicable to NFT Tokens\n    /// @param token The Hedera NFT token address to check approval\n    /// @param serialNumber The NFT to find the approved address for\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    /// @return approved The approved address for this NFT, or the zero address if there is none\n    function getApproved(address token, int64 serialNumber)\n        external\n        returns (int64 responseCode, address approved);\n\n    /// Enable or disable approval for a third party (\"operator\") to manage\n    ///  all of `msg.sender`'s assets\n    /// @param token The Hedera NFT token address to approve\n    /// @param operator Address to add to the set of authorized operators\n    /// @param approved True if the operator is approved, false to revoke approval\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    function setApprovalForAll(\n        address token,\n        address operator,\n        bool approved\n    ) external returns (int64 responseCode);\n\n    /// Query if an address is an authorized operator for another address\n    /// Only Applicable to NFT Tokens\n    /// @param token The Hedera NFT token address to approve\n    /// @param owner The address that owns the NFTs\n    /// @param operator The address that acts on behalf of the owner\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    /// @return approved True if `operator` is an approved operator for `owner`, false otherwise\n    function isApprovedForAll(\n        address token,\n        address owner,\n        address operator\n    ) external returns (int64 responseCode, bool approved);\n\n    /// Query if token account is frozen\n    /// @param token The token address to check\n    /// @param account The account address associated with the token\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    /// @return frozen True if `account` is frozen for `token`\n    function isFrozen(address token, address account)\n        external\n        returns (int64 responseCode, bool frozen);\n\n    /// Query if token account has kyc granted\n    /// @param token The token address to check\n    /// @param account The account address associated with the token\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    /// @return kycGranted True if `account` has kyc granted for `token`\n    function isKyc(address token, address account)\n        external\n        returns (int64 responseCode, bool kycGranted);\n\n    /// Operation to delete token\n    /// @param token The token address to be deleted\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    function deleteToken(address token) external returns (int64 responseCode);\n\n    /// Query token custom fees\n    /// @param token The token address to check\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    /// @return fixedFees Set of fixed fees for `token`\n    /// @return fractionalFees Set of fractional fees for `token`\n    /// @return royaltyFees Set of royalty fees for `token`\n    function getTokenCustomFees(address token)\n        external\n        returns (int64 responseCode, FixedFee[] memory fixedFees, FractionalFee[] memory fractionalFees, RoyaltyFee[] memory royaltyFees);\n\n    /// Query token default freeze status\n    /// @param token The token address to check\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    /// @return defaultFreezeStatus True if `token` default freeze status is frozen.\n    function getTokenDefaultFreezeStatus(address token)\n        external\n        returns (int64 responseCode, bool defaultFreezeStatus);\n    \n    /// Query token default kyc status\n    /// @param token The token address to check\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    /// @return defaultKycStatus True if `token` default kyc status is KycNotApplicable and false if Revoked.\n    function getTokenDefaultKycStatus(address token)\n        external\n        returns (int64 responseCode, bool defaultKycStatus);\n\n    /// Query token expiry info\n    /// @param token The token address to check\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    /// @return expiry Expiry info for `token`\n    function getTokenExpiryInfo(address token)\n        external\n        returns (int64 responseCode, Expiry memory expiry);\n\n    /// Query fungible token info\n    /// @param token The token address to check\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    /// @return fungibleTokenInfo FungibleTokenInfo info for `token`\n    function getFungibleTokenInfo(address token)\n        external\n        returns (int64 responseCode, FungibleTokenInfo memory fungibleTokenInfo);\n\n    /// Query token info\n    /// @param token The token address to check\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    /// @return tokenInfo TokenInfo info for `token`\n    function getTokenInfo(address token)\n        external\n        returns (int64 responseCode, TokenInfo memory tokenInfo);\n\n    /// Query token KeyValue\n    /// @param token The token address to check\n    /// @param keyType The keyType of the desired KeyValue\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    /// @return key KeyValue info for key of type `keyType`\n    function getTokenKey(address token, uint keyType)\n        external\n        returns (int64 responseCode, KeyValue memory key);\n\n    /// Query non fungible token info\n    /// @param token The token address to check\n    /// @param serialNumber The NFT serialNumber to check\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    /// @return nonFungibleTokenInfo NonFungibleTokenInfo info for `token` `serialNumber`\n    function getNonFungibleTokenInfo(address token, int64 serialNumber)\n        external\n        returns (int64 responseCode, NonFungibleTokenInfo memory nonFungibleTokenInfo);\n\n    /// Operation to freeze token account\n    /// @param token The token address\n    /// @param account The account address to be frozen\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    function freezeToken(address token, address account)\n        external\n        returns (int64 responseCode);\n\n    /// Operation to unfreeze token account\n    /// @param token The token address\n    /// @param account The account address to be unfrozen\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    function unfreezeToken(address token, address account)\n        external\n        returns (int64 responseCode);\n\n    /// Operation to grant kyc to token account\n    /// @param token The token address\n    /// @param account The account address to grant kyc\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    function grantTokenKyc(address token, address account)\n        external\n        returns (int64 responseCode);\n\n    /// Operation to revoke kyc to token account\n    /// @param token The token address\n    /// @param account The account address to revoke kyc\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    function revokeTokenKyc(address token, address account)\n        external\n        returns (int64 responseCode);\n\n    /// Operation to pause token\n    /// @param token The token address to be paused\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    function pauseToken(address token) external returns (int64 responseCode);\n\n    /// Operation to unpause token\n    /// @param token The token address to be unpaused\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    function unpauseToken(address token) external returns (int64 responseCode);\n\n    /// Operation to wipe fungible tokens from account\n    /// @param token The token address\n    /// @param account The account address to revoke kyc\n    /// @param amount The number of tokens to wipe\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    function wipeTokenAccount(\n        address token,\n        address account,\n        uint32 amount\n    ) external returns (int64 responseCode);\n\n    /// Operation to wipe non fungible tokens from account\n    /// @param token The token address\n    /// @param account The account address to revoke kyc\n    /// @param  serialNumbers The serial numbers of token to wipe\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    function wipeTokenAccountNFT(\n        address token,\n        address account,\n        int64[] memory serialNumbers\n    ) external returns (int64 responseCode);\n\n    /// Operation to update token info\n    /// @param token The token address\n    /// @param tokenInfo The hedera token info to update token with\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    function updateTokenInfo(address token, HederaToken memory tokenInfo)\n        external\n        returns (int64 responseCode);\n\n    /// Operation to update token expiry info\n    /// @param token The token address\n    /// @param expiryInfo The hedera token expiry info\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    function updateTokenExpiryInfo(address token, Expiry memory expiryInfo)\n        external\n        returns (int64 responseCode);\n\n    /// Operation to update token expiry info\n    /// @param token The token address\n    /// @param keys The token keys\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    function updateTokenKeys(address token, TokenKey[] memory keys)\n        external\n        returns (int64 responseCode);\n}\n"
			},
			"hbar/SmartContracts/Auction2/hts-precompile/HederaResponseCodes.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity >=0.4.9 <0.9.0;\n\nabstract contract HederaResponseCodes {\n\n    // response codes\n    int32 internal constant OK = 0; // The transaction passed the precheck validations.\n    int32 internal constant INVALID_TRANSACTION = 1; // For any error not handled by specific error codes listed below.\n    int32 internal constant PAYER_ACCOUNT_NOT_FOUND = 2; //Payer account does not exist.\n    int32 internal constant INVALID_NODE_ACCOUNT = 3; //Node Account provided does not match the node account of the node the transaction was submitted to.\n    int32 internal constant TRANSACTION_EXPIRED = 4; // Pre-Check error when TransactionValidStart + transactionValidDuration is less than current consensus time.\n    int32 internal constant INVALID_TRANSACTION_START = 5; // Transaction start time is greater than current consensus time\n    int32 internal constant INVALID_TRANSACTION_DURATION = 6; //valid transaction duration is a positive non zero number that does not exceed 120 seconds\n    int32 internal constant INVALID_SIGNATURE = 7; // The transaction signature is not valid\n    int32 internal constant MEMO_TOO_LONG = 8; //Transaction memo size exceeded 100 bytes\n    int32 internal constant INSUFFICIENT_TX_FEE = 9; // The fee provided in the transaction is insufficient for this type of transaction\n    int32 internal constant INSUFFICIENT_PAYER_BALANCE = 10; // The payer account has insufficient cryptocurrency to pay the transaction fee\n    int32 internal constant DUPLICATE_TRANSACTION = 11; // This transaction ID is a duplicate of one that was submitted to this node or reached consensus in the last 180 seconds (receipt period)\n    int32 internal constant BUSY = 12; //If API is throttled out\n    int32 internal constant NOT_SUPPORTED = 13; //The API is not currently supported\n\n    int32 internal constant INVALID_FILE_ID = 14; //The file id is invalid or does not exist\n    int32 internal constant INVALID_ACCOUNT_ID = 15; //The account id is invalid or does not exist\n    int32 internal constant INVALID_CONTRACT_ID = 16; //The contract id is invalid or does not exist\n    int32 internal constant INVALID_TRANSACTION_ID = 17; //Transaction id is not valid\n    int32 internal constant RECEIPT_NOT_FOUND = 18; //Receipt for given transaction id does not exist\n    int32 internal constant RECORD_NOT_FOUND = 19; //Record for given transaction id does not exist\n    int32 internal constant INVALID_SOLIDITY_ID = 20; //The solidity id is invalid or entity with this solidity id does not exist\n\n    int32 internal constant UNKNOWN = 21; // The responding node has submitted the transaction to the network. Its final status is still unknown.\n    int32 internal constant SUCCESS = 22; // The transaction succeeded\n    int32 internal constant FAIL_INVALID = 23; // There was a system error and the transaction failed because of invalid request parameters.\n    int32 internal constant FAIL_FEE = 24; // There was a system error while performing fee calculation, reserved for future.\n    int32 internal constant FAIL_BALANCE = 25; // There was a system error while performing balance checks, reserved for future.\n\n    int32 internal constant KEY_REQUIRED = 26; //Key not provided in the transaction body\n    int32 internal constant BAD_ENCODING = 27; //Unsupported algorithm/encoding used for keys in the transaction\n    int32 internal constant INSUFFICIENT_ACCOUNT_BALANCE = 28; //When the account balance is not sufficient for the transfer\n    int32 internal constant INVALID_SOLIDITY_ADDRESS = 29; //During an update transaction when the system is not able to find the Users Solidity address\n\n    int32 internal constant INSUFFICIENT_GAS = 30; //Not enough gas was supplied to execute transaction\n    int32 internal constant CONTRACT_SIZE_LIMIT_EXCEEDED = 31; //contract byte code size is over the limit\n    int32 internal constant LOCAL_CALL_MODIFICATION_EXCEPTION = 32; //local execution (query) is requested for a function which changes state\n    int32 internal constant CONTRACT_REVERT_EXECUTED = 33; //Contract REVERT OPCODE executed\n    int32 internal constant CONTRACT_EXECUTION_EXCEPTION = 34; //For any contract execution related error not handled by specific error codes listed above.\n    int32 internal constant INVALID_RECEIVING_NODE_ACCOUNT = 35; //In Query validation, account with +ve(amount) value should be Receiving node account, the receiver account should be only one account in the list\n    int32 internal constant MISSING_QUERY_HEADER = 36; // Header is missing in Query request\n\n    int32 internal constant ACCOUNT_UPDATE_FAILED = 37; // The update of the account failed\n    int32 internal constant INVALID_KEY_ENCODING = 38; // Provided key encoding was not supported by the system\n    int32 internal constant NULL_SOLIDITY_ADDRESS = 39; // null solidity address\n\n    int32 internal constant CONTRACT_UPDATE_FAILED = 40; // update of the contract failed\n    int32 internal constant INVALID_QUERY_HEADER = 41; // the query header is invalid\n\n    int32 internal constant INVALID_FEE_SUBMITTED = 42; // Invalid fee submitted\n    int32 internal constant INVALID_PAYER_SIGNATURE = 43; // Payer signature is invalid\n\n    int32 internal constant KEY_NOT_PROVIDED = 44; // The keys were not provided in the request.\n    int32 internal constant INVALID_EXPIRATION_TIME = 45; // Expiration time provided in the transaction was invalid.\n    int32 internal constant NO_WACL_KEY = 46; //WriteAccess Control Keys are not provided for the file\n    int32 internal constant FILE_CONTENT_EMPTY = 47; //The contents of file are provided as empty.\n    int32 internal constant INVALID_ACCOUNT_AMOUNTS = 48; // The crypto transfer credit and debit do not sum equal to 0\n    int32 internal constant EMPTY_TRANSACTION_BODY = 49; // Transaction body provided is empty\n    int32 internal constant INVALID_TRANSACTION_BODY = 50; // Invalid transaction body provided\n\n    int32 internal constant INVALID_SIGNATURE_TYPE_MISMATCHING_KEY = 51; // the type of key (base ed25519 key, KeyList, or ThresholdKey) does not match the type of signature (base ed25519 signature, SignatureList, or ThresholdKeySignature)\n    int32 internal constant INVALID_SIGNATURE_COUNT_MISMATCHING_KEY = 52; // the number of key (KeyList, or ThresholdKey) does not match that of signature (SignatureList, or ThresholdKeySignature). e.g. if a keyList has 3 base keys, then the corresponding signatureList should also have 3 base signatures.\n\n    int32 internal constant EMPTY_LIVE_HASH_BODY = 53; // the livehash body is empty\n    int32 internal constant EMPTY_LIVE_HASH = 54; // the livehash data is missing\n    int32 internal constant EMPTY_LIVE_HASH_KEYS = 55; // the keys for a livehash are missing\n    int32 internal constant INVALID_LIVE_HASH_SIZE = 56; // the livehash data is not the output of a SHA-384 digest\n\n    int32 internal constant EMPTY_QUERY_BODY = 57; // the query body is empty\n    int32 internal constant EMPTY_LIVE_HASH_QUERY = 58; // the crypto livehash query is empty\n    int32 internal constant LIVE_HASH_NOT_FOUND = 59; // the livehash is not present\n    int32 internal constant ACCOUNT_ID_DOES_NOT_EXIST = 60; // the account id passed has not yet been created.\n    int32 internal constant LIVE_HASH_ALREADY_EXISTS = 61; // the livehash already exists for a given account\n\n    int32 internal constant INVALID_FILE_WACL = 62; // File WACL keys are invalid\n    int32 internal constant SERIALIZATION_FAILED = 63; // Serialization failure\n    int32 internal constant TRANSACTION_OVERSIZE = 64; // The size of the Transaction is greater than transactionMaxBytes\n    int32 internal constant TRANSACTION_TOO_MANY_LAYERS = 65; // The Transaction has more than 50 levels\n    int32 internal constant CONTRACT_DELETED = 66; //Contract is marked as deleted\n\n    int32 internal constant PLATFORM_NOT_ACTIVE = 67; // the platform node is either disconnected or lagging behind.\n    int32 internal constant KEY_PREFIX_MISMATCH = 68; // one internal key matches more than one prefixes on the signature map\n    int32 internal constant PLATFORM_TRANSACTION_NOT_CREATED = 69; // transaction not created by platform due to large backlog\n    int32 internal constant INVALID_RENEWAL_PERIOD = 70; // auto renewal period is not a positive number of seconds\n    int32 internal constant INVALID_PAYER_ACCOUNT_ID = 71; // the response code when a smart contract id is passed for a crypto API request\n    int32 internal constant ACCOUNT_DELETED = 72; // the account has been marked as deleted\n    int32 internal constant FILE_DELETED = 73; // the file has been marked as deleted\n    int32 internal constant ACCOUNT_REPEATED_IN_ACCOUNT_AMOUNTS = 74; // same accounts repeated in the transfer account list\n    int32 internal constant SETTING_NEGATIVE_ACCOUNT_BALANCE = 75; // attempting to set negative balance value for crypto account\n    int32 internal constant OBTAINER_REQUIRED = 76; // when deleting smart contract that has crypto balance either transfer account or transfer smart contract is required\n    int32 internal constant OBTAINER_SAME_CONTRACT_ID = 77; //when deleting smart contract that has crypto balance you can not use the same contract id as transferContractId as the one being deleted\n    int32 internal constant OBTAINER_DOES_NOT_EXIST = 78; //transferAccountId or transferContractId specified for contract delete does not exist\n    int32 internal constant MODIFYING_IMMUTABLE_CONTRACT = 79; //attempting to modify (update or delete a immutable smart contract, i.e. one created without a admin key)\n    int32 internal constant FILE_SYSTEM_EXCEPTION = 80; //Unexpected exception thrown by file system functions\n    int32 internal constant AUTORENEW_DURATION_NOT_IN_RANGE = 81; // the duration is not a subset of [MINIMUM_AUTORENEW_DURATION,MAXIMUM_AUTORENEW_DURATION]\n    int32 internal constant ERROR_DECODING_BYTESTRING = 82; // Decoding the smart contract binary to a byte array failed. Check that the input is a valid hex string.\n    int32 internal constant CONTRACT_FILE_EMPTY = 83; // File to create a smart contract was of length zero\n    int32 internal constant CONTRACT_BYTECODE_EMPTY = 84; // Bytecode for smart contract is of length zero\n    int32 internal constant INVALID_INITIAL_BALANCE = 85; // Attempt to set negative initial balance\n    int32 internal constant INVALID_RECEIVE_RECORD_THRESHOLD = 86; // [Deprecated]. attempt to set negative receive record threshold\n    int32 internal constant INVALID_SEND_RECORD_THRESHOLD = 87; // [Deprecated]. attempt to set negative send record threshold\n    int32 internal constant ACCOUNT_IS_NOT_GENESIS_ACCOUNT = 88; // Special Account Operations should be performed by only Genesis account, return this code if it is not Genesis Account\n    int32 internal constant PAYER_ACCOUNT_UNAUTHORIZED = 89; // The fee payer account doesn't have permission to submit such Transaction\n    int32 internal constant INVALID_FREEZE_TRANSACTION_BODY = 90; // FreezeTransactionBody is invalid\n    int32 internal constant FREEZE_TRANSACTION_BODY_NOT_FOUND = 91; // FreezeTransactionBody does not exist\n    int32 internal constant TRANSFER_LIST_SIZE_LIMIT_EXCEEDED = 92; //Exceeded the number of accounts (both from and to) allowed for crypto transfer list\n    int32 internal constant RESULT_SIZE_LIMIT_EXCEEDED = 93; // Smart contract result size greater than specified maxResultSize\n    int32 internal constant NOT_SPECIAL_ACCOUNT = 94; //The payer account is not a special account(account 0.0.55)\n    int32 internal constant CONTRACT_NEGATIVE_GAS = 95; // Negative gas was offered in smart contract call\n    int32 internal constant CONTRACT_NEGATIVE_VALUE = 96; // Negative value / initial balance was specified in a smart contract call / create\n    int32 internal constant INVALID_FEE_FILE = 97; // Failed to update fee file\n    int32 internal constant INVALID_EXCHANGE_RATE_FILE = 98; // Failed to update exchange rate file\n    int32 internal constant INSUFFICIENT_LOCAL_CALL_GAS = 99; // Payment tendered for contract local call cannot cover both the fee and the gas\n    int32 internal constant ENTITY_NOT_ALLOWED_TO_DELETE = 100; // Entities with Entity ID below 1000 are not allowed to be deleted\n    int32 internal constant AUTHORIZATION_FAILED = 101; // Violating one of these rules: 1) treasury account can update all entities below 0.0.1000, 2) account 0.0.50 can update all entities from 0.0.51 - 0.0.80, 3) Network Function Master Account A/c 0.0.50 - Update all Network Function accounts & perform all the Network Functions listed below, 4) Network Function Accounts: i) A/c 0.0.55 - Update Address Book files (0.0.101/102), ii) A/c 0.0.56 - Update Fee schedule (0.0.111), iii) A/c 0.0.57 - Update Exchange Rate (0.0.112).\n    int32 internal constant FILE_UPLOADED_PROTO_INVALID = 102; // Fee Schedule Proto uploaded but not valid (append or update is required)\n    int32 internal constant FILE_UPLOADED_PROTO_NOT_SAVED_TO_DISK = 103; // Fee Schedule Proto uploaded but not valid (append or update is required)\n    int32 internal constant FEE_SCHEDULE_FILE_PART_UPLOADED = 104; // Fee Schedule Proto File Part uploaded\n    int32 internal constant EXCHANGE_RATE_CHANGE_LIMIT_EXCEEDED = 105; // The change on Exchange Rate exceeds Exchange_Rate_Allowed_Percentage\n    int32 internal constant MAX_CONTRACT_STORAGE_EXCEEDED = 106; // Contract permanent storage exceeded the currently allowable limit\n    int32 internal constant TRANSFER_ACCOUNT_SAME_AS_DELETE_ACCOUNT = 107; // Transfer Account should not be same as Account to be deleted\n    int32 internal constant TOTAL_LEDGER_BALANCE_INVALID = 108;\n    int32 internal constant EXPIRATION_REDUCTION_NOT_ALLOWED = 110; // The expiration date/time on a smart contract may not be reduced\n    int32 internal constant MAX_GAS_LIMIT_EXCEEDED = 111; //Gas exceeded currently allowable gas limit per transaction\n    int32 internal constant MAX_FILE_SIZE_EXCEEDED = 112; // File size exceeded the currently allowable limit\n\n    int32 internal constant INVALID_TOPIC_ID = 150; // The Topic ID specified is not in the system.\n    int32 internal constant INVALID_ADMIN_KEY = 155; // A provided admin key was invalid.\n    int32 internal constant INVALID_SUBMIT_KEY = 156; // A provided submit key was invalid.\n    int32 internal constant UNAUTHORIZED = 157; // An attempted operation was not authorized (ie - a deleteTopic for a topic with no adminKey).\n    int32 internal constant INVALID_TOPIC_MESSAGE = 158; // A ConsensusService message is empty.\n    int32 internal constant INVALID_AUTORENEW_ACCOUNT = 159; // The autoRenewAccount specified is not a valid, active account.\n    int32 internal constant AUTORENEW_ACCOUNT_NOT_ALLOWED = 160; // An adminKey was not specified on the topic, so there must not be an autoRenewAccount.\n    // The topic has expired, was not automatically renewed, and is in a 7 day grace period before the topic will be\n    // deleted unrecoverably. This error response code will not be returned until autoRenew functionality is supported\n    // by HAPI.\n    int32 internal constant TOPIC_EXPIRED = 162;\n    int32 internal constant INVALID_CHUNK_NUMBER = 163; // chunk number must be from 1 to total (chunks) inclusive.\n    int32 internal constant INVALID_CHUNK_TRANSACTION_ID = 164; // For every chunk, the payer account that is part of initialTransactionID must match the Payer Account of this transaction. The entire initialTransactionID should match the transactionID of the first chunk, but this is not checked or enforced by Hedera except when the chunk number is 1.\n    int32 internal constant ACCOUNT_FROZEN_FOR_TOKEN = 165; // Account is frozen and cannot transact with the token\n    int32 internal constant TOKENS_PER_ACCOUNT_LIMIT_EXCEEDED = 166; // An involved account already has more than <tt>tokens.maxPerAccount</tt> associations with non-deleted tokens.\n    int32 internal constant INVALID_TOKEN_ID = 167; // The token is invalid or does not exist\n    int32 internal constant INVALID_TOKEN_DECIMALS = 168; // Invalid token decimals\n    int32 internal constant INVALID_TOKEN_INITIAL_SUPPLY = 169; // Invalid token initial supply\n    int32 internal constant INVALID_TREASURY_ACCOUNT_FOR_TOKEN = 170; // Treasury Account does not exist or is deleted\n    int32 internal constant INVALID_TOKEN_SYMBOL = 171; // Token Symbol is not UTF-8 capitalized alphabetical string\n    int32 internal constant TOKEN_HAS_NO_FREEZE_KEY = 172; // Freeze key is not set on token\n    int32 internal constant TRANSFERS_NOT_ZERO_SUM_FOR_TOKEN = 173; // Amounts in transfer list are not net zero\n    int32 internal constant MISSING_TOKEN_SYMBOL = 174; // A token symbol was not provided\n    int32 internal constant TOKEN_SYMBOL_TOO_LONG = 175; // The provided token symbol was too long\n    int32 internal constant ACCOUNT_KYC_NOT_GRANTED_FOR_TOKEN = 176; // KYC must be granted and account does not have KYC granted\n    int32 internal constant TOKEN_HAS_NO_KYC_KEY = 177; // KYC key is not set on token\n    int32 internal constant INSUFFICIENT_TOKEN_BALANCE = 178; // Token balance is not sufficient for the transaction\n    int32 internal constant TOKEN_WAS_DELETED = 179; // Token transactions cannot be executed on deleted token\n    int32 internal constant TOKEN_HAS_NO_SUPPLY_KEY = 180; // Supply key is not set on token\n    int32 internal constant TOKEN_HAS_NO_WIPE_KEY = 181; // Wipe key is not set on token\n    int32 internal constant INVALID_TOKEN_MINT_AMOUNT = 182; // The requested token mint amount would cause an invalid total supply\n    int32 internal constant INVALID_TOKEN_BURN_AMOUNT = 183; // The requested token burn amount would cause an invalid total supply\n    int32 internal constant TOKEN_NOT_ASSOCIATED_TO_ACCOUNT = 184; // A required token-account relationship is missing\n    int32 internal constant CANNOT_WIPE_TOKEN_TREASURY_ACCOUNT = 185; // The target of a wipe operation was the token treasury account\n    int32 internal constant INVALID_KYC_KEY = 186; // The provided KYC key was invalid.\n    int32 internal constant INVALID_WIPE_KEY = 187; // The provided wipe key was invalid.\n    int32 internal constant INVALID_FREEZE_KEY = 188; // The provided freeze key was invalid.\n    int32 internal constant INVALID_SUPPLY_KEY = 189; // The provided supply key was invalid.\n    int32 internal constant MISSING_TOKEN_NAME = 190; // Token Name is not provided\n    int32 internal constant TOKEN_NAME_TOO_LONG = 191; // Token Name is too long\n    int32 internal constant INVALID_WIPING_AMOUNT = 192; // The provided wipe amount must not be negative, zero or bigger than the token holder balance\n    int32 internal constant TOKEN_IS_IMMUTABLE = 193; // Token does not have Admin key set, thus update/delete transactions cannot be performed\n    int32 internal constant TOKEN_ALREADY_ASSOCIATED_TO_ACCOUNT = 194; // An <tt>associateToken</tt> operation specified a token already associated to the account\n    int32 internal constant TRANSACTION_REQUIRES_ZERO_TOKEN_BALANCES = 195; // An attempted operation is invalid until all token balances for the target account are zero\n    int32 internal constant ACCOUNT_IS_TREASURY = 196; // An attempted operation is invalid because the account is a treasury\n    int32 internal constant TOKEN_ID_REPEATED_IN_TOKEN_LIST = 197; // Same TokenIDs present in the token list\n    int32 internal constant TOKEN_TRANSFER_LIST_SIZE_LIMIT_EXCEEDED = 198; // Exceeded the number of token transfers (both from and to) allowed for token transfer list\n    int32 internal constant EMPTY_TOKEN_TRANSFER_BODY = 199; // TokenTransfersTransactionBody has no TokenTransferList\n    int32 internal constant EMPTY_TOKEN_TRANSFER_ACCOUNT_AMOUNTS = 200; // TokenTransfersTransactionBody has a TokenTransferList with no AccountAmounts\n\n    int32 internal constant INVALID_SCHEDULE_ID = 201; // The Scheduled entity does not exist; or has now expired, been deleted, or been executed\n    int32 internal constant SCHEDULE_IS_IMMUTABLE = 202; // The Scheduled entity cannot be modified. Admin key not set\n    int32 internal constant INVALID_SCHEDULE_PAYER_ID = 203; // The provided Scheduled Payer does not exist\n    int32 internal constant INVALID_SCHEDULE_ACCOUNT_ID = 204; // The Schedule Create Transaction TransactionID account does not exist\n    int32 internal constant NO_NEW_VALID_SIGNATURES = 205; // The provided sig map did not contain any new valid signatures from required signers of the scheduled transaction\n    int32 internal constant UNRESOLVABLE_REQUIRED_SIGNERS = 206; // The required signers for a scheduled transaction cannot be resolved, for example because they do not exist or have been deleted\n    int32 internal constant SCHEDULED_TRANSACTION_NOT_IN_WHITELIST = 207; // Only whitelisted transaction types may be scheduled\n    int32 internal constant SOME_SIGNATURES_WERE_INVALID = 208; // At least one of the signatures in the provided sig map did not represent a valid signature for any required signer\n    int32 internal constant TRANSACTION_ID_FIELD_NOT_ALLOWED = 209; // The scheduled field in the TransactionID may not be set to true\n    int32 internal constant IDENTICAL_SCHEDULE_ALREADY_CREATED = 210; // A schedule already exists with the same identifying fields of an attempted ScheduleCreate (that is, all fields other than scheduledPayerAccountID)\n    int32 internal constant INVALID_ZERO_BYTE_IN_STRING = 211; // A string field in the transaction has a UTF-8 encoding with the prohibited zero byte\n    int32 internal constant SCHEDULE_ALREADY_DELETED = 212; // A schedule being signed or deleted has already been deleted\n    int32 internal constant SCHEDULE_ALREADY_EXECUTED = 213; // A schedule being signed or deleted has already been executed\n    int32 internal constant MESSAGE_SIZE_TOO_LARGE = 214; // ConsensusSubmitMessage request's message size is larger than allowed.\n}\n"
			},
			"hbar/SmartContracts/Auction2/hts-precompile/FeeHelper.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity >=0.5.0 <0.9.0;\npragma experimental ABIEncoderV2;\n\nimport \"./HederaTokenService.sol\";\nimport \"./HederaResponseCodes.sol\";\nimport \"./IHederaTokenService.sol\";\nimport \"./KeyHelper.sol\";\n\ncontract FeeHelper is KeyHelper {\n\n    function createFixedHbarFee(\n        uint32 amount,\n        address feeCollector\n    ) internal pure returns (IHederaTokenService.FixedFee memory fixedFee) {\n        fixedFee.amount = amount;\n        fixedFee.useHbarsForPayment = true;\n        fixedFee.feeCollector = feeCollector;\n    }\n\n    function createFixedTokenFee(\n        uint32 amount,\n        address tokenId,\n        address feeCollector\n    ) internal pure returns (IHederaTokenService.FixedFee memory fixedFee) {\n        fixedFee.amount = amount;\n        fixedFee.tokenId = tokenId;\n        fixedFee.feeCollector = feeCollector;\n    }\n\n    function createFixedSelfDenominatedFee(\n        uint32 amount,\n        address feeCollector\n    ) internal pure returns (IHederaTokenService.FixedFee memory fixedFee) {\n        fixedFee.amount = amount;\n        fixedFee.useCurrentTokenForPayment = true;\n        fixedFee.feeCollector = feeCollector;\n    }\n\n    function createFractionalFee(\n        uint32 numerator,\n        uint32 denominator,\n        bool netOfTransfers,\n        address feeCollector\n    ) internal pure returns (IHederaTokenService.FractionalFee memory fractionalFee) {\n        fractionalFee.numerator = numerator;\n        fractionalFee.denominator = denominator;\n        fractionalFee.netOfTransfers = netOfTransfers;\n        fractionalFee.feeCollector = feeCollector;\n    }\n\n    function createFractionalFeeWithMinAndMax(\n        uint32 numerator,\n        uint32 denominator,\n        uint32 minimumAmount,\n        uint32 maximumAmount,\n        bool netOfTransfers,\n        address feeCollector\n    ) internal pure returns (IHederaTokenService.FractionalFee memory fractionalFee) {\n        fractionalFee.numerator = numerator;\n        fractionalFee.denominator = denominator;\n        fractionalFee.minimumAmount = minimumAmount;\n        fractionalFee.maximumAmount = maximumAmount;\n        fractionalFee.netOfTransfers = netOfTransfers;\n        fractionalFee.feeCollector = feeCollector;\n    }\n\n    function createRoyaltyFeeWithoutFallback(\n        uint32 numerator,\n        uint32 denominator,\n        address feeCollector\n    ) internal pure returns (IHederaTokenService.RoyaltyFee memory royaltyFee) {\n        royaltyFee.numerator = numerator;\n        royaltyFee.denominator = denominator;\n        royaltyFee.feeCollector = feeCollector;\n    }\n\n    function createRoyaltyFeeWithHbarFallbackFee(\n        uint32 numerator,\n        uint32 denominator,\n        uint32 amount,\n        address feeCollector\n    ) internal pure returns (IHederaTokenService.RoyaltyFee memory royaltyFee) {\n        royaltyFee.numerator = numerator;\n        royaltyFee.denominator = denominator;\n        royaltyFee.amount = amount;\n        royaltyFee.useHbarsForPayment = true;\n        royaltyFee.feeCollector = feeCollector;\n    }\n\n    function createRoyaltyFeeWithTokenDenominatedFallbackFee(\n        uint32 numerator,\n        uint32 denominator,\n        uint32 amount,\n        address tokenId,\n        address feeCollector\n    ) internal pure returns (IHederaTokenService.RoyaltyFee memory royaltyFee) {\n        royaltyFee.numerator = numerator;\n        royaltyFee.denominator = denominator;\n        royaltyFee.amount = amount;\n        royaltyFee.tokenId = tokenId;\n        royaltyFee.feeCollector = feeCollector;\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"hbar/SmartContracts/Auction2/hts-precompile/ExpiryHelper.sol": {
				"ExpiryHelper": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"hbar/SmartContracts/Auction2/hts-precompile/ExpiryHelper.sol\":168:642  contract ExpiryHelper is FeeHelper {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":601:602  1 */\n  0x01\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":575:583  keyTypes */\n  dup1\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":575:598  keyTypes[KeyType.ADMIN] */\n  0x00\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":584:597  KeyType.ADMIN */\n  dup1\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":575:598  keyTypes[KeyType.ADMIN] */\n  0x06\n  dup2\n  gt\n  iszero\n  tag_4\n  jumpi\n  tag_5\n  tag_6\n  jump\t// in\ntag_5:\ntag_4:\n  0x06\n  dup2\n  gt\n  iszero\n  tag_7\n  jumpi\n  tag_8\n  tag_6\n  jump\t// in\ntag_8:\ntag_7:\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":575:602  keyTypes[KeyType.ADMIN] = 1 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":636:637  2 */\n  0x02\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":612:620  keyTypes */\n  0x01\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":612:633  keyTypes[KeyType.KYC] */\n  0x00\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":621:632  KeyType.KYC */\n  0x01\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":612:633  keyTypes[KeyType.KYC] */\n  0x06\n  dup2\n  gt\n  iszero\n  tag_9\n  jumpi\n  tag_10\n  tag_6\n  jump\t// in\ntag_10:\ntag_9:\n  0x06\n  dup2\n  gt\n  iszero\n  tag_11\n  jumpi\n  tag_12\n  tag_6\n  jump\t// in\ntag_12:\ntag_11:\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":612:637  keyTypes[KeyType.KYC] = 2 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":674:675  4 */\n  0x04\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":647:655  keyTypes */\n  0x01\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":647:671  keyTypes[KeyType.FREEZE] */\n  0x00\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":656:670  KeyType.FREEZE */\n  0x02\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":647:671  keyTypes[KeyType.FREEZE] */\n  0x06\n  dup2\n  gt\n  iszero\n  tag_13\n  jumpi\n  tag_14\n  tag_6\n  jump\t// in\ntag_14:\ntag_13:\n  0x06\n  dup2\n  gt\n  iszero\n  tag_15\n  jumpi\n  tag_16\n  tag_6\n  jump\t// in\ntag_16:\ntag_15:\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":647:675  keyTypes[KeyType.FREEZE] = 4 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":710:711  8 */\n  0x08\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":685:693  keyTypes */\n  0x01\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":685:707  keyTypes[KeyType.WIPE] */\n  0x00\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":694:706  KeyType.WIPE */\n  0x03\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":685:707  keyTypes[KeyType.WIPE] */\n  0x06\n  dup2\n  gt\n  iszero\n  tag_17\n  jumpi\n  tag_18\n  tag_6\n  jump\t// in\ntag_18:\ntag_17:\n  0x06\n  dup2\n  gt\n  iszero\n  tag_19\n  jumpi\n  tag_20\n  tag_6\n  jump\t// in\ntag_20:\ntag_19:\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":685:711  keyTypes[KeyType.WIPE] = 8 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":748:750  16 */\n  0x10\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":721:729  keyTypes */\n  0x01\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":721:745  keyTypes[KeyType.SUPPLY] */\n  0x00\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":730:744  KeyType.SUPPLY */\n  0x04\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":721:745  keyTypes[KeyType.SUPPLY] */\n  0x06\n  dup2\n  gt\n  iszero\n  tag_21\n  jumpi\n  tag_22\n  tag_6\n  jump\t// in\ntag_22:\ntag_21:\n  0x06\n  dup2\n  gt\n  iszero\n  tag_23\n  jumpi\n  tag_24\n  tag_6\n  jump\t// in\ntag_24:\ntag_23:\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":721:750  keyTypes[KeyType.SUPPLY] = 16 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":784:786  32 */\n  0x20\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":760:768  keyTypes */\n  0x01\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":760:781  keyTypes[KeyType.FEE] */\n  0x00\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":769:780  KeyType.FEE */\n  0x05\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":760:781  keyTypes[KeyType.FEE] */\n  0x06\n  dup2\n  gt\n  iszero\n  tag_25\n  jumpi\n  tag_26\n  tag_6\n  jump\t// in\ntag_26:\ntag_25:\n  0x06\n  dup2\n  gt\n  iszero\n  tag_27\n  jumpi\n  tag_28\n  tag_6\n  jump\t// in\ntag_28:\ntag_27:\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":760:786  keyTypes[KeyType.FEE] = 32 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":822:824  64 */\n  0x40\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":796:804  keyTypes */\n  0x01\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":796:819  keyTypes[KeyType.PAUSE] */\n  0x00\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":805:818  KeyType.PAUSE */\n  0x06\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":796:819  keyTypes[KeyType.PAUSE] */\n  dup1\n  dup2\n  gt\n  iszero\n  tag_29\n  jumpi\n  tag_30\n  tag_6\n  jump\t// in\ntag_30:\ntag_29:\n  0x06\n  dup2\n  gt\n  iszero\n  tag_31\n  jumpi\n  tag_32\n  tag_6\n  jump\t// in\ntag_32:\ntag_31:\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":796:824  keyTypes[KeyType.PAUSE] = 64 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/ExpiryHelper.sol\":168:642  contract ExpiryHelper is FeeHelper {... */\n  jump(tag_33)\n    /* \"#utility.yul\":7:187   */\ntag_6:\n    /* \"#utility.yul\":55:132   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":52:53   */\n  0x00\n    /* \"#utility.yul\":45:133   */\n  mstore\n    /* \"#utility.yul\":152:156   */\n  0x21\n    /* \"#utility.yul\":149:150   */\n  0x04\n    /* \"#utility.yul\":142:157   */\n  mstore\n    /* \"#utility.yul\":176:180   */\n  0x24\n    /* \"#utility.yul\":173:174   */\n  0x00\n    /* \"#utility.yul\":166:181   */\n  revert\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/ExpiryHelper.sol\":168:642  contract ExpiryHelper is FeeHelper {... */\ntag_33:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/ExpiryHelper.sol\":168:642  contract ExpiryHelper is FeeHelper {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122055b3e002cd576387a0d7776c5a32d7aaddf209868c5f9d89d4e465d443b4086d64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_2790": {
									"entryPoint": null,
									"id": 2790,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 453,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:190:7",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "35:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "52:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "55:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "45:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "45:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "45:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "149:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "152:4:7",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "142:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "142:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "142:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "173:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "176:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "166:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "166:15:7"
														}
													]
												},
												"name": "panic_error_0x21",
												"nodeType": "YulFunctionDefinition",
												"src": "7:180:7"
											}
										]
									},
									"contents": "{\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506001806000806006811115610029576100286101c5565b5b600681111561003b5761003a6101c5565b5b81526020019081526020016000208190555060026001600060016006811115610067576100666101c5565b5b6006811115610079576100786101c5565b5b815260200190815260200160002081905550600460016000600260068111156100a5576100a46101c5565b5b60068111156100b7576100b66101c5565b5b815260200190815260200160002081905550600860016000600360068111156100e3576100e26101c5565b5b60068111156100f5576100f46101c5565b5b81526020019081526020016000208190555060106001600060046006811115610121576101206101c5565b5b6006811115610133576101326101c5565b5b8152602001908152602001600020819055506020600160006005600681111561015f5761015e6101c5565b5b6006811115610171576101706101c5565b5b81526020019081526020016000208190555060406001600060068081111561019c5761019b6101c5565b5b60068111156101ae576101ad6101c5565b5b8152602001908152602001600020819055506101f4565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b603f806102026000396000f3fe6080604052600080fdfea264697066735822122055b3e002cd576387a0d7776c5a32d7aaddf209868c5f9d89d4e465d443b4086d64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 DUP1 PUSH1 0x0 DUP1 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x29 JUMPI PUSH2 0x28 PUSH2 0x1C5 JUMP JUMPDEST JUMPDEST PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x3B JUMPI PUSH2 0x3A PUSH2 0x1C5 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x67 JUMPI PUSH2 0x66 PUSH2 0x1C5 JUMP JUMPDEST JUMPDEST PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x79 JUMPI PUSH2 0x78 PUSH2 0x1C5 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x4 PUSH1 0x1 PUSH1 0x0 PUSH1 0x2 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0xA5 JUMPI PUSH2 0xA4 PUSH2 0x1C5 JUMP JUMPDEST JUMPDEST PUSH1 0x6 DUP2 GT ISZERO PUSH2 0xB7 JUMPI PUSH2 0xB6 PUSH2 0x1C5 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x8 PUSH1 0x1 PUSH1 0x0 PUSH1 0x3 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0xE3 JUMPI PUSH2 0xE2 PUSH2 0x1C5 JUMP JUMPDEST JUMPDEST PUSH1 0x6 DUP2 GT ISZERO PUSH2 0xF5 JUMPI PUSH2 0xF4 PUSH2 0x1C5 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x10 PUSH1 0x1 PUSH1 0x0 PUSH1 0x4 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x121 JUMPI PUSH2 0x120 PUSH2 0x1C5 JUMP JUMPDEST JUMPDEST PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x133 JUMPI PUSH2 0x132 PUSH2 0x1C5 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x20 PUSH1 0x1 PUSH1 0x0 PUSH1 0x5 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x15F JUMPI PUSH2 0x15E PUSH2 0x1C5 JUMP JUMPDEST JUMPDEST PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x171 JUMPI PUSH2 0x170 PUSH2 0x1C5 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x40 PUSH1 0x1 PUSH1 0x0 PUSH1 0x6 DUP1 DUP2 GT ISZERO PUSH2 0x19C JUMPI PUSH2 0x19B PUSH2 0x1C5 JUMP JUMPDEST JUMPDEST PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x1AE JUMPI PUSH2 0x1AD PUSH2 0x1C5 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1F4 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x3F DUP1 PUSH2 0x202 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SSTORE 0xB3 0xE0 MUL 0xCD JUMPI PUSH4 0x87A0D777 PUSH13 0x5A32D7AADDF209868C5F9D89D4 0xE4 PUSH6 0xD443B4086D64 PUSH20 0x6F6C634300081100330000000000000000000000 ",
							"sourceMap": "168:474:0:-:0;;;;;;;;;;;;;601:1:5;575:8;:23;584:13;575:23;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:27;;;;636:1;612:8;:21;621:11;612:21;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:25;;;;674:1;647:8;:24;656:14;647:24;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:28;;;;710:1;685:8;:22;694:12;685:22;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:26;;;;748:2;721:8;:24;730:14;721:24;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:29;;;;784:2;760:8;:21;769:11;760:21;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:26;;;;822:2;796:8;:23;805:13;796:23;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:28;;;;168:474:0;;7:180:7;55:77;52:1;45:88;152:4;149:1;142:15;176:4;173:1;166:15;168:474:0;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea264697066735822122055b3e002cd576387a0d7776c5a32d7aaddf209868c5f9d89d4e465d443b4086d64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SSTORE 0xB3 0xE0 MUL 0xCD JUMPI PUSH4 0x87A0D777 PUSH13 0x5A32D7AADDF209868C5F9D89D4 0xE4 PUSH6 0xD443B4086D64 PUSH20 0x6F6C634300081100330000000000000000000000 ",
							"sourceMap": "168:474:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "155786",
								"totalCost": "168386"
							},
							"internal": {
								"createAutoRenewExpiry(address,uint32)": "infinite",
								"createSecondExpiry(uint32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 168,
									"end": 642,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 168,
									"end": 642,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 168,
									"end": 642,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 168,
									"end": 642,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 168,
									"end": 642,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 168,
									"end": 642,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 168,
									"end": 642,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 168,
									"end": 642,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 168,
									"end": 642,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 168,
									"end": 642,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 168,
									"end": 642,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 168,
									"end": 642,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 168,
									"end": 642,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 168,
									"end": 642,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 601,
									"end": 602,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 575,
									"end": 583,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 575,
									"end": 598,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 584,
									"end": 597,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 575,
									"end": 598,
									"name": "PUSH",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 575,
									"end": 598,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 575,
									"end": 598,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 575,
									"end": 598,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 575,
									"end": 598,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 575,
									"end": 598,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 575,
									"end": 598,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 575,
									"end": 598,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 575,
									"end": 598,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 575,
									"end": 598,
									"name": "tag",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 575,
									"end": 598,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 575,
									"end": 598,
									"name": "tag",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 575,
									"end": 598,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 575,
									"end": 598,
									"name": "PUSH",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 575,
									"end": 598,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 575,
									"end": 598,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 575,
									"end": 598,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 575,
									"end": 598,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 575,
									"end": 598,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 575,
									"end": 598,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 575,
									"end": 598,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 575,
									"end": 598,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 575,
									"end": 598,
									"name": "tag",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 575,
									"end": 598,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 575,
									"end": 598,
									"name": "tag",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 575,
									"end": 598,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 575,
									"end": 598,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 575,
									"end": 598,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 575,
									"end": 598,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 575,
									"end": 598,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 575,
									"end": 598,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 575,
									"end": 598,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 575,
									"end": 598,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 575,
									"end": 598,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 575,
									"end": 598,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 575,
									"end": 598,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 575,
									"end": 598,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 575,
									"end": 602,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 575,
									"end": 602,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 575,
									"end": 602,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 575,
									"end": 602,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 636,
									"end": 637,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 612,
									"end": 620,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 612,
									"end": 633,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 621,
									"end": 632,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 612,
									"end": 633,
									"name": "PUSH",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 612,
									"end": 633,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 612,
									"end": 633,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 612,
									"end": 633,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 612,
									"end": 633,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 612,
									"end": 633,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 612,
									"end": 633,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 612,
									"end": 633,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 612,
									"end": 633,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 612,
									"end": 633,
									"name": "tag",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 612,
									"end": 633,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 612,
									"end": 633,
									"name": "tag",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 612,
									"end": 633,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 612,
									"end": 633,
									"name": "PUSH",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 612,
									"end": 633,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 612,
									"end": 633,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 612,
									"end": 633,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 612,
									"end": 633,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 612,
									"end": 633,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 612,
									"end": 633,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 612,
									"end": 633,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 612,
									"end": 633,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 612,
									"end": 633,
									"name": "tag",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 612,
									"end": 633,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 612,
									"end": 633,
									"name": "tag",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 612,
									"end": 633,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 612,
									"end": 633,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 612,
									"end": 633,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 612,
									"end": 633,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 612,
									"end": 633,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 612,
									"end": 633,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 612,
									"end": 633,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 612,
									"end": 633,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 612,
									"end": 633,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 612,
									"end": 633,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 612,
									"end": 633,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 612,
									"end": 633,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 612,
									"end": 637,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 612,
									"end": 637,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 612,
									"end": 637,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 612,
									"end": 637,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 674,
									"end": 675,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 647,
									"end": 655,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 647,
									"end": 671,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 656,
									"end": 670,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 647,
									"end": 671,
									"name": "PUSH",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 647,
									"end": 671,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 647,
									"end": 671,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 647,
									"end": 671,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 647,
									"end": 671,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 647,
									"end": 671,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 647,
									"end": 671,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 647,
									"end": 671,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 647,
									"end": 671,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 647,
									"end": 671,
									"name": "tag",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 647,
									"end": 671,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 647,
									"end": 671,
									"name": "tag",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 647,
									"end": 671,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 647,
									"end": 671,
									"name": "PUSH",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 647,
									"end": 671,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 647,
									"end": 671,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 647,
									"end": 671,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 647,
									"end": 671,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 647,
									"end": 671,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 647,
									"end": 671,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 647,
									"end": 671,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 647,
									"end": 671,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 647,
									"end": 671,
									"name": "tag",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 647,
									"end": 671,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 647,
									"end": 671,
									"name": "tag",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 647,
									"end": 671,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 647,
									"end": 671,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 647,
									"end": 671,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 647,
									"end": 671,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 647,
									"end": 671,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 647,
									"end": 671,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 647,
									"end": 671,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 647,
									"end": 671,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 647,
									"end": 671,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 647,
									"end": 671,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 647,
									"end": 671,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 647,
									"end": 671,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 647,
									"end": 675,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 647,
									"end": 675,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 647,
									"end": 675,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 647,
									"end": 675,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 710,
									"end": 711,
									"name": "PUSH",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 685,
									"end": 693,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 685,
									"end": 707,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 694,
									"end": 706,
									"name": "PUSH",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 685,
									"end": 707,
									"name": "PUSH",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 685,
									"end": 707,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 685,
									"end": 707,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 685,
									"end": 707,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 685,
									"end": 707,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 685,
									"end": 707,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 685,
									"end": 707,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 685,
									"end": 707,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 685,
									"end": 707,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 685,
									"end": 707,
									"name": "tag",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 685,
									"end": 707,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 685,
									"end": 707,
									"name": "tag",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 685,
									"end": 707,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 685,
									"end": 707,
									"name": "PUSH",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 685,
									"end": 707,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 685,
									"end": 707,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 685,
									"end": 707,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 685,
									"end": 707,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 685,
									"end": 707,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 685,
									"end": 707,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 685,
									"end": 707,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 685,
									"end": 707,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 685,
									"end": 707,
									"name": "tag",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 685,
									"end": 707,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 685,
									"end": 707,
									"name": "tag",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 685,
									"end": 707,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 685,
									"end": 707,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 685,
									"end": 707,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 685,
									"end": 707,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 685,
									"end": 707,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 685,
									"end": 707,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 685,
									"end": 707,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 685,
									"end": 707,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 685,
									"end": 707,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 685,
									"end": 707,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 685,
									"end": 707,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 685,
									"end": 707,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 685,
									"end": 711,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 685,
									"end": 711,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 685,
									"end": 711,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 685,
									"end": 711,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 748,
									"end": 750,
									"name": "PUSH",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 721,
									"end": 729,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 721,
									"end": 745,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 730,
									"end": 744,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 721,
									"end": 745,
									"name": "PUSH",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 721,
									"end": 745,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 721,
									"end": 745,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 721,
									"end": 745,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 721,
									"end": 745,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 721,
									"end": 745,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 721,
									"end": 745,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 721,
									"end": 745,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 721,
									"end": 745,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 721,
									"end": 745,
									"name": "tag",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 721,
									"end": 745,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 721,
									"end": 745,
									"name": "tag",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 721,
									"end": 745,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 721,
									"end": 745,
									"name": "PUSH",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 721,
									"end": 745,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 721,
									"end": 745,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 721,
									"end": 745,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 721,
									"end": 745,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 721,
									"end": 745,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 721,
									"end": 745,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 721,
									"end": 745,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 721,
									"end": 745,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 721,
									"end": 745,
									"name": "tag",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 721,
									"end": 745,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 721,
									"end": 745,
									"name": "tag",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 721,
									"end": 745,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 721,
									"end": 745,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 721,
									"end": 745,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 721,
									"end": 745,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 721,
									"end": 745,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 721,
									"end": 745,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 721,
									"end": 745,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 721,
									"end": 745,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 721,
									"end": 745,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 721,
									"end": 745,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 721,
									"end": 745,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 721,
									"end": 745,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 721,
									"end": 750,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 721,
									"end": 750,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 721,
									"end": 750,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 721,
									"end": 750,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 784,
									"end": 786,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 760,
									"end": 768,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 760,
									"end": 781,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 769,
									"end": 780,
									"name": "PUSH",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 760,
									"end": 781,
									"name": "PUSH",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 760,
									"end": 781,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 760,
									"end": 781,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 760,
									"end": 781,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 760,
									"end": 781,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 760,
									"end": 781,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 760,
									"end": 781,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 760,
									"end": 781,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 760,
									"end": 781,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 760,
									"end": 781,
									"name": "tag",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 760,
									"end": 781,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 760,
									"end": 781,
									"name": "tag",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 760,
									"end": 781,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 760,
									"end": 781,
									"name": "PUSH",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 760,
									"end": 781,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 760,
									"end": 781,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 760,
									"end": 781,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 760,
									"end": 781,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 760,
									"end": 781,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 760,
									"end": 781,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 760,
									"end": 781,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 760,
									"end": 781,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 760,
									"end": 781,
									"name": "tag",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 760,
									"end": 781,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 760,
									"end": 781,
									"name": "tag",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 760,
									"end": 781,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 760,
									"end": 781,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 760,
									"end": 781,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 760,
									"end": 781,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 760,
									"end": 781,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 760,
									"end": 781,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 760,
									"end": 781,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 760,
									"end": 781,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 760,
									"end": 781,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 760,
									"end": 781,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 760,
									"end": 781,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 760,
									"end": 781,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 760,
									"end": 786,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 760,
									"end": 786,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 760,
									"end": 786,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 760,
									"end": 786,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 822,
									"end": 824,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 796,
									"end": 804,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 796,
									"end": 819,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 805,
									"end": 818,
									"name": "PUSH",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 796,
									"end": 819,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 796,
									"end": 819,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 796,
									"end": 819,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 796,
									"end": 819,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 796,
									"end": 819,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 796,
									"end": 819,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 796,
									"end": 819,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 796,
									"end": 819,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 796,
									"end": 819,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 796,
									"end": 819,
									"name": "tag",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 796,
									"end": 819,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 796,
									"end": 819,
									"name": "tag",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 796,
									"end": 819,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 796,
									"end": 819,
									"name": "PUSH",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 796,
									"end": 819,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 796,
									"end": 819,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 796,
									"end": 819,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 796,
									"end": 819,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 796,
									"end": 819,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 796,
									"end": 819,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 796,
									"end": 819,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 796,
									"end": 819,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 796,
									"end": 819,
									"name": "tag",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 796,
									"end": 819,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 796,
									"end": 819,
									"name": "tag",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 796,
									"end": 819,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 796,
									"end": 819,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 796,
									"end": 819,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 796,
									"end": 819,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 796,
									"end": 819,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 796,
									"end": 819,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 796,
									"end": 819,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 796,
									"end": 819,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 796,
									"end": 819,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 796,
									"end": 819,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 796,
									"end": 819,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 796,
									"end": 819,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 796,
									"end": 824,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 796,
									"end": 824,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 796,
									"end": 824,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 796,
									"end": 824,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 168,
									"end": 642,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 168,
									"end": 642,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 187,
									"name": "tag",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 7,
									"end": 187,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 55,
									"end": 132,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 52,
									"end": 53,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 45,
									"end": 133,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 152,
									"end": 156,
									"name": "PUSH",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 149,
									"end": 150,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 142,
									"end": 157,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 176,
									"end": 180,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 173,
									"end": 174,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 166,
									"end": 181,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 168,
									"end": 642,
									"name": "tag",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 168,
									"end": 642,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 168,
									"end": 642,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 168,
									"end": 642,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 168,
									"end": 642,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 168,
									"end": 642,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 168,
									"end": 642,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 168,
									"end": 642,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 168,
									"end": 642,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122055b3e002cd576387a0d7776c5a32d7aaddf209868c5f9d89d4e465d443b4086d64736f6c63430008110033",
									".code": [
										{
											"begin": 168,
											"end": 642,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 168,
											"end": 642,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 168,
											"end": 642,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 168,
											"end": 642,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 168,
											"end": 642,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 168,
											"end": 642,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"hbar/SmartContracts/Auction2/hts-precompile/ExpiryHelper.sol",
								"hbar/SmartContracts/Auction2/hts-precompile/FeeHelper.sol",
								"hbar/SmartContracts/Auction2/hts-precompile/HederaResponseCodes.sol",
								"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol",
								"hbar/SmartContracts/Auction2/hts-precompile/IHederaTokenService.sol",
								"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol",
								"hbar/SmartContracts/Tests/MintAndTransfer3.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"hbar/SmartContracts/Auction2/hts-precompile/ExpiryHelper.sol\":\"ExpiryHelper\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"hbar/SmartContracts/Auction2/hts-precompile/ExpiryHelper.sol\":{\"keccak256\":\"0x3150d37980e98a44321db698f48b60a1524148430a8a0d0834384fe930d73c3a\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7bc64280edb76f4ee24f57cc27f78a79ac1e399730b11559847d304dfb72ec66\",\"dweb:/ipfs/Qmf7JsXjkd8iBPBcJSJGvD2VnHpTphEJLaUspB6mM7F5MY\"]},\"hbar/SmartContracts/Auction2/hts-precompile/FeeHelper.sol\":{\"keccak256\":\"0xa32e4e1b0247b3d57315c606d18b2b513df6678ae1c1c0b730f646b23a0fb2bb\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5c4ff72e6f513df35a937b005e467a3ae883a6cfab754cdbebf7ff619be30459\",\"dweb:/ipfs/QmYiPpnn1ij9TmddBRkEVL2Tf8mKfiqaHn8zJeScAFLMws\"]},\"hbar/SmartContracts/Auction2/hts-precompile/HederaResponseCodes.sol\":{\"keccak256\":\"0x9af70d38d34a234475b792a23c59f8cae63bf9d3407d0fb0a3112a40ce25627b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://90d2abceb9a6f0244395d92abcad6669f5a4696fb876079271fbc4c32b7752f7\",\"dweb:/ipfs/QmaKsVGmmcEwj6rcBmvbdKL213Seq8HwZTXf1DYnoaSELZ\"]},\"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":{\"keccak256\":\"0x01265799f3f9010d1a5597f4a15a684ff8793bb426493951741b92d5bcb40cac\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3734ef870596280f3177545c02c74f4d25fec55388a0785fa73dbdb1af064b52\",\"dweb:/ipfs/QmW2WzmvTqumStJVs9absA8SC6mHpFN1FbC4rw5BxtVpRj\"]},\"hbar/SmartContracts/Auction2/hts-precompile/IHederaTokenService.sol\":{\"keccak256\":\"0x1df4449743626e64ff38122822b5fa56466e14bf3944f7b679eae145c05f0112\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0d63c9a9ef88b6082fd0ce110d23a057e8f9f3360a5d4b7195b7d859788f0833\",\"dweb:/ipfs/QmNUKRfuFiCxMW9qyqh8ytWMEHMQxH3Lr3v5vAjTrt2Mj2\"]},\"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":{\"keccak256\":\"0x1c445127746a07dc4bdb8ea93cd151fbec3b686c9d7ee5845c875475eb89d8c3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e0253869a15bd8d06a2a45b8cefdcefc64e4aee675c5ac5d5465ca2bb67d64df\",\"dweb:/ipfs/QmabBXMqR3avxQ6nHeqFXmVhGpfNH5bZXP9zaBRDZ7WYtN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2718,
								"contract": "hbar/SmartContracts/Auction2/hts-precompile/ExpiryHelper.sol:ExpiryHelper",
								"label": "supplyContract",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 2723,
								"contract": "hbar/SmartContracts/Auction2/hts-precompile/ExpiryHelper.sol:ExpiryHelper",
								"label": "keyTypes",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_enum(KeyType)2731,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_enum(KeyType)2731": {
								"encoding": "inplace",
								"label": "enum KeyHelper.KeyType",
								"numberOfBytes": "1"
							},
							"t_mapping(t_enum(KeyType)2731,t_uint256)": {
								"encoding": "mapping",
								"key": "t_enum(KeyType)2731",
								"label": "mapping(enum KeyHelper.KeyType => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"hbar/SmartContracts/Auction2/hts-precompile/FeeHelper.sol": {
				"FeeHelper": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"hbar/SmartContracts/Auction2/hts-precompile/FeeHelper.sol\":240:3555  contract FeeHelper is KeyHelper {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":601:602  1 */\n  0x01\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":575:583  keyTypes */\n  dup1\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":575:598  keyTypes[KeyType.ADMIN] */\n  0x00\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":584:597  KeyType.ADMIN */\n  dup1\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":575:598  keyTypes[KeyType.ADMIN] */\n  0x06\n  dup2\n  gt\n  iszero\n  tag_4\n  jumpi\n  tag_5\n  tag_6\n  jump\t// in\ntag_5:\ntag_4:\n  0x06\n  dup2\n  gt\n  iszero\n  tag_7\n  jumpi\n  tag_8\n  tag_6\n  jump\t// in\ntag_8:\ntag_7:\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":575:602  keyTypes[KeyType.ADMIN] = 1 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":636:637  2 */\n  0x02\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":612:620  keyTypes */\n  0x01\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":612:633  keyTypes[KeyType.KYC] */\n  0x00\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":621:632  KeyType.KYC */\n  0x01\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":612:633  keyTypes[KeyType.KYC] */\n  0x06\n  dup2\n  gt\n  iszero\n  tag_9\n  jumpi\n  tag_10\n  tag_6\n  jump\t// in\ntag_10:\ntag_9:\n  0x06\n  dup2\n  gt\n  iszero\n  tag_11\n  jumpi\n  tag_12\n  tag_6\n  jump\t// in\ntag_12:\ntag_11:\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":612:637  keyTypes[KeyType.KYC] = 2 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":674:675  4 */\n  0x04\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":647:655  keyTypes */\n  0x01\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":647:671  keyTypes[KeyType.FREEZE] */\n  0x00\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":656:670  KeyType.FREEZE */\n  0x02\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":647:671  keyTypes[KeyType.FREEZE] */\n  0x06\n  dup2\n  gt\n  iszero\n  tag_13\n  jumpi\n  tag_14\n  tag_6\n  jump\t// in\ntag_14:\ntag_13:\n  0x06\n  dup2\n  gt\n  iszero\n  tag_15\n  jumpi\n  tag_16\n  tag_6\n  jump\t// in\ntag_16:\ntag_15:\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":647:675  keyTypes[KeyType.FREEZE] = 4 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":710:711  8 */\n  0x08\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":685:693  keyTypes */\n  0x01\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":685:707  keyTypes[KeyType.WIPE] */\n  0x00\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":694:706  KeyType.WIPE */\n  0x03\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":685:707  keyTypes[KeyType.WIPE] */\n  0x06\n  dup2\n  gt\n  iszero\n  tag_17\n  jumpi\n  tag_18\n  tag_6\n  jump\t// in\ntag_18:\ntag_17:\n  0x06\n  dup2\n  gt\n  iszero\n  tag_19\n  jumpi\n  tag_20\n  tag_6\n  jump\t// in\ntag_20:\ntag_19:\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":685:711  keyTypes[KeyType.WIPE] = 8 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":748:750  16 */\n  0x10\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":721:729  keyTypes */\n  0x01\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":721:745  keyTypes[KeyType.SUPPLY] */\n  0x00\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":730:744  KeyType.SUPPLY */\n  0x04\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":721:745  keyTypes[KeyType.SUPPLY] */\n  0x06\n  dup2\n  gt\n  iszero\n  tag_21\n  jumpi\n  tag_22\n  tag_6\n  jump\t// in\ntag_22:\ntag_21:\n  0x06\n  dup2\n  gt\n  iszero\n  tag_23\n  jumpi\n  tag_24\n  tag_6\n  jump\t// in\ntag_24:\ntag_23:\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":721:750  keyTypes[KeyType.SUPPLY] = 16 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":784:786  32 */\n  0x20\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":760:768  keyTypes */\n  0x01\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":760:781  keyTypes[KeyType.FEE] */\n  0x00\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":769:780  KeyType.FEE */\n  0x05\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":760:781  keyTypes[KeyType.FEE] */\n  0x06\n  dup2\n  gt\n  iszero\n  tag_25\n  jumpi\n  tag_26\n  tag_6\n  jump\t// in\ntag_26:\ntag_25:\n  0x06\n  dup2\n  gt\n  iszero\n  tag_27\n  jumpi\n  tag_28\n  tag_6\n  jump\t// in\ntag_28:\ntag_27:\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":760:786  keyTypes[KeyType.FEE] = 32 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":822:824  64 */\n  0x40\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":796:804  keyTypes */\n  0x01\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":796:819  keyTypes[KeyType.PAUSE] */\n  0x00\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":805:818  KeyType.PAUSE */\n  0x06\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":796:819  keyTypes[KeyType.PAUSE] */\n  dup1\n  dup2\n  gt\n  iszero\n  tag_29\n  jumpi\n  tag_30\n  tag_6\n  jump\t// in\ntag_30:\ntag_29:\n  0x06\n  dup2\n  gt\n  iszero\n  tag_31\n  jumpi\n  tag_32\n  tag_6\n  jump\t// in\ntag_32:\ntag_31:\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":796:824  keyTypes[KeyType.PAUSE] = 64 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/FeeHelper.sol\":240:3555  contract FeeHelper is KeyHelper {... */\n  jump(tag_33)\n    /* \"#utility.yul\":7:187   */\ntag_6:\n    /* \"#utility.yul\":55:132   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":52:53   */\n  0x00\n    /* \"#utility.yul\":45:133   */\n  mstore\n    /* \"#utility.yul\":152:156   */\n  0x21\n    /* \"#utility.yul\":149:150   */\n  0x04\n    /* \"#utility.yul\":142:157   */\n  mstore\n    /* \"#utility.yul\":176:180   */\n  0x24\n    /* \"#utility.yul\":173:174   */\n  0x00\n    /* \"#utility.yul\":166:181   */\n  revert\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/FeeHelper.sol\":240:3555  contract FeeHelper is KeyHelper {... */\ntag_33:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/FeeHelper.sol\":240:3555  contract FeeHelper is KeyHelper {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220fc629e47c46c3247165b4cf2274706e368b65262cc0a38e274fc354482d89f8764736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_2790": {
									"entryPoint": null,
									"id": 2790,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 453,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:190:7",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "35:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "52:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "55:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "45:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "45:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "45:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "149:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "152:4:7",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "142:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "142:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "142:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "173:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "176:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "166:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "166:15:7"
														}
													]
												},
												"name": "panic_error_0x21",
												"nodeType": "YulFunctionDefinition",
												"src": "7:180:7"
											}
										]
									},
									"contents": "{\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506001806000806006811115610029576100286101c5565b5b600681111561003b5761003a6101c5565b5b81526020019081526020016000208190555060026001600060016006811115610067576100666101c5565b5b6006811115610079576100786101c5565b5b815260200190815260200160002081905550600460016000600260068111156100a5576100a46101c5565b5b60068111156100b7576100b66101c5565b5b815260200190815260200160002081905550600860016000600360068111156100e3576100e26101c5565b5b60068111156100f5576100f46101c5565b5b81526020019081526020016000208190555060106001600060046006811115610121576101206101c5565b5b6006811115610133576101326101c5565b5b8152602001908152602001600020819055506020600160006005600681111561015f5761015e6101c5565b5b6006811115610171576101706101c5565b5b81526020019081526020016000208190555060406001600060068081111561019c5761019b6101c5565b5b60068111156101ae576101ad6101c5565b5b8152602001908152602001600020819055506101f4565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b603f806102026000396000f3fe6080604052600080fdfea2646970667358221220fc629e47c46c3247165b4cf2274706e368b65262cc0a38e274fc354482d89f8764736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 DUP1 PUSH1 0x0 DUP1 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x29 JUMPI PUSH2 0x28 PUSH2 0x1C5 JUMP JUMPDEST JUMPDEST PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x3B JUMPI PUSH2 0x3A PUSH2 0x1C5 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x67 JUMPI PUSH2 0x66 PUSH2 0x1C5 JUMP JUMPDEST JUMPDEST PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x79 JUMPI PUSH2 0x78 PUSH2 0x1C5 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x4 PUSH1 0x1 PUSH1 0x0 PUSH1 0x2 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0xA5 JUMPI PUSH2 0xA4 PUSH2 0x1C5 JUMP JUMPDEST JUMPDEST PUSH1 0x6 DUP2 GT ISZERO PUSH2 0xB7 JUMPI PUSH2 0xB6 PUSH2 0x1C5 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x8 PUSH1 0x1 PUSH1 0x0 PUSH1 0x3 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0xE3 JUMPI PUSH2 0xE2 PUSH2 0x1C5 JUMP JUMPDEST JUMPDEST PUSH1 0x6 DUP2 GT ISZERO PUSH2 0xF5 JUMPI PUSH2 0xF4 PUSH2 0x1C5 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x10 PUSH1 0x1 PUSH1 0x0 PUSH1 0x4 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x121 JUMPI PUSH2 0x120 PUSH2 0x1C5 JUMP JUMPDEST JUMPDEST PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x133 JUMPI PUSH2 0x132 PUSH2 0x1C5 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x20 PUSH1 0x1 PUSH1 0x0 PUSH1 0x5 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x15F JUMPI PUSH2 0x15E PUSH2 0x1C5 JUMP JUMPDEST JUMPDEST PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x171 JUMPI PUSH2 0x170 PUSH2 0x1C5 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x40 PUSH1 0x1 PUSH1 0x0 PUSH1 0x6 DUP1 DUP2 GT ISZERO PUSH2 0x19C JUMPI PUSH2 0x19B PUSH2 0x1C5 JUMP JUMPDEST JUMPDEST PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x1AE JUMPI PUSH2 0x1AD PUSH2 0x1C5 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1F4 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x3F DUP1 PUSH2 0x202 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFC PUSH3 0x9E47C4 PUSH13 0x3247165B4CF2274706E368B652 PUSH3 0xCC0A38 0xE2 PUSH21 0xFC354482D89F8764736F6C63430008110033000000 ",
							"sourceMap": "240:3315:1:-:0;;;;;;;;;;;;;601:1:5;575:8;:23;584:13;575:23;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:27;;;;636:1;612:8;:21;621:11;612:21;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:25;;;;674:1;647:8;:24;656:14;647:24;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:28;;;;710:1;685:8;:22;694:12;685:22;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:26;;;;748:2;721:8;:24;730:14;721:24;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:29;;;;784:2;760:8;:21;769:11;760:21;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:26;;;;822:2;796:8;:23;805:13;796:23;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:28;;;;240:3315:1;;7:180:7;55:77;52:1;45:88;152:4;149:1;142:15;176:4;173:1;166:15;240:3315:1;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220fc629e47c46c3247165b4cf2274706e368b65262cc0a38e274fc354482d89f8764736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFC PUSH3 0x9E47C4 PUSH13 0x3247165B4CF2274706E368B652 PUSH3 0xCC0A38 0xE2 PUSH21 0xFC354482D89F8764736F6C63430008110033000000 ",
							"sourceMap": "240:3315:1:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "155786",
								"totalCost": "168386"
							},
							"internal": {
								"createFixedHbarFee(uint32,address)": "infinite",
								"createFixedSelfDenominatedFee(uint32,address)": "infinite",
								"createFixedTokenFee(uint32,address,address)": "infinite",
								"createFractionalFee(uint32,uint32,bool,address)": "infinite",
								"createFractionalFeeWithMinAndMax(uint32,uint32,uint32,uint32,bool,address)": "infinite",
								"createRoyaltyFeeWithHbarFallbackFee(uint32,uint32,uint32,address)": "infinite",
								"createRoyaltyFeeWithTokenDenominatedFallbackFee(uint32,uint32,uint32,address,address)": "infinite",
								"createRoyaltyFeeWithoutFallback(uint32,uint32,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 240,
									"end": 3555,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 240,
									"end": 3555,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 240,
									"end": 3555,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 240,
									"end": 3555,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 240,
									"end": 3555,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 240,
									"end": 3555,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 240,
									"end": 3555,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 240,
									"end": 3555,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 240,
									"end": 3555,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 240,
									"end": 3555,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 240,
									"end": 3555,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 240,
									"end": 3555,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 240,
									"end": 3555,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 240,
									"end": 3555,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 601,
									"end": 602,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 575,
									"end": 583,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 575,
									"end": 598,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 584,
									"end": 597,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 575,
									"end": 598,
									"name": "PUSH",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 575,
									"end": 598,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 575,
									"end": 598,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 575,
									"end": 598,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 575,
									"end": 598,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 575,
									"end": 598,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 575,
									"end": 598,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 575,
									"end": 598,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 575,
									"end": 598,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 575,
									"end": 598,
									"name": "tag",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 575,
									"end": 598,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 575,
									"end": 598,
									"name": "tag",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 575,
									"end": 598,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 575,
									"end": 598,
									"name": "PUSH",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 575,
									"end": 598,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 575,
									"end": 598,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 575,
									"end": 598,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 575,
									"end": 598,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 575,
									"end": 598,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 575,
									"end": 598,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 575,
									"end": 598,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 575,
									"end": 598,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 575,
									"end": 598,
									"name": "tag",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 575,
									"end": 598,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 575,
									"end": 598,
									"name": "tag",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 575,
									"end": 598,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 575,
									"end": 598,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 575,
									"end": 598,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 575,
									"end": 598,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 575,
									"end": 598,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 575,
									"end": 598,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 575,
									"end": 598,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 575,
									"end": 598,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 575,
									"end": 598,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 575,
									"end": 598,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 575,
									"end": 598,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 575,
									"end": 598,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 575,
									"end": 602,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 575,
									"end": 602,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 575,
									"end": 602,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 575,
									"end": 602,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 636,
									"end": 637,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 612,
									"end": 620,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 612,
									"end": 633,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 621,
									"end": 632,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 612,
									"end": 633,
									"name": "PUSH",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 612,
									"end": 633,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 612,
									"end": 633,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 612,
									"end": 633,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 612,
									"end": 633,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 612,
									"end": 633,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 612,
									"end": 633,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 612,
									"end": 633,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 612,
									"end": 633,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 612,
									"end": 633,
									"name": "tag",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 612,
									"end": 633,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 612,
									"end": 633,
									"name": "tag",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 612,
									"end": 633,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 612,
									"end": 633,
									"name": "PUSH",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 612,
									"end": 633,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 612,
									"end": 633,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 612,
									"end": 633,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 612,
									"end": 633,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 612,
									"end": 633,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 612,
									"end": 633,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 612,
									"end": 633,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 612,
									"end": 633,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 612,
									"end": 633,
									"name": "tag",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 612,
									"end": 633,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 612,
									"end": 633,
									"name": "tag",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 612,
									"end": 633,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 612,
									"end": 633,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 612,
									"end": 633,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 612,
									"end": 633,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 612,
									"end": 633,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 612,
									"end": 633,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 612,
									"end": 633,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 612,
									"end": 633,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 612,
									"end": 633,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 612,
									"end": 633,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 612,
									"end": 633,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 612,
									"end": 633,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 612,
									"end": 637,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 612,
									"end": 637,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 612,
									"end": 637,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 612,
									"end": 637,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 674,
									"end": 675,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 647,
									"end": 655,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 647,
									"end": 671,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 656,
									"end": 670,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 647,
									"end": 671,
									"name": "PUSH",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 647,
									"end": 671,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 647,
									"end": 671,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 647,
									"end": 671,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 647,
									"end": 671,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 647,
									"end": 671,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 647,
									"end": 671,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 647,
									"end": 671,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 647,
									"end": 671,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 647,
									"end": 671,
									"name": "tag",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 647,
									"end": 671,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 647,
									"end": 671,
									"name": "tag",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 647,
									"end": 671,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 647,
									"end": 671,
									"name": "PUSH",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 647,
									"end": 671,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 647,
									"end": 671,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 647,
									"end": 671,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 647,
									"end": 671,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 647,
									"end": 671,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 647,
									"end": 671,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 647,
									"end": 671,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 647,
									"end": 671,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 647,
									"end": 671,
									"name": "tag",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 647,
									"end": 671,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 647,
									"end": 671,
									"name": "tag",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 647,
									"end": 671,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 647,
									"end": 671,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 647,
									"end": 671,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 647,
									"end": 671,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 647,
									"end": 671,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 647,
									"end": 671,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 647,
									"end": 671,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 647,
									"end": 671,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 647,
									"end": 671,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 647,
									"end": 671,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 647,
									"end": 671,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 647,
									"end": 671,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 647,
									"end": 675,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 647,
									"end": 675,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 647,
									"end": 675,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 647,
									"end": 675,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 710,
									"end": 711,
									"name": "PUSH",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 685,
									"end": 693,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 685,
									"end": 707,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 694,
									"end": 706,
									"name": "PUSH",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 685,
									"end": 707,
									"name": "PUSH",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 685,
									"end": 707,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 685,
									"end": 707,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 685,
									"end": 707,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 685,
									"end": 707,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 685,
									"end": 707,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 685,
									"end": 707,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 685,
									"end": 707,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 685,
									"end": 707,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 685,
									"end": 707,
									"name": "tag",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 685,
									"end": 707,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 685,
									"end": 707,
									"name": "tag",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 685,
									"end": 707,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 685,
									"end": 707,
									"name": "PUSH",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 685,
									"end": 707,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 685,
									"end": 707,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 685,
									"end": 707,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 685,
									"end": 707,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 685,
									"end": 707,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 685,
									"end": 707,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 685,
									"end": 707,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 685,
									"end": 707,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 685,
									"end": 707,
									"name": "tag",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 685,
									"end": 707,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 685,
									"end": 707,
									"name": "tag",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 685,
									"end": 707,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 685,
									"end": 707,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 685,
									"end": 707,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 685,
									"end": 707,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 685,
									"end": 707,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 685,
									"end": 707,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 685,
									"end": 707,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 685,
									"end": 707,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 685,
									"end": 707,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 685,
									"end": 707,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 685,
									"end": 707,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 685,
									"end": 707,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 685,
									"end": 711,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 685,
									"end": 711,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 685,
									"end": 711,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 685,
									"end": 711,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 748,
									"end": 750,
									"name": "PUSH",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 721,
									"end": 729,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 721,
									"end": 745,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 730,
									"end": 744,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 721,
									"end": 745,
									"name": "PUSH",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 721,
									"end": 745,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 721,
									"end": 745,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 721,
									"end": 745,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 721,
									"end": 745,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 721,
									"end": 745,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 721,
									"end": 745,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 721,
									"end": 745,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 721,
									"end": 745,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 721,
									"end": 745,
									"name": "tag",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 721,
									"end": 745,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 721,
									"end": 745,
									"name": "tag",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 721,
									"end": 745,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 721,
									"end": 745,
									"name": "PUSH",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 721,
									"end": 745,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 721,
									"end": 745,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 721,
									"end": 745,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 721,
									"end": 745,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 721,
									"end": 745,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 721,
									"end": 745,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 721,
									"end": 745,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 721,
									"end": 745,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 721,
									"end": 745,
									"name": "tag",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 721,
									"end": 745,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 721,
									"end": 745,
									"name": "tag",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 721,
									"end": 745,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 721,
									"end": 745,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 721,
									"end": 745,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 721,
									"end": 745,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 721,
									"end": 745,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 721,
									"end": 745,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 721,
									"end": 745,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 721,
									"end": 745,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 721,
									"end": 745,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 721,
									"end": 745,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 721,
									"end": 745,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 721,
									"end": 745,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 721,
									"end": 750,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 721,
									"end": 750,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 721,
									"end": 750,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 721,
									"end": 750,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 784,
									"end": 786,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 760,
									"end": 768,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 760,
									"end": 781,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 769,
									"end": 780,
									"name": "PUSH",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 760,
									"end": 781,
									"name": "PUSH",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 760,
									"end": 781,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 760,
									"end": 781,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 760,
									"end": 781,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 760,
									"end": 781,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 760,
									"end": 781,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 760,
									"end": 781,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 760,
									"end": 781,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 760,
									"end": 781,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 760,
									"end": 781,
									"name": "tag",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 760,
									"end": 781,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 760,
									"end": 781,
									"name": "tag",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 760,
									"end": 781,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 760,
									"end": 781,
									"name": "PUSH",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 760,
									"end": 781,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 760,
									"end": 781,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 760,
									"end": 781,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 760,
									"end": 781,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 760,
									"end": 781,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 760,
									"end": 781,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 760,
									"end": 781,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 760,
									"end": 781,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 760,
									"end": 781,
									"name": "tag",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 760,
									"end": 781,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 760,
									"end": 781,
									"name": "tag",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 760,
									"end": 781,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 760,
									"end": 781,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 760,
									"end": 781,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 760,
									"end": 781,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 760,
									"end": 781,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 760,
									"end": 781,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 760,
									"end": 781,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 760,
									"end": 781,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 760,
									"end": 781,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 760,
									"end": 781,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 760,
									"end": 781,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 760,
									"end": 781,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 760,
									"end": 786,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 760,
									"end": 786,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 760,
									"end": 786,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 760,
									"end": 786,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 822,
									"end": 824,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 796,
									"end": 804,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 796,
									"end": 819,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 805,
									"end": 818,
									"name": "PUSH",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 796,
									"end": 819,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 796,
									"end": 819,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 796,
									"end": 819,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 796,
									"end": 819,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 796,
									"end": 819,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 796,
									"end": 819,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 796,
									"end": 819,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 796,
									"end": 819,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 796,
									"end": 819,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 796,
									"end": 819,
									"name": "tag",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 796,
									"end": 819,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 796,
									"end": 819,
									"name": "tag",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 796,
									"end": 819,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 796,
									"end": 819,
									"name": "PUSH",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 796,
									"end": 819,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 796,
									"end": 819,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 796,
									"end": 819,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 796,
									"end": 819,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 796,
									"end": 819,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 796,
									"end": 819,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 796,
									"end": 819,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 796,
									"end": 819,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 796,
									"end": 819,
									"name": "tag",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 796,
									"end": 819,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 796,
									"end": 819,
									"name": "tag",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 796,
									"end": 819,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 796,
									"end": 819,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 796,
									"end": 819,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 796,
									"end": 819,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 796,
									"end": 819,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 796,
									"end": 819,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 796,
									"end": 819,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 796,
									"end": 819,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 796,
									"end": 819,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 796,
									"end": 819,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 796,
									"end": 819,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 796,
									"end": 819,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 796,
									"end": 824,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 796,
									"end": 824,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 796,
									"end": 824,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 796,
									"end": 824,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 240,
									"end": 3555,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 240,
									"end": 3555,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 187,
									"name": "tag",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 7,
									"end": 187,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 55,
									"end": 132,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 52,
									"end": 53,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 45,
									"end": 133,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 152,
									"end": 156,
									"name": "PUSH",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 149,
									"end": 150,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 142,
									"end": 157,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 176,
									"end": 180,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 173,
									"end": 174,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 166,
									"end": 181,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 240,
									"end": 3555,
									"name": "tag",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 240,
									"end": 3555,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 240,
									"end": 3555,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 240,
									"end": 3555,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 240,
									"end": 3555,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 240,
									"end": 3555,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 240,
									"end": 3555,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 240,
									"end": 3555,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 240,
									"end": 3555,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fc629e47c46c3247165b4cf2274706e368b65262cc0a38e274fc354482d89f8764736f6c63430008110033",
									".code": [
										{
											"begin": 240,
											"end": 3555,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 240,
											"end": 3555,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 240,
											"end": 3555,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 240,
											"end": 3555,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 240,
											"end": 3555,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 240,
											"end": 3555,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"hbar/SmartContracts/Auction2/hts-precompile/ExpiryHelper.sol",
								"hbar/SmartContracts/Auction2/hts-precompile/FeeHelper.sol",
								"hbar/SmartContracts/Auction2/hts-precompile/HederaResponseCodes.sol",
								"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol",
								"hbar/SmartContracts/Auction2/hts-precompile/IHederaTokenService.sol",
								"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol",
								"hbar/SmartContracts/Tests/MintAndTransfer3.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"hbar/SmartContracts/Auction2/hts-precompile/FeeHelper.sol\":\"FeeHelper\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"hbar/SmartContracts/Auction2/hts-precompile/FeeHelper.sol\":{\"keccak256\":\"0xa32e4e1b0247b3d57315c606d18b2b513df6678ae1c1c0b730f646b23a0fb2bb\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5c4ff72e6f513df35a937b005e467a3ae883a6cfab754cdbebf7ff619be30459\",\"dweb:/ipfs/QmYiPpnn1ij9TmddBRkEVL2Tf8mKfiqaHn8zJeScAFLMws\"]},\"hbar/SmartContracts/Auction2/hts-precompile/HederaResponseCodes.sol\":{\"keccak256\":\"0x9af70d38d34a234475b792a23c59f8cae63bf9d3407d0fb0a3112a40ce25627b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://90d2abceb9a6f0244395d92abcad6669f5a4696fb876079271fbc4c32b7752f7\",\"dweb:/ipfs/QmaKsVGmmcEwj6rcBmvbdKL213Seq8HwZTXf1DYnoaSELZ\"]},\"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":{\"keccak256\":\"0x01265799f3f9010d1a5597f4a15a684ff8793bb426493951741b92d5bcb40cac\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3734ef870596280f3177545c02c74f4d25fec55388a0785fa73dbdb1af064b52\",\"dweb:/ipfs/QmW2WzmvTqumStJVs9absA8SC6mHpFN1FbC4rw5BxtVpRj\"]},\"hbar/SmartContracts/Auction2/hts-precompile/IHederaTokenService.sol\":{\"keccak256\":\"0x1df4449743626e64ff38122822b5fa56466e14bf3944f7b679eae145c05f0112\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0d63c9a9ef88b6082fd0ce110d23a057e8f9f3360a5d4b7195b7d859788f0833\",\"dweb:/ipfs/QmNUKRfuFiCxMW9qyqh8ytWMEHMQxH3Lr3v5vAjTrt2Mj2\"]},\"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":{\"keccak256\":\"0x1c445127746a07dc4bdb8ea93cd151fbec3b686c9d7ee5845c875475eb89d8c3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e0253869a15bd8d06a2a45b8cefdcefc64e4aee675c5ac5d5465ca2bb67d64df\",\"dweb:/ipfs/QmabBXMqR3avxQ6nHeqFXmVhGpfNH5bZXP9zaBRDZ7WYtN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2718,
								"contract": "hbar/SmartContracts/Auction2/hts-precompile/FeeHelper.sol:FeeHelper",
								"label": "supplyContract",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 2723,
								"contract": "hbar/SmartContracts/Auction2/hts-precompile/FeeHelper.sol:FeeHelper",
								"label": "keyTypes",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_enum(KeyType)2731,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_enum(KeyType)2731": {
								"encoding": "inplace",
								"label": "enum KeyHelper.KeyType",
								"numberOfBytes": "1"
							},
							"t_mapping(t_enum(KeyType)2731,t_uint256)": {
								"encoding": "mapping",
								"key": "t_enum(KeyType)2731",
								"label": "mapping(enum KeyHelper.KeyType => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"hbar/SmartContracts/Auction2/hts-precompile/HederaResponseCodes.sol": {
				"HederaResponseCodes": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"hbar/SmartContracts/Auction2/hts-precompile/HederaResponseCodes.sol\":\"HederaResponseCodes\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"hbar/SmartContracts/Auction2/hts-precompile/HederaResponseCodes.sol\":{\"keccak256\":\"0x9af70d38d34a234475b792a23c59f8cae63bf9d3407d0fb0a3112a40ce25627b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://90d2abceb9a6f0244395d92abcad6669f5a4696fb876079271fbc4c32b7752f7\",\"dweb:/ipfs/QmaKsVGmmcEwj6rcBmvbdKL213Seq8HwZTXf1DYnoaSELZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol": {
				"HederaTokenService": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":\"HederaTokenService\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"hbar/SmartContracts/Auction2/hts-precompile/HederaResponseCodes.sol\":{\"keccak256\":\"0x9af70d38d34a234475b792a23c59f8cae63bf9d3407d0fb0a3112a40ce25627b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://90d2abceb9a6f0244395d92abcad6669f5a4696fb876079271fbc4c32b7752f7\",\"dweb:/ipfs/QmaKsVGmmcEwj6rcBmvbdKL213Seq8HwZTXf1DYnoaSELZ\"]},\"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":{\"keccak256\":\"0x01265799f3f9010d1a5597f4a15a684ff8793bb426493951741b92d5bcb40cac\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3734ef870596280f3177545c02c74f4d25fec55388a0785fa73dbdb1af064b52\",\"dweb:/ipfs/QmW2WzmvTqumStJVs9absA8SC6mHpFN1FbC4rw5BxtVpRj\"]},\"hbar/SmartContracts/Auction2/hts-precompile/IHederaTokenService.sol\":{\"keccak256\":\"0x1df4449743626e64ff38122822b5fa56466e14bf3944f7b679eae145c05f0112\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0d63c9a9ef88b6082fd0ce110d23a057e8f9f3360a5d4b7195b7d859788f0833\",\"dweb:/ipfs/QmNUKRfuFiCxMW9qyqh8ytWMEHMQxH3Lr3v5vAjTrt2Mj2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"hbar/SmartContracts/Auction2/hts-precompile/IHederaTokenService.sol": {
				"IHederaTokenService": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "int64",
									"name": "responseCode",
									"type": "int64"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "int64",
									"name": "responseCode",
									"type": "int64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"internalType": "int64",
									"name": "serialNumber",
									"type": "int64"
								}
							],
							"name": "approveNFT",
							"outputs": [
								{
									"internalType": "int64",
									"name": "responseCode",
									"type": "int64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "associateToken",
							"outputs": [
								{
									"internalType": "int64",
									"name": "responseCode",
									"type": "int64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address[]",
									"name": "tokens",
									"type": "address[]"
								}
							],
							"name": "associateTokens",
							"outputs": [
								{
									"internalType": "int64",
									"name": "responseCode",
									"type": "int64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint64",
									"name": "amount",
									"type": "uint64"
								},
								{
									"internalType": "int64[]",
									"name": "serialNumbers",
									"type": "int64[]"
								}
							],
							"name": "burnToken",
							"outputs": [
								{
									"internalType": "int64",
									"name": "responseCode",
									"type": "int64"
								},
								{
									"internalType": "uint64",
									"name": "newTotalSupply",
									"type": "uint64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "string",
											"name": "name",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "symbol",
											"type": "string"
										},
										{
											"internalType": "address",
											"name": "treasury",
											"type": "address"
										},
										{
											"internalType": "string",
											"name": "memo",
											"type": "string"
										},
										{
											"internalType": "bool",
											"name": "tokenSupplyType",
											"type": "bool"
										},
										{
											"internalType": "uint32",
											"name": "maxSupply",
											"type": "uint32"
										},
										{
											"internalType": "bool",
											"name": "freezeDefault",
											"type": "bool"
										},
										{
											"components": [
												{
													"internalType": "uint256",
													"name": "keyType",
													"type": "uint256"
												},
												{
													"components": [
														{
															"internalType": "bool",
															"name": "inheritAccountKey",
															"type": "bool"
														},
														{
															"internalType": "address",
															"name": "contractId",
															"type": "address"
														},
														{
															"internalType": "bytes",
															"name": "ed25519",
															"type": "bytes"
														},
														{
															"internalType": "bytes",
															"name": "ECDSA_secp256k1",
															"type": "bytes"
														},
														{
															"internalType": "address",
															"name": "delegatableContractId",
															"type": "address"
														}
													],
													"internalType": "struct IHederaTokenService.KeyValue",
													"name": "key",
													"type": "tuple"
												}
											],
											"internalType": "struct IHederaTokenService.TokenKey[]",
											"name": "tokenKeys",
											"type": "tuple[]"
										},
										{
											"components": [
												{
													"internalType": "uint32",
													"name": "second",
													"type": "uint32"
												},
												{
													"internalType": "address",
													"name": "autoRenewAccount",
													"type": "address"
												},
												{
													"internalType": "uint32",
													"name": "autoRenewPeriod",
													"type": "uint32"
												}
											],
											"internalType": "struct IHederaTokenService.Expiry",
											"name": "expiry",
											"type": "tuple"
										}
									],
									"internalType": "struct IHederaTokenService.HederaToken",
									"name": "token",
									"type": "tuple"
								},
								{
									"internalType": "uint256",
									"name": "initialTotalSupply",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "decimals",
									"type": "uint256"
								}
							],
							"name": "createFungibleToken",
							"outputs": [
								{
									"internalType": "int64",
									"name": "responseCode",
									"type": "int64"
								},
								{
									"internalType": "address",
									"name": "tokenAddress",
									"type": "address"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "string",
											"name": "name",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "symbol",
											"type": "string"
										},
										{
											"internalType": "address",
											"name": "treasury",
											"type": "address"
										},
										{
											"internalType": "string",
											"name": "memo",
											"type": "string"
										},
										{
											"internalType": "bool",
											"name": "tokenSupplyType",
											"type": "bool"
										},
										{
											"internalType": "uint32",
											"name": "maxSupply",
											"type": "uint32"
										},
										{
											"internalType": "bool",
											"name": "freezeDefault",
											"type": "bool"
										},
										{
											"components": [
												{
													"internalType": "uint256",
													"name": "keyType",
													"type": "uint256"
												},
												{
													"components": [
														{
															"internalType": "bool",
															"name": "inheritAccountKey",
															"type": "bool"
														},
														{
															"internalType": "address",
															"name": "contractId",
															"type": "address"
														},
														{
															"internalType": "bytes",
															"name": "ed25519",
															"type": "bytes"
														},
														{
															"internalType": "bytes",
															"name": "ECDSA_secp256k1",
															"type": "bytes"
														},
														{
															"internalType": "address",
															"name": "delegatableContractId",
															"type": "address"
														}
													],
													"internalType": "struct IHederaTokenService.KeyValue",
													"name": "key",
													"type": "tuple"
												}
											],
											"internalType": "struct IHederaTokenService.TokenKey[]",
											"name": "tokenKeys",
											"type": "tuple[]"
										},
										{
											"components": [
												{
													"internalType": "uint32",
													"name": "second",
													"type": "uint32"
												},
												{
													"internalType": "address",
													"name": "autoRenewAccount",
													"type": "address"
												},
												{
													"internalType": "uint32",
													"name": "autoRenewPeriod",
													"type": "uint32"
												}
											],
											"internalType": "struct IHederaTokenService.Expiry",
											"name": "expiry",
											"type": "tuple"
										}
									],
									"internalType": "struct IHederaTokenService.HederaToken",
									"name": "token",
									"type": "tuple"
								},
								{
									"internalType": "uint256",
									"name": "initialTotalSupply",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "decimals",
									"type": "uint256"
								},
								{
									"components": [
										{
											"internalType": "uint32",
											"name": "amount",
											"type": "uint32"
										},
										{
											"internalType": "address",
											"name": "tokenId",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "useHbarsForPayment",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "useCurrentTokenForPayment",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "feeCollector",
											"type": "address"
										}
									],
									"internalType": "struct IHederaTokenService.FixedFee[]",
									"name": "fixedFees",
									"type": "tuple[]"
								},
								{
									"components": [
										{
											"internalType": "uint32",
											"name": "numerator",
											"type": "uint32"
										},
										{
											"internalType": "uint32",
											"name": "denominator",
											"type": "uint32"
										},
										{
											"internalType": "uint32",
											"name": "minimumAmount",
											"type": "uint32"
										},
										{
											"internalType": "uint32",
											"name": "maximumAmount",
											"type": "uint32"
										},
										{
											"internalType": "bool",
											"name": "netOfTransfers",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "feeCollector",
											"type": "address"
										}
									],
									"internalType": "struct IHederaTokenService.FractionalFee[]",
									"name": "fractionalFees",
									"type": "tuple[]"
								}
							],
							"name": "createFungibleTokenWithCustomFees",
							"outputs": [
								{
									"internalType": "int64",
									"name": "responseCode",
									"type": "int64"
								},
								{
									"internalType": "address",
									"name": "tokenAddress",
									"type": "address"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "string",
											"name": "name",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "symbol",
											"type": "string"
										},
										{
											"internalType": "address",
											"name": "treasury",
											"type": "address"
										},
										{
											"internalType": "string",
											"name": "memo",
											"type": "string"
										},
										{
											"internalType": "bool",
											"name": "tokenSupplyType",
											"type": "bool"
										},
										{
											"internalType": "uint32",
											"name": "maxSupply",
											"type": "uint32"
										},
										{
											"internalType": "bool",
											"name": "freezeDefault",
											"type": "bool"
										},
										{
											"components": [
												{
													"internalType": "uint256",
													"name": "keyType",
													"type": "uint256"
												},
												{
													"components": [
														{
															"internalType": "bool",
															"name": "inheritAccountKey",
															"type": "bool"
														},
														{
															"internalType": "address",
															"name": "contractId",
															"type": "address"
														},
														{
															"internalType": "bytes",
															"name": "ed25519",
															"type": "bytes"
														},
														{
															"internalType": "bytes",
															"name": "ECDSA_secp256k1",
															"type": "bytes"
														},
														{
															"internalType": "address",
															"name": "delegatableContractId",
															"type": "address"
														}
													],
													"internalType": "struct IHederaTokenService.KeyValue",
													"name": "key",
													"type": "tuple"
												}
											],
											"internalType": "struct IHederaTokenService.TokenKey[]",
											"name": "tokenKeys",
											"type": "tuple[]"
										},
										{
											"components": [
												{
													"internalType": "uint32",
													"name": "second",
													"type": "uint32"
												},
												{
													"internalType": "address",
													"name": "autoRenewAccount",
													"type": "address"
												},
												{
													"internalType": "uint32",
													"name": "autoRenewPeriod",
													"type": "uint32"
												}
											],
											"internalType": "struct IHederaTokenService.Expiry",
											"name": "expiry",
											"type": "tuple"
										}
									],
									"internalType": "struct IHederaTokenService.HederaToken",
									"name": "token",
									"type": "tuple"
								}
							],
							"name": "createNonFungibleToken",
							"outputs": [
								{
									"internalType": "int64",
									"name": "responseCode",
									"type": "int64"
								},
								{
									"internalType": "address",
									"name": "tokenAddress",
									"type": "address"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "string",
											"name": "name",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "symbol",
											"type": "string"
										},
										{
											"internalType": "address",
											"name": "treasury",
											"type": "address"
										},
										{
											"internalType": "string",
											"name": "memo",
											"type": "string"
										},
										{
											"internalType": "bool",
											"name": "tokenSupplyType",
											"type": "bool"
										},
										{
											"internalType": "uint32",
											"name": "maxSupply",
											"type": "uint32"
										},
										{
											"internalType": "bool",
											"name": "freezeDefault",
											"type": "bool"
										},
										{
											"components": [
												{
													"internalType": "uint256",
													"name": "keyType",
													"type": "uint256"
												},
												{
													"components": [
														{
															"internalType": "bool",
															"name": "inheritAccountKey",
															"type": "bool"
														},
														{
															"internalType": "address",
															"name": "contractId",
															"type": "address"
														},
														{
															"internalType": "bytes",
															"name": "ed25519",
															"type": "bytes"
														},
														{
															"internalType": "bytes",
															"name": "ECDSA_secp256k1",
															"type": "bytes"
														},
														{
															"internalType": "address",
															"name": "delegatableContractId",
															"type": "address"
														}
													],
													"internalType": "struct IHederaTokenService.KeyValue",
													"name": "key",
													"type": "tuple"
												}
											],
											"internalType": "struct IHederaTokenService.TokenKey[]",
											"name": "tokenKeys",
											"type": "tuple[]"
										},
										{
											"components": [
												{
													"internalType": "uint32",
													"name": "second",
													"type": "uint32"
												},
												{
													"internalType": "address",
													"name": "autoRenewAccount",
													"type": "address"
												},
												{
													"internalType": "uint32",
													"name": "autoRenewPeriod",
													"type": "uint32"
												}
											],
											"internalType": "struct IHederaTokenService.Expiry",
											"name": "expiry",
											"type": "tuple"
										}
									],
									"internalType": "struct IHederaTokenService.HederaToken",
									"name": "token",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "uint32",
											"name": "amount",
											"type": "uint32"
										},
										{
											"internalType": "address",
											"name": "tokenId",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "useHbarsForPayment",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "useCurrentTokenForPayment",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "feeCollector",
											"type": "address"
										}
									],
									"internalType": "struct IHederaTokenService.FixedFee[]",
									"name": "fixedFees",
									"type": "tuple[]"
								},
								{
									"components": [
										{
											"internalType": "uint32",
											"name": "numerator",
											"type": "uint32"
										},
										{
											"internalType": "uint32",
											"name": "denominator",
											"type": "uint32"
										},
										{
											"internalType": "uint32",
											"name": "amount",
											"type": "uint32"
										},
										{
											"internalType": "address",
											"name": "tokenId",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "useHbarsForPayment",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "feeCollector",
											"type": "address"
										}
									],
									"internalType": "struct IHederaTokenService.RoyaltyFee[]",
									"name": "royaltyFees",
									"type": "tuple[]"
								}
							],
							"name": "createNonFungibleTokenWithCustomFees",
							"outputs": [
								{
									"internalType": "int64",
									"name": "responseCode",
									"type": "int64"
								},
								{
									"internalType": "address",
									"name": "tokenAddress",
									"type": "address"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "token",
											"type": "address"
										},
										{
											"components": [
												{
													"internalType": "address",
													"name": "accountID",
													"type": "address"
												},
												{
													"internalType": "int64",
													"name": "amount",
													"type": "int64"
												}
											],
											"internalType": "struct IHederaTokenService.AccountAmount[]",
											"name": "transfers",
											"type": "tuple[]"
										},
										{
											"components": [
												{
													"internalType": "address",
													"name": "senderAccountID",
													"type": "address"
												},
												{
													"internalType": "address",
													"name": "receiverAccountID",
													"type": "address"
												},
												{
													"internalType": "int64",
													"name": "serialNumber",
													"type": "int64"
												}
											],
											"internalType": "struct IHederaTokenService.NftTransfer[]",
											"name": "nftTransfers",
											"type": "tuple[]"
										}
									],
									"internalType": "struct IHederaTokenService.TokenTransferList[]",
									"name": "tokenTransfers",
									"type": "tuple[]"
								}
							],
							"name": "cryptoTransfer",
							"outputs": [
								{
									"internalType": "int64",
									"name": "responseCode",
									"type": "int64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "deleteToken",
							"outputs": [
								{
									"internalType": "int64",
									"name": "responseCode",
									"type": "int64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "dissociateToken",
							"outputs": [
								{
									"internalType": "int64",
									"name": "responseCode",
									"type": "int64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address[]",
									"name": "tokens",
									"type": "address[]"
								}
							],
							"name": "dissociateTokens",
							"outputs": [
								{
									"internalType": "int64",
									"name": "responseCode",
									"type": "int64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "freezeToken",
							"outputs": [
								{
									"internalType": "int64",
									"name": "responseCode",
									"type": "int64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "int64",
									"name": "serialNumber",
									"type": "int64"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "int64",
									"name": "responseCode",
									"type": "int64"
								},
								{
									"internalType": "address",
									"name": "approved",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "getFungibleTokenInfo",
							"outputs": [
								{
									"internalType": "int64",
									"name": "responseCode",
									"type": "int64"
								},
								{
									"components": [
										{
											"components": [
												{
													"components": [
														{
															"internalType": "string",
															"name": "name",
															"type": "string"
														},
														{
															"internalType": "string",
															"name": "symbol",
															"type": "string"
														},
														{
															"internalType": "address",
															"name": "treasury",
															"type": "address"
														},
														{
															"internalType": "string",
															"name": "memo",
															"type": "string"
														},
														{
															"internalType": "bool",
															"name": "tokenSupplyType",
															"type": "bool"
														},
														{
															"internalType": "uint32",
															"name": "maxSupply",
															"type": "uint32"
														},
														{
															"internalType": "bool",
															"name": "freezeDefault",
															"type": "bool"
														},
														{
															"components": [
																{
																	"internalType": "uint256",
																	"name": "keyType",
																	"type": "uint256"
																},
																{
																	"components": [
																		{
																			"internalType": "bool",
																			"name": "inheritAccountKey",
																			"type": "bool"
																		},
																		{
																			"internalType": "address",
																			"name": "contractId",
																			"type": "address"
																		},
																		{
																			"internalType": "bytes",
																			"name": "ed25519",
																			"type": "bytes"
																		},
																		{
																			"internalType": "bytes",
																			"name": "ECDSA_secp256k1",
																			"type": "bytes"
																		},
																		{
																			"internalType": "address",
																			"name": "delegatableContractId",
																			"type": "address"
																		}
																	],
																	"internalType": "struct IHederaTokenService.KeyValue",
																	"name": "key",
																	"type": "tuple"
																}
															],
															"internalType": "struct IHederaTokenService.TokenKey[]",
															"name": "tokenKeys",
															"type": "tuple[]"
														},
														{
															"components": [
																{
																	"internalType": "uint32",
																	"name": "second",
																	"type": "uint32"
																},
																{
																	"internalType": "address",
																	"name": "autoRenewAccount",
																	"type": "address"
																},
																{
																	"internalType": "uint32",
																	"name": "autoRenewPeriod",
																	"type": "uint32"
																}
															],
															"internalType": "struct IHederaTokenService.Expiry",
															"name": "expiry",
															"type": "tuple"
														}
													],
													"internalType": "struct IHederaTokenService.HederaToken",
													"name": "hedera",
													"type": "tuple"
												},
												{
													"components": [
														{
															"internalType": "uint32",
															"name": "amount",
															"type": "uint32"
														},
														{
															"internalType": "address",
															"name": "tokenId",
															"type": "address"
														},
														{
															"internalType": "bool",
															"name": "useHbarsForPayment",
															"type": "bool"
														},
														{
															"internalType": "bool",
															"name": "useCurrentTokenForPayment",
															"type": "bool"
														},
														{
															"internalType": "address",
															"name": "feeCollector",
															"type": "address"
														}
													],
													"internalType": "struct IHederaTokenService.FixedFee[]",
													"name": "fixedFees",
													"type": "tuple[]"
												},
												{
													"components": [
														{
															"internalType": "uint32",
															"name": "numerator",
															"type": "uint32"
														},
														{
															"internalType": "uint32",
															"name": "denominator",
															"type": "uint32"
														},
														{
															"internalType": "uint32",
															"name": "minimumAmount",
															"type": "uint32"
														},
														{
															"internalType": "uint32",
															"name": "maximumAmount",
															"type": "uint32"
														},
														{
															"internalType": "bool",
															"name": "netOfTransfers",
															"type": "bool"
														},
														{
															"internalType": "address",
															"name": "feeCollector",
															"type": "address"
														}
													],
													"internalType": "struct IHederaTokenService.FractionalFee[]",
													"name": "fractionalFees",
													"type": "tuple[]"
												},
												{
													"components": [
														{
															"internalType": "uint32",
															"name": "numerator",
															"type": "uint32"
														},
														{
															"internalType": "uint32",
															"name": "denominator",
															"type": "uint32"
														},
														{
															"internalType": "uint32",
															"name": "amount",
															"type": "uint32"
														},
														{
															"internalType": "address",
															"name": "tokenId",
															"type": "address"
														},
														{
															"internalType": "bool",
															"name": "useHbarsForPayment",
															"type": "bool"
														},
														{
															"internalType": "address",
															"name": "feeCollector",
															"type": "address"
														}
													],
													"internalType": "struct IHederaTokenService.RoyaltyFee[]",
													"name": "royaltyFees",
													"type": "tuple[]"
												},
												{
													"internalType": "bool",
													"name": "defaultKycStatus",
													"type": "bool"
												},
												{
													"internalType": "bool",
													"name": "deleted",
													"type": "bool"
												},
												{
													"internalType": "string",
													"name": "ledgerId",
													"type": "string"
												},
												{
													"internalType": "bool",
													"name": "pauseStatus",
													"type": "bool"
												},
												{
													"internalType": "uint64",
													"name": "totalSupply",
													"type": "uint64"
												}
											],
											"internalType": "struct IHederaTokenService.TokenInfo",
											"name": "tokenInfo",
											"type": "tuple"
										},
										{
											"internalType": "uint32",
											"name": "decimals",
											"type": "uint32"
										}
									],
									"internalType": "struct IHederaTokenService.FungibleTokenInfo",
									"name": "fungibleTokenInfo",
									"type": "tuple"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "int64",
									"name": "serialNumber",
									"type": "int64"
								}
							],
							"name": "getNonFungibleTokenInfo",
							"outputs": [
								{
									"internalType": "int64",
									"name": "responseCode",
									"type": "int64"
								},
								{
									"components": [
										{
											"components": [
												{
													"components": [
														{
															"internalType": "string",
															"name": "name",
															"type": "string"
														},
														{
															"internalType": "string",
															"name": "symbol",
															"type": "string"
														},
														{
															"internalType": "address",
															"name": "treasury",
															"type": "address"
														},
														{
															"internalType": "string",
															"name": "memo",
															"type": "string"
														},
														{
															"internalType": "bool",
															"name": "tokenSupplyType",
															"type": "bool"
														},
														{
															"internalType": "uint32",
															"name": "maxSupply",
															"type": "uint32"
														},
														{
															"internalType": "bool",
															"name": "freezeDefault",
															"type": "bool"
														},
														{
															"components": [
																{
																	"internalType": "uint256",
																	"name": "keyType",
																	"type": "uint256"
																},
																{
																	"components": [
																		{
																			"internalType": "bool",
																			"name": "inheritAccountKey",
																			"type": "bool"
																		},
																		{
																			"internalType": "address",
																			"name": "contractId",
																			"type": "address"
																		},
																		{
																			"internalType": "bytes",
																			"name": "ed25519",
																			"type": "bytes"
																		},
																		{
																			"internalType": "bytes",
																			"name": "ECDSA_secp256k1",
																			"type": "bytes"
																		},
																		{
																			"internalType": "address",
																			"name": "delegatableContractId",
																			"type": "address"
																		}
																	],
																	"internalType": "struct IHederaTokenService.KeyValue",
																	"name": "key",
																	"type": "tuple"
																}
															],
															"internalType": "struct IHederaTokenService.TokenKey[]",
															"name": "tokenKeys",
															"type": "tuple[]"
														},
														{
															"components": [
																{
																	"internalType": "uint32",
																	"name": "second",
																	"type": "uint32"
																},
																{
																	"internalType": "address",
																	"name": "autoRenewAccount",
																	"type": "address"
																},
																{
																	"internalType": "uint32",
																	"name": "autoRenewPeriod",
																	"type": "uint32"
																}
															],
															"internalType": "struct IHederaTokenService.Expiry",
															"name": "expiry",
															"type": "tuple"
														}
													],
													"internalType": "struct IHederaTokenService.HederaToken",
													"name": "hedera",
													"type": "tuple"
												},
												{
													"components": [
														{
															"internalType": "uint32",
															"name": "amount",
															"type": "uint32"
														},
														{
															"internalType": "address",
															"name": "tokenId",
															"type": "address"
														},
														{
															"internalType": "bool",
															"name": "useHbarsForPayment",
															"type": "bool"
														},
														{
															"internalType": "bool",
															"name": "useCurrentTokenForPayment",
															"type": "bool"
														},
														{
															"internalType": "address",
															"name": "feeCollector",
															"type": "address"
														}
													],
													"internalType": "struct IHederaTokenService.FixedFee[]",
													"name": "fixedFees",
													"type": "tuple[]"
												},
												{
													"components": [
														{
															"internalType": "uint32",
															"name": "numerator",
															"type": "uint32"
														},
														{
															"internalType": "uint32",
															"name": "denominator",
															"type": "uint32"
														},
														{
															"internalType": "uint32",
															"name": "minimumAmount",
															"type": "uint32"
														},
														{
															"internalType": "uint32",
															"name": "maximumAmount",
															"type": "uint32"
														},
														{
															"internalType": "bool",
															"name": "netOfTransfers",
															"type": "bool"
														},
														{
															"internalType": "address",
															"name": "feeCollector",
															"type": "address"
														}
													],
													"internalType": "struct IHederaTokenService.FractionalFee[]",
													"name": "fractionalFees",
													"type": "tuple[]"
												},
												{
													"components": [
														{
															"internalType": "uint32",
															"name": "numerator",
															"type": "uint32"
														},
														{
															"internalType": "uint32",
															"name": "denominator",
															"type": "uint32"
														},
														{
															"internalType": "uint32",
															"name": "amount",
															"type": "uint32"
														},
														{
															"internalType": "address",
															"name": "tokenId",
															"type": "address"
														},
														{
															"internalType": "bool",
															"name": "useHbarsForPayment",
															"type": "bool"
														},
														{
															"internalType": "address",
															"name": "feeCollector",
															"type": "address"
														}
													],
													"internalType": "struct IHederaTokenService.RoyaltyFee[]",
													"name": "royaltyFees",
													"type": "tuple[]"
												},
												{
													"internalType": "bool",
													"name": "defaultKycStatus",
													"type": "bool"
												},
												{
													"internalType": "bool",
													"name": "deleted",
													"type": "bool"
												},
												{
													"internalType": "string",
													"name": "ledgerId",
													"type": "string"
												},
												{
													"internalType": "bool",
													"name": "pauseStatus",
													"type": "bool"
												},
												{
													"internalType": "uint64",
													"name": "totalSupply",
													"type": "uint64"
												}
											],
											"internalType": "struct IHederaTokenService.TokenInfo",
											"name": "tokenInfo",
											"type": "tuple"
										},
										{
											"internalType": "int64",
											"name": "serialNumber",
											"type": "int64"
										},
										{
											"internalType": "address",
											"name": "ownerId",
											"type": "address"
										},
										{
											"internalType": "int32",
											"name": "creationTime",
											"type": "int32"
										},
										{
											"internalType": "bytes",
											"name": "metadata",
											"type": "bytes"
										},
										{
											"internalType": "address",
											"name": "spenderId",
											"type": "address"
										}
									],
									"internalType": "struct IHederaTokenService.NonFungibleTokenInfo",
									"name": "nonFungibleTokenInfo",
									"type": "tuple"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "getTokenCustomFees",
							"outputs": [
								{
									"internalType": "int64",
									"name": "responseCode",
									"type": "int64"
								},
								{
									"components": [
										{
											"internalType": "uint32",
											"name": "amount",
											"type": "uint32"
										},
										{
											"internalType": "address",
											"name": "tokenId",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "useHbarsForPayment",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "useCurrentTokenForPayment",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "feeCollector",
											"type": "address"
										}
									],
									"internalType": "struct IHederaTokenService.FixedFee[]",
									"name": "fixedFees",
									"type": "tuple[]"
								},
								{
									"components": [
										{
											"internalType": "uint32",
											"name": "numerator",
											"type": "uint32"
										},
										{
											"internalType": "uint32",
											"name": "denominator",
											"type": "uint32"
										},
										{
											"internalType": "uint32",
											"name": "minimumAmount",
											"type": "uint32"
										},
										{
											"internalType": "uint32",
											"name": "maximumAmount",
											"type": "uint32"
										},
										{
											"internalType": "bool",
											"name": "netOfTransfers",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "feeCollector",
											"type": "address"
										}
									],
									"internalType": "struct IHederaTokenService.FractionalFee[]",
									"name": "fractionalFees",
									"type": "tuple[]"
								},
								{
									"components": [
										{
											"internalType": "uint32",
											"name": "numerator",
											"type": "uint32"
										},
										{
											"internalType": "uint32",
											"name": "denominator",
											"type": "uint32"
										},
										{
											"internalType": "uint32",
											"name": "amount",
											"type": "uint32"
										},
										{
											"internalType": "address",
											"name": "tokenId",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "useHbarsForPayment",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "feeCollector",
											"type": "address"
										}
									],
									"internalType": "struct IHederaTokenService.RoyaltyFee[]",
									"name": "royaltyFees",
									"type": "tuple[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "getTokenDefaultFreezeStatus",
							"outputs": [
								{
									"internalType": "int64",
									"name": "responseCode",
									"type": "int64"
								},
								{
									"internalType": "bool",
									"name": "defaultFreezeStatus",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "getTokenDefaultKycStatus",
							"outputs": [
								{
									"internalType": "int64",
									"name": "responseCode",
									"type": "int64"
								},
								{
									"internalType": "bool",
									"name": "defaultKycStatus",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "getTokenExpiryInfo",
							"outputs": [
								{
									"internalType": "int64",
									"name": "responseCode",
									"type": "int64"
								},
								{
									"components": [
										{
											"internalType": "uint32",
											"name": "second",
											"type": "uint32"
										},
										{
											"internalType": "address",
											"name": "autoRenewAccount",
											"type": "address"
										},
										{
											"internalType": "uint32",
											"name": "autoRenewPeriod",
											"type": "uint32"
										}
									],
									"internalType": "struct IHederaTokenService.Expiry",
									"name": "expiry",
									"type": "tuple"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "getTokenInfo",
							"outputs": [
								{
									"internalType": "int64",
									"name": "responseCode",
									"type": "int64"
								},
								{
									"components": [
										{
											"components": [
												{
													"internalType": "string",
													"name": "name",
													"type": "string"
												},
												{
													"internalType": "string",
													"name": "symbol",
													"type": "string"
												},
												{
													"internalType": "address",
													"name": "treasury",
													"type": "address"
												},
												{
													"internalType": "string",
													"name": "memo",
													"type": "string"
												},
												{
													"internalType": "bool",
													"name": "tokenSupplyType",
													"type": "bool"
												},
												{
													"internalType": "uint32",
													"name": "maxSupply",
													"type": "uint32"
												},
												{
													"internalType": "bool",
													"name": "freezeDefault",
													"type": "bool"
												},
												{
													"components": [
														{
															"internalType": "uint256",
															"name": "keyType",
															"type": "uint256"
														},
														{
															"components": [
																{
																	"internalType": "bool",
																	"name": "inheritAccountKey",
																	"type": "bool"
																},
																{
																	"internalType": "address",
																	"name": "contractId",
																	"type": "address"
																},
																{
																	"internalType": "bytes",
																	"name": "ed25519",
																	"type": "bytes"
																},
																{
																	"internalType": "bytes",
																	"name": "ECDSA_secp256k1",
																	"type": "bytes"
																},
																{
																	"internalType": "address",
																	"name": "delegatableContractId",
																	"type": "address"
																}
															],
															"internalType": "struct IHederaTokenService.KeyValue",
															"name": "key",
															"type": "tuple"
														}
													],
													"internalType": "struct IHederaTokenService.TokenKey[]",
													"name": "tokenKeys",
													"type": "tuple[]"
												},
												{
													"components": [
														{
															"internalType": "uint32",
															"name": "second",
															"type": "uint32"
														},
														{
															"internalType": "address",
															"name": "autoRenewAccount",
															"type": "address"
														},
														{
															"internalType": "uint32",
															"name": "autoRenewPeriod",
															"type": "uint32"
														}
													],
													"internalType": "struct IHederaTokenService.Expiry",
													"name": "expiry",
													"type": "tuple"
												}
											],
											"internalType": "struct IHederaTokenService.HederaToken",
											"name": "hedera",
											"type": "tuple"
										},
										{
											"components": [
												{
													"internalType": "uint32",
													"name": "amount",
													"type": "uint32"
												},
												{
													"internalType": "address",
													"name": "tokenId",
													"type": "address"
												},
												{
													"internalType": "bool",
													"name": "useHbarsForPayment",
													"type": "bool"
												},
												{
													"internalType": "bool",
													"name": "useCurrentTokenForPayment",
													"type": "bool"
												},
												{
													"internalType": "address",
													"name": "feeCollector",
													"type": "address"
												}
											],
											"internalType": "struct IHederaTokenService.FixedFee[]",
											"name": "fixedFees",
											"type": "tuple[]"
										},
										{
											"components": [
												{
													"internalType": "uint32",
													"name": "numerator",
													"type": "uint32"
												},
												{
													"internalType": "uint32",
													"name": "denominator",
													"type": "uint32"
												},
												{
													"internalType": "uint32",
													"name": "minimumAmount",
													"type": "uint32"
												},
												{
													"internalType": "uint32",
													"name": "maximumAmount",
													"type": "uint32"
												},
												{
													"internalType": "bool",
													"name": "netOfTransfers",
													"type": "bool"
												},
												{
													"internalType": "address",
													"name": "feeCollector",
													"type": "address"
												}
											],
											"internalType": "struct IHederaTokenService.FractionalFee[]",
											"name": "fractionalFees",
											"type": "tuple[]"
										},
										{
											"components": [
												{
													"internalType": "uint32",
													"name": "numerator",
													"type": "uint32"
												},
												{
													"internalType": "uint32",
													"name": "denominator",
													"type": "uint32"
												},
												{
													"internalType": "uint32",
													"name": "amount",
													"type": "uint32"
												},
												{
													"internalType": "address",
													"name": "tokenId",
													"type": "address"
												},
												{
													"internalType": "bool",
													"name": "useHbarsForPayment",
													"type": "bool"
												},
												{
													"internalType": "address",
													"name": "feeCollector",
													"type": "address"
												}
											],
											"internalType": "struct IHederaTokenService.RoyaltyFee[]",
											"name": "royaltyFees",
											"type": "tuple[]"
										},
										{
											"internalType": "bool",
											"name": "defaultKycStatus",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "deleted",
											"type": "bool"
										},
										{
											"internalType": "string",
											"name": "ledgerId",
											"type": "string"
										},
										{
											"internalType": "bool",
											"name": "pauseStatus",
											"type": "bool"
										},
										{
											"internalType": "uint64",
											"name": "totalSupply",
											"type": "uint64"
										}
									],
									"internalType": "struct IHederaTokenService.TokenInfo",
									"name": "tokenInfo",
									"type": "tuple"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "keyType",
									"type": "uint256"
								}
							],
							"name": "getTokenKey",
							"outputs": [
								{
									"internalType": "int64",
									"name": "responseCode",
									"type": "int64"
								},
								{
									"components": [
										{
											"internalType": "bool",
											"name": "inheritAccountKey",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "contractId",
											"type": "address"
										},
										{
											"internalType": "bytes",
											"name": "ed25519",
											"type": "bytes"
										},
										{
											"internalType": "bytes",
											"name": "ECDSA_secp256k1",
											"type": "bytes"
										},
										{
											"internalType": "address",
											"name": "delegatableContractId",
											"type": "address"
										}
									],
									"internalType": "struct IHederaTokenService.KeyValue",
									"name": "key",
									"type": "tuple"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantTokenKyc",
							"outputs": [
								{
									"internalType": "int64",
									"name": "responseCode",
									"type": "int64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "int64",
									"name": "responseCode",
									"type": "int64"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isFrozen",
							"outputs": [
								{
									"internalType": "int64",
									"name": "responseCode",
									"type": "int64"
								},
								{
									"internalType": "bool",
									"name": "frozen",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isKyc",
							"outputs": [
								{
									"internalType": "int64",
									"name": "responseCode",
									"type": "int64"
								},
								{
									"internalType": "bool",
									"name": "kycGranted",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint64",
									"name": "amount",
									"type": "uint64"
								},
								{
									"internalType": "bytes[]",
									"name": "metadata",
									"type": "bytes[]"
								}
							],
							"name": "mintToken",
							"outputs": [
								{
									"internalType": "int64",
									"name": "responseCode",
									"type": "int64"
								},
								{
									"internalType": "uint64",
									"name": "newTotalSupply",
									"type": "uint64"
								},
								{
									"internalType": "int64[]",
									"name": "serialNumbers",
									"type": "int64[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "pauseToken",
							"outputs": [
								{
									"internalType": "int64",
									"name": "responseCode",
									"type": "int64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeTokenKyc",
							"outputs": [
								{
									"internalType": "int64",
									"name": "responseCode",
									"type": "int64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [
								{
									"internalType": "int64",
									"name": "responseCode",
									"type": "int64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int64",
									"name": "serialNumber",
									"type": "int64"
								}
							],
							"name": "transferNFT",
							"outputs": [
								{
									"internalType": "int64",
									"name": "responseCode",
									"type": "int64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address[]",
									"name": "sender",
									"type": "address[]"
								},
								{
									"internalType": "address[]",
									"name": "receiver",
									"type": "address[]"
								},
								{
									"internalType": "int64[]",
									"name": "serialNumber",
									"type": "int64[]"
								}
							],
							"name": "transferNFTs",
							"outputs": [
								{
									"internalType": "int64",
									"name": "responseCode",
									"type": "int64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int64",
									"name": "amount",
									"type": "int64"
								}
							],
							"name": "transferToken",
							"outputs": [
								{
									"internalType": "int64",
									"name": "responseCode",
									"type": "int64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address[]",
									"name": "accountId",
									"type": "address[]"
								},
								{
									"internalType": "int64[]",
									"name": "amount",
									"type": "int64[]"
								}
							],
							"name": "transferTokens",
							"outputs": [
								{
									"internalType": "int64",
									"name": "responseCode",
									"type": "int64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "unfreezeToken",
							"outputs": [
								{
									"internalType": "int64",
									"name": "responseCode",
									"type": "int64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "unpauseToken",
							"outputs": [
								{
									"internalType": "int64",
									"name": "responseCode",
									"type": "int64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"components": [
										{
											"internalType": "uint32",
											"name": "second",
											"type": "uint32"
										},
										{
											"internalType": "address",
											"name": "autoRenewAccount",
											"type": "address"
										},
										{
											"internalType": "uint32",
											"name": "autoRenewPeriod",
											"type": "uint32"
										}
									],
									"internalType": "struct IHederaTokenService.Expiry",
									"name": "expiryInfo",
									"type": "tuple"
								}
							],
							"name": "updateTokenExpiryInfo",
							"outputs": [
								{
									"internalType": "int64",
									"name": "responseCode",
									"type": "int64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"components": [
										{
											"internalType": "string",
											"name": "name",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "symbol",
											"type": "string"
										},
										{
											"internalType": "address",
											"name": "treasury",
											"type": "address"
										},
										{
											"internalType": "string",
											"name": "memo",
											"type": "string"
										},
										{
											"internalType": "bool",
											"name": "tokenSupplyType",
											"type": "bool"
										},
										{
											"internalType": "uint32",
											"name": "maxSupply",
											"type": "uint32"
										},
										{
											"internalType": "bool",
											"name": "freezeDefault",
											"type": "bool"
										},
										{
											"components": [
												{
													"internalType": "uint256",
													"name": "keyType",
													"type": "uint256"
												},
												{
													"components": [
														{
															"internalType": "bool",
															"name": "inheritAccountKey",
															"type": "bool"
														},
														{
															"internalType": "address",
															"name": "contractId",
															"type": "address"
														},
														{
															"internalType": "bytes",
															"name": "ed25519",
															"type": "bytes"
														},
														{
															"internalType": "bytes",
															"name": "ECDSA_secp256k1",
															"type": "bytes"
														},
														{
															"internalType": "address",
															"name": "delegatableContractId",
															"type": "address"
														}
													],
													"internalType": "struct IHederaTokenService.KeyValue",
													"name": "key",
													"type": "tuple"
												}
											],
											"internalType": "struct IHederaTokenService.TokenKey[]",
											"name": "tokenKeys",
											"type": "tuple[]"
										},
										{
											"components": [
												{
													"internalType": "uint32",
													"name": "second",
													"type": "uint32"
												},
												{
													"internalType": "address",
													"name": "autoRenewAccount",
													"type": "address"
												},
												{
													"internalType": "uint32",
													"name": "autoRenewPeriod",
													"type": "uint32"
												}
											],
											"internalType": "struct IHederaTokenService.Expiry",
											"name": "expiry",
											"type": "tuple"
										}
									],
									"internalType": "struct IHederaTokenService.HederaToken",
									"name": "tokenInfo",
									"type": "tuple"
								}
							],
							"name": "updateTokenInfo",
							"outputs": [
								{
									"internalType": "int64",
									"name": "responseCode",
									"type": "int64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "keyType",
											"type": "uint256"
										},
										{
											"components": [
												{
													"internalType": "bool",
													"name": "inheritAccountKey",
													"type": "bool"
												},
												{
													"internalType": "address",
													"name": "contractId",
													"type": "address"
												},
												{
													"internalType": "bytes",
													"name": "ed25519",
													"type": "bytes"
												},
												{
													"internalType": "bytes",
													"name": "ECDSA_secp256k1",
													"type": "bytes"
												},
												{
													"internalType": "address",
													"name": "delegatableContractId",
													"type": "address"
												}
											],
											"internalType": "struct IHederaTokenService.KeyValue",
											"name": "key",
											"type": "tuple"
										}
									],
									"internalType": "struct IHederaTokenService.TokenKey[]",
									"name": "keys",
									"type": "tuple[]"
								}
							],
							"name": "updateTokenKeys",
							"outputs": [
								{
									"internalType": "int64",
									"name": "responseCode",
									"type": "int64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint32",
									"name": "amount",
									"type": "uint32"
								}
							],
							"name": "wipeTokenAccount",
							"outputs": [
								{
									"internalType": "int64",
									"name": "responseCode",
									"type": "int64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "int64[]",
									"name": "serialNumbers",
									"type": "int64[]"
								}
							],
							"name": "wipeTokenAccountNFT",
							"outputs": [
								{
									"internalType": "int64",
									"name": "responseCode",
									"type": "int64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address,address)": {
								"params": {
									"owner": "the owner of the tokens to be spent",
									"spender": "the spender of the tokens",
									"token": "The Hedera token address to check the allowance of"
								},
								"returns": {
									"allowance": "The amount which spender is still allowed to withdraw from owner.",
									"responseCode": "The response code for the status of the request. SUCCESS is 22."
								}
							},
							"approve(address,address,uint256)": {
								"params": {
									"amount": "the amount of tokens authorized to spend.",
									"spender": "the account address authorized to spend",
									"token": "The hedera token address to approve"
								},
								"returns": {
									"responseCode": "The response code for the status of the request. SUCCESS is 22."
								}
							},
							"approveNFT(address,address,int64)": {
								"params": {
									"approved": "The new approved NFT controller.  To revoke approvals pass in the zero address.",
									"serialNumber": "The NFT serial number  to approve",
									"token": "The Hedera NFT token address to approve"
								},
								"returns": {
									"responseCode": "The response code for the status of the request. SUCCESS is 22."
								}
							},
							"associateToken(address,address)": {
								"params": {
									"account": "The account to be associated with the provided token",
									"token": "The token to be associated with the provided account"
								}
							},
							"associateTokens(address,address[])": {
								"params": {
									"account": "The account to be associated with the provided tokens",
									"tokens": "The tokens to be associated with the provided account. In the case of NON_FUNGIBLE_UNIQUE               Type, once an account is associated, it can hold any number of NFTs (serial numbers) of that               token type"
								},
								"returns": {
									"responseCode": "The response code for the status of the request. SUCCESS is 22."
								}
							},
							"burnToken(address,uint64,int64[])": {
								"params": {
									"amount": "Applicable to tokens of type FUNGIBLE_COMMON. The amount to burn from the Treasury Account.                Amount must be a positive non-zero number, not bigger than the token balance of the treasury                account (0; balance], represented in the lowest denomination.",
									"serialNumbers": "Applicable to tokens of type NON_FUNGIBLE_UNIQUE. The list of serial numbers to be burned.",
									"token": "The token for which to burn tokens. If token does not exist, transaction results in              INVALID_TOKEN_ID"
								},
								"returns": {
									"newTotalSupply": "The new supply of tokens. For NFTs it is the total count of NFTs",
									"responseCode": "The response code for the status of the request. SUCCESS is 22."
								}
							},
							"createFungibleToken((string,string,address,string,bool,uint32,bool,(uint256,(bool,address,bytes,bytes,address))[],(uint32,address,uint32)),uint256,uint256)": {
								"params": {
									"decimals": "the number of decimal places a token is divisible by",
									"initialTotalSupply": "Specifies the initial supply of tokens to be put in circulation. The initial supply is sent to the Treasury Account. The supply is in the lowest denomination possible.",
									"token": "the basic properties of the token being created"
								},
								"returns": {
									"responseCode": "The response code for the status of the request. SUCCESS is 22.",
									"tokenAddress": "the created token's address"
								}
							},
							"createFungibleTokenWithCustomFees((string,string,address,string,bool,uint32,bool,(uint256,(bool,address,bytes,bytes,address))[],(uint32,address,uint32)),uint256,uint256,(uint32,address,bool,bool,address)[],(uint32,uint32,uint32,uint32,bool,address)[])": {
								"params": {
									"decimals": "the number of decimal places a token is divisible by.",
									"fixedFees": "list of fixed fees to apply to the token",
									"fractionalFees": "list of fractional fees to apply to the token",
									"initialTotalSupply": "Specifies the initial supply of tokens to be put in circulation. The initial supply is sent to the Treasury Account. The supply is in the lowest denomination possible.",
									"token": "the basic properties of the token being created"
								},
								"returns": {
									"responseCode": "The response code for the status of the request. SUCCESS is 22.",
									"tokenAddress": "the created token's address"
								}
							},
							"createNonFungibleToken((string,string,address,string,bool,uint32,bool,(uint256,(bool,address,bytes,bytes,address))[],(uint32,address,uint32)))": {
								"params": {
									"token": "the basic properties of the token being created"
								},
								"returns": {
									"responseCode": "The response code for the status of the request. SUCCESS is 22.",
									"tokenAddress": "the created token's address"
								}
							},
							"createNonFungibleTokenWithCustomFees((string,string,address,string,bool,uint32,bool,(uint256,(bool,address,bytes,bytes,address))[],(uint32,address,uint32)),(uint32,address,bool,bool,address)[],(uint32,uint32,uint32,address,bool,address)[])": {
								"params": {
									"fixedFees": "list of fixed fees to apply to the token",
									"royaltyFees": "list of royalty fees to apply to the token",
									"token": "the basic properties of the token being created"
								},
								"returns": {
									"responseCode": "The response code for the status of the request. SUCCESS is 22.",
									"tokenAddress": "the created token's address"
								}
							},
							"cryptoTransfer((address,(address,int64)[],(address,address,int64)[])[])": {
								"params": {
									"tokenTransfers": "the list of transfers to do"
								},
								"returns": {
									"responseCode": "The response code for the status of the request. SUCCESS is 22."
								}
							},
							"deleteToken(address)": {
								"params": {
									"token": "The token address to be deleted"
								},
								"returns": {
									"responseCode": "The response code for the status of the request. SUCCESS is 22."
								}
							},
							"dissociateToken(address,address)": {
								"params": {
									"account": "The account to be associated with the provided token",
									"token": "The token to be associated with the provided account"
								}
							},
							"dissociateTokens(address,address[])": {
								"params": {
									"account": "The account to be dissociated from the provided tokens",
									"tokens": "The tokens to be dissociated from the provided account."
								},
								"returns": {
									"responseCode": "The response code for the status of the request. SUCCESS is 22."
								}
							},
							"freezeToken(address,address)": {
								"params": {
									"account": "The account address to be frozen",
									"token": "The token address"
								},
								"returns": {
									"responseCode": "The response code for the status of the request. SUCCESS is 22."
								}
							},
							"getApproved(address,int64)": {
								"params": {
									"serialNumber": "The NFT to find the approved address for",
									"token": "The Hedera NFT token address to check approval"
								},
								"returns": {
									"approved": "The approved address for this NFT, or the zero address if there is none",
									"responseCode": "The response code for the status of the request. SUCCESS is 22."
								}
							},
							"getFungibleTokenInfo(address)": {
								"params": {
									"token": "The token address to check"
								},
								"returns": {
									"fungibleTokenInfo": "FungibleTokenInfo info for `token`",
									"responseCode": "The response code for the status of the request. SUCCESS is 22."
								}
							},
							"getNonFungibleTokenInfo(address,int64)": {
								"params": {
									"serialNumber": "The NFT serialNumber to check",
									"token": "The token address to check"
								},
								"returns": {
									"nonFungibleTokenInfo": "NonFungibleTokenInfo info for `token` `serialNumber`",
									"responseCode": "The response code for the status of the request. SUCCESS is 22."
								}
							},
							"getTokenCustomFees(address)": {
								"params": {
									"token": "The token address to check"
								},
								"returns": {
									"fixedFees": "Set of fixed fees for `token`",
									"fractionalFees": "Set of fractional fees for `token`",
									"responseCode": "The response code for the status of the request. SUCCESS is 22.",
									"royaltyFees": "Set of royalty fees for `token`"
								}
							},
							"getTokenDefaultFreezeStatus(address)": {
								"params": {
									"token": "The token address to check"
								},
								"returns": {
									"defaultFreezeStatus": "True if `token` default freeze status is frozen.",
									"responseCode": "The response code for the status of the request. SUCCESS is 22."
								}
							},
							"getTokenDefaultKycStatus(address)": {
								"params": {
									"token": "The token address to check"
								},
								"returns": {
									"defaultKycStatus": "True if `token` default kyc status is KycNotApplicable and false if Revoked.",
									"responseCode": "The response code for the status of the request. SUCCESS is 22."
								}
							},
							"getTokenExpiryInfo(address)": {
								"params": {
									"token": "The token address to check"
								},
								"returns": {
									"expiry": "Expiry info for `token`",
									"responseCode": "The response code for the status of the request. SUCCESS is 22."
								}
							},
							"getTokenInfo(address)": {
								"params": {
									"token": "The token address to check"
								},
								"returns": {
									"responseCode": "The response code for the status of the request. SUCCESS is 22.",
									"tokenInfo": "TokenInfo info for `token`"
								}
							},
							"getTokenKey(address,uint256)": {
								"params": {
									"keyType": "The keyType of the desired KeyValue",
									"token": "The token address to check"
								},
								"returns": {
									"key": "KeyValue info for key of type `keyType`",
									"responseCode": "The response code for the status of the request. SUCCESS is 22."
								}
							},
							"grantTokenKyc(address,address)": {
								"params": {
									"account": "The account address to grant kyc",
									"token": "The token address"
								},
								"returns": {
									"responseCode": "The response code for the status of the request. SUCCESS is 22."
								}
							},
							"isApprovedForAll(address,address,address)": {
								"params": {
									"operator": "The address that acts on behalf of the owner",
									"owner": "The address that owns the NFTs",
									"token": "The Hedera NFT token address to approve"
								},
								"returns": {
									"approved": "True if `operator` is an approved operator for `owner`, false otherwise",
									"responseCode": "The response code for the status of the request. SUCCESS is 22."
								}
							},
							"isFrozen(address,address)": {
								"params": {
									"account": "The account address associated with the token",
									"token": "The token address to check"
								},
								"returns": {
									"frozen": "True if `account` is frozen for `token`",
									"responseCode": "The response code for the status of the request. SUCCESS is 22."
								}
							},
							"isKyc(address,address)": {
								"params": {
									"account": "The account address associated with the token",
									"token": "The token address to check"
								},
								"returns": {
									"kycGranted": "True if `account` has kyc granted for `token`",
									"responseCode": "The response code for the status of the request. SUCCESS is 22."
								}
							},
							"mintToken(address,uint64,bytes[])": {
								"params": {
									"amount": "Applicable to tokens of type FUNGIBLE_COMMON. The amount to mint to the Treasury Account.               Amount must be a positive non-zero number represented in the lowest denomination of the               token. The new supply must be lower than 2^63.",
									"metadata": "Applicable to tokens of type NON_FUNGIBLE_UNIQUE. A list of metadata that are being created.                 Maximum allowed size of each metadata is 100 bytes",
									"token": "The token for which to mint tokens. If token does not exist, transaction results in              INVALID_TOKEN_ID"
								},
								"returns": {
									"newTotalSupply": "The new supply of tokens. For NFTs it is the total count of NFTs",
									"responseCode": "The response code for the status of the request. SUCCESS is 22.",
									"serialNumbers": "If the token is an NFT the newly generate serial numbers, othersise empty."
								}
							},
							"pauseToken(address)": {
								"params": {
									"token": "The token address to be paused"
								},
								"returns": {
									"responseCode": "The response code for the status of the request. SUCCESS is 22."
								}
							},
							"revokeTokenKyc(address,address)": {
								"params": {
									"account": "The account address to revoke kyc",
									"token": "The token address"
								},
								"returns": {
									"responseCode": "The response code for the status of the request. SUCCESS is 22."
								}
							},
							"setApprovalForAll(address,address,bool)": {
								"params": {
									"approved": "True if the operator is approved, false to revoke approval",
									"operator": "Address to add to the set of authorized operators",
									"token": "The Hedera NFT token address to approve"
								},
								"returns": {
									"responseCode": "The response code for the status of the request. SUCCESS is 22."
								}
							},
							"transferNFT(address,address,address,int64)": {
								"params": {
									"recipient": "The receiver of the transaction",
									"sender": "The sender for the transaction",
									"serialNumber": "The serial number of the NFT to transfer.",
									"token": "The token to transfer to/from"
								}
							},
							"transferNFTs(address,address[],address[],int64[])": {
								"params": {
									"receiver": "the receiver of the nft sent by the same index at sender",
									"sender": "the sender of an nft",
									"serialNumber": "the serial number of the nft sent by the same index at sender",
									"token": "The ID of the token as a solidity address"
								}
							},
							"transferToken(address,address,address,int64)": {
								"params": {
									"amount": "Non-negative value to send. a negative value will result in a failure.",
									"recipient": "The receiver of the transaction",
									"sender": "The sender for the transaction",
									"token": "The token to transfer to/from"
								}
							},
							"transferTokens(address,address[],int64[])": {
								"params": {
									"accountId": "account to do a transfer to/from",
									"amount": "The amount from the accountId at the same index",
									"token": "The ID of the token as a solidity address"
								}
							},
							"unfreezeToken(address,address)": {
								"params": {
									"account": "The account address to be unfrozen",
									"token": "The token address"
								},
								"returns": {
									"responseCode": "The response code for the status of the request. SUCCESS is 22."
								}
							},
							"unpauseToken(address)": {
								"params": {
									"token": "The token address to be unpaused"
								},
								"returns": {
									"responseCode": "The response code for the status of the request. SUCCESS is 22."
								}
							},
							"updateTokenExpiryInfo(address,(uint32,address,uint32))": {
								"params": {
									"expiryInfo": "The hedera token expiry info",
									"token": "The token address"
								},
								"returns": {
									"responseCode": "The response code for the status of the request. SUCCESS is 22."
								}
							},
							"updateTokenInfo(address,(string,string,address,string,bool,uint32,bool,(uint256,(bool,address,bytes,bytes,address))[],(uint32,address,uint32)))": {
								"params": {
									"token": "The token address",
									"tokenInfo": "The hedera token info to update token with"
								},
								"returns": {
									"responseCode": "The response code for the status of the request. SUCCESS is 22."
								}
							},
							"updateTokenKeys(address,(uint256,(bool,address,bytes,bytes,address))[])": {
								"params": {
									"keys": "The token keys",
									"token": "The token address"
								},
								"returns": {
									"responseCode": "The response code for the status of the request. SUCCESS is 22."
								}
							},
							"wipeTokenAccount(address,address,uint32)": {
								"params": {
									"account": "The account address to revoke kyc",
									"amount": "The number of tokens to wipe",
									"token": "The token address"
								},
								"returns": {
									"responseCode": "The response code for the status of the request. SUCCESS is 22."
								}
							},
							"wipeTokenAccountNFT(address,address,int64[])": {
								"params": {
									"account": "The account address to revoke kyc",
									"serialNumbers": "The serial numbers of token to wipe",
									"token": "The token address"
								},
								"returns": {
									"responseCode": "The response code for the status of the request. SUCCESS is 22."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address,address)": "927da105",
							"approve(address,address,uint256)": "e1f21c67",
							"approveNFT(address,address,int64)": "10585c46",
							"associateToken(address,address)": "49146bde",
							"associateTokens(address,address[])": "2e63879b",
							"burnToken(address,uint64,int64[])": "acb9cff9",
							"createFungibleToken((string,string,address,string,bool,uint32,bool,(uint256,(bool,address,bytes,bytes,address))[],(uint32,address,uint32)),uint256,uint256)": "7812a04b",
							"createFungibleTokenWithCustomFees((string,string,address,string,bool,uint32,bool,(uint256,(bool,address,bytes,bytes,address))[],(uint32,address,uint32)),uint256,uint256,(uint32,address,bool,bool,address)[],(uint32,uint32,uint32,uint32,bool,address)[])": "4c381ae7",
							"createNonFungibleToken((string,string,address,string,bool,uint32,bool,(uint256,(bool,address,bytes,bytes,address))[],(uint32,address,uint32)))": "9dc711e0",
							"createNonFungibleTokenWithCustomFees((string,string,address,string,bool,uint32,bool,(uint256,(bool,address,bytes,bytes,address))[],(uint32,address,uint32)),(uint32,address,bool,bool,address)[],(uint32,uint32,uint32,address,bool,address)[])": "5bc7c0e6",
							"cryptoTransfer((address,(address,int64)[],(address,address,int64)[])[])": "189a554c",
							"deleteToken(address)": "f069f712",
							"dissociateToken(address,address)": "099794e8",
							"dissociateTokens(address,address[])": "78b63918",
							"freezeToken(address,address)": "5b8f8584",
							"getApproved(address,int64)": "01b2194b",
							"getFungibleTokenInfo(address)": "3f28a19b",
							"getNonFungibleTokenInfo(address,int64)": "287e1da8",
							"getTokenCustomFees(address)": "ae7611a0",
							"getTokenDefaultFreezeStatus(address)": "a7daa18d",
							"getTokenDefaultKycStatus(address)": "335e04c1",
							"getTokenExpiryInfo(address)": "d614cdb8",
							"getTokenInfo(address)": "1f69565f",
							"getTokenKey(address,uint256)": "3c4dd32e",
							"grantTokenKyc(address,address)": "8f8d7f99",
							"isApprovedForAll(address,address,address)": "f49f40db",
							"isFrozen(address,address)": "46de0fb1",
							"isKyc(address,address)": "f2c31ff4",
							"mintToken(address,uint64,bytes[])": "278e0b88",
							"pauseToken(address)": "7c41ad2c",
							"revokeTokenKyc(address,address)": "af99c633",
							"setApprovalForAll(address,address,bool)": "367605ca",
							"transferNFT(address,address,address,int64)": "5cfc9011",
							"transferNFTs(address,address[],address[],int64[])": "2c4ba191",
							"transferToken(address,address,address,int64)": "eca36917",
							"transferTokens(address,address[],int64[])": "82bba493",
							"unfreezeToken(address,address)": "52f91387",
							"unpauseToken(address)": "3b3bff0f",
							"updateTokenExpiryInfo(address,(uint32,address,uint32))": "593d6e82",
							"updateTokenInfo(address,(string,string,address,string,bool,uint32,bool,(uint256,(bool,address,bytes,bytes,address))[],(uint32,address,uint32)))": "2cccc36f",
							"updateTokenKeys(address,(uint256,(bool,address,bytes,bytes,address))[])": "6fc3cbaf",
							"wipeTokenAccount(address,address,uint32)": "9790686d",
							"wipeTokenAccountNFT(address,address,int64[])": "f7f38e26"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"serialNumber\",\"type\":\"int64\"}],\"name\":\"approveNFT\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"associateToken\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"associateTokens\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"amount\",\"type\":\"uint64\"},{\"internalType\":\"int64[]\",\"name\":\"serialNumbers\",\"type\":\"int64[]\"}],\"name\":\"burnToken\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"newTotalSupply\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"treasury\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"memo\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"tokenSupplyType\",\"type\":\"bool\"},{\"internalType\":\"uint32\",\"name\":\"maxSupply\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"freezeDefault\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"inheritAccountKey\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"contractId\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"ed25519\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ECDSA_secp256k1\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"delegatableContractId\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.KeyValue\",\"name\":\"key\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.TokenKey[]\",\"name\":\"tokenKeys\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"second\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"autoRenewAccount\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"autoRenewPeriod\",\"type\":\"uint32\"}],\"internalType\":\"struct IHederaTokenService.Expiry\",\"name\":\"expiry\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.HederaToken\",\"name\":\"token\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"initialTotalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"createFungibleToken\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"treasury\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"memo\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"tokenSupplyType\",\"type\":\"bool\"},{\"internalType\":\"uint32\",\"name\":\"maxSupply\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"freezeDefault\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"inheritAccountKey\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"contractId\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"ed25519\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ECDSA_secp256k1\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"delegatableContractId\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.KeyValue\",\"name\":\"key\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.TokenKey[]\",\"name\":\"tokenKeys\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"second\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"autoRenewAccount\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"autoRenewPeriod\",\"type\":\"uint32\"}],\"internalType\":\"struct IHederaTokenService.Expiry\",\"name\":\"expiry\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.HederaToken\",\"name\":\"token\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"initialTotalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"amount\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"useCurrentTokenForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FixedFee[]\",\"name\":\"fixedFees\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"numerator\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"denominator\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"minimumAmount\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"maximumAmount\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"netOfTransfers\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FractionalFee[]\",\"name\":\"fractionalFees\",\"type\":\"tuple[]\"}],\"name\":\"createFungibleTokenWithCustomFees\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"treasury\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"memo\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"tokenSupplyType\",\"type\":\"bool\"},{\"internalType\":\"uint32\",\"name\":\"maxSupply\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"freezeDefault\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"inheritAccountKey\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"contractId\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"ed25519\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ECDSA_secp256k1\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"delegatableContractId\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.KeyValue\",\"name\":\"key\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.TokenKey[]\",\"name\":\"tokenKeys\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"second\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"autoRenewAccount\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"autoRenewPeriod\",\"type\":\"uint32\"}],\"internalType\":\"struct IHederaTokenService.Expiry\",\"name\":\"expiry\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.HederaToken\",\"name\":\"token\",\"type\":\"tuple\"}],\"name\":\"createNonFungibleToken\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"treasury\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"memo\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"tokenSupplyType\",\"type\":\"bool\"},{\"internalType\":\"uint32\",\"name\":\"maxSupply\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"freezeDefault\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"inheritAccountKey\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"contractId\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"ed25519\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ECDSA_secp256k1\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"delegatableContractId\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.KeyValue\",\"name\":\"key\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.TokenKey[]\",\"name\":\"tokenKeys\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"second\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"autoRenewAccount\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"autoRenewPeriod\",\"type\":\"uint32\"}],\"internalType\":\"struct IHederaTokenService.Expiry\",\"name\":\"expiry\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.HederaToken\",\"name\":\"token\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"amount\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"useCurrentTokenForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FixedFee[]\",\"name\":\"fixedFees\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"numerator\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"denominator\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"amount\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.RoyaltyFee[]\",\"name\":\"royaltyFees\",\"type\":\"tuple[]\"}],\"name\":\"createNonFungibleTokenWithCustomFees\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"accountID\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"}],\"internalType\":\"struct IHederaTokenService.AccountAmount[]\",\"name\":\"transfers\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"senderAccountID\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiverAccountID\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"serialNumber\",\"type\":\"int64\"}],\"internalType\":\"struct IHederaTokenService.NftTransfer[]\",\"name\":\"nftTransfers\",\"type\":\"tuple[]\"}],\"internalType\":\"struct IHederaTokenService.TokenTransferList[]\",\"name\":\"tokenTransfers\",\"type\":\"tuple[]\"}],\"name\":\"cryptoTransfer\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"deleteToken\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"dissociateToken\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"dissociateTokens\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"freezeToken\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"serialNumber\",\"type\":\"int64\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getFungibleTokenInfo\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"components\":[{\"components\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"treasury\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"memo\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"tokenSupplyType\",\"type\":\"bool\"},{\"internalType\":\"uint32\",\"name\":\"maxSupply\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"freezeDefault\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"inheritAccountKey\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"contractId\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"ed25519\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ECDSA_secp256k1\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"delegatableContractId\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.KeyValue\",\"name\":\"key\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.TokenKey[]\",\"name\":\"tokenKeys\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"second\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"autoRenewAccount\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"autoRenewPeriod\",\"type\":\"uint32\"}],\"internalType\":\"struct IHederaTokenService.Expiry\",\"name\":\"expiry\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.HederaToken\",\"name\":\"hedera\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"amount\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"useCurrentTokenForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FixedFee[]\",\"name\":\"fixedFees\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"numerator\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"denominator\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"minimumAmount\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"maximumAmount\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"netOfTransfers\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FractionalFee[]\",\"name\":\"fractionalFees\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"numerator\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"denominator\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"amount\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.RoyaltyFee[]\",\"name\":\"royaltyFees\",\"type\":\"tuple[]\"},{\"internalType\":\"bool\",\"name\":\"defaultKycStatus\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"deleted\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"ledgerId\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"pauseStatus\",\"type\":\"bool\"},{\"internalType\":\"uint64\",\"name\":\"totalSupply\",\"type\":\"uint64\"}],\"internalType\":\"struct IHederaTokenService.TokenInfo\",\"name\":\"tokenInfo\",\"type\":\"tuple\"},{\"internalType\":\"uint32\",\"name\":\"decimals\",\"type\":\"uint32\"}],\"internalType\":\"struct IHederaTokenService.FungibleTokenInfo\",\"name\":\"fungibleTokenInfo\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"serialNumber\",\"type\":\"int64\"}],\"name\":\"getNonFungibleTokenInfo\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"components\":[{\"components\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"treasury\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"memo\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"tokenSupplyType\",\"type\":\"bool\"},{\"internalType\":\"uint32\",\"name\":\"maxSupply\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"freezeDefault\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"inheritAccountKey\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"contractId\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"ed25519\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ECDSA_secp256k1\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"delegatableContractId\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.KeyValue\",\"name\":\"key\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.TokenKey[]\",\"name\":\"tokenKeys\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"second\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"autoRenewAccount\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"autoRenewPeriod\",\"type\":\"uint32\"}],\"internalType\":\"struct IHederaTokenService.Expiry\",\"name\":\"expiry\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.HederaToken\",\"name\":\"hedera\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"amount\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"useCurrentTokenForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FixedFee[]\",\"name\":\"fixedFees\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"numerator\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"denominator\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"minimumAmount\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"maximumAmount\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"netOfTransfers\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FractionalFee[]\",\"name\":\"fractionalFees\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"numerator\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"denominator\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"amount\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.RoyaltyFee[]\",\"name\":\"royaltyFees\",\"type\":\"tuple[]\"},{\"internalType\":\"bool\",\"name\":\"defaultKycStatus\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"deleted\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"ledgerId\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"pauseStatus\",\"type\":\"bool\"},{\"internalType\":\"uint64\",\"name\":\"totalSupply\",\"type\":\"uint64\"}],\"internalType\":\"struct IHederaTokenService.TokenInfo\",\"name\":\"tokenInfo\",\"type\":\"tuple\"},{\"internalType\":\"int64\",\"name\":\"serialNumber\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"ownerId\",\"type\":\"address\"},{\"internalType\":\"int32\",\"name\":\"creationTime\",\"type\":\"int32\"},{\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"spenderId\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.NonFungibleTokenInfo\",\"name\":\"nonFungibleTokenInfo\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getTokenCustomFees\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"amount\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"useCurrentTokenForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FixedFee[]\",\"name\":\"fixedFees\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"numerator\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"denominator\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"minimumAmount\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"maximumAmount\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"netOfTransfers\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FractionalFee[]\",\"name\":\"fractionalFees\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"numerator\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"denominator\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"amount\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.RoyaltyFee[]\",\"name\":\"royaltyFees\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getTokenDefaultFreezeStatus\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"defaultFreezeStatus\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getTokenDefaultKycStatus\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"defaultKycStatus\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getTokenExpiryInfo\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"second\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"autoRenewAccount\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"autoRenewPeriod\",\"type\":\"uint32\"}],\"internalType\":\"struct IHederaTokenService.Expiry\",\"name\":\"expiry\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getTokenInfo\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"components\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"treasury\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"memo\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"tokenSupplyType\",\"type\":\"bool\"},{\"internalType\":\"uint32\",\"name\":\"maxSupply\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"freezeDefault\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"inheritAccountKey\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"contractId\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"ed25519\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ECDSA_secp256k1\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"delegatableContractId\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.KeyValue\",\"name\":\"key\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.TokenKey[]\",\"name\":\"tokenKeys\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"second\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"autoRenewAccount\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"autoRenewPeriod\",\"type\":\"uint32\"}],\"internalType\":\"struct IHederaTokenService.Expiry\",\"name\":\"expiry\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.HederaToken\",\"name\":\"hedera\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"amount\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"useCurrentTokenForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FixedFee[]\",\"name\":\"fixedFees\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"numerator\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"denominator\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"minimumAmount\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"maximumAmount\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"netOfTransfers\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FractionalFee[]\",\"name\":\"fractionalFees\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"numerator\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"denominator\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"amount\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.RoyaltyFee[]\",\"name\":\"royaltyFees\",\"type\":\"tuple[]\"},{\"internalType\":\"bool\",\"name\":\"defaultKycStatus\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"deleted\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"ledgerId\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"pauseStatus\",\"type\":\"bool\"},{\"internalType\":\"uint64\",\"name\":\"totalSupply\",\"type\":\"uint64\"}],\"internalType\":\"struct IHederaTokenService.TokenInfo\",\"name\":\"tokenInfo\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"getTokenKey\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"inheritAccountKey\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"contractId\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"ed25519\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ECDSA_secp256k1\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"delegatableContractId\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.KeyValue\",\"name\":\"key\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantTokenKyc\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isFrozen\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"frozen\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isKyc\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"kycGranted\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"amount\",\"type\":\"uint64\"},{\"internalType\":\"bytes[]\",\"name\":\"metadata\",\"type\":\"bytes[]\"}],\"name\":\"mintToken\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"newTotalSupply\",\"type\":\"uint64\"},{\"internalType\":\"int64[]\",\"name\":\"serialNumbers\",\"type\":\"int64[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"pauseToken\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeTokenKyc\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"serialNumber\",\"type\":\"int64\"}],\"name\":\"transferNFT\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"sender\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"receiver\",\"type\":\"address[]\"},{\"internalType\":\"int64[]\",\"name\":\"serialNumber\",\"type\":\"int64[]\"}],\"name\":\"transferNFTs\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"}],\"name\":\"transferToken\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"accountId\",\"type\":\"address[]\"},{\"internalType\":\"int64[]\",\"name\":\"amount\",\"type\":\"int64[]\"}],\"name\":\"transferTokens\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"unfreezeToken\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"unpauseToken\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"second\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"autoRenewAccount\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"autoRenewPeriod\",\"type\":\"uint32\"}],\"internalType\":\"struct IHederaTokenService.Expiry\",\"name\":\"expiryInfo\",\"type\":\"tuple\"}],\"name\":\"updateTokenExpiryInfo\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"treasury\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"memo\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"tokenSupplyType\",\"type\":\"bool\"},{\"internalType\":\"uint32\",\"name\":\"maxSupply\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"freezeDefault\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"inheritAccountKey\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"contractId\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"ed25519\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ECDSA_secp256k1\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"delegatableContractId\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.KeyValue\",\"name\":\"key\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.TokenKey[]\",\"name\":\"tokenKeys\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"second\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"autoRenewAccount\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"autoRenewPeriod\",\"type\":\"uint32\"}],\"internalType\":\"struct IHederaTokenService.Expiry\",\"name\":\"expiry\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.HederaToken\",\"name\":\"tokenInfo\",\"type\":\"tuple\"}],\"name\":\"updateTokenInfo\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"inheritAccountKey\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"contractId\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"ed25519\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ECDSA_secp256k1\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"delegatableContractId\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.KeyValue\",\"name\":\"key\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.TokenKey[]\",\"name\":\"keys\",\"type\":\"tuple[]\"}],\"name\":\"updateTokenKeys\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"amount\",\"type\":\"uint32\"}],\"name\":\"wipeTokenAccount\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"int64[]\",\"name\":\"serialNumbers\",\"type\":\"int64[]\"}],\"name\":\"wipeTokenAccountNFT\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address,address)\":{\"params\":{\"owner\":\"the owner of the tokens to be spent\",\"spender\":\"the spender of the tokens\",\"token\":\"The Hedera token address to check the allowance of\"},\"returns\":{\"allowance\":\"The amount which spender is still allowed to withdraw from owner.\",\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"approve(address,address,uint256)\":{\"params\":{\"amount\":\"the amount of tokens authorized to spend.\",\"spender\":\"the account address authorized to spend\",\"token\":\"The hedera token address to approve\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"approveNFT(address,address,int64)\":{\"params\":{\"approved\":\"The new approved NFT controller.  To revoke approvals pass in the zero address.\",\"serialNumber\":\"The NFT serial number  to approve\",\"token\":\"The Hedera NFT token address to approve\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"associateToken(address,address)\":{\"params\":{\"account\":\"The account to be associated with the provided token\",\"token\":\"The token to be associated with the provided account\"}},\"associateTokens(address,address[])\":{\"params\":{\"account\":\"The account to be associated with the provided tokens\",\"tokens\":\"The tokens to be associated with the provided account. In the case of NON_FUNGIBLE_UNIQUE               Type, once an account is associated, it can hold any number of NFTs (serial numbers) of that               token type\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"burnToken(address,uint64,int64[])\":{\"params\":{\"amount\":\"Applicable to tokens of type FUNGIBLE_COMMON. The amount to burn from the Treasury Account.                Amount must be a positive non-zero number, not bigger than the token balance of the treasury                account (0; balance], represented in the lowest denomination.\",\"serialNumbers\":\"Applicable to tokens of type NON_FUNGIBLE_UNIQUE. The list of serial numbers to be burned.\",\"token\":\"The token for which to burn tokens. If token does not exist, transaction results in              INVALID_TOKEN_ID\"},\"returns\":{\"newTotalSupply\":\"The new supply of tokens. For NFTs it is the total count of NFTs\",\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"createFungibleToken((string,string,address,string,bool,uint32,bool,(uint256,(bool,address,bytes,bytes,address))[],(uint32,address,uint32)),uint256,uint256)\":{\"params\":{\"decimals\":\"the number of decimal places a token is divisible by\",\"initialTotalSupply\":\"Specifies the initial supply of tokens to be put in circulation. The initial supply is sent to the Treasury Account. The supply is in the lowest denomination possible.\",\"token\":\"the basic properties of the token being created\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\",\"tokenAddress\":\"the created token's address\"}},\"createFungibleTokenWithCustomFees((string,string,address,string,bool,uint32,bool,(uint256,(bool,address,bytes,bytes,address))[],(uint32,address,uint32)),uint256,uint256,(uint32,address,bool,bool,address)[],(uint32,uint32,uint32,uint32,bool,address)[])\":{\"params\":{\"decimals\":\"the number of decimal places a token is divisible by.\",\"fixedFees\":\"list of fixed fees to apply to the token\",\"fractionalFees\":\"list of fractional fees to apply to the token\",\"initialTotalSupply\":\"Specifies the initial supply of tokens to be put in circulation. The initial supply is sent to the Treasury Account. The supply is in the lowest denomination possible.\",\"token\":\"the basic properties of the token being created\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\",\"tokenAddress\":\"the created token's address\"}},\"createNonFungibleToken((string,string,address,string,bool,uint32,bool,(uint256,(bool,address,bytes,bytes,address))[],(uint32,address,uint32)))\":{\"params\":{\"token\":\"the basic properties of the token being created\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\",\"tokenAddress\":\"the created token's address\"}},\"createNonFungibleTokenWithCustomFees((string,string,address,string,bool,uint32,bool,(uint256,(bool,address,bytes,bytes,address))[],(uint32,address,uint32)),(uint32,address,bool,bool,address)[],(uint32,uint32,uint32,address,bool,address)[])\":{\"params\":{\"fixedFees\":\"list of fixed fees to apply to the token\",\"royaltyFees\":\"list of royalty fees to apply to the token\",\"token\":\"the basic properties of the token being created\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\",\"tokenAddress\":\"the created token's address\"}},\"cryptoTransfer((address,(address,int64)[],(address,address,int64)[])[])\":{\"params\":{\"tokenTransfers\":\"the list of transfers to do\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"deleteToken(address)\":{\"params\":{\"token\":\"The token address to be deleted\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"dissociateToken(address,address)\":{\"params\":{\"account\":\"The account to be associated with the provided token\",\"token\":\"The token to be associated with the provided account\"}},\"dissociateTokens(address,address[])\":{\"params\":{\"account\":\"The account to be dissociated from the provided tokens\",\"tokens\":\"The tokens to be dissociated from the provided account.\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"freezeToken(address,address)\":{\"params\":{\"account\":\"The account address to be frozen\",\"token\":\"The token address\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"getApproved(address,int64)\":{\"params\":{\"serialNumber\":\"The NFT to find the approved address for\",\"token\":\"The Hedera NFT token address to check approval\"},\"returns\":{\"approved\":\"The approved address for this NFT, or the zero address if there is none\",\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"getFungibleTokenInfo(address)\":{\"params\":{\"token\":\"The token address to check\"},\"returns\":{\"fungibleTokenInfo\":\"FungibleTokenInfo info for `token`\",\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"getNonFungibleTokenInfo(address,int64)\":{\"params\":{\"serialNumber\":\"The NFT serialNumber to check\",\"token\":\"The token address to check\"},\"returns\":{\"nonFungibleTokenInfo\":\"NonFungibleTokenInfo info for `token` `serialNumber`\",\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"getTokenCustomFees(address)\":{\"params\":{\"token\":\"The token address to check\"},\"returns\":{\"fixedFees\":\"Set of fixed fees for `token`\",\"fractionalFees\":\"Set of fractional fees for `token`\",\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\",\"royaltyFees\":\"Set of royalty fees for `token`\"}},\"getTokenDefaultFreezeStatus(address)\":{\"params\":{\"token\":\"The token address to check\"},\"returns\":{\"defaultFreezeStatus\":\"True if `token` default freeze status is frozen.\",\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"getTokenDefaultKycStatus(address)\":{\"params\":{\"token\":\"The token address to check\"},\"returns\":{\"defaultKycStatus\":\"True if `token` default kyc status is KycNotApplicable and false if Revoked.\",\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"getTokenExpiryInfo(address)\":{\"params\":{\"token\":\"The token address to check\"},\"returns\":{\"expiry\":\"Expiry info for `token`\",\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"getTokenInfo(address)\":{\"params\":{\"token\":\"The token address to check\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\",\"tokenInfo\":\"TokenInfo info for `token`\"}},\"getTokenKey(address,uint256)\":{\"params\":{\"keyType\":\"The keyType of the desired KeyValue\",\"token\":\"The token address to check\"},\"returns\":{\"key\":\"KeyValue info for key of type `keyType`\",\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"grantTokenKyc(address,address)\":{\"params\":{\"account\":\"The account address to grant kyc\",\"token\":\"The token address\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"isApprovedForAll(address,address,address)\":{\"params\":{\"operator\":\"The address that acts on behalf of the owner\",\"owner\":\"The address that owns the NFTs\",\"token\":\"The Hedera NFT token address to approve\"},\"returns\":{\"approved\":\"True if `operator` is an approved operator for `owner`, false otherwise\",\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"isFrozen(address,address)\":{\"params\":{\"account\":\"The account address associated with the token\",\"token\":\"The token address to check\"},\"returns\":{\"frozen\":\"True if `account` is frozen for `token`\",\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"isKyc(address,address)\":{\"params\":{\"account\":\"The account address associated with the token\",\"token\":\"The token address to check\"},\"returns\":{\"kycGranted\":\"True if `account` has kyc granted for `token`\",\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"mintToken(address,uint64,bytes[])\":{\"params\":{\"amount\":\"Applicable to tokens of type FUNGIBLE_COMMON. The amount to mint to the Treasury Account.               Amount must be a positive non-zero number represented in the lowest denomination of the               token. The new supply must be lower than 2^63.\",\"metadata\":\"Applicable to tokens of type NON_FUNGIBLE_UNIQUE. A list of metadata that are being created.                 Maximum allowed size of each metadata is 100 bytes\",\"token\":\"The token for which to mint tokens. If token does not exist, transaction results in              INVALID_TOKEN_ID\"},\"returns\":{\"newTotalSupply\":\"The new supply of tokens. For NFTs it is the total count of NFTs\",\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\",\"serialNumbers\":\"If the token is an NFT the newly generate serial numbers, othersise empty.\"}},\"pauseToken(address)\":{\"params\":{\"token\":\"The token address to be paused\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"revokeTokenKyc(address,address)\":{\"params\":{\"account\":\"The account address to revoke kyc\",\"token\":\"The token address\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"setApprovalForAll(address,address,bool)\":{\"params\":{\"approved\":\"True if the operator is approved, false to revoke approval\",\"operator\":\"Address to add to the set of authorized operators\",\"token\":\"The Hedera NFT token address to approve\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"transferNFT(address,address,address,int64)\":{\"params\":{\"recipient\":\"The receiver of the transaction\",\"sender\":\"The sender for the transaction\",\"serialNumber\":\"The serial number of the NFT to transfer.\",\"token\":\"The token to transfer to/from\"}},\"transferNFTs(address,address[],address[],int64[])\":{\"params\":{\"receiver\":\"the receiver of the nft sent by the same index at sender\",\"sender\":\"the sender of an nft\",\"serialNumber\":\"the serial number of the nft sent by the same index at sender\",\"token\":\"The ID of the token as a solidity address\"}},\"transferToken(address,address,address,int64)\":{\"params\":{\"amount\":\"Non-negative value to send. a negative value will result in a failure.\",\"recipient\":\"The receiver of the transaction\",\"sender\":\"The sender for the transaction\",\"token\":\"The token to transfer to/from\"}},\"transferTokens(address,address[],int64[])\":{\"params\":{\"accountId\":\"account to do a transfer to/from\",\"amount\":\"The amount from the accountId at the same index\",\"token\":\"The ID of the token as a solidity address\"}},\"unfreezeToken(address,address)\":{\"params\":{\"account\":\"The account address to be unfrozen\",\"token\":\"The token address\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"unpauseToken(address)\":{\"params\":{\"token\":\"The token address to be unpaused\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"updateTokenExpiryInfo(address,(uint32,address,uint32))\":{\"params\":{\"expiryInfo\":\"The hedera token expiry info\",\"token\":\"The token address\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"updateTokenInfo(address,(string,string,address,string,bool,uint32,bool,(uint256,(bool,address,bytes,bytes,address))[],(uint32,address,uint32)))\":{\"params\":{\"token\":\"The token address\",\"tokenInfo\":\"The hedera token info to update token with\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"updateTokenKeys(address,(uint256,(bool,address,bytes,bytes,address))[])\":{\"params\":{\"keys\":\"The token keys\",\"token\":\"The token address\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"wipeTokenAccount(address,address,uint32)\":{\"params\":{\"account\":\"The account address to revoke kyc\",\"amount\":\"The number of tokens to wipe\",\"token\":\"The token address\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"wipeTokenAccountNFT(address,address,int64[])\":{\"params\":{\"account\":\"The account address to revoke kyc\",\"serialNumbers\":\"The serial numbers of token to wipe\",\"token\":\"The token address\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"allowance(address,address,address)\":{\"notice\":\"Returns the amount which spender is still allowed to withdraw from owner. Only Applicable to Fungible Tokens\"},\"approve(address,address,uint256)\":{\"notice\":\"Allows spender to withdraw from your account multiple times, up to the value amount. If this function is called again it overwrites the current allowance with value. Only Applicable to Fungible Tokens\"},\"approveNFT(address,address,int64)\":{\"notice\":\"Allow or reaffirm the approved address to transfer an NFT the approved address does not own. Only Applicable to NFT Tokens\"},\"associateToken(address,address)\":{\"notice\":\"Single-token variant of associateTokens. Will be mapped to a single entry array call of associateTokens\"},\"associateTokens(address,address[])\":{\"notice\":\"Associates the provided account with the provided tokens. Must be signed by the provided  Account's key or called from the accounts contract key  If the provided account is not found, the transaction will resolve to INVALID_ACCOUNT_ID.  If the provided account has been deleted, the transaction will resolve to ACCOUNT_DELETED.  If any of the provided tokens is not found, the transaction will resolve to INVALID_TOKEN_REF.  If any of the provided tokens has been deleted, the transaction will resolve to TOKEN_WAS_DELETED.  If an association between the provided account and any of the tokens already exists, the  transaction will resolve to TOKEN_ALREADY_ASSOCIATED_TO_ACCOUNT.  If the provided account's associations count exceed the constraint of maximum token associations    per account, the transaction will resolve to TOKENS_PER_ACCOUNT_LIMIT_EXCEEDED.  On success, associations between the provided account and tokens are made and the account is    ready to interact with the tokens.\"},\"burnToken(address,uint64,int64[])\":{\"notice\":\"Burns an amount of the token from the defined treasury account\"},\"createFungibleToken((string,string,address,string,bool,uint32,bool,(uint256,(bool,address,bytes,bytes,address))[],(uint32,address,uint32)),uint256,uint256)\":{\"notice\":\"Creates a Fungible Token with the specified properties\"},\"createFungibleTokenWithCustomFees((string,string,address,string,bool,uint32,bool,(uint256,(bool,address,bytes,bytes,address))[],(uint32,address,uint32)),uint256,uint256,(uint32,address,bool,bool,address)[],(uint32,uint32,uint32,uint32,bool,address)[])\":{\"notice\":\"Creates a Fungible Token with the specified properties\"},\"createNonFungibleToken((string,string,address,string,bool,uint32,bool,(uint256,(bool,address,bytes,bytes,address))[],(uint32,address,uint32)))\":{\"notice\":\"Creates an Non Fungible Unique Token with the specified properties\"},\"createNonFungibleTokenWithCustomFees((string,string,address,string,bool,uint32,bool,(uint256,(bool,address,bytes,bytes,address))[],(uint32,address,uint32)),(uint32,address,bool,bool,address)[],(uint32,uint32,uint32,address,bool,address)[])\":{\"notice\":\"Creates an Non Fungible Unique Token with the specified properties\"},\"cryptoTransfer((address,(address,int64)[],(address,address,int64)[])[])\":{\"notice\":\"Initiates a Token Transfer\"},\"deleteToken(address)\":{\"notice\":\"Operation to delete token\"},\"dissociateToken(address,address)\":{\"notice\":\"Single-token variant of dissociateTokens. Will be mapped to a single entry array call of dissociateTokens\"},\"dissociateTokens(address,address[])\":{\"notice\":\"Dissociates the provided account with the provided tokens. Must be signed by the provided Account's key. If the provided account is not found, the transaction will resolve to INVALID_ACCOUNT_ID. If the provided account has been deleted, the transaction will resolve to ACCOUNT_DELETED. If any of the provided tokens is not found, the transaction will resolve to INVALID_TOKEN_REF. If any of the provided tokens has been deleted, the transaction will resolve to TOKEN_WAS_DELETED. If an association between the provided account and any of the tokens does not exist, the transaction will resolve to TOKEN_NOT_ASSOCIATED_TO_ACCOUNT. If a token has not been deleted and has not expired, and the user has a nonzero balance, the transaction will resolve to TRANSACTION_REQUIRES_ZERO_TOKEN_BALANCES. If a <b>fungible token</b> has expired, the user can disassociate even if their token balance is not zero. If a <b>non fungible token</b> has expired, the user can <b>not</b> disassociate if their token balance is not zero. The transaction will resolve to TRANSACTION_REQUIRED_ZERO_TOKEN_BALANCES. On success, associations between the provided account and tokens are removed.\"},\"freezeToken(address,address)\":{\"notice\":\"Operation to freeze token account\"},\"getApproved(address,int64)\":{\"notice\":\"Get the approved address for a single NFT Only Applicable to NFT Tokens\"},\"getFungibleTokenInfo(address)\":{\"notice\":\"Query fungible token info\"},\"getNonFungibleTokenInfo(address,int64)\":{\"notice\":\"Query non fungible token info\"},\"getTokenCustomFees(address)\":{\"notice\":\"Query token custom fees\"},\"getTokenDefaultFreezeStatus(address)\":{\"notice\":\"Query token default freeze status\"},\"getTokenDefaultKycStatus(address)\":{\"notice\":\"Query token default kyc status\"},\"getTokenExpiryInfo(address)\":{\"notice\":\"Query token expiry info\"},\"getTokenInfo(address)\":{\"notice\":\"Query token info\"},\"getTokenKey(address,uint256)\":{\"notice\":\"Query token KeyValue\"},\"grantTokenKyc(address,address)\":{\"notice\":\"Operation to grant kyc to token account\"},\"isApprovedForAll(address,address,address)\":{\"notice\":\"Query if an address is an authorized operator for another address Only Applicable to NFT Tokens\"},\"isFrozen(address,address)\":{\"notice\":\"Query if token account is frozen\"},\"isKyc(address,address)\":{\"notice\":\"Query if token account has kyc granted\"},\"mintToken(address,uint64,bytes[])\":{\"notice\":\"Mints an amount of the token to the defined treasury account\"},\"pauseToken(address)\":{\"notice\":\"Operation to pause token\"},\"revokeTokenKyc(address,address)\":{\"notice\":\"Operation to revoke kyc to token account\"},\"setApprovalForAll(address,address,bool)\":{\"notice\":\"Enable or disable approval for a third party (\\\"operator\\\") to manage  all of `msg.sender`'s assets\"},\"transferNFT(address,address,address,int64)\":{\"notice\":\"Transfers tokens where the calling account/contract is implicitly the first entry in the token transfer list, where the amount is the value needed to zero balance the transfers. Regular signing rules apply for sending (positive amount) or receiving (negative amount)\"},\"transferNFTs(address,address[],address[],int64[])\":{\"notice\":\"Initiates a Non-Fungable Token Transfer\"},\"transferToken(address,address,address,int64)\":{\"notice\":\"Transfers tokens where the calling account/contract is implicitly the first entry in the token transfer list, where the amount is the value needed to zero balance the transfers. Regular signing rules apply for sending (positive amount) or receiving (negative amount)\"},\"transferTokens(address,address[],int64[])\":{\"notice\":\"Initiates a Fungible Token Transfer\"},\"unfreezeToken(address,address)\":{\"notice\":\"Operation to unfreeze token account\"},\"unpauseToken(address)\":{\"notice\":\"Operation to unpause token\"},\"updateTokenExpiryInfo(address,(uint32,address,uint32))\":{\"notice\":\"Operation to update token expiry info\"},\"updateTokenInfo(address,(string,string,address,string,bool,uint32,bool,(uint256,(bool,address,bytes,bytes,address))[],(uint32,address,uint32)))\":{\"notice\":\"Operation to update token info\"},\"updateTokenKeys(address,(uint256,(bool,address,bytes,bytes,address))[])\":{\"notice\":\"Operation to update token expiry info\"},\"wipeTokenAccount(address,address,uint32)\":{\"notice\":\"Operation to wipe fungible tokens from account\"},\"wipeTokenAccountNFT(address,address,int64[])\":{\"notice\":\"Operation to wipe non fungible tokens from account\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"hbar/SmartContracts/Auction2/hts-precompile/IHederaTokenService.sol\":\"IHederaTokenService\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"hbar/SmartContracts/Auction2/hts-precompile/IHederaTokenService.sol\":{\"keccak256\":\"0x1df4449743626e64ff38122822b5fa56466e14bf3944f7b679eae145c05f0112\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0d63c9a9ef88b6082fd0ce110d23a057e8f9f3360a5d4b7195b7d859788f0833\",\"dweb:/ipfs/QmNUKRfuFiCxMW9qyqh8ytWMEHMQxH3Lr3v5vAjTrt2Mj2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"allowance(address,address,address)": {
								"notice": "Returns the amount which spender is still allowed to withdraw from owner. Only Applicable to Fungible Tokens"
							},
							"approve(address,address,uint256)": {
								"notice": "Allows spender to withdraw from your account multiple times, up to the value amount. If this function is called again it overwrites the current allowance with value. Only Applicable to Fungible Tokens"
							},
							"approveNFT(address,address,int64)": {
								"notice": "Allow or reaffirm the approved address to transfer an NFT the approved address does not own. Only Applicable to NFT Tokens"
							},
							"associateToken(address,address)": {
								"notice": "Single-token variant of associateTokens. Will be mapped to a single entry array call of associateTokens"
							},
							"associateTokens(address,address[])": {
								"notice": "Associates the provided account with the provided tokens. Must be signed by the provided  Account's key or called from the accounts contract key  If the provided account is not found, the transaction will resolve to INVALID_ACCOUNT_ID.  If the provided account has been deleted, the transaction will resolve to ACCOUNT_DELETED.  If any of the provided tokens is not found, the transaction will resolve to INVALID_TOKEN_REF.  If any of the provided tokens has been deleted, the transaction will resolve to TOKEN_WAS_DELETED.  If an association between the provided account and any of the tokens already exists, the  transaction will resolve to TOKEN_ALREADY_ASSOCIATED_TO_ACCOUNT.  If the provided account's associations count exceed the constraint of maximum token associations    per account, the transaction will resolve to TOKENS_PER_ACCOUNT_LIMIT_EXCEEDED.  On success, associations between the provided account and tokens are made and the account is    ready to interact with the tokens."
							},
							"burnToken(address,uint64,int64[])": {
								"notice": "Burns an amount of the token from the defined treasury account"
							},
							"createFungibleToken((string,string,address,string,bool,uint32,bool,(uint256,(bool,address,bytes,bytes,address))[],(uint32,address,uint32)),uint256,uint256)": {
								"notice": "Creates a Fungible Token with the specified properties"
							},
							"createFungibleTokenWithCustomFees((string,string,address,string,bool,uint32,bool,(uint256,(bool,address,bytes,bytes,address))[],(uint32,address,uint32)),uint256,uint256,(uint32,address,bool,bool,address)[],(uint32,uint32,uint32,uint32,bool,address)[])": {
								"notice": "Creates a Fungible Token with the specified properties"
							},
							"createNonFungibleToken((string,string,address,string,bool,uint32,bool,(uint256,(bool,address,bytes,bytes,address))[],(uint32,address,uint32)))": {
								"notice": "Creates an Non Fungible Unique Token with the specified properties"
							},
							"createNonFungibleTokenWithCustomFees((string,string,address,string,bool,uint32,bool,(uint256,(bool,address,bytes,bytes,address))[],(uint32,address,uint32)),(uint32,address,bool,bool,address)[],(uint32,uint32,uint32,address,bool,address)[])": {
								"notice": "Creates an Non Fungible Unique Token with the specified properties"
							},
							"cryptoTransfer((address,(address,int64)[],(address,address,int64)[])[])": {
								"notice": "Initiates a Token Transfer"
							},
							"deleteToken(address)": {
								"notice": "Operation to delete token"
							},
							"dissociateToken(address,address)": {
								"notice": "Single-token variant of dissociateTokens. Will be mapped to a single entry array call of dissociateTokens"
							},
							"dissociateTokens(address,address[])": {
								"notice": "Dissociates the provided account with the provided tokens. Must be signed by the provided Account's key. If the provided account is not found, the transaction will resolve to INVALID_ACCOUNT_ID. If the provided account has been deleted, the transaction will resolve to ACCOUNT_DELETED. If any of the provided tokens is not found, the transaction will resolve to INVALID_TOKEN_REF. If any of the provided tokens has been deleted, the transaction will resolve to TOKEN_WAS_DELETED. If an association between the provided account and any of the tokens does not exist, the transaction will resolve to TOKEN_NOT_ASSOCIATED_TO_ACCOUNT. If a token has not been deleted and has not expired, and the user has a nonzero balance, the transaction will resolve to TRANSACTION_REQUIRES_ZERO_TOKEN_BALANCES. If a <b>fungible token</b> has expired, the user can disassociate even if their token balance is not zero. If a <b>non fungible token</b> has expired, the user can <b>not</b> disassociate if their token balance is not zero. The transaction will resolve to TRANSACTION_REQUIRED_ZERO_TOKEN_BALANCES. On success, associations between the provided account and tokens are removed."
							},
							"freezeToken(address,address)": {
								"notice": "Operation to freeze token account"
							},
							"getApproved(address,int64)": {
								"notice": "Get the approved address for a single NFT Only Applicable to NFT Tokens"
							},
							"getFungibleTokenInfo(address)": {
								"notice": "Query fungible token info"
							},
							"getNonFungibleTokenInfo(address,int64)": {
								"notice": "Query non fungible token info"
							},
							"getTokenCustomFees(address)": {
								"notice": "Query token custom fees"
							},
							"getTokenDefaultFreezeStatus(address)": {
								"notice": "Query token default freeze status"
							},
							"getTokenDefaultKycStatus(address)": {
								"notice": "Query token default kyc status"
							},
							"getTokenExpiryInfo(address)": {
								"notice": "Query token expiry info"
							},
							"getTokenInfo(address)": {
								"notice": "Query token info"
							},
							"getTokenKey(address,uint256)": {
								"notice": "Query token KeyValue"
							},
							"grantTokenKyc(address,address)": {
								"notice": "Operation to grant kyc to token account"
							},
							"isApprovedForAll(address,address,address)": {
								"notice": "Query if an address is an authorized operator for another address Only Applicable to NFT Tokens"
							},
							"isFrozen(address,address)": {
								"notice": "Query if token account is frozen"
							},
							"isKyc(address,address)": {
								"notice": "Query if token account has kyc granted"
							},
							"mintToken(address,uint64,bytes[])": {
								"notice": "Mints an amount of the token to the defined treasury account"
							},
							"pauseToken(address)": {
								"notice": "Operation to pause token"
							},
							"revokeTokenKyc(address,address)": {
								"notice": "Operation to revoke kyc to token account"
							},
							"setApprovalForAll(address,address,bool)": {
								"notice": "Enable or disable approval for a third party (\"operator\") to manage  all of `msg.sender`'s assets"
							},
							"transferNFT(address,address,address,int64)": {
								"notice": "Transfers tokens where the calling account/contract is implicitly the first entry in the token transfer list, where the amount is the value needed to zero balance the transfers. Regular signing rules apply for sending (positive amount) or receiving (negative amount)"
							},
							"transferNFTs(address,address[],address[],int64[])": {
								"notice": "Initiates a Non-Fungable Token Transfer"
							},
							"transferToken(address,address,address,int64)": {
								"notice": "Transfers tokens where the calling account/contract is implicitly the first entry in the token transfer list, where the amount is the value needed to zero balance the transfers. Regular signing rules apply for sending (positive amount) or receiving (negative amount)"
							},
							"transferTokens(address,address[],int64[])": {
								"notice": "Initiates a Fungible Token Transfer"
							},
							"unfreezeToken(address,address)": {
								"notice": "Operation to unfreeze token account"
							},
							"unpauseToken(address)": {
								"notice": "Operation to unpause token"
							},
							"updateTokenExpiryInfo(address,(uint32,address,uint32))": {
								"notice": "Operation to update token expiry info"
							},
							"updateTokenInfo(address,(string,string,address,string,bool,uint32,bool,(uint256,(bool,address,bytes,bytes,address))[],(uint32,address,uint32)))": {
								"notice": "Operation to update token info"
							},
							"updateTokenKeys(address,(uint256,(bool,address,bytes,bytes,address))[])": {
								"notice": "Operation to update token expiry info"
							},
							"wipeTokenAccount(address,address,uint32)": {
								"notice": "Operation to wipe fungible tokens from account"
							},
							"wipeTokenAccountNFT(address,address,int64[])": {
								"notice": "Operation to wipe non fungible tokens from account"
							}
						},
						"version": 1
					}
				}
			},
			"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol": {
				"Bits": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":5529:5813  library Bits {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":5529:5813  library Bits {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212207b20df9c2a43bd45b72fd4e03bb9ffc11a1589da8c7bf5163139af4b85b4786064736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207b20df9c2a43bd45b72fd4e03bb9ffc11a1589da8c7bf5163139af4b85b4786064736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH28 0x20DF9C2A43BD45B72FD4E03BB9FFC11A1589DA8C7BF5163139AF4B85 0xB4 PUSH25 0x6064736F6C6343000811003300000000000000000000000000 ",
							"sourceMap": "5529:284:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207b20df9c2a43bd45b72fd4e03bb9ffc11a1589da8c7bf5163139af4b85b4786064736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH28 0x20DF9C2A43BD45B72FD4E03BB9FFC11A1589DA8C7BF5163139AF4B85 0xB4 PUSH25 0x6064736F6C6343000811003300000000000000000000000000 ",
							"sourceMap": "5529:284:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"setBit(uint256,uint8)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 5529,
									"end": 5813,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5529,
									"end": 5813,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5529,
									"end": 5813,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 5529,
									"end": 5813,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 5529,
									"end": 5813,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 5529,
									"end": 5813,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 5529,
									"end": 5813,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 5529,
									"end": 5813,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 5529,
									"end": 5813,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 5529,
									"end": 5813,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 5529,
									"end": 5813,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 5529,
									"end": 5813,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 5529,
									"end": 5813,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 5529,
									"end": 5813,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 5529,
									"end": 5813,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 5529,
									"end": 5813,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5529,
									"end": 5813,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 5529,
									"end": 5813,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 5529,
									"end": 5813,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 5529,
									"end": 5813,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 5529,
									"end": 5813,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 5529,
									"end": 5813,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 5529,
									"end": 5813,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 5529,
									"end": 5813,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 5529,
									"end": 5813,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 5529,
									"end": 5813,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 5529,
									"end": 5813,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 5529,
									"end": 5813,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 5529,
									"end": 5813,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 5529,
									"end": 5813,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 5529,
									"end": 5813,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 5529,
									"end": 5813,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 5529,
									"end": 5813,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 5529,
									"end": 5813,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 5529,
									"end": 5813,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207b20df9c2a43bd45b72fd4e03bb9ffc11a1589da8c7bf5163139af4b85b4786064736f6c63430008110033",
									".code": [
										{
											"begin": 5529,
											"end": 5813,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 5529,
											"end": 5813,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 5529,
											"end": 5813,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 5529,
											"end": 5813,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 5529,
											"end": 5813,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5529,
											"end": 5813,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5529,
											"end": 5813,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5529,
											"end": 5813,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5529,
											"end": 5813,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"hbar/SmartContracts/Auction2/hts-precompile/ExpiryHelper.sol",
								"hbar/SmartContracts/Auction2/hts-precompile/FeeHelper.sol",
								"hbar/SmartContracts/Auction2/hts-precompile/HederaResponseCodes.sol",
								"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol",
								"hbar/SmartContracts/Auction2/hts-precompile/IHederaTokenService.sol",
								"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol",
								"hbar/SmartContracts/Tests/MintAndTransfer3.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":\"Bits\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"hbar/SmartContracts/Auction2/hts-precompile/HederaResponseCodes.sol\":{\"keccak256\":\"0x9af70d38d34a234475b792a23c59f8cae63bf9d3407d0fb0a3112a40ce25627b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://90d2abceb9a6f0244395d92abcad6669f5a4696fb876079271fbc4c32b7752f7\",\"dweb:/ipfs/QmaKsVGmmcEwj6rcBmvbdKL213Seq8HwZTXf1DYnoaSELZ\"]},\"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":{\"keccak256\":\"0x01265799f3f9010d1a5597f4a15a684ff8793bb426493951741b92d5bcb40cac\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3734ef870596280f3177545c02c74f4d25fec55388a0785fa73dbdb1af064b52\",\"dweb:/ipfs/QmW2WzmvTqumStJVs9absA8SC6mHpFN1FbC4rw5BxtVpRj\"]},\"hbar/SmartContracts/Auction2/hts-precompile/IHederaTokenService.sol\":{\"keccak256\":\"0x1df4449743626e64ff38122822b5fa56466e14bf3944f7b679eae145c05f0112\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0d63c9a9ef88b6082fd0ce110d23a057e8f9f3360a5d4b7195b7d859788f0833\",\"dweb:/ipfs/QmNUKRfuFiCxMW9qyqh8ytWMEHMQxH3Lr3v5vAjTrt2Mj2\"]},\"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":{\"keccak256\":\"0x1c445127746a07dc4bdb8ea93cd151fbec3b686c9d7ee5845c875475eb89d8c3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e0253869a15bd8d06a2a45b8cefdcefc64e4aee675c5ac5d5465ca2bb67d64df\",\"dweb:/ipfs/QmabBXMqR3avxQ6nHeqFXmVhGpfNH5bZXP9zaBRDZ7WYtN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"KeyHelper": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":\"KeyHelper\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"hbar/SmartContracts/Auction2/hts-precompile/HederaResponseCodes.sol\":{\"keccak256\":\"0x9af70d38d34a234475b792a23c59f8cae63bf9d3407d0fb0a3112a40ce25627b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://90d2abceb9a6f0244395d92abcad6669f5a4696fb876079271fbc4c32b7752f7\",\"dweb:/ipfs/QmaKsVGmmcEwj6rcBmvbdKL213Seq8HwZTXf1DYnoaSELZ\"]},\"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":{\"keccak256\":\"0x01265799f3f9010d1a5597f4a15a684ff8793bb426493951741b92d5bcb40cac\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3734ef870596280f3177545c02c74f4d25fec55388a0785fa73dbdb1af064b52\",\"dweb:/ipfs/QmW2WzmvTqumStJVs9absA8SC6mHpFN1FbC4rw5BxtVpRj\"]},\"hbar/SmartContracts/Auction2/hts-precompile/IHederaTokenService.sol\":{\"keccak256\":\"0x1df4449743626e64ff38122822b5fa56466e14bf3944f7b679eae145c05f0112\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0d63c9a9ef88b6082fd0ce110d23a057e8f9f3360a5d4b7195b7d859788f0833\",\"dweb:/ipfs/QmNUKRfuFiCxMW9qyqh8ytWMEHMQxH3Lr3v5vAjTrt2Mj2\"]},\"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":{\"keccak256\":\"0x1c445127746a07dc4bdb8ea93cd151fbec3b686c9d7ee5845c875475eb89d8c3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e0253869a15bd8d06a2a45b8cefdcefc64e4aee675c5ac5d5465ca2bb67d64df\",\"dweb:/ipfs/QmabBXMqR3avxQ6nHeqFXmVhGpfNH5bZXP9zaBRDZ7WYtN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2718,
								"contract": "hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol:KeyHelper",
								"label": "supplyContract",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 2723,
								"contract": "hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol:KeyHelper",
								"label": "keyTypes",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_enum(KeyType)2731,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_enum(KeyType)2731": {
								"encoding": "inplace",
								"label": "enum KeyHelper.KeyType",
								"numberOfBytes": "1"
							},
							"t_mapping(t_enum(KeyType)2731,t_uint256)": {
								"encoding": "mapping",
								"key": "t_enum(KeyType)2731",
								"label": "mapping(enum KeyHelper.KeyType => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"hbar/SmartContracts/Tests/MintAndTransfer3.sol": {
				"NFTCreator": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "memo",
									"type": "string"
								},
								{
									"internalType": "uint32",
									"name": "maxSupply",
									"type": "uint32"
								},
								{
									"internalType": "uint32",
									"name": "autoRenewPeriod",
									"type": "uint32"
								}
							],
							"name": "createNft",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "bytes[]",
									"name": "metadata",
									"type": "bytes[]"
								}
							],
							"name": "mintNft",
							"outputs": [
								{
									"internalType": "int64",
									"name": "",
									"type": "int64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "int64",
									"name": "serial",
									"type": "int64"
								}
							],
							"name": "transferNft",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":358:2641  contract NFTCreator is ExpiryHelper, HederaTokenService {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":601:602  1 */\n  0x01\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":575:583  keyTypes */\n  dup1\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":575:598  keyTypes[KeyType.ADMIN] */\n  0x00\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":584:597  KeyType.ADMIN */\n  dup1\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":575:598  keyTypes[KeyType.ADMIN] */\n  0x06\n  dup2\n  gt\n  iszero\n  tag_4\n  jumpi\n  tag_5\n  tag_6\n  jump\t// in\ntag_5:\ntag_4:\n  0x06\n  dup2\n  gt\n  iszero\n  tag_7\n  jumpi\n  tag_8\n  tag_6\n  jump\t// in\ntag_8:\ntag_7:\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":575:602  keyTypes[KeyType.ADMIN] = 1 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":636:637  2 */\n  0x02\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":612:620  keyTypes */\n  0x01\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":612:633  keyTypes[KeyType.KYC] */\n  0x00\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":621:632  KeyType.KYC */\n  0x01\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":612:633  keyTypes[KeyType.KYC] */\n  0x06\n  dup2\n  gt\n  iszero\n  tag_9\n  jumpi\n  tag_10\n  tag_6\n  jump\t// in\ntag_10:\ntag_9:\n  0x06\n  dup2\n  gt\n  iszero\n  tag_11\n  jumpi\n  tag_12\n  tag_6\n  jump\t// in\ntag_12:\ntag_11:\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":612:637  keyTypes[KeyType.KYC] = 2 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":674:675  4 */\n  0x04\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":647:655  keyTypes */\n  0x01\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":647:671  keyTypes[KeyType.FREEZE] */\n  0x00\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":656:670  KeyType.FREEZE */\n  0x02\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":647:671  keyTypes[KeyType.FREEZE] */\n  0x06\n  dup2\n  gt\n  iszero\n  tag_13\n  jumpi\n  tag_14\n  tag_6\n  jump\t// in\ntag_14:\ntag_13:\n  0x06\n  dup2\n  gt\n  iszero\n  tag_15\n  jumpi\n  tag_16\n  tag_6\n  jump\t// in\ntag_16:\ntag_15:\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":647:675  keyTypes[KeyType.FREEZE] = 4 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":710:711  8 */\n  0x08\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":685:693  keyTypes */\n  0x01\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":685:707  keyTypes[KeyType.WIPE] */\n  0x00\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":694:706  KeyType.WIPE */\n  0x03\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":685:707  keyTypes[KeyType.WIPE] */\n  0x06\n  dup2\n  gt\n  iszero\n  tag_17\n  jumpi\n  tag_18\n  tag_6\n  jump\t// in\ntag_18:\ntag_17:\n  0x06\n  dup2\n  gt\n  iszero\n  tag_19\n  jumpi\n  tag_20\n  tag_6\n  jump\t// in\ntag_20:\ntag_19:\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":685:711  keyTypes[KeyType.WIPE] = 8 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":748:750  16 */\n  0x10\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":721:729  keyTypes */\n  0x01\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":721:745  keyTypes[KeyType.SUPPLY] */\n  0x00\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":730:744  KeyType.SUPPLY */\n  0x04\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":721:745  keyTypes[KeyType.SUPPLY] */\n  0x06\n  dup2\n  gt\n  iszero\n  tag_21\n  jumpi\n  tag_22\n  tag_6\n  jump\t// in\ntag_22:\ntag_21:\n  0x06\n  dup2\n  gt\n  iszero\n  tag_23\n  jumpi\n  tag_24\n  tag_6\n  jump\t// in\ntag_24:\ntag_23:\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":721:750  keyTypes[KeyType.SUPPLY] = 16 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":784:786  32 */\n  0x20\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":760:768  keyTypes */\n  0x01\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":760:781  keyTypes[KeyType.FEE] */\n  0x00\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":769:780  KeyType.FEE */\n  0x05\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":760:781  keyTypes[KeyType.FEE] */\n  0x06\n  dup2\n  gt\n  iszero\n  tag_25\n  jumpi\n  tag_26\n  tag_6\n  jump\t// in\ntag_26:\ntag_25:\n  0x06\n  dup2\n  gt\n  iszero\n  tag_27\n  jumpi\n  tag_28\n  tag_6\n  jump\t// in\ntag_28:\ntag_27:\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":760:786  keyTypes[KeyType.FEE] = 32 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":822:824  64 */\n  0x40\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":796:804  keyTypes */\n  0x01\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":796:819  keyTypes[KeyType.PAUSE] */\n  0x00\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":805:818  KeyType.PAUSE */\n  0x06\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":796:819  keyTypes[KeyType.PAUSE] */\n  dup1\n  dup2\n  gt\n  iszero\n  tag_29\n  jumpi\n  tag_30\n  tag_6\n  jump\t// in\ntag_30:\ntag_29:\n  0x06\n  dup2\n  gt\n  iszero\n  tag_31\n  jumpi\n  tag_32\n  tag_6\n  jump\t// in\ntag_32:\ntag_31:\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":796:824  keyTypes[KeyType.PAUSE] = 64 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":358:2641  contract NFTCreator is ExpiryHelper, HederaTokenService {... */\n  jump(tag_33)\n    /* \"#utility.yul\":7:187   */\ntag_6:\n    /* \"#utility.yul\":55:132   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":52:53   */\n  0x00\n    /* \"#utility.yul\":45:133   */\n  mstore\n    /* \"#utility.yul\":152:156   */\n  0x21\n    /* \"#utility.yul\":149:150   */\n  0x04\n    /* \"#utility.yul\":142:157   */\n  mstore\n    /* \"#utility.yul\":176:180   */\n  0x24\n    /* \"#utility.yul\":173:174   */\n  0x00\n    /* \"#utility.yul\":166:181   */\n  revert\n    /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":358:2641  contract NFTCreator is ExpiryHelper, HederaTokenService {... */\ntag_33:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":358:2641  contract NFTCreator is ExpiryHelper, HederaTokenService {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0a284cb6\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x82b562aa\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xa1a79cde\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":1696:2118  function mintNft(... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_5\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_5:\n      pop\n      tag_6\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      tag_9\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":2126:2638  function transferNft(... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_12:\n      pop\n      tag_13\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      tag_16\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":421:1688  function createNft(... */\n    tag_4:\n      tag_19\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":1696:2118  function mintNft(... */\n    tag_9:\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":1796:1801  int64 */\n      0x00\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":1815:1827  int response */\n      dup1\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":1831:1852  int64[] memory serial */\n      0x00\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":1856:1954  HederaTokenService.mintToken(... */\n      tag_26\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":1899:1904  token */\n      dup6\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":1919:1920  0 */\n      0x00\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":1935:1943  metadata */\n      dup7\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":1856:1884  HederaTokenService.mintToken */\n      tag_27\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":1856:1954  HederaTokenService.mintToken(... */\n      jump\t// in\n    tag_26:\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":1814:1954  (int response, , int64[] memory serial) = HederaTokenService.mintToken(... */\n      swap3\n      pop\n      pop\n      swap2\n      pop\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaResponseCodes.sol\":2733:2735  22 */\n      0x16\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":1971:2010  response != HederaResponseCodes.SUCCESS */\n      0x03\n      signextend\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":1971:1979  response */\n      dup3\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":1971:2010  response != HederaResponseCodes.SUCCESS */\n      eq\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":1967:2082  if (response != HederaResponseCodes.SUCCESS) {... */\n      tag_28\n      jumpi\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":2027:2070  revert(\"Failed to mint non-fungible token\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_29\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":1967:2082  if (response != HederaResponseCodes.SUCCESS) {... */\n    tag_28:\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":2101:2107  serial */\n      dup1\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":2108:2109  0 */\n      0x00\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":2101:2110  serial[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_31\n      jumpi\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n    tag_31:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":2094:2110  return serial[0] */\n      swap3\n      pop\n      pop\n      pop\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":1696:2118  function mintNft(... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":2126:2638  function transferNft(... */\n    tag_16:\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":2246:2249  int */\n      0x00\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":2262:2312  HederaTokenService.associateToken(receiver, token) */\n      tag_35\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":2296:2304  receiver */\n      dup4\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":2306:2311  token */\n      dup6\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":2262:2295  HederaTokenService.associateToken */\n      tag_36\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":2262:2312  HederaTokenService.associateToken(receiver, token) */\n      jump\t// in\n    tag_35:\n      pop\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":2323:2335  int response */\n      0x00\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":2338:2471  HederaTokenService.transferNFT(... */\n      tag_37\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":2383:2388  token */\n      dup6\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":2411:2415  this */\n      address\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":2431:2439  receiver */\n      dup7\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":2454:2460  serial */\n      dup7\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":2338:2368  HederaTokenService.transferNFT */\n      tag_38\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":2338:2471  HederaTokenService.transferNFT(... */\n      jump\t// in\n    tag_37:\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":2323:2471  int response = HederaTokenService.transferNFT(... */\n      swap1\n      pop\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaResponseCodes.sol\":2733:2735  22 */\n      0x16\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":2488:2527  response != HederaResponseCodes.SUCCESS */\n      0x03\n      signextend\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":2488:2496  response */\n      dup2\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":2488:2527  response != HederaResponseCodes.SUCCESS */\n      eq\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":2484:2603  if (response != HederaResponseCodes.SUCCESS) {... */\n      tag_39\n      jumpi\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":2544:2591  revert(\"Failed to transfer non-fungible token\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_40\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":2484:2603  if (response != HederaResponseCodes.SUCCESS) {... */\n    tag_39:\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":2622:2630  response */\n      dup1\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":2615:2630  return response */\n      swap2\n      pop\n      pop\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":2126:2638  function transferNft(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":421:1688  function createNft(... */\n    tag_22:\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":622:629  address */\n      0x00\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":642:697  IHederaTokenService.TokenKey[]... */\n      dup1\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":735:736  1 */\n      0x01\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":700:737  new IHederaTokenService.TokenKey[](1) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_43\n      jumpi\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n    tag_43:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_46\n      jumpi\n      dup2\n      0x20\n      add\n    tag_47:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_47\n      jumpi\n      swap1\n      pop\n    tag_46:\n      pop\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":642:737  IHederaTokenService.TokenKey[]... */\n      swap1\n      pop\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":798:917  getSingleKey(... */\n      tag_50\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":825:839  KeyType.SUPPLY */\n      0x04\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":854:878  KeyValueType.CONTRACT_ID */\n      0x01\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":901:905  this */\n      address\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":798:810  getSingleKey */\n      tag_51\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":798:917  getSingleKey(... */\n      jump\t// in\n    tag_50:\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":788:792  keys */\n      dup2\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":793:794  0 */\n      0x00\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":788:795  keys[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_52\n      jumpi\n      tag_53\n      tag_33\n      jump\t// in\n    tag_53:\n    tag_52:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":788:917  keys[0] = getSingleKey(... */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":930:974  IHederaTokenService.HederaToken memory token */\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":998:1002  name */\n      dup8\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":985:990  token */\n      dup2\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":985:995  token.name */\n      0x00\n      add\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":985:1002  token.name = name */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":1028:1034  symbol */\n      dup7\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":1013:1018  token */\n      dup2\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":1013:1025  token.symbol */\n      0x20\n      add\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":1013:1034  token.symbol = symbol */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":1058:1062  memo */\n      dup6\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":1045:1050  token */\n      dup2\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":1045:1055  token.memo */\n      0x60\n      add\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":1045:1062  token.memo = memo */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":1098:1102  this */\n      address\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":1073:1078  token */\n      dup2\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":1073:1087  token.treasury */\n      0x40\n      add\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":1073:1103  token.treasury = address(this) */\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":1138:1142  true */\n      0x01\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":1114:1119  token */\n      dup2\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":1114:1135  token.tokenSupplyType */\n      0x80\n      add\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":1114:1142  token.tokenSupplyType = true */\n      swap1\n      iszero\n      iszero\n      swap1\n      dup2\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n      pop\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":1195:1204  maxSupply */\n      dup5\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":1177:1182  token */\n      dup2\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":1177:1192  token.maxSupply */\n      0xa0\n      add\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":1177:1204  token.maxSupply = maxSupply */\n      swap1\n      0xffffffff\n      and\n      swap1\n      dup2\n      0xffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":1233:1237  keys */\n      dup2\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":1215:1220  token */\n      dup2\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":1215:1230  token.tokenKeys */\n      0xe0\n      add\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":1215:1237  token.tokenKeys = keys */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":1270:1275  false */\n      0x00\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":1248:1253  token */\n      dup2\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":1248:1267  token.freezeDefault */\n      0xc0\n      add\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":1248:1275  token.freezeDefault = false */\n      swap1\n      iszero\n      iszero\n      swap1\n      dup2\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n      pop\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":1301:1354  createAutoRenewExpiry(address(this), autoRenewPeriod) */\n      tag_56\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":1331:1335  this */\n      address\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":1338:1353  autoRenewPeriod */\n      dup6\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":1301:1322  createAutoRenewExpiry */\n      tag_57\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":1301:1354  createAutoRenewExpiry(address(this), autoRenewPeriod) */\n      jump\t// in\n    tag_56:\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":1286:1291  token */\n      dup2\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":1286:1298  token.expiry */\n      0x0100\n      add\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":1286:1354  token.expiry = createAutoRenewExpiry(address(this), autoRenewPeriod) */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":1411:1427  int responseCode */\n      0x00\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":1429:1449  address createdToken */\n      dup1\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":1453:1515  HederaTokenService... */\n      tag_58\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":1509:1514  token */\n      dup4\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":1453:1508  HederaTokenService... */\n      tag_59\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":1453:1515  HederaTokenService... */\n      jump\t// in\n    tag_58:\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":1410:1515  (int responseCode, address createdToken) = HederaTokenService... */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":1668:1680  createdToken */\n      dup1\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":1661:1680  return createdToken */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":421:1688  function createNft(... */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":2570:3282  function mintToken(... */\n    tag_27:\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":2721:2737  int responseCode */\n      0x00\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":2751:2772  uint64 newTotalSupply */\n      dup1\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":2786:2814  int64[] memory serialNumbers */\n      0x60\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":2840:2852  bool success */\n      0x00\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":2854:2873  bytes memory result */\n      dup1\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":289:294  0x167 */\n      0x0167\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":2877:2899  precompileAddress.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":2953:2991  IHederaTokenService.mintToken.selector */\n      shl(0xe0, 0x278e0b88)\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":3009:3014  token */\n      dup10\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":3032:3038  amount */\n      dup10\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":3056:3064  metadata */\n      dup10\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":2913:3078  abi.encodeWithSelector(... */\n      add(0x24, mload(0x40))\n      tag_62\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":2877:3088  precompileAddress.call(... */\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_68\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_67)\n    tag_68:\n      0x60\n      swap2\n      pop\n    tag_67:\n      pop\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":2839:3088  (bool success, bytes memory result) = precompileAddress.call(... */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":3146:3153  success */\n      dup2\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":3146:3275  success... */\n      tag_69\n      jumpi\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaResponseCodes.sol\":2587:2589  21 */\n      0x15\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":3257:3258  0 */\n      0x00\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":3272:3273  0 */\n      dup1\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":3260:3274  new int64[](0) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_70\n      jumpi\n      tag_71\n      tag_45\n      jump\t// in\n    tag_71:\n    tag_70:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_72\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_72:\n      pop\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":3146:3275  success... */\n      jump(tag_73)\n    tag_69:\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":3179:3185  result */\n      dup1\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":3168:3212  abi.decode(result, (int32, uint64, int64[])) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":3146:3275  success... */\n    tag_73:\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":3098:3275  (responseCode, newTotalSupply, serialNumbers) = success... */\n      dup3\n      0x03\n      signextend\n      swap3\n      pop\n      dup1\n      swap6\n      pop\n      dup2\n      swap7\n      pop\n      dup3\n      swap8\n      pop\n      pop\n      pop\n      pop\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":2829:3282  {... */\n      pop\n      pop\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":2570:3282  function mintToken(... */\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      swap1\n      pop\n      jump\t// out\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":6734:7210  function associateToken(... */\n    tag_36:\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":6830:6846  int responseCode */\n      0x00\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":6859:6871  bool success */\n      dup1\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":6873:6892  bytes memory result */\n      0x00\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":289:294  0x167 */\n      0x0167\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":6896:6918  precompileAddress.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":6972:7015  IHederaTokenService.associateToken.selector */\n      shl(0xe0, 0x49146bde)\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":7033:7040  account */\n      dup7\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":7058:7063  token */\n      dup7\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":6932:7077  abi.encodeWithSelector(... */\n      add(0x24, mload(0x40))\n      tag_77\n      swap3\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":6896:7087  precompileAddress.call(... */\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_79:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_82\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_81)\n    tag_82:\n      0x60\n      swap2\n      pop\n    tag_81:\n      pop\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":6858:7087  (bool success, bytes memory result) = precompileAddress.call(... */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":7112:7119  success */\n      dup2\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":7112:7203  success... */\n      tag_83\n      jumpi\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaResponseCodes.sol\":2587:2589  21 */\n      0x15\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":7112:7203  success... */\n      jump(tag_84)\n    tag_83:\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":7145:7151  result */\n      dup1\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":7134:7161  abi.decode(result, (int32)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_85\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":7112:7203  success... */\n    tag_84:\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":7097:7203  responseCode = success... */\n      0x03\n      signextend\n      swap3\n      pop\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":6848:7210  {... */\n      pop\n      pop\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":6734:7210  function associateToken(... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":24332:24910  function transferNFT(... */\n    tag_38:\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":24478:24494  int responseCode */\n      0x00\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":24507:24519  bool success */\n      dup1\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":24521:24540  bytes memory result */\n      0x00\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":289:294  0x167 */\n      0x0167\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":24544:24566  precompileAddress.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":24620:24660  IHederaTokenService.transferNFT.selector */\n      shl(0xe0, 0x5cfc9011)\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":24678:24683  token */\n      dup9\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":24701:24707  sender */\n      dup9\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":24725:24733  receiver */\n      dup9\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":24751:24763  serialNumber */\n      dup9\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":24580:24777  abi.encodeWithSelector(... */\n      add(0x24, mload(0x40))\n      tag_88\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":24544:24787  precompileAddress.call(... */\n      mload(0x40)\n      tag_90\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_90:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_93\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_92)\n    tag_93:\n      0x60\n      swap2\n      pop\n    tag_92:\n      pop\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":24506:24787  (bool success, bytes memory result) = precompileAddress.call(... */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":24812:24819  success */\n      dup2\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":24812:24903  success... */\n      tag_94\n      jumpi\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaResponseCodes.sol\":2587:2589  21 */\n      0x15\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":24812:24903  success... */\n      jump(tag_95)\n    tag_94:\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":24845:24851  result */\n      dup1\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":24834:24861  abi.decode(result, (int32)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_96\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_96:\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":24812:24903  success... */\n    tag_95:\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":24797:24903  responseCode = success... */\n      0x03\n      signextend\n      swap3\n      pop\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":24496:24910  {... */\n      pop\n      pop\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":24332:24910  function transferNFT(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":2821:3146  function getSingleKey(... */\n    tag_51:\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":2953:2997  IHederaTokenService.TokenKey memory tokenKey */\n      tag_97\n      tag_49\n      jump\t// in\n    tag_97:\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":3020:3139  IHederaTokenService.TokenKey(... */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":3062:3081  getKeyType(keyType) */\n      tag_99\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":3073:3080  keyType */\n      dup7\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":3062:3072  getKeyType */\n      tag_100\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":3062:3081  getKeyType(keyType) */\n      jump\t// in\n    tag_99:\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":3020:3139  IHederaTokenService.TokenKey(... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":3095:3129  getKeyValueType(keyValueType, key) */\n      tag_101\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":3111:3123  keyValueType */\n      dup6\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":3125:3128  key */\n      dup6\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":3095:3110  getKeyValueType */\n      tag_102\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":3095:3129  getKeyValueType(keyValueType, key) */\n      jump\t// in\n    tag_101:\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":3020:3139  IHederaTokenService.TokenKey(... */\n      dup2\n      mstore\n      pop\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":3009:3139  tokenKey = IHederaTokenService.TokenKey(... */\n      swap1\n      pop\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":2821:3146  function getSingleKey(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/ExpiryHelper.sol\":210:487  function createAutoRenewExpiry(... */\n    tag_57:\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/ExpiryHelper.sol\":336:376  IHederaTokenService.Expiry memory expiry */\n      tag_103\n      tag_104\n      jump\t// in\n    tag_103:\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/ExpiryHelper.sol\":414:430  autoRenewAccount */\n      dup3\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/ExpiryHelper.sol\":388:394  expiry */\n      dup2\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/ExpiryHelper.sol\":388:411  expiry.autoRenewAccount */\n      0x20\n      add\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/ExpiryHelper.sol\":388:430  expiry.autoRenewAccount = autoRenewAccount */\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/ExpiryHelper.sol\":465:480  autoRenewPeriod */\n      dup2\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/ExpiryHelper.sol\":440:446  expiry */\n      dup2\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/ExpiryHelper.sol\":440:462  expiry.autoRenewPeriod */\n      0x40\n      add\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/ExpiryHelper.sol\":440:480  expiry.autoRenewPeriod = autoRenewPeriod */\n      swap1\n      0xffffffff\n      and\n      swap1\n      dup2\n      0xffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/ExpiryHelper.sol\":210:487  function createAutoRenewExpiry(... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":13005:13629  function createNonFungibleToken(... */\n    tag_59:\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":13161:13177  int responseCode */\n      0x00\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":13179:13199  address tokenAddress */\n      dup1\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":13137:13142  token */\n      dup3\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":765:766  0 */\n      0x00\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":742:747  token */\n      dup2\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":742:754  token.expiry */\n      0x0100\n      add\n      mload\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":742:761  token.expiry.second */\n      0x00\n      add\n      mload\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":742:766  token.expiry.second == 0 */\n      0xffffffff\n      and\n      eq\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":742:803  token.expiry.second == 0 && token.expiry.autoRenewPeriod == 0 */\n      dup1\n      iszero\n      tag_107\n      jumpi\n      pop\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":802:803  0 */\n      0x00\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":770:775  token */\n      dup2\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":770:782  token.expiry */\n      0x0100\n      add\n      mload\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":770:798  token.expiry.autoRenewPeriod */\n      0x40\n      add\n      mload\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":770:803  token.expiry.autoRenewPeriod == 0 */\n      0xffffffff\n      and\n      eq\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":742:803  token.expiry.second == 0 && token.expiry.autoRenewPeriod == 0 */\n    tag_107:\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":738:883  if (token.expiry.second == 0 && token.expiry.autoRenewPeriod == 0) {... */\n      iszero\n      tag_108\n      jumpi\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":368:375  7776000 */\n      0x76a700\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":819:824  token */\n      dup2\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":819:831  token.expiry */\n      0x0100\n      add\n      mload\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":819:847  token.expiry.autoRenewPeriod */\n      0x40\n      add\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":819:872  token.expiry.autoRenewPeriod = defaultAutoRenewPeriod */\n      swap1\n      0xffffffff\n      and\n      swap1\n      dup2\n      0xffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":738:883  if (token.expiry.second == 0 && token.expiry.autoRenewPeriod == 0) {... */\n    tag_108:\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":13216:13228  bool success */\n      0x00\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":13230:13249  bytes memory result */\n      dup1\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":289:294  0x167 */\n      0x0167\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":13253:13275  precompileAddress.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":13296:13305  msg.value */\n      callvalue\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":13369:13420  IHederaTokenService.createNonFungibleToken.selector */\n      shl(0xe0, 0x9dc711e0)\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":13438:13443  token */\n      dup9\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":13329:13457  abi.encodeWithSelector(... */\n      add(0x24, mload(0x40))\n      tag_110\n      swap2\n      swap1\n      tag_111\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":13253:13467  precompileAddress.call{... */\n      mload(0x40)\n      tag_112\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_112:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_115\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_114)\n    tag_115:\n      0x60\n      swap2\n      pop\n    tag_114:\n      pop\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":13215:13467  (bool success, bytes memory result) = precompileAddress.call{... */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":13508:13515  success */\n      dup2\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":13508:13622  success... */\n      tag_116\n      jumpi\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaResponseCodes.sol\":2587:2589  21 */\n      0x15\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":13619:13620  0 */\n      0x00\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":13508:13622  success... */\n      jump(tag_117)\n    tag_116:\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":13541:13547  result */\n      dup1\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":13530:13566  abi.decode(result, (int32, address)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_118\n      swap2\n      swap1\n      tag_119\n      jump\t// in\n    tag_118:\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":13508:13622  success... */\n    tag_117:\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":13477:13622  (responseCode, tokenAddress) = success... */\n      dup2\n      0x03\n      signextend\n      swap2\n      pop\n      dup1\n      swap6\n      pop\n      dup2\n      swap7\n      pop\n      pop\n      pop\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":13205:13629  {... */\n      pop\n      pop\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":13005:13629  function createNonFungibleToken(... */\n      pop\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":4251:4361  function getKeyType(KeyType keyType) internal view returns (uint256) {... */\n    tag_100:\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":4311:4318  uint256 */\n      0x00\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":4337:4345  keyTypes */\n      0x01\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":4337:4354  keyTypes[keyType] */\n      0x00\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":4346:4353  keyType */\n      dup4\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":4337:4354  keyTypes[keyType] */\n      0x06\n      dup2\n      gt\n      iszero\n      tag_121\n      jumpi\n      tag_122\n      tag_123\n      jump\t// in\n    tag_122:\n    tag_121:\n      0x06\n      dup2\n      gt\n      iszero\n      tag_124\n      jumpi\n      tag_125\n      tag_123\n      jump\t// in\n    tag_125:\n    tag_124:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":4330:4354  return keyTypes[keyType] */\n      swap1\n      pop\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":4251:4361  function getKeyType(KeyType keyType) internal view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":5111:5525  function getKeyValueType(... */\n    tag_102:\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":5228:5272  IHederaTokenService.KeyValue memory keyValue */\n      tag_126\n      tag_127\n      jump\t// in\n    tag_126:\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":5304:5328  KeyValueType.CONTRACT_ID */\n      0x01\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":5288:5328  keyValueType == KeyValueType.CONTRACT_ID */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_129\n      jumpi\n      tag_130\n      tag_123\n      jump\t// in\n    tag_130:\n    tag_129:\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":5288:5300  keyValueType */\n      dup4\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":5288:5328  keyValueType == KeyValueType.CONTRACT_ID */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_131\n      jumpi\n      tag_132\n      tag_123\n      jump\t// in\n    tag_132:\n    tag_131:\n      sub\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":5284:5519  if (keyValueType == KeyValueType.CONTRACT_ID) {... */\n      tag_133\n      jumpi\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":5366:5376  keyAddress */\n      dup2\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":5344:5352  keyValue */\n      dup2\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":5344:5363  keyValue.contractId */\n      0x20\n      add\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":5344:5376  keyValue.contractId = keyAddress */\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":5284:5519  if (keyValueType == KeyValueType.CONTRACT_ID) {... */\n      jump(tag_134)\n    tag_133:\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":5413:5449  KeyValueType.DELEGETABLE_CONTRACT_ID */\n      0x04\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":5397:5449  keyValueType == KeyValueType.DELEGETABLE_CONTRACT_ID */\n      dup1\n      dup2\n      gt\n      iszero\n      tag_135\n      jumpi\n      tag_136\n      tag_123\n      jump\t// in\n    tag_136:\n    tag_135:\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":5397:5409  keyValueType */\n      dup4\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":5397:5449  keyValueType == KeyValueType.DELEGETABLE_CONTRACT_ID */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_137\n      jumpi\n      tag_138\n      tag_123\n      jump\t// in\n    tag_138:\n    tag_137:\n      sub\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":5393:5519  if (keyValueType == KeyValueType.DELEGETABLE_CONTRACT_ID) {... */\n      tag_139\n      jumpi\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":5498:5508  keyAddress */\n      dup2\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":5465:5473  keyValue */\n      dup2\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":5465:5495  keyValue.delegatableContractId */\n      0x80\n      add\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":5465:5508  keyValue.delegatableContractId = keyAddress */\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":5393:5519  if (keyValueType == KeyValueType.DELEGETABLE_CONTRACT_ID) {... */\n    tag_139:\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":5284:5519  if (keyValueType == KeyValueType.CONTRACT_ID) {... */\n    tag_134:\n        /* \"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":5111:5525  function getKeyValueType(... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    tag_49:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      tag_140\n      tag_127\n      jump\t// in\n    tag_140:\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n    tag_55:\n      mload(0x40)\n      dup1\n      0x0120\n      add\n      0x40\n      mstore\n      dup1\n      0x60\n      dup2\n      mstore\n      0x20\n      add\n      0x60\n      dup2\n      mstore\n      0x20\n      add\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      0x60\n      dup2\n      mstore\n      0x20\n      add\n      iszero(iszero(0x00))\n      dup2\n      mstore\n      0x20\n      add\n      and(0xffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      iszero(iszero(0x00))\n      dup2\n      mstore\n      0x20\n      add\n      0x60\n      dup2\n      mstore\n      0x20\n      add\n      tag_141\n      tag_104\n      jump\t// in\n    tag_141:\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n    tag_104:\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      and(0xffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      and(0xffffffff, 0x00)\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n    tag_127:\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      dup1\n      iszero(iszero(0x00))\n      dup2\n      mstore\n      0x20\n      add\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      0x60\n      dup2\n      mstore\n      0x20\n      add\n      0x60\n      dup2\n      mstore\n      0x20\n      add\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_142:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_143:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_144:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_145:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_146:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_231\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_145\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_147:\n        /* \"#utility.yul\":641:665   */\n      tag_233\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_146\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_234\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_234:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_148:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_236\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_147\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:958   */\n    tag_149:\n        /* \"#utility.yul\":950:951   */\n      0x00\n        /* \"#utility.yul\":947:948   */\n      dup1\n        /* \"#utility.yul\":940:952   */\n      revert\n        /* \"#utility.yul\":964:1066   */\n    tag_150:\n        /* \"#utility.yul\":1005:1011   */\n      0x00\n        /* \"#utility.yul\":1056:1058   */\n      0x1f\n        /* \"#utility.yul\":1052:1059   */\n      not\n        /* \"#utility.yul\":1047:1049   */\n      0x1f\n        /* \"#utility.yul\":1040:1045   */\n      dup4\n        /* \"#utility.yul\":1036:1050   */\n      add\n        /* \"#utility.yul\":1032:1060   */\n      and\n        /* \"#utility.yul\":1022:1060   */\n      swap1\n      pop\n        /* \"#utility.yul\":964:1066   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1072:1252   */\n    tag_45:\n        /* \"#utility.yul\":1120:1197   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1117:1118   */\n      0x00\n        /* \"#utility.yul\":1110:1198   */\n      mstore\n        /* \"#utility.yul\":1217:1221   */\n      0x41\n        /* \"#utility.yul\":1214:1215   */\n      0x04\n        /* \"#utility.yul\":1207:1222   */\n      mstore\n        /* \"#utility.yul\":1241:1245   */\n      0x24\n        /* \"#utility.yul\":1238:1239   */\n      0x00\n        /* \"#utility.yul\":1231:1246   */\n      revert\n        /* \"#utility.yul\":1258:1539   */\n    tag_151:\n        /* \"#utility.yul\":1341:1368   */\n      tag_241\n        /* \"#utility.yul\":1363:1367   */\n      dup3\n        /* \"#utility.yul\":1341:1368   */\n      tag_150\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":1333:1339   */\n      dup2\n        /* \"#utility.yul\":1329:1369   */\n      add\n        /* \"#utility.yul\":1471:1477   */\n      dup2\n        /* \"#utility.yul\":1459:1469   */\n      dup2\n        /* \"#utility.yul\":1456:1478   */\n      lt\n        /* \"#utility.yul\":1435:1453   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1423:1433   */\n      dup3\n        /* \"#utility.yul\":1420:1454   */\n      gt\n        /* \"#utility.yul\":1417:1479   */\n      or\n        /* \"#utility.yul\":1414:1502   */\n      iszero\n      tag_242\n      jumpi\n        /* \"#utility.yul\":1482:1500   */\n      tag_243\n      tag_45\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":1414:1502   */\n    tag_242:\n        /* \"#utility.yul\":1522:1532   */\n      dup1\n        /* \"#utility.yul\":1518:1520   */\n      0x40\n        /* \"#utility.yul\":1511:1533   */\n      mstore\n        /* \"#utility.yul\":1301:1539   */\n      pop\n        /* \"#utility.yul\":1258:1539   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1545:1674   */\n    tag_152:\n        /* \"#utility.yul\":1579:1585   */\n      0x00\n        /* \"#utility.yul\":1606:1626   */\n      tag_245\n      tag_142\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":1596:1626   */\n      swap1\n      pop\n        /* \"#utility.yul\":1635:1668   */\n      tag_246\n        /* \"#utility.yul\":1663:1667   */\n      dup3\n        /* \"#utility.yul\":1655:1661   */\n      dup3\n        /* \"#utility.yul\":1635:1668   */\n      tag_151\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":1545:1674   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1680:2000   */\n    tag_153:\n        /* \"#utility.yul\":1766:1770   */\n      0x00\n        /* \"#utility.yul\":1856:1874   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1848:1854   */\n      dup3\n        /* \"#utility.yul\":1845:1875   */\n      gt\n        /* \"#utility.yul\":1842:1898   */\n      iszero\n      tag_248\n      jumpi\n        /* \"#utility.yul\":1878:1896   */\n      tag_249\n      tag_45\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":1842:1898   */\n    tag_248:\n        /* \"#utility.yul\":1928:1932   */\n      0x20\n        /* \"#utility.yul\":1920:1926   */\n      dup3\n        /* \"#utility.yul\":1916:1933   */\n      mul\n        /* \"#utility.yul\":1908:1933   */\n      swap1\n      pop\n        /* \"#utility.yul\":1988:1992   */\n      0x20\n        /* \"#utility.yul\":1982:1986   */\n      dup2\n        /* \"#utility.yul\":1978:1993   */\n      add\n        /* \"#utility.yul\":1970:1993   */\n      swap1\n      pop\n        /* \"#utility.yul\":1680:2000   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2006:2123   */\n    tag_154:\n        /* \"#utility.yul\":2115:2116   */\n      0x00\n        /* \"#utility.yul\":2112:2113   */\n      dup1\n        /* \"#utility.yul\":2105:2117   */\n      revert\n        /* \"#utility.yul\":2129:2246   */\n    tag_155:\n        /* \"#utility.yul\":2238:2239   */\n      0x00\n        /* \"#utility.yul\":2235:2236   */\n      dup1\n        /* \"#utility.yul\":2228:2240   */\n      revert\n        /* \"#utility.yul\":2252:2559   */\n    tag_156:\n        /* \"#utility.yul\":2313:2317   */\n      0x00\n        /* \"#utility.yul\":2403:2421   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2395:2401   */\n      dup3\n        /* \"#utility.yul\":2392:2422   */\n      gt\n        /* \"#utility.yul\":2389:2445   */\n      iszero\n      tag_253\n      jumpi\n        /* \"#utility.yul\":2425:2443   */\n      tag_254\n      tag_45\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":2389:2445   */\n    tag_253:\n        /* \"#utility.yul\":2463:2492   */\n      tag_255\n        /* \"#utility.yul\":2485:2491   */\n      dup3\n        /* \"#utility.yul\":2463:2492   */\n      tag_150\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":2455:2492   */\n      swap1\n      pop\n        /* \"#utility.yul\":2547:2551   */\n      0x20\n        /* \"#utility.yul\":2541:2545   */\n      dup2\n        /* \"#utility.yul\":2537:2552   */\n      add\n        /* \"#utility.yul\":2529:2552   */\n      swap1\n      pop\n        /* \"#utility.yul\":2252:2559   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2565:2711   */\n    tag_157:\n        /* \"#utility.yul\":2662:2668   */\n      dup3\n        /* \"#utility.yul\":2657:2660   */\n      dup2\n        /* \"#utility.yul\":2652:2655   */\n      dup4\n        /* \"#utility.yul\":2639:2669   */\n      calldatacopy\n        /* \"#utility.yul\":2703:2704   */\n      0x00\n        /* \"#utility.yul\":2694:2700   */\n      dup4\n        /* \"#utility.yul\":2689:2692   */\n      dup4\n        /* \"#utility.yul\":2685:2701   */\n      add\n        /* \"#utility.yul\":2678:2705   */\n      mstore\n        /* \"#utility.yul\":2565:2711   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2717:3140   */\n    tag_158:\n        /* \"#utility.yul\":2794:2799   */\n      0x00\n        /* \"#utility.yul\":2819:2884   */\n      tag_258\n        /* \"#utility.yul\":2835:2883   */\n      tag_259\n        /* \"#utility.yul\":2876:2882   */\n      dup5\n        /* \"#utility.yul\":2835:2883   */\n      tag_156\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":2819:2884   */\n      tag_152\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":2810:2884   */\n      swap1\n      pop\n        /* \"#utility.yul\":2907:2913   */\n      dup3\n        /* \"#utility.yul\":2900:2905   */\n      dup2\n        /* \"#utility.yul\":2893:2914   */\n      mstore\n        /* \"#utility.yul\":2945:2949   */\n      0x20\n        /* \"#utility.yul\":2938:2943   */\n      dup2\n        /* \"#utility.yul\":2934:2950   */\n      add\n        /* \"#utility.yul\":2983:2986   */\n      dup5\n        /* \"#utility.yul\":2974:2980   */\n      dup5\n        /* \"#utility.yul\":2969:2972   */\n      dup5\n        /* \"#utility.yul\":2965:2981   */\n      add\n        /* \"#utility.yul\":2962:2987   */\n      gt\n        /* \"#utility.yul\":2959:3071   */\n      iszero\n      tag_260\n      jumpi\n        /* \"#utility.yul\":2990:3069   */\n      tag_261\n      tag_155\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":2959:3071   */\n    tag_260:\n        /* \"#utility.yul\":3080:3134   */\n      tag_262\n        /* \"#utility.yul\":3127:3133   */\n      dup5\n        /* \"#utility.yul\":3122:3125   */\n      dup3\n        /* \"#utility.yul\":3117:3120   */\n      dup6\n        /* \"#utility.yul\":3080:3134   */\n      tag_157\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":2800:3140   */\n      pop\n        /* \"#utility.yul\":2717:3140   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3159:3497   */\n    tag_159:\n        /* \"#utility.yul\":3214:3219   */\n      0x00\n        /* \"#utility.yul\":3263:3266   */\n      dup3\n        /* \"#utility.yul\":3256:3260   */\n      0x1f\n        /* \"#utility.yul\":3248:3254   */\n      dup4\n        /* \"#utility.yul\":3244:3261   */\n      add\n        /* \"#utility.yul\":3240:3267   */\n      slt\n        /* \"#utility.yul\":3230:3352   */\n      tag_264\n      jumpi\n        /* \"#utility.yul\":3271:3350   */\n      tag_265\n      tag_149\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":3230:3352   */\n    tag_264:\n        /* \"#utility.yul\":3388:3394   */\n      dup2\n        /* \"#utility.yul\":3375:3395   */\n      calldataload\n        /* \"#utility.yul\":3413:3491   */\n      tag_266\n        /* \"#utility.yul\":3487:3490   */\n      dup5\n        /* \"#utility.yul\":3479:3485   */\n      dup3\n        /* \"#utility.yul\":3472:3476   */\n      0x20\n        /* \"#utility.yul\":3464:3470   */\n      dup7\n        /* \"#utility.yul\":3460:3477   */\n      add\n        /* \"#utility.yul\":3413:3491   */\n      tag_158\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":3404:3491   */\n      swap2\n      pop\n        /* \"#utility.yul\":3220:3497   */\n      pop\n        /* \"#utility.yul\":3159:3497   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3518:4460   */\n    tag_160:\n        /* \"#utility.yul\":3623:3628   */\n      0x00\n        /* \"#utility.yul\":3648:3738   */\n      tag_268\n        /* \"#utility.yul\":3664:3737   */\n      tag_269\n        /* \"#utility.yul\":3730:3736   */\n      dup5\n        /* \"#utility.yul\":3664:3737   */\n      tag_153\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":3648:3738   */\n      tag_152\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":3639:3738   */\n      swap1\n      pop\n        /* \"#utility.yul\":3758:3763   */\n      dup1\n        /* \"#utility.yul\":3787:3793   */\n      dup4\n        /* \"#utility.yul\":3780:3785   */\n      dup3\n        /* \"#utility.yul\":3773:3794   */\n      mstore\n        /* \"#utility.yul\":3821:3825   */\n      0x20\n        /* \"#utility.yul\":3814:3819   */\n      dup3\n        /* \"#utility.yul\":3810:3826   */\n      add\n        /* \"#utility.yul\":3803:3826   */\n      swap1\n      pop\n        /* \"#utility.yul\":3874:3878   */\n      0x20\n        /* \"#utility.yul\":3866:3872   */\n      dup5\n        /* \"#utility.yul\":3862:3879   */\n      mul\n        /* \"#utility.yul\":3854:3860   */\n      dup4\n        /* \"#utility.yul\":3850:3880   */\n      add\n        /* \"#utility.yul\":3903:3906   */\n      dup6\n        /* \"#utility.yul\":3895:3901   */\n      dup2\n        /* \"#utility.yul\":3892:3907   */\n      gt\n        /* \"#utility.yul\":3889:4011   */\n      iszero\n      tag_270\n      jumpi\n        /* \"#utility.yul\":3922:4001   */\n      tag_271\n      tag_154\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":3889:4011   */\n    tag_270:\n        /* \"#utility.yul\":4037:4043   */\n      dup4\n        /* \"#utility.yul\":4020:4454   */\n    tag_272:\n        /* \"#utility.yul\":4054:4060   */\n      dup2\n        /* \"#utility.yul\":4049:4052   */\n      dup2\n        /* \"#utility.yul\":4046:4061   */\n      lt\n        /* \"#utility.yul\":4020:4454   */\n      iszero\n      tag_274\n      jumpi\n        /* \"#utility.yul\":4143:4146   */\n      dup1\n        /* \"#utility.yul\":4130:4147   */\n      calldataload\n        /* \"#utility.yul\":4179:4197   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4166:4177   */\n      dup2\n        /* \"#utility.yul\":4163:4198   */\n      gt\n        /* \"#utility.yul\":4160:4282   */\n      iszero\n      tag_275\n      jumpi\n        /* \"#utility.yul\":4201:4280   */\n      tag_276\n      tag_149\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":4160:4282   */\n    tag_275:\n        /* \"#utility.yul\":4325:4336   */\n      dup1\n        /* \"#utility.yul\":4317:4323   */\n      dup7\n        /* \"#utility.yul\":4313:4337   */\n      add\n        /* \"#utility.yul\":4363:4409   */\n      tag_277\n        /* \"#utility.yul\":4405:4408   */\n      dup10\n        /* \"#utility.yul\":4393:4403   */\n      dup3\n        /* \"#utility.yul\":4363:4409   */\n      tag_159\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":4358:4361   */\n      dup6\n        /* \"#utility.yul\":4351:4410   */\n      mstore\n        /* \"#utility.yul\":4439:4443   */\n      0x20\n        /* \"#utility.yul\":4434:4437   */\n      dup6\n        /* \"#utility.yul\":4430:4444   */\n      add\n        /* \"#utility.yul\":4423:4444   */\n      swap5\n      pop\n        /* \"#utility.yul\":4096:4454   */\n      pop\n      pop\n        /* \"#utility.yul\":4080:4084   */\n      0x20\n        /* \"#utility.yul\":4075:4078   */\n      dup2\n        /* \"#utility.yul\":4071:4085   */\n      add\n        /* \"#utility.yul\":4064:4085   */\n      swap1\n      pop\n        /* \"#utility.yul\":4020:4454   */\n      jump(tag_272)\n    tag_274:\n        /* \"#utility.yul\":4024:4045   */\n      pop\n        /* \"#utility.yul\":3629:4460   */\n      pop\n      pop\n        /* \"#utility.yul\":3518:4460   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4481:4869   */\n    tag_161:\n        /* \"#utility.yul\":4561:4566   */\n      0x00\n        /* \"#utility.yul\":4610:4613   */\n      dup3\n        /* \"#utility.yul\":4603:4607   */\n      0x1f\n        /* \"#utility.yul\":4595:4601   */\n      dup4\n        /* \"#utility.yul\":4591:4608   */\n      add\n        /* \"#utility.yul\":4587:4614   */\n      slt\n        /* \"#utility.yul\":4577:4699   */\n      tag_279\n      jumpi\n        /* \"#utility.yul\":4618:4697   */\n      tag_280\n      tag_149\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":4577:4699   */\n    tag_279:\n        /* \"#utility.yul\":4735:4741   */\n      dup2\n        /* \"#utility.yul\":4722:4742   */\n      calldataload\n        /* \"#utility.yul\":4760:4863   */\n      tag_281\n        /* \"#utility.yul\":4859:4862   */\n      dup5\n        /* \"#utility.yul\":4851:4857   */\n      dup3\n        /* \"#utility.yul\":4844:4848   */\n      0x20\n        /* \"#utility.yul\":4836:4842   */\n      dup7\n        /* \"#utility.yul\":4832:4849   */\n      add\n        /* \"#utility.yul\":4760:4863   */\n      tag_160\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":4751:4863   */\n      swap2\n      pop\n        /* \"#utility.yul\":4567:4869   */\n      pop\n        /* \"#utility.yul\":4481:4869   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4875:5577   */\n    tag_8:\n        /* \"#utility.yul\":4977:4983   */\n      0x00\n        /* \"#utility.yul\":4985:4991   */\n      dup1\n        /* \"#utility.yul\":5034:5036   */\n      0x40\n        /* \"#utility.yul\":5022:5031   */\n      dup4\n        /* \"#utility.yul\":5013:5020   */\n      dup6\n        /* \"#utility.yul\":5009:5032   */\n      sub\n        /* \"#utility.yul\":5005:5037   */\n      slt\n        /* \"#utility.yul\":5002:5121   */\n      iszero\n      tag_283\n      jumpi\n        /* \"#utility.yul\":5040:5119   */\n      tag_284\n      tag_143\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":5002:5121   */\n    tag_283:\n        /* \"#utility.yul\":5160:5161   */\n      0x00\n        /* \"#utility.yul\":5185:5238   */\n      tag_285\n        /* \"#utility.yul\":5230:5237   */\n      dup6\n        /* \"#utility.yul\":5221:5227   */\n      dup3\n        /* \"#utility.yul\":5210:5219   */\n      dup7\n        /* \"#utility.yul\":5206:5228   */\n      add\n        /* \"#utility.yul\":5185:5238   */\n      tag_148\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":5175:5238   */\n      swap3\n      pop\n        /* \"#utility.yul\":5131:5248   */\n      pop\n        /* \"#utility.yul\":5315:5317   */\n      0x20\n        /* \"#utility.yul\":5304:5313   */\n      dup4\n        /* \"#utility.yul\":5300:5318   */\n      add\n        /* \"#utility.yul\":5287:5319   */\n      calldataload\n        /* \"#utility.yul\":5346:5364   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5338:5344   */\n      dup2\n        /* \"#utility.yul\":5335:5365   */\n      gt\n        /* \"#utility.yul\":5332:5449   */\n      iszero\n      tag_286\n      jumpi\n        /* \"#utility.yul\":5368:5447   */\n      tag_287\n      tag_144\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":5332:5449   */\n    tag_286:\n        /* \"#utility.yul\":5473:5560   */\n      tag_288\n        /* \"#utility.yul\":5552:5559   */\n      dup6\n        /* \"#utility.yul\":5543:5549   */\n      dup3\n        /* \"#utility.yul\":5532:5541   */\n      dup7\n        /* \"#utility.yul\":5528:5550   */\n      add\n        /* \"#utility.yul\":5473:5560   */\n      tag_161\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":5463:5560   */\n      swap2\n      pop\n        /* \"#utility.yul\":5258:5570   */\n      pop\n        /* \"#utility.yul\":4875:5577   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5583:5673   */\n    tag_162:\n        /* \"#utility.yul\":5618:5625   */\n      0x00\n        /* \"#utility.yul\":5661:5666   */\n      dup2\n        /* \"#utility.yul\":5658:5659   */\n      0x07\n        /* \"#utility.yul\":5647:5667   */\n      signextend\n        /* \"#utility.yul\":5636:5667   */\n      swap1\n      pop\n        /* \"#utility.yul\":5583:5673   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5679:5791   */\n    tag_163:\n        /* \"#utility.yul\":5762:5784   */\n      tag_291\n        /* \"#utility.yul\":5778:5783   */\n      dup2\n        /* \"#utility.yul\":5762:5784   */\n      tag_162\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":5757:5760   */\n      dup3\n        /* \"#utility.yul\":5750:5785   */\n      mstore\n        /* \"#utility.yul\":5679:5791   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5797:6011   */\n    tag_11:\n        /* \"#utility.yul\":5886:5890   */\n      0x00\n        /* \"#utility.yul\":5924:5926   */\n      0x20\n        /* \"#utility.yul\":5913:5922   */\n      dup3\n        /* \"#utility.yul\":5909:5927   */\n      add\n        /* \"#utility.yul\":5901:5927   */\n      swap1\n      pop\n        /* \"#utility.yul\":5937:6004   */\n      tag_293\n        /* \"#utility.yul\":6001:6002   */\n      0x00\n        /* \"#utility.yul\":5990:5999   */\n      dup4\n        /* \"#utility.yul\":5986:6003   */\n      add\n        /* \"#utility.yul\":5977:5983   */\n      dup5\n        /* \"#utility.yul\":5937:6004   */\n      tag_163\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":5797:6011   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6017:6135   */\n    tag_164:\n        /* \"#utility.yul\":6088:6110   */\n      tag_295\n        /* \"#utility.yul\":6104:6109   */\n      dup2\n        /* \"#utility.yul\":6088:6110   */\n      tag_162\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":6081:6086   */\n      dup2\n        /* \"#utility.yul\":6078:6111   */\n      eq\n        /* \"#utility.yul\":6068:6129   */\n      tag_296\n      jumpi\n        /* \"#utility.yul\":6125:6126   */\n      0x00\n        /* \"#utility.yul\":6122:6123   */\n      dup1\n        /* \"#utility.yul\":6115:6127   */\n      revert\n        /* \"#utility.yul\":6068:6129   */\n    tag_296:\n        /* \"#utility.yul\":6017:6135   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6141:6276   */\n    tag_165:\n        /* \"#utility.yul\":6185:6190   */\n      0x00\n        /* \"#utility.yul\":6223:6229   */\n      dup2\n        /* \"#utility.yul\":6210:6230   */\n      calldataload\n        /* \"#utility.yul\":6201:6230   */\n      swap1\n      pop\n        /* \"#utility.yul\":6239:6270   */\n      tag_298\n        /* \"#utility.yul\":6264:6269   */\n      dup2\n        /* \"#utility.yul\":6239:6270   */\n      tag_164\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":6141:6276   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6282:6897   */\n    tag_15:\n        /* \"#utility.yul\":6357:6363   */\n      0x00\n        /* \"#utility.yul\":6365:6371   */\n      dup1\n        /* \"#utility.yul\":6373:6379   */\n      0x00\n        /* \"#utility.yul\":6422:6424   */\n      0x60\n        /* \"#utility.yul\":6410:6419   */\n      dup5\n        /* \"#utility.yul\":6401:6408   */\n      dup7\n        /* \"#utility.yul\":6397:6420   */\n      sub\n        /* \"#utility.yul\":6393:6425   */\n      slt\n        /* \"#utility.yul\":6390:6509   */\n      iszero\n      tag_300\n      jumpi\n        /* \"#utility.yul\":6428:6507   */\n      tag_301\n      tag_143\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":6390:6509   */\n    tag_300:\n        /* \"#utility.yul\":6548:6549   */\n      0x00\n        /* \"#utility.yul\":6573:6626   */\n      tag_302\n        /* \"#utility.yul\":6618:6625   */\n      dup7\n        /* \"#utility.yul\":6609:6615   */\n      dup3\n        /* \"#utility.yul\":6598:6607   */\n      dup8\n        /* \"#utility.yul\":6594:6616   */\n      add\n        /* \"#utility.yul\":6573:6626   */\n      tag_148\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":6563:6626   */\n      swap4\n      pop\n        /* \"#utility.yul\":6519:6636   */\n      pop\n        /* \"#utility.yul\":6675:6677   */\n      0x20\n        /* \"#utility.yul\":6701:6754   */\n      tag_303\n        /* \"#utility.yul\":6746:6753   */\n      dup7\n        /* \"#utility.yul\":6737:6743   */\n      dup3\n        /* \"#utility.yul\":6726:6735   */\n      dup8\n        /* \"#utility.yul\":6722:6744   */\n      add\n        /* \"#utility.yul\":6701:6754   */\n      tag_148\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":6691:6754   */\n      swap3\n      pop\n        /* \"#utility.yul\":6646:6764   */\n      pop\n        /* \"#utility.yul\":6803:6805   */\n      0x40\n        /* \"#utility.yul\":6829:6880   */\n      tag_304\n        /* \"#utility.yul\":6872:6879   */\n      dup7\n        /* \"#utility.yul\":6863:6869   */\n      dup3\n        /* \"#utility.yul\":6852:6861   */\n      dup8\n        /* \"#utility.yul\":6848:6870   */\n      add\n        /* \"#utility.yul\":6829:6880   */\n      tag_165\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":6819:6880   */\n      swap2\n      pop\n        /* \"#utility.yul\":6774:6890   */\n      pop\n        /* \"#utility.yul\":6282:6897   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":6903:6979   */\n    tag_166:\n        /* \"#utility.yul\":6939:6946   */\n      0x00\n        /* \"#utility.yul\":6968:6973   */\n      dup2\n        /* \"#utility.yul\":6957:6973   */\n      swap1\n      pop\n        /* \"#utility.yul\":6903:6979   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6985:7100   */\n    tag_167:\n        /* \"#utility.yul\":7070:7093   */\n      tag_307\n        /* \"#utility.yul\":7087:7092   */\n      dup2\n        /* \"#utility.yul\":7070:7093   */\n      tag_166\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":7065:7068   */\n      dup3\n        /* \"#utility.yul\":7058:7094   */\n      mstore\n        /* \"#utility.yul\":6985:7100   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7106:7324   */\n    tag_18:\n        /* \"#utility.yul\":7197:7201   */\n      0x00\n        /* \"#utility.yul\":7235:7237   */\n      0x20\n        /* \"#utility.yul\":7224:7233   */\n      dup3\n        /* \"#utility.yul\":7220:7238   */\n      add\n        /* \"#utility.yul\":7212:7238   */\n      swap1\n      pop\n        /* \"#utility.yul\":7248:7317   */\n      tag_309\n        /* \"#utility.yul\":7314:7315   */\n      0x00\n        /* \"#utility.yul\":7303:7312   */\n      dup4\n        /* \"#utility.yul\":7299:7316   */\n      add\n        /* \"#utility.yul\":7290:7296   */\n      dup5\n        /* \"#utility.yul\":7248:7317   */\n      tag_167\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":7106:7324   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7330:7638   */\n    tag_168:\n        /* \"#utility.yul\":7392:7396   */\n      0x00\n        /* \"#utility.yul\":7482:7500   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7474:7480   */\n      dup3\n        /* \"#utility.yul\":7471:7501   */\n      gt\n        /* \"#utility.yul\":7468:7524   */\n      iszero\n      tag_311\n      jumpi\n        /* \"#utility.yul\":7504:7522   */\n      tag_312\n      tag_45\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":7468:7524   */\n    tag_311:\n        /* \"#utility.yul\":7542:7571   */\n      tag_313\n        /* \"#utility.yul\":7564:7570   */\n      dup3\n        /* \"#utility.yul\":7542:7571   */\n      tag_150\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":7534:7571   */\n      swap1\n      pop\n        /* \"#utility.yul\":7626:7630   */\n      0x20\n        /* \"#utility.yul\":7620:7624   */\n      dup2\n        /* \"#utility.yul\":7616:7631   */\n      add\n        /* \"#utility.yul\":7608:7631   */\n      swap1\n      pop\n        /* \"#utility.yul\":7330:7638   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7644:8069   */\n    tag_169:\n        /* \"#utility.yul\":7722:7727   */\n      0x00\n        /* \"#utility.yul\":7747:7813   */\n      tag_315\n        /* \"#utility.yul\":7763:7812   */\n      tag_316\n        /* \"#utility.yul\":7805:7811   */\n      dup5\n        /* \"#utility.yul\":7763:7812   */\n      tag_168\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":7747:7813   */\n      tag_152\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":7738:7813   */\n      swap1\n      pop\n        /* \"#utility.yul\":7836:7842   */\n      dup3\n        /* \"#utility.yul\":7829:7834   */\n      dup2\n        /* \"#utility.yul\":7822:7843   */\n      mstore\n        /* \"#utility.yul\":7874:7878   */\n      0x20\n        /* \"#utility.yul\":7867:7872   */\n      dup2\n        /* \"#utility.yul\":7863:7879   */\n      add\n        /* \"#utility.yul\":7912:7915   */\n      dup5\n        /* \"#utility.yul\":7903:7909   */\n      dup5\n        /* \"#utility.yul\":7898:7901   */\n      dup5\n        /* \"#utility.yul\":7894:7910   */\n      add\n        /* \"#utility.yul\":7891:7916   */\n      gt\n        /* \"#utility.yul\":7888:8000   */\n      iszero\n      tag_317\n      jumpi\n        /* \"#utility.yul\":7919:7998   */\n      tag_318\n      tag_155\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":7888:8000   */\n    tag_317:\n        /* \"#utility.yul\":8009:8063   */\n      tag_319\n        /* \"#utility.yul\":8056:8062   */\n      dup5\n        /* \"#utility.yul\":8051:8054   */\n      dup3\n        /* \"#utility.yul\":8046:8049   */\n      dup6\n        /* \"#utility.yul\":8009:8063   */\n      tag_157\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":7728:8069   */\n      pop\n        /* \"#utility.yul\":7644:8069   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8089:8429   */\n    tag_170:\n        /* \"#utility.yul\":8145:8150   */\n      0x00\n        /* \"#utility.yul\":8194:8197   */\n      dup3\n        /* \"#utility.yul\":8187:8191   */\n      0x1f\n        /* \"#utility.yul\":8179:8185   */\n      dup4\n        /* \"#utility.yul\":8175:8192   */\n      add\n        /* \"#utility.yul\":8171:8198   */\n      slt\n        /* \"#utility.yul\":8161:8283   */\n      tag_321\n      jumpi\n        /* \"#utility.yul\":8202:8281   */\n      tag_322\n      tag_149\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":8161:8283   */\n    tag_321:\n        /* \"#utility.yul\":8319:8325   */\n      dup2\n        /* \"#utility.yul\":8306:8326   */\n      calldataload\n        /* \"#utility.yul\":8344:8423   */\n      tag_323\n        /* \"#utility.yul\":8419:8422   */\n      dup5\n        /* \"#utility.yul\":8411:8417   */\n      dup3\n        /* \"#utility.yul\":8404:8408   */\n      0x20\n        /* \"#utility.yul\":8396:8402   */\n      dup7\n        /* \"#utility.yul\":8392:8409   */\n      add\n        /* \"#utility.yul\":8344:8423   */\n      tag_169\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":8335:8423   */\n      swap2\n      pop\n        /* \"#utility.yul\":8151:8429   */\n      pop\n        /* \"#utility.yul\":8089:8429   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8435:8528   */\n    tag_171:\n        /* \"#utility.yul\":8471:8478   */\n      0x00\n        /* \"#utility.yul\":8511:8521   */\n      0xffffffff\n        /* \"#utility.yul\":8504:8509   */\n      dup3\n        /* \"#utility.yul\":8500:8522   */\n      and\n        /* \"#utility.yul\":8489:8522   */\n      swap1\n      pop\n        /* \"#utility.yul\":8435:8528   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8534:8654   */\n    tag_172:\n        /* \"#utility.yul\":8606:8629   */\n      tag_326\n        /* \"#utility.yul\":8623:8628   */\n      dup2\n        /* \"#utility.yul\":8606:8629   */\n      tag_171\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":8599:8604   */\n      dup2\n        /* \"#utility.yul\":8596:8630   */\n      eq\n        /* \"#utility.yul\":8586:8648   */\n      tag_327\n      jumpi\n        /* \"#utility.yul\":8644:8645   */\n      0x00\n        /* \"#utility.yul\":8641:8642   */\n      dup1\n        /* \"#utility.yul\":8634:8646   */\n      revert\n        /* \"#utility.yul\":8586:8648   */\n    tag_327:\n        /* \"#utility.yul\":8534:8654   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8660:8797   */\n    tag_173:\n        /* \"#utility.yul\":8705:8710   */\n      0x00\n        /* \"#utility.yul\":8743:8749   */\n      dup2\n        /* \"#utility.yul\":8730:8750   */\n      calldataload\n        /* \"#utility.yul\":8721:8750   */\n      swap1\n      pop\n        /* \"#utility.yul\":8759:8791   */\n      tag_329\n        /* \"#utility.yul\":8785:8790   */\n      dup2\n        /* \"#utility.yul\":8759:8791   */\n      tag_172\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":8660:8797   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8803:10250   */\n    tag_21:\n        /* \"#utility.yul\":8926:8932   */\n      0x00\n        /* \"#utility.yul\":8934:8940   */\n      dup1\n        /* \"#utility.yul\":8942:8948   */\n      0x00\n        /* \"#utility.yul\":8950:8956   */\n      dup1\n        /* \"#utility.yul\":8958:8964   */\n      0x00\n        /* \"#utility.yul\":9007:9010   */\n      0xa0\n        /* \"#utility.yul\":8995:9004   */\n      dup7\n        /* \"#utility.yul\":8986:8993   */\n      dup9\n        /* \"#utility.yul\":8982:9005   */\n      sub\n        /* \"#utility.yul\":8978:9011   */\n      slt\n        /* \"#utility.yul\":8975:9095   */\n      iszero\n      tag_331\n      jumpi\n        /* \"#utility.yul\":9014:9093   */\n      tag_332\n      tag_143\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":8975:9095   */\n    tag_331:\n        /* \"#utility.yul\":9162:9163   */\n      0x00\n        /* \"#utility.yul\":9151:9160   */\n      dup7\n        /* \"#utility.yul\":9147:9164   */\n      add\n        /* \"#utility.yul\":9134:9165   */\n      calldataload\n        /* \"#utility.yul\":9192:9210   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9184:9190   */\n      dup2\n        /* \"#utility.yul\":9181:9211   */\n      gt\n        /* \"#utility.yul\":9178:9295   */\n      iszero\n      tag_333\n      jumpi\n        /* \"#utility.yul\":9214:9293   */\n      tag_334\n      tag_144\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":9178:9295   */\n    tag_333:\n        /* \"#utility.yul\":9319:9382   */\n      tag_335\n        /* \"#utility.yul\":9374:9381   */\n      dup9\n        /* \"#utility.yul\":9365:9371   */\n      dup3\n        /* \"#utility.yul\":9354:9363   */\n      dup10\n        /* \"#utility.yul\":9350:9372   */\n      add\n        /* \"#utility.yul\":9319:9382   */\n      tag_170\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":9309:9382   */\n      swap6\n      pop\n        /* \"#utility.yul\":9105:9392   */\n      pop\n        /* \"#utility.yul\":9459:9461   */\n      0x20\n        /* \"#utility.yul\":9448:9457   */\n      dup7\n        /* \"#utility.yul\":9444:9462   */\n      add\n        /* \"#utility.yul\":9431:9463   */\n      calldataload\n        /* \"#utility.yul\":9490:9508   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9482:9488   */\n      dup2\n        /* \"#utility.yul\":9479:9509   */\n      gt\n        /* \"#utility.yul\":9476:9593   */\n      iszero\n      tag_336\n      jumpi\n        /* \"#utility.yul\":9512:9591   */\n      tag_337\n      tag_144\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":9476:9593   */\n    tag_336:\n        /* \"#utility.yul\":9617:9680   */\n      tag_338\n        /* \"#utility.yul\":9672:9679   */\n      dup9\n        /* \"#utility.yul\":9663:9669   */\n      dup3\n        /* \"#utility.yul\":9652:9661   */\n      dup10\n        /* \"#utility.yul\":9648:9670   */\n      add\n        /* \"#utility.yul\":9617:9680   */\n      tag_170\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":9607:9680   */\n      swap5\n      pop\n        /* \"#utility.yul\":9402:9690   */\n      pop\n        /* \"#utility.yul\":9757:9759   */\n      0x40\n        /* \"#utility.yul\":9746:9755   */\n      dup7\n        /* \"#utility.yul\":9742:9760   */\n      add\n        /* \"#utility.yul\":9729:9761   */\n      calldataload\n        /* \"#utility.yul\":9788:9806   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9780:9786   */\n      dup2\n        /* \"#utility.yul\":9777:9807   */\n      gt\n        /* \"#utility.yul\":9774:9891   */\n      iszero\n      tag_339\n      jumpi\n        /* \"#utility.yul\":9810:9889   */\n      tag_340\n      tag_144\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":9774:9891   */\n    tag_339:\n        /* \"#utility.yul\":9915:9978   */\n      tag_341\n        /* \"#utility.yul\":9970:9977   */\n      dup9\n        /* \"#utility.yul\":9961:9967   */\n      dup3\n        /* \"#utility.yul\":9950:9959   */\n      dup10\n        /* \"#utility.yul\":9946:9968   */\n      add\n        /* \"#utility.yul\":9915:9978   */\n      tag_170\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":9905:9978   */\n      swap4\n      pop\n        /* \"#utility.yul\":9700:9988   */\n      pop\n        /* \"#utility.yul\":10027:10029   */\n      0x60\n        /* \"#utility.yul\":10053:10105   */\n      tag_342\n        /* \"#utility.yul\":10097:10104   */\n      dup9\n        /* \"#utility.yul\":10088:10094   */\n      dup3\n        /* \"#utility.yul\":10077:10086   */\n      dup10\n        /* \"#utility.yul\":10073:10095   */\n      add\n        /* \"#utility.yul\":10053:10105   */\n      tag_173\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":10043:10105   */\n      swap3\n      pop\n        /* \"#utility.yul\":9998:10115   */\n      pop\n        /* \"#utility.yul\":10154:10157   */\n      0x80\n        /* \"#utility.yul\":10181:10233   */\n      tag_343\n        /* \"#utility.yul\":10225:10232   */\n      dup9\n        /* \"#utility.yul\":10216:10222   */\n      dup3\n        /* \"#utility.yul\":10205:10214   */\n      dup10\n        /* \"#utility.yul\":10201:10223   */\n      add\n        /* \"#utility.yul\":10181:10233   */\n      tag_173\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":10171:10233   */\n      swap2\n      pop\n        /* \"#utility.yul\":10125:10243   */\n      pop\n        /* \"#utility.yul\":8803:10250   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10256:10374   */\n    tag_174:\n        /* \"#utility.yul\":10343:10367   */\n      tag_345\n        /* \"#utility.yul\":10361:10366   */\n      dup2\n        /* \"#utility.yul\":10343:10367   */\n      tag_146\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":10338:10341   */\n      dup3\n        /* \"#utility.yul\":10331:10368   */\n      mstore\n        /* \"#utility.yul\":10256:10374   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10380:10602   */\n    tag_24:\n        /* \"#utility.yul\":10473:10477   */\n      0x00\n        /* \"#utility.yul\":10511:10513   */\n      0x20\n        /* \"#utility.yul\":10500:10509   */\n      dup3\n        /* \"#utility.yul\":10496:10514   */\n      add\n        /* \"#utility.yul\":10488:10514   */\n      swap1\n      pop\n        /* \"#utility.yul\":10524:10595   */\n      tag_347\n        /* \"#utility.yul\":10592:10593   */\n      0x00\n        /* \"#utility.yul\":10581:10590   */\n      dup4\n        /* \"#utility.yul\":10577:10594   */\n      add\n        /* \"#utility.yul\":10568:10574   */\n      dup5\n        /* \"#utility.yul\":10524:10595   */\n      tag_174\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":10380:10602   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10608:10777   */\n    tag_175:\n        /* \"#utility.yul\":10692:10703   */\n      0x00\n        /* \"#utility.yul\":10726:10732   */\n      dup3\n        /* \"#utility.yul\":10721:10724   */\n      dup3\n        /* \"#utility.yul\":10714:10733   */\n      mstore\n        /* \"#utility.yul\":10766:10770   */\n      0x20\n        /* \"#utility.yul\":10761:10764   */\n      dup3\n        /* \"#utility.yul\":10757:10771   */\n      add\n        /* \"#utility.yul\":10742:10771   */\n      swap1\n      pop\n        /* \"#utility.yul\":10608:10777   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10783:11003   */\n    tag_176:\n        /* \"#utility.yul\":10923:10957   */\n      0x4661696c656420746f206d696e74206e6f6e2d66756e6769626c6520746f6b65\n        /* \"#utility.yul\":10919:10920   */\n      0x00\n        /* \"#utility.yul\":10911:10917   */\n      dup3\n        /* \"#utility.yul\":10907:10921   */\n      add\n        /* \"#utility.yul\":10900:10958   */\n      mstore\n        /* \"#utility.yul\":10992:10995   */\n      0x6e00000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10987:10989   */\n      0x20\n        /* \"#utility.yul\":10979:10985   */\n      dup3\n        /* \"#utility.yul\":10975:10990   */\n      add\n        /* \"#utility.yul\":10968:10996   */\n      mstore\n        /* \"#utility.yul\":10783:11003   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11009:11375   */\n    tag_177:\n        /* \"#utility.yul\":11151:11154   */\n      0x00\n        /* \"#utility.yul\":11172:11239   */\n      tag_351\n        /* \"#utility.yul\":11236:11238   */\n      0x21\n        /* \"#utility.yul\":11231:11234   */\n      dup4\n        /* \"#utility.yul\":11172:11239   */\n      tag_175\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":11165:11239   */\n      swap2\n      pop\n        /* \"#utility.yul\":11248:11341   */\n      tag_352\n        /* \"#utility.yul\":11337:11340   */\n      dup3\n        /* \"#utility.yul\":11248:11341   */\n      tag_176\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":11366:11368   */\n      0x40\n        /* \"#utility.yul\":11361:11364   */\n      dup3\n        /* \"#utility.yul\":11357:11369   */\n      add\n        /* \"#utility.yul\":11350:11369   */\n      swap1\n      pop\n        /* \"#utility.yul\":11009:11375   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11381:11800   */\n    tag_30:\n        /* \"#utility.yul\":11547:11551   */\n      0x00\n        /* \"#utility.yul\":11585:11587   */\n      0x20\n        /* \"#utility.yul\":11574:11583   */\n      dup3\n        /* \"#utility.yul\":11570:11588   */\n      add\n        /* \"#utility.yul\":11562:11588   */\n      swap1\n      pop\n        /* \"#utility.yul\":11634:11643   */\n      dup2\n        /* \"#utility.yul\":11628:11632   */\n      dup2\n        /* \"#utility.yul\":11624:11644   */\n      sub\n        /* \"#utility.yul\":11620:11621   */\n      0x00\n        /* \"#utility.yul\":11609:11618   */\n      dup4\n        /* \"#utility.yul\":11605:11622   */\n      add\n        /* \"#utility.yul\":11598:11645   */\n      mstore\n        /* \"#utility.yul\":11662:11793   */\n      tag_354\n        /* \"#utility.yul\":11788:11792   */\n      dup2\n        /* \"#utility.yul\":11662:11793   */\n      tag_177\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":11654:11793   */\n      swap1\n      pop\n        /* \"#utility.yul\":11381:11800   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11806:11986   */\n    tag_33:\n        /* \"#utility.yul\":11854:11931   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11851:11852   */\n      0x00\n        /* \"#utility.yul\":11844:11932   */\n      mstore\n        /* \"#utility.yul\":11951:11955   */\n      0x32\n        /* \"#utility.yul\":11948:11949   */\n      0x04\n        /* \"#utility.yul\":11941:11956   */\n      mstore\n        /* \"#utility.yul\":11975:11979   */\n      0x24\n        /* \"#utility.yul\":11972:11973   */\n      0x00\n        /* \"#utility.yul\":11965:11980   */\n      revert\n        /* \"#utility.yul\":11992:12216   */\n    tag_178:\n        /* \"#utility.yul\":12132:12166   */\n      0x4661696c656420746f207472616e73666572206e6f6e2d66756e6769626c6520\n        /* \"#utility.yul\":12128:12129   */\n      0x00\n        /* \"#utility.yul\":12120:12126   */\n      dup3\n        /* \"#utility.yul\":12116:12130   */\n      add\n        /* \"#utility.yul\":12109:12167   */\n      mstore\n        /* \"#utility.yul\":12201:12208   */\n      0x746f6b656e000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12196:12198   */\n      0x20\n        /* \"#utility.yul\":12188:12194   */\n      dup3\n        /* \"#utility.yul\":12184:12199   */\n      add\n        /* \"#utility.yul\":12177:12209   */\n      mstore\n        /* \"#utility.yul\":11992:12216   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12222:12588   */\n    tag_179:\n        /* \"#utility.yul\":12364:12367   */\n      0x00\n        /* \"#utility.yul\":12385:12452   */\n      tag_358\n        /* \"#utility.yul\":12449:12451   */\n      0x25\n        /* \"#utility.yul\":12444:12447   */\n      dup4\n        /* \"#utility.yul\":12385:12452   */\n      tag_175\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":12378:12452   */\n      swap2\n      pop\n        /* \"#utility.yul\":12461:12554   */\n      tag_359\n        /* \"#utility.yul\":12550:12553   */\n      dup3\n        /* \"#utility.yul\":12461:12554   */\n      tag_178\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":12579:12581   */\n      0x40\n        /* \"#utility.yul\":12574:12577   */\n      dup3\n        /* \"#utility.yul\":12570:12582   */\n      add\n        /* \"#utility.yul\":12563:12582   */\n      swap1\n      pop\n        /* \"#utility.yul\":12222:12588   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12594:13013   */\n    tag_41:\n        /* \"#utility.yul\":12760:12764   */\n      0x00\n        /* \"#utility.yul\":12798:12800   */\n      0x20\n        /* \"#utility.yul\":12787:12796   */\n      dup3\n        /* \"#utility.yul\":12783:12801   */\n      add\n        /* \"#utility.yul\":12775:12801   */\n      swap1\n      pop\n        /* \"#utility.yul\":12847:12856   */\n      dup2\n        /* \"#utility.yul\":12841:12845   */\n      dup2\n        /* \"#utility.yul\":12837:12857   */\n      sub\n        /* \"#utility.yul\":12833:12834   */\n      0x00\n        /* \"#utility.yul\":12822:12831   */\n      dup4\n        /* \"#utility.yul\":12818:12835   */\n      add\n        /* \"#utility.yul\":12811:12858   */\n      mstore\n        /* \"#utility.yul\":12875:13006   */\n      tag_361\n        /* \"#utility.yul\":13001:13005   */\n      dup2\n        /* \"#utility.yul\":12875:13006   */\n      tag_179\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":12867:13006   */\n      swap1\n      pop\n        /* \"#utility.yul\":12594:13013   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13019:13120   */\n    tag_180:\n        /* \"#utility.yul\":13055:13062   */\n      0x00\n        /* \"#utility.yul\":13095:13113   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":13088:13093   */\n      dup3\n        /* \"#utility.yul\":13084:13114   */\n      and\n        /* \"#utility.yul\":13073:13114   */\n      swap1\n      pop\n        /* \"#utility.yul\":13019:13120   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13126:13241   */\n    tag_181:\n        /* \"#utility.yul\":13211:13234   */\n      tag_364\n        /* \"#utility.yul\":13228:13233   */\n      dup2\n        /* \"#utility.yul\":13211:13234   */\n      tag_180\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":13206:13209   */\n      dup3\n        /* \"#utility.yul\":13199:13235   */\n      mstore\n        /* \"#utility.yul\":13126:13241   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13247:13370   */\n    tag_182:\n        /* \"#utility.yul\":13323:13329   */\n      0x00\n        /* \"#utility.yul\":13357:13362   */\n      dup2\n        /* \"#utility.yul\":13351:13363   */\n      mload\n        /* \"#utility.yul\":13341:13363   */\n      swap1\n      pop\n        /* \"#utility.yul\":13247:13370   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13376:13569   */\n    tag_183:\n        /* \"#utility.yul\":13484:13495   */\n      0x00\n        /* \"#utility.yul\":13518:13524   */\n      dup3\n        /* \"#utility.yul\":13513:13516   */\n      dup3\n        /* \"#utility.yul\":13506:13525   */\n      mstore\n        /* \"#utility.yul\":13558:13562   */\n      0x20\n        /* \"#utility.yul\":13553:13556   */\n      dup3\n        /* \"#utility.yul\":13549:13563   */\n      add\n        /* \"#utility.yul\":13534:13563   */\n      swap1\n      pop\n        /* \"#utility.yul\":13376:13569   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13575:13716   */\n    tag_184:\n        /* \"#utility.yul\":13651:13655   */\n      0x00\n        /* \"#utility.yul\":13674:13677   */\n      dup2\n        /* \"#utility.yul\":13666:13677   */\n      swap1\n      pop\n        /* \"#utility.yul\":13704:13708   */\n      0x20\n        /* \"#utility.yul\":13699:13702   */\n      dup3\n        /* \"#utility.yul\":13695:13709   */\n      add\n        /* \"#utility.yul\":13687:13709   */\n      swap1\n      pop\n        /* \"#utility.yul\":13575:13716   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13722:13820   */\n    tag_185:\n        /* \"#utility.yul\":13773:13779   */\n      0x00\n        /* \"#utility.yul\":13807:13812   */\n      dup2\n        /* \"#utility.yul\":13801:13813   */\n      mload\n        /* \"#utility.yul\":13791:13813   */\n      swap1\n      pop\n        /* \"#utility.yul\":13722:13820   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13826:13984   */\n    tag_186:\n        /* \"#utility.yul\":13899:13910   */\n      0x00\n        /* \"#utility.yul\":13933:13939   */\n      dup3\n        /* \"#utility.yul\":13928:13931   */\n      dup3\n        /* \"#utility.yul\":13921:13940   */\n      mstore\n        /* \"#utility.yul\":13973:13977   */\n      0x20\n        /* \"#utility.yul\":13968:13971   */\n      dup3\n        /* \"#utility.yul\":13964:13978   */\n      add\n        /* \"#utility.yul\":13949:13978   */\n      swap1\n      pop\n        /* \"#utility.yul\":13826:13984   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13990:14236   */\n    tag_187:\n        /* \"#utility.yul\":14071:14072   */\n      0x00\n        /* \"#utility.yul\":14081:14194   */\n    tag_371:\n        /* \"#utility.yul\":14095:14101   */\n      dup4\n        /* \"#utility.yul\":14092:14093   */\n      dup2\n        /* \"#utility.yul\":14089:14102   */\n      lt\n        /* \"#utility.yul\":14081:14194   */\n      iszero\n      tag_373\n      jumpi\n        /* \"#utility.yul\":14180:14181   */\n      dup1\n        /* \"#utility.yul\":14175:14178   */\n      dup3\n        /* \"#utility.yul\":14171:14182   */\n      add\n        /* \"#utility.yul\":14165:14183   */\n      mload\n        /* \"#utility.yul\":14161:14162   */\n      dup2\n        /* \"#utility.yul\":14156:14159   */\n      dup5\n        /* \"#utility.yul\":14152:14163   */\n      add\n        /* \"#utility.yul\":14145:14184   */\n      mstore\n        /* \"#utility.yul\":14117:14119   */\n      0x20\n        /* \"#utility.yul\":14114:14115   */\n      dup2\n        /* \"#utility.yul\":14110:14120   */\n      add\n        /* \"#utility.yul\":14105:14120   */\n      swap1\n      pop\n        /* \"#utility.yul\":14081:14194   */\n      jump(tag_371)\n    tag_373:\n        /* \"#utility.yul\":14228:14229   */\n      0x00\n        /* \"#utility.yul\":14219:14225   */\n      dup5\n        /* \"#utility.yul\":14214:14217   */\n      dup5\n        /* \"#utility.yul\":14210:14226   */\n      add\n        /* \"#utility.yul\":14203:14230   */\n      mstore\n        /* \"#utility.yul\":14052:14236   */\n      pop\n        /* \"#utility.yul\":13990:14236   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14242:14595   */\n    tag_188:\n        /* \"#utility.yul\":14318:14321   */\n      0x00\n        /* \"#utility.yul\":14346:14384   */\n      tag_375\n        /* \"#utility.yul\":14378:14383   */\n      dup3\n        /* \"#utility.yul\":14346:14384   */\n      tag_185\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":14400:14460   */\n      tag_376\n        /* \"#utility.yul\":14453:14459   */\n      dup2\n        /* \"#utility.yul\":14448:14451   */\n      dup6\n        /* \"#utility.yul\":14400:14460   */\n      tag_186\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":14393:14460   */\n      swap4\n      pop\n        /* \"#utility.yul\":14469:14534   */\n      tag_377\n        /* \"#utility.yul\":14527:14533   */\n      dup2\n        /* \"#utility.yul\":14522:14525   */\n      dup6\n        /* \"#utility.yul\":14515:14519   */\n      0x20\n        /* \"#utility.yul\":14508:14513   */\n      dup7\n        /* \"#utility.yul\":14504:14520   */\n      add\n        /* \"#utility.yul\":14469:14534   */\n      tag_187\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":14559:14588   */\n      tag_378\n        /* \"#utility.yul\":14581:14587   */\n      dup2\n        /* \"#utility.yul\":14559:14588   */\n      tag_150\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":14554:14557   */\n      dup5\n        /* \"#utility.yul\":14550:14589   */\n      add\n        /* \"#utility.yul\":14543:14589   */\n      swap2\n      pop\n        /* \"#utility.yul\":14322:14595   */\n      pop\n        /* \"#utility.yul\":14242:14595   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14601:14793   */\n    tag_189:\n        /* \"#utility.yul\":14688:14698   */\n      0x00\n        /* \"#utility.yul\":14723:14787   */\n      tag_380\n        /* \"#utility.yul\":14783:14786   */\n      dup4\n        /* \"#utility.yul\":14775:14781   */\n      dup4\n        /* \"#utility.yul\":14723:14787   */\n      tag_188\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":14709:14787   */\n      swap1\n      pop\n        /* \"#utility.yul\":14601:14793   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14799:14921   */\n    tag_190:\n        /* \"#utility.yul\":14878:14882   */\n      0x00\n        /* \"#utility.yul\":14910:14914   */\n      0x20\n        /* \"#utility.yul\":14905:14908   */\n      dup3\n        /* \"#utility.yul\":14901:14915   */\n      add\n        /* \"#utility.yul\":14893:14915   */\n      swap1\n      pop\n        /* \"#utility.yul\":14799:14921   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14953:15936   */\n    tag_191:\n        /* \"#utility.yul\":15090:15093   */\n      0x00\n        /* \"#utility.yul\":15119:15182   */\n      tag_383\n        /* \"#utility.yul\":15176:15181   */\n      dup3\n        /* \"#utility.yul\":15119:15182   */\n      tag_182\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":15198:15293   */\n      tag_384\n        /* \"#utility.yul\":15286:15292   */\n      dup2\n        /* \"#utility.yul\":15281:15284   */\n      dup6\n        /* \"#utility.yul\":15198:15293   */\n      tag_183\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":15191:15293   */\n      swap4\n      pop\n        /* \"#utility.yul\":15319:15322   */\n      dup4\n        /* \"#utility.yul\":15364:15368   */\n      0x20\n        /* \"#utility.yul\":15356:15362   */\n      dup3\n        /* \"#utility.yul\":15352:15369   */\n      mul\n        /* \"#utility.yul\":15347:15350   */\n      dup6\n        /* \"#utility.yul\":15343:15370   */\n      add\n        /* \"#utility.yul\":15394:15459   */\n      tag_385\n        /* \"#utility.yul\":15453:15458   */\n      dup6\n        /* \"#utility.yul\":15394:15459   */\n      tag_184\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":15482:15489   */\n      dup1\n        /* \"#utility.yul\":15513:15514   */\n      0x00\n        /* \"#utility.yul\":15498:15891   */\n    tag_386:\n        /* \"#utility.yul\":15523:15529   */\n      dup6\n        /* \"#utility.yul\":15520:15521   */\n      dup2\n        /* \"#utility.yul\":15517:15530   */\n      lt\n        /* \"#utility.yul\":15498:15891   */\n      iszero\n      tag_388\n      jumpi\n        /* \"#utility.yul\":15594:15603   */\n      dup5\n        /* \"#utility.yul\":15588:15592   */\n      dup5\n        /* \"#utility.yul\":15584:15604   */\n      sub\n        /* \"#utility.yul\":15579:15582   */\n      dup10\n        /* \"#utility.yul\":15572:15605   */\n      mstore\n        /* \"#utility.yul\":15645:15651   */\n      dup2\n        /* \"#utility.yul\":15639:15652   */\n      mload\n        /* \"#utility.yul\":15673:15755   */\n      tag_389\n        /* \"#utility.yul\":15750:15754   */\n      dup6\n        /* \"#utility.yul\":15735:15748   */\n      dup3\n        /* \"#utility.yul\":15673:15755   */\n      tag_189\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":15665:15755   */\n      swap5\n      pop\n        /* \"#utility.yul\":15778:15847   */\n      tag_390\n        /* \"#utility.yul\":15840:15846   */\n      dup4\n        /* \"#utility.yul\":15778:15847   */\n      tag_190\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":15768:15847   */\n      swap3\n      pop\n        /* \"#utility.yul\":15876:15880   */\n      0x20\n        /* \"#utility.yul\":15871:15874   */\n      dup11\n        /* \"#utility.yul\":15867:15881   */\n      add\n        /* \"#utility.yul\":15860:15881   */\n      swap10\n      pop\n        /* \"#utility.yul\":15558:15891   */\n      pop\n        /* \"#utility.yul\":15545:15546   */\n      0x01\n        /* \"#utility.yul\":15542:15543   */\n      dup2\n        /* \"#utility.yul\":15538:15547   */\n      add\n        /* \"#utility.yul\":15533:15547   */\n      swap1\n      pop\n        /* \"#utility.yul\":15498:15891   */\n      jump(tag_386)\n    tag_388:\n        /* \"#utility.yul\":15502:15516   */\n      pop\n        /* \"#utility.yul\":15907:15911   */\n      dup3\n        /* \"#utility.yul\":15900:15911   */\n      swap8\n      pop\n        /* \"#utility.yul\":15927:15930   */\n      dup8\n        /* \"#utility.yul\":15920:15930   */\n      swap6\n      pop\n        /* \"#utility.yul\":15095:15936   */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14953:15936   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15942:16567   */\n    tag_63:\n        /* \"#utility.yul\":16157:16161   */\n      0x00\n        /* \"#utility.yul\":16195:16197   */\n      0x60\n        /* \"#utility.yul\":16184:16193   */\n      dup3\n        /* \"#utility.yul\":16180:16198   */\n      add\n        /* \"#utility.yul\":16172:16198   */\n      swap1\n      pop\n        /* \"#utility.yul\":16208:16279   */\n      tag_392\n        /* \"#utility.yul\":16276:16277   */\n      0x00\n        /* \"#utility.yul\":16265:16274   */\n      dup4\n        /* \"#utility.yul\":16261:16278   */\n      add\n        /* \"#utility.yul\":16252:16258   */\n      dup7\n        /* \"#utility.yul\":16208:16279   */\n      tag_174\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":16289:16359   */\n      tag_393\n        /* \"#utility.yul\":16355:16357   */\n      0x20\n        /* \"#utility.yul\":16344:16353   */\n      dup4\n        /* \"#utility.yul\":16340:16358   */\n      add\n        /* \"#utility.yul\":16331:16337   */\n      dup6\n        /* \"#utility.yul\":16289:16359   */\n      tag_181\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":16406:16415   */\n      dup2\n        /* \"#utility.yul\":16400:16404   */\n      dup2\n        /* \"#utility.yul\":16396:16416   */\n      sub\n        /* \"#utility.yul\":16391:16393   */\n      0x40\n        /* \"#utility.yul\":16380:16389   */\n      dup4\n        /* \"#utility.yul\":16376:16394   */\n      add\n        /* \"#utility.yul\":16369:16417   */\n      mstore\n        /* \"#utility.yul\":16434:16560   */\n      tag_394\n        /* \"#utility.yul\":16555:16559   */\n      dup2\n        /* \"#utility.yul\":16546:16552   */\n      dup5\n        /* \"#utility.yul\":16434:16560   */\n      tag_191\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":16426:16560   */\n      swap1\n      pop\n        /* \"#utility.yul\":15942:16567   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16573:16720   */\n    tag_192:\n        /* \"#utility.yul\":16674:16685   */\n      0x00\n        /* \"#utility.yul\":16711:16714   */\n      dup2\n        /* \"#utility.yul\":16696:16714   */\n      swap1\n      pop\n        /* \"#utility.yul\":16573:16720   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16726:17112   */\n    tag_193:\n        /* \"#utility.yul\":16830:16833   */\n      0x00\n        /* \"#utility.yul\":16858:16896   */\n      tag_397\n        /* \"#utility.yul\":16890:16895   */\n      dup3\n        /* \"#utility.yul\":16858:16896   */\n      tag_185\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":16912:17000   */\n      tag_398\n        /* \"#utility.yul\":16993:16999   */\n      dup2\n        /* \"#utility.yul\":16988:16991   */\n      dup6\n        /* \"#utility.yul\":16912:17000   */\n      tag_192\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":16905:17000   */\n      swap4\n      pop\n        /* \"#utility.yul\":17009:17074   */\n      tag_399\n        /* \"#utility.yul\":17067:17073   */\n      dup2\n        /* \"#utility.yul\":17062:17065   */\n      dup6\n        /* \"#utility.yul\":17055:17059   */\n      0x20\n        /* \"#utility.yul\":17048:17053   */\n      dup7\n        /* \"#utility.yul\":17044:17060   */\n      add\n        /* \"#utility.yul\":17009:17074   */\n      tag_187\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":17099:17105   */\n      dup1\n        /* \"#utility.yul\":17094:17097   */\n      dup5\n        /* \"#utility.yul\":17090:17106   */\n      add\n        /* \"#utility.yul\":17083:17106   */\n      swap2\n      pop\n        /* \"#utility.yul\":16834:17112   */\n      pop\n        /* \"#utility.yul\":16726:17112   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17118:17389   */\n    tag_65:\n        /* \"#utility.yul\":17248:17251   */\n      0x00\n        /* \"#utility.yul\":17270:17363   */\n      tag_401\n        /* \"#utility.yul\":17359:17362   */\n      dup3\n        /* \"#utility.yul\":17350:17356   */\n      dup5\n        /* \"#utility.yul\":17270:17363   */\n      tag_193\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":17263:17363   */\n      swap2\n      pop\n        /* \"#utility.yul\":17380:17383   */\n      dup2\n        /* \"#utility.yul\":17373:17383   */\n      swap1\n      pop\n        /* \"#utility.yul\":17118:17389   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17395:17485   */\n    tag_194:\n        /* \"#utility.yul\":17430:17437   */\n      0x00\n        /* \"#utility.yul\":17473:17478   */\n      dup2\n        /* \"#utility.yul\":17470:17471   */\n      0x03\n        /* \"#utility.yul\":17459:17479   */\n      signextend\n        /* \"#utility.yul\":17448:17479   */\n      swap1\n      pop\n        /* \"#utility.yul\":17395:17485   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17491:17609   */\n    tag_195:\n        /* \"#utility.yul\":17562:17584   */\n      tag_404\n        /* \"#utility.yul\":17578:17583   */\n      dup2\n        /* \"#utility.yul\":17562:17584   */\n      tag_194\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":17555:17560   */\n      dup2\n        /* \"#utility.yul\":17552:17585   */\n      eq\n        /* \"#utility.yul\":17542:17603   */\n      tag_405\n      jumpi\n        /* \"#utility.yul\":17599:17600   */\n      0x00\n        /* \"#utility.yul\":17596:17597   */\n      dup1\n        /* \"#utility.yul\":17589:17601   */\n      revert\n        /* \"#utility.yul\":17542:17603   */\n    tag_405:\n        /* \"#utility.yul\":17491:17609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17615:17754   */\n    tag_196:\n        /* \"#utility.yul\":17670:17675   */\n      0x00\n        /* \"#utility.yul\":17701:17707   */\n      dup2\n        /* \"#utility.yul\":17695:17708   */\n      mload\n        /* \"#utility.yul\":17686:17708   */\n      swap1\n      pop\n        /* \"#utility.yul\":17717:17748   */\n      tag_407\n        /* \"#utility.yul\":17742:17747   */\n      dup2\n        /* \"#utility.yul\":17717:17748   */\n      tag_195\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":17615:17754   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17760:17880   */\n    tag_197:\n        /* \"#utility.yul\":17832:17855   */\n      tag_409\n        /* \"#utility.yul\":17849:17854   */\n      dup2\n        /* \"#utility.yul\":17832:17855   */\n      tag_180\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":17825:17830   */\n      dup2\n        /* \"#utility.yul\":17822:17856   */\n      eq\n        /* \"#utility.yul\":17812:17874   */\n      tag_410\n      jumpi\n        /* \"#utility.yul\":17870:17871   */\n      0x00\n        /* \"#utility.yul\":17867:17868   */\n      dup1\n        /* \"#utility.yul\":17860:17872   */\n      revert\n        /* \"#utility.yul\":17812:17874   */\n    tag_410:\n        /* \"#utility.yul\":17760:17880   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17886:18027   */\n    tag_198:\n        /* \"#utility.yul\":17942:17947   */\n      0x00\n        /* \"#utility.yul\":17973:17979   */\n      dup2\n        /* \"#utility.yul\":17967:17980   */\n      mload\n        /* \"#utility.yul\":17958:17980   */\n      swap1\n      pop\n        /* \"#utility.yul\":17989:18021   */\n      tag_412\n        /* \"#utility.yul\":18015:18020   */\n      dup2\n        /* \"#utility.yul\":17989:18021   */\n      tag_197\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":17886:18027   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18033:18342   */\n    tag_199:\n        /* \"#utility.yul\":18108:18112   */\n      0x00\n        /* \"#utility.yul\":18198:18216   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":18190:18196   */\n      dup3\n        /* \"#utility.yul\":18187:18217   */\n      gt\n        /* \"#utility.yul\":18184:18240   */\n      iszero\n      tag_414\n      jumpi\n        /* \"#utility.yul\":18220:18238   */\n      tag_415\n      tag_45\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":18184:18240   */\n    tag_414:\n        /* \"#utility.yul\":18270:18274   */\n      0x20\n        /* \"#utility.yul\":18262:18268   */\n      dup3\n        /* \"#utility.yul\":18258:18275   */\n      mul\n        /* \"#utility.yul\":18250:18275   */\n      swap1\n      pop\n        /* \"#utility.yul\":18330:18334   */\n      0x20\n        /* \"#utility.yul\":18324:18328   */\n      dup2\n        /* \"#utility.yul\":18320:18335   */\n      add\n        /* \"#utility.yul\":18312:18335   */\n      swap1\n      pop\n        /* \"#utility.yul\":18033:18342   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18348:18487   */\n    tag_200:\n        /* \"#utility.yul\":18403:18408   */\n      0x00\n        /* \"#utility.yul\":18434:18440   */\n      dup2\n        /* \"#utility.yul\":18428:18441   */\n      mload\n        /* \"#utility.yul\":18419:18441   */\n      swap1\n      pop\n        /* \"#utility.yul\":18450:18481   */\n      tag_417\n        /* \"#utility.yul\":18475:18480   */\n      dup2\n        /* \"#utility.yul\":18450:18481   */\n      tag_164\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":18348:18487   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18508:19234   */\n    tag_201:\n        /* \"#utility.yul\":18613:18618   */\n      0x00\n        /* \"#utility.yul\":18638:18717   */\n      tag_419\n        /* \"#utility.yul\":18654:18716   */\n      tag_420\n        /* \"#utility.yul\":18709:18715   */\n      dup5\n        /* \"#utility.yul\":18654:18716   */\n      tag_199\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":18638:18717   */\n      tag_152\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":18629:18717   */\n      swap1\n      pop\n        /* \"#utility.yul\":18737:18742   */\n      dup1\n        /* \"#utility.yul\":18766:18772   */\n      dup4\n        /* \"#utility.yul\":18759:18764   */\n      dup3\n        /* \"#utility.yul\":18752:18773   */\n      mstore\n        /* \"#utility.yul\":18800:18804   */\n      0x20\n        /* \"#utility.yul\":18793:18798   */\n      dup3\n        /* \"#utility.yul\":18789:18805   */\n      add\n        /* \"#utility.yul\":18782:18805   */\n      swap1\n      pop\n        /* \"#utility.yul\":18853:18857   */\n      0x20\n        /* \"#utility.yul\":18845:18851   */\n      dup5\n        /* \"#utility.yul\":18841:18858   */\n      mul\n        /* \"#utility.yul\":18833:18839   */\n      dup4\n        /* \"#utility.yul\":18829:18859   */\n      add\n        /* \"#utility.yul\":18882:18885   */\n      dup6\n        /* \"#utility.yul\":18874:18880   */\n      dup2\n        /* \"#utility.yul\":18871:18886   */\n      gt\n        /* \"#utility.yul\":18868:18990   */\n      iszero\n      tag_421\n      jumpi\n        /* \"#utility.yul\":18901:18980   */\n      tag_422\n      tag_154\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":18868:18990   */\n    tag_421:\n        /* \"#utility.yul\":19016:19022   */\n      dup4\n        /* \"#utility.yul\":18999:19228   */\n    tag_423:\n        /* \"#utility.yul\":19033:19039   */\n      dup2\n        /* \"#utility.yul\":19028:19031   */\n      dup2\n        /* \"#utility.yul\":19025:19040   */\n      lt\n        /* \"#utility.yul\":18999:19228   */\n      iszero\n      tag_425\n      jumpi\n        /* \"#utility.yul\":19108:19111   */\n      dup1\n        /* \"#utility.yul\":19137:19183   */\n      tag_426\n        /* \"#utility.yul\":19179:19182   */\n      dup9\n        /* \"#utility.yul\":19167:19177   */\n      dup3\n        /* \"#utility.yul\":19137:19183   */\n      tag_200\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":19132:19135   */\n      dup5\n        /* \"#utility.yul\":19125:19184   */\n      mstore\n        /* \"#utility.yul\":19213:19217   */\n      0x20\n        /* \"#utility.yul\":19208:19211   */\n      dup5\n        /* \"#utility.yul\":19204:19218   */\n      add\n        /* \"#utility.yul\":19197:19218   */\n      swap4\n      pop\n        /* \"#utility.yul\":19075:19228   */\n      pop\n        /* \"#utility.yul\":19059:19063   */\n      0x20\n        /* \"#utility.yul\":19054:19057   */\n      dup2\n        /* \"#utility.yul\":19050:19064   */\n      add\n        /* \"#utility.yul\":19043:19064   */\n      swap1\n      pop\n        /* \"#utility.yul\":18999:19228   */\n      jump(tag_423)\n    tag_425:\n        /* \"#utility.yul\":19003:19024   */\n      pop\n        /* \"#utility.yul\":18619:19234   */\n      pop\n      pop\n        /* \"#utility.yul\":18508:19234   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19255:19636   */\n    tag_202:\n        /* \"#utility.yul\":19335:19340   */\n      0x00\n        /* \"#utility.yul\":19384:19387   */\n      dup3\n        /* \"#utility.yul\":19377:19381   */\n      0x1f\n        /* \"#utility.yul\":19369:19375   */\n      dup4\n        /* \"#utility.yul\":19365:19382   */\n      add\n        /* \"#utility.yul\":19361:19388   */\n      slt\n        /* \"#utility.yul\":19351:19473   */\n      tag_428\n      jumpi\n        /* \"#utility.yul\":19392:19471   */\n      tag_429\n      tag_149\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":19351:19473   */\n    tag_428:\n        /* \"#utility.yul\":19502:19508   */\n      dup2\n        /* \"#utility.yul\":19496:19509   */\n      mload\n        /* \"#utility.yul\":19527:19630   */\n      tag_430\n        /* \"#utility.yul\":19626:19629   */\n      dup5\n        /* \"#utility.yul\":19618:19624   */\n      dup3\n        /* \"#utility.yul\":19611:19615   */\n      0x20\n        /* \"#utility.yul\":19603:19609   */\n      dup7\n        /* \"#utility.yul\":19599:19616   */\n      add\n        /* \"#utility.yul\":19527:19630   */\n      tag_201\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":19518:19630   */\n      swap2\n      pop\n        /* \"#utility.yul\":19341:19636   */\n      pop\n        /* \"#utility.yul\":19255:19636   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19642:20498   */\n    tag_75:\n        /* \"#utility.yul\":19750:19756   */\n      0x00\n        /* \"#utility.yul\":19758:19764   */\n      dup1\n        /* \"#utility.yul\":19766:19772   */\n      0x00\n        /* \"#utility.yul\":19815:19817   */\n      0x60\n        /* \"#utility.yul\":19803:19812   */\n      dup5\n        /* \"#utility.yul\":19794:19801   */\n      dup7\n        /* \"#utility.yul\":19790:19813   */\n      sub\n        /* \"#utility.yul\":19786:19818   */\n      slt\n        /* \"#utility.yul\":19783:19902   */\n      iszero\n      tag_432\n      jumpi\n        /* \"#utility.yul\":19821:19900   */\n      tag_433\n      tag_143\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":19783:19902   */\n    tag_432:\n        /* \"#utility.yul\":19941:19942   */\n      0x00\n        /* \"#utility.yul\":19966:20028   */\n      tag_434\n        /* \"#utility.yul\":20020:20027   */\n      dup7\n        /* \"#utility.yul\":20011:20017   */\n      dup3\n        /* \"#utility.yul\":20000:20009   */\n      dup8\n        /* \"#utility.yul\":19996:20018   */\n      add\n        /* \"#utility.yul\":19966:20028   */\n      tag_196\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":19956:20028   */\n      swap4\n      pop\n        /* \"#utility.yul\":19912:20038   */\n      pop\n        /* \"#utility.yul\":20077:20079   */\n      0x20\n        /* \"#utility.yul\":20103:20166   */\n      tag_435\n        /* \"#utility.yul\":20158:20165   */\n      dup7\n        /* \"#utility.yul\":20149:20155   */\n      dup3\n        /* \"#utility.yul\":20138:20147   */\n      dup8\n        /* \"#utility.yul\":20134:20156   */\n      add\n        /* \"#utility.yul\":20103:20166   */\n      tag_198\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":20093:20166   */\n      swap3\n      pop\n        /* \"#utility.yul\":20048:20176   */\n      pop\n        /* \"#utility.yul\":20236:20238   */\n      0x40\n        /* \"#utility.yul\":20225:20234   */\n      dup5\n        /* \"#utility.yul\":20221:20239   */\n      add\n        /* \"#utility.yul\":20215:20240   */\n      mload\n        /* \"#utility.yul\":20267:20285   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":20259:20265   */\n      dup2\n        /* \"#utility.yul\":20256:20286   */\n      gt\n        /* \"#utility.yul\":20253:20370   */\n      iszero\n      tag_436\n      jumpi\n        /* \"#utility.yul\":20289:20368   */\n      tag_437\n      tag_144\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":20253:20370   */\n    tag_436:\n        /* \"#utility.yul\":20394:20481   */\n      tag_438\n        /* \"#utility.yul\":20473:20480   */\n      dup7\n        /* \"#utility.yul\":20464:20470   */\n      dup3\n        /* \"#utility.yul\":20453:20462   */\n      dup8\n        /* \"#utility.yul\":20449:20471   */\n      add\n        /* \"#utility.yul\":20394:20481   */\n      tag_202\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":20384:20481   */\n      swap2\n      pop\n        /* \"#utility.yul\":20186:20491   */\n      pop\n        /* \"#utility.yul\":19642:20498   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":20504:20836   */\n    tag_78:\n        /* \"#utility.yul\":20625:20629   */\n      0x00\n        /* \"#utility.yul\":20663:20665   */\n      0x40\n        /* \"#utility.yul\":20652:20661   */\n      dup3\n        /* \"#utility.yul\":20648:20666   */\n      add\n        /* \"#utility.yul\":20640:20666   */\n      swap1\n      pop\n        /* \"#utility.yul\":20676:20747   */\n      tag_440\n        /* \"#utility.yul\":20744:20745   */\n      0x00\n        /* \"#utility.yul\":20733:20742   */\n      dup4\n        /* \"#utility.yul\":20729:20746   */\n      add\n        /* \"#utility.yul\":20720:20726   */\n      dup6\n        /* \"#utility.yul\":20676:20747   */\n      tag_174\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":20757:20829   */\n      tag_441\n        /* \"#utility.yul\":20825:20827   */\n      0x20\n        /* \"#utility.yul\":20814:20823   */\n      dup4\n        /* \"#utility.yul\":20810:20828   */\n      add\n        /* \"#utility.yul\":20801:20807   */\n      dup5\n        /* \"#utility.yul\":20757:20829   */\n      tag_174\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":20504:20836   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20842:21189   */\n    tag_86:\n        /* \"#utility.yul\":20910:20916   */\n      0x00\n        /* \"#utility.yul\":20959:20961   */\n      0x20\n        /* \"#utility.yul\":20947:20956   */\n      dup3\n        /* \"#utility.yul\":20938:20945   */\n      dup5\n        /* \"#utility.yul\":20934:20957   */\n      sub\n        /* \"#utility.yul\":20930:20962   */\n      slt\n        /* \"#utility.yul\":20927:21046   */\n      iszero\n      tag_443\n      jumpi\n        /* \"#utility.yul\":20965:21044   */\n      tag_444\n      tag_143\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":20927:21046   */\n    tag_443:\n        /* \"#utility.yul\":21085:21086   */\n      0x00\n        /* \"#utility.yul\":21110:21172   */\n      tag_445\n        /* \"#utility.yul\":21164:21171   */\n      dup5\n        /* \"#utility.yul\":21155:21161   */\n      dup3\n        /* \"#utility.yul\":21144:21153   */\n      dup6\n        /* \"#utility.yul\":21140:21162   */\n      add\n        /* \"#utility.yul\":21110:21172   */\n      tag_196\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":21100:21172   */\n      swap2\n      pop\n        /* \"#utility.yul\":21056:21182   */\n      pop\n        /* \"#utility.yul\":20842:21189   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21195:21740   */\n    tag_89:\n        /* \"#utility.yul\":21368:21372   */\n      0x00\n        /* \"#utility.yul\":21406:21409   */\n      0x80\n        /* \"#utility.yul\":21395:21404   */\n      dup3\n        /* \"#utility.yul\":21391:21410   */\n      add\n        /* \"#utility.yul\":21383:21410   */\n      swap1\n      pop\n        /* \"#utility.yul\":21420:21491   */\n      tag_447\n        /* \"#utility.yul\":21488:21489   */\n      0x00\n        /* \"#utility.yul\":21477:21486   */\n      dup4\n        /* \"#utility.yul\":21473:21490   */\n      add\n        /* \"#utility.yul\":21464:21470   */\n      dup8\n        /* \"#utility.yul\":21420:21491   */\n      tag_174\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":21501:21573   */\n      tag_448\n        /* \"#utility.yul\":21569:21571   */\n      0x20\n        /* \"#utility.yul\":21558:21567   */\n      dup4\n        /* \"#utility.yul\":21554:21572   */\n      add\n        /* \"#utility.yul\":21545:21551   */\n      dup7\n        /* \"#utility.yul\":21501:21573   */\n      tag_174\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":21583:21655   */\n      tag_449\n        /* \"#utility.yul\":21651:21653   */\n      0x40\n        /* \"#utility.yul\":21640:21649   */\n      dup4\n        /* \"#utility.yul\":21636:21654   */\n      add\n        /* \"#utility.yul\":21627:21633   */\n      dup6\n        /* \"#utility.yul\":21583:21655   */\n      tag_174\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":21665:21733   */\n      tag_450\n        /* \"#utility.yul\":21729:21731   */\n      0x60\n        /* \"#utility.yul\":21718:21727   */\n      dup4\n        /* \"#utility.yul\":21714:21732   */\n      add\n        /* \"#utility.yul\":21705:21711   */\n      dup5\n        /* \"#utility.yul\":21665:21733   */\n      tag_163\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":21195:21740   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21746:21845   */\n    tag_203:\n        /* \"#utility.yul\":21798:21804   */\n      0x00\n        /* \"#utility.yul\":21832:21837   */\n      dup2\n        /* \"#utility.yul\":21826:21838   */\n      mload\n        /* \"#utility.yul\":21816:21838   */\n      swap1\n      pop\n        /* \"#utility.yul\":21746:21845   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21851:22010   */\n    tag_204:\n        /* \"#utility.yul\":21925:21936   */\n      0x00\n        /* \"#utility.yul\":21959:21965   */\n      dup3\n        /* \"#utility.yul\":21954:21957   */\n      dup3\n        /* \"#utility.yul\":21947:21966   */\n      mstore\n        /* \"#utility.yul\":21999:22003   */\n      0x20\n        /* \"#utility.yul\":21994:21997   */\n      dup3\n        /* \"#utility.yul\":21990:22004   */\n      add\n        /* \"#utility.yul\":21975:22004   */\n      swap1\n      pop\n        /* \"#utility.yul\":21851:22010   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22016:22373   */\n    tag_205:\n        /* \"#utility.yul\":22094:22097   */\n      0x00\n        /* \"#utility.yul\":22122:22161   */\n      tag_454\n        /* \"#utility.yul\":22155:22160   */\n      dup3\n        /* \"#utility.yul\":22122:22161   */\n      tag_203\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":22177:22238   */\n      tag_455\n        /* \"#utility.yul\":22231:22237   */\n      dup2\n        /* \"#utility.yul\":22226:22229   */\n      dup6\n        /* \"#utility.yul\":22177:22238   */\n      tag_204\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":22170:22238   */\n      swap4\n      pop\n        /* \"#utility.yul\":22247:22312   */\n      tag_456\n        /* \"#utility.yul\":22305:22311   */\n      dup2\n        /* \"#utility.yul\":22300:22303   */\n      dup6\n        /* \"#utility.yul\":22293:22297   */\n      0x20\n        /* \"#utility.yul\":22286:22291   */\n      dup7\n        /* \"#utility.yul\":22282:22298   */\n      add\n        /* \"#utility.yul\":22247:22312   */\n      tag_187\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":22337:22366   */\n      tag_457\n        /* \"#utility.yul\":22359:22365   */\n      dup2\n        /* \"#utility.yul\":22337:22366   */\n      tag_150\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":22332:22335   */\n      dup5\n        /* \"#utility.yul\":22328:22367   */\n      add\n        /* \"#utility.yul\":22321:22367   */\n      swap2\n      pop\n        /* \"#utility.yul\":22098:22373   */\n      pop\n        /* \"#utility.yul\":22016:22373   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22379:22487   */\n    tag_206:\n        /* \"#utility.yul\":22456:22480   */\n      tag_459\n        /* \"#utility.yul\":22474:22479   */\n      dup2\n        /* \"#utility.yul\":22456:22480   */\n      tag_146\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":22451:22454   */\n      dup3\n        /* \"#utility.yul\":22444:22481   */\n      mstore\n        /* \"#utility.yul\":22379:22487   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22493:22583   */\n    tag_207:\n        /* \"#utility.yul\":22527:22534   */\n      0x00\n        /* \"#utility.yul\":22570:22575   */\n      dup2\n        /* \"#utility.yul\":22563:22576   */\n      iszero\n        /* \"#utility.yul\":22556:22577   */\n      iszero\n        /* \"#utility.yul\":22545:22577   */\n      swap1\n      pop\n        /* \"#utility.yul\":22493:22583   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22589:22688   */\n    tag_208:\n        /* \"#utility.yul\":22660:22681   */\n      tag_462\n        /* \"#utility.yul\":22675:22680   */\n      dup2\n        /* \"#utility.yul\":22660:22681   */\n      tag_207\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":22655:22658   */\n      dup3\n        /* \"#utility.yul\":22648:22682   */\n      mstore\n        /* \"#utility.yul\":22589:22688   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22694:22799   */\n    tag_209:\n        /* \"#utility.yul\":22769:22792   */\n      tag_464\n        /* \"#utility.yul\":22786:22791   */\n      dup2\n        /* \"#utility.yul\":22769:22792   */\n      tag_171\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":22764:22767   */\n      dup3\n        /* \"#utility.yul\":22757:22793   */\n      mstore\n        /* \"#utility.yul\":22694:22799   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22805:22945   */\n    tag_210:\n        /* \"#utility.yul\":22898:22904   */\n      0x00\n        /* \"#utility.yul\":22932:22937   */\n      dup2\n        /* \"#utility.yul\":22926:22938   */\n      mload\n        /* \"#utility.yul\":22916:22938   */\n      swap1\n      pop\n        /* \"#utility.yul\":22805:22945   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22951:23151   */\n    tag_211:\n        /* \"#utility.yul\":23066:23077   */\n      0x00\n        /* \"#utility.yul\":23100:23106   */\n      dup3\n        /* \"#utility.yul\":23095:23098   */\n      dup3\n        /* \"#utility.yul\":23088:23107   */\n      mstore\n        /* \"#utility.yul\":23140:23144   */\n      0x20\n        /* \"#utility.yul\":23135:23138   */\n      dup3\n        /* \"#utility.yul\":23131:23145   */\n      add\n        /* \"#utility.yul\":23116:23145   */\n      swap1\n      pop\n        /* \"#utility.yul\":22951:23151   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23157:23315   */\n    tag_212:\n        /* \"#utility.yul\":23250:23254   */\n      0x00\n        /* \"#utility.yul\":23273:23276   */\n      dup2\n        /* \"#utility.yul\":23265:23276   */\n      swap1\n      pop\n        /* \"#utility.yul\":23303:23307   */\n      0x20\n        /* \"#utility.yul\":23298:23301   */\n      dup3\n        /* \"#utility.yul\":23294:23308   */\n      add\n        /* \"#utility.yul\":23286:23308   */\n      swap1\n      pop\n        /* \"#utility.yul\":23157:23315   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23321:23398   */\n    tag_213:\n        /* \"#utility.yul\":23358:23365   */\n      0x00\n        /* \"#utility.yul\":23387:23392   */\n      dup2\n        /* \"#utility.yul\":23376:23392   */\n      swap1\n      pop\n        /* \"#utility.yul\":23321:23398   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23404:23512   */\n    tag_214:\n        /* \"#utility.yul\":23481:23505   */\n      tag_470\n        /* \"#utility.yul\":23499:23504   */\n      dup2\n        /* \"#utility.yul\":23481:23505   */\n      tag_213\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":23476:23479   */\n      dup3\n        /* \"#utility.yul\":23469:23506   */\n      mstore\n        /* \"#utility.yul\":23404:23512   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23600:24831   */\n    tag_215:\n        /* \"#utility.yul\":23711:23714   */\n      0x00\n        /* \"#utility.yul\":23747:23751   */\n      0xa0\n        /* \"#utility.yul\":23742:23745   */\n      dup4\n        /* \"#utility.yul\":23738:23752   */\n      add\n        /* \"#utility.yul\":23847:23851   */\n      0x00\n        /* \"#utility.yul\":23840:23845   */\n      dup4\n        /* \"#utility.yul\":23836:23852   */\n      add\n        /* \"#utility.yul\":23830:23853   */\n      mload\n        /* \"#utility.yul\":23866:23923   */\n      tag_472\n        /* \"#utility.yul\":23917:23921   */\n      0x00\n        /* \"#utility.yul\":23912:23915   */\n      dup7\n        /* \"#utility.yul\":23908:23922   */\n      add\n        /* \"#utility.yul\":23894:23906   */\n      dup3\n        /* \"#utility.yul\":23866:23923   */\n      tag_208\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":23762:23933   */\n      pop\n        /* \"#utility.yul\":24021:24025   */\n      0x20\n        /* \"#utility.yul\":24014:24019   */\n      dup4\n        /* \"#utility.yul\":24010:24026   */\n      add\n        /* \"#utility.yul\":24004:24027   */\n      mload\n        /* \"#utility.yul\":24040:24103   */\n      tag_473\n        /* \"#utility.yul\":24097:24101   */\n      0x20\n        /* \"#utility.yul\":24092:24095   */\n      dup7\n        /* \"#utility.yul\":24088:24102   */\n      add\n        /* \"#utility.yul\":24074:24086   */\n      dup3\n        /* \"#utility.yul\":24040:24103   */\n      tag_206\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":23943:24113   */\n      pop\n        /* \"#utility.yul\":24198:24202   */\n      0x40\n        /* \"#utility.yul\":24191:24196   */\n      dup4\n        /* \"#utility.yul\":24187:24203   */\n      add\n        /* \"#utility.yul\":24181:24204   */\n      mload\n        /* \"#utility.yul\":24251:24254   */\n      dup5\n        /* \"#utility.yul\":24245:24249   */\n      dup3\n        /* \"#utility.yul\":24241:24255   */\n      sub\n        /* \"#utility.yul\":24234:24238   */\n      0x40\n        /* \"#utility.yul\":24229:24232   */\n      dup7\n        /* \"#utility.yul\":24225:24239   */\n      add\n        /* \"#utility.yul\":24218:24256   */\n      mstore\n        /* \"#utility.yul\":24277:24348   */\n      tag_474\n        /* \"#utility.yul\":24343:24347   */\n      dup3\n        /* \"#utility.yul\":24329:24341   */\n      dup3\n        /* \"#utility.yul\":24277:24348   */\n      tag_188\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":24269:24348   */\n      swap2\n      pop\n        /* \"#utility.yul\":24123:24359   */\n      pop\n        /* \"#utility.yul\":24452:24456   */\n      0x60\n        /* \"#utility.yul\":24445:24450   */\n      dup4\n        /* \"#utility.yul\":24441:24457   */\n      add\n        /* \"#utility.yul\":24435:24458   */\n      mload\n        /* \"#utility.yul\":24505:24508   */\n      dup5\n        /* \"#utility.yul\":24499:24503   */\n      dup3\n        /* \"#utility.yul\":24495:24509   */\n      sub\n        /* \"#utility.yul\":24488:24492   */\n      0x60\n        /* \"#utility.yul\":24483:24486   */\n      dup7\n        /* \"#utility.yul\":24479:24493   */\n      add\n        /* \"#utility.yul\":24472:24510   */\n      mstore\n        /* \"#utility.yul\":24531:24602   */\n      tag_475\n        /* \"#utility.yul\":24597:24601   */\n      dup3\n        /* \"#utility.yul\":24583:24595   */\n      dup3\n        /* \"#utility.yul\":24531:24602   */\n      tag_188\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":24523:24602   */\n      swap2\n      pop\n        /* \"#utility.yul\":24369:24613   */\n      pop\n        /* \"#utility.yul\":24712:24716   */\n      0x80\n        /* \"#utility.yul\":24705:24710   */\n      dup4\n        /* \"#utility.yul\":24701:24717   */\n      add\n        /* \"#utility.yul\":24695:24718   */\n      mload\n        /* \"#utility.yul\":24731:24794   */\n      tag_476\n        /* \"#utility.yul\":24788:24792   */\n      0x80\n        /* \"#utility.yul\":24783:24786   */\n      dup7\n        /* \"#utility.yul\":24779:24793   */\n      add\n        /* \"#utility.yul\":24765:24777   */\n      dup3\n        /* \"#utility.yul\":24731:24794   */\n      tag_206\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":24623:24804   */\n      pop\n        /* \"#utility.yul\":24821:24825   */\n      dup1\n        /* \"#utility.yul\":24814:24825   */\n      swap2\n      pop\n        /* \"#utility.yul\":23716:24831   */\n      pop\n        /* \"#utility.yul\":23600:24831   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24919:25551   */\n    tag_216:\n        /* \"#utility.yul\":25030:25033   */\n      0x00\n        /* \"#utility.yul\":25066:25070   */\n      0x40\n        /* \"#utility.yul\":25061:25064   */\n      dup4\n        /* \"#utility.yul\":25057:25071   */\n      add\n        /* \"#utility.yul\":25156:25160   */\n      0x00\n        /* \"#utility.yul\":25149:25154   */\n      dup4\n        /* \"#utility.yul\":25145:25161   */\n      add\n        /* \"#utility.yul\":25139:25162   */\n      mload\n        /* \"#utility.yul\":25175:25238   */\n      tag_478\n        /* \"#utility.yul\":25232:25236   */\n      0x00\n        /* \"#utility.yul\":25227:25230   */\n      dup7\n        /* \"#utility.yul\":25223:25237   */\n      add\n        /* \"#utility.yul\":25209:25221   */\n      dup3\n        /* \"#utility.yul\":25175:25238   */\n      tag_214\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":25081:25248   */\n      pop\n        /* \"#utility.yul\":25329:25333   */\n      0x20\n        /* \"#utility.yul\":25322:25327   */\n      dup4\n        /* \"#utility.yul\":25318:25334   */\n      add\n        /* \"#utility.yul\":25312:25335   */\n      mload\n        /* \"#utility.yul\":25382:25385   */\n      dup5\n        /* \"#utility.yul\":25376:25380   */\n      dup3\n        /* \"#utility.yul\":25372:25386   */\n      sub\n        /* \"#utility.yul\":25365:25369   */\n      0x20\n        /* \"#utility.yul\":25360:25363   */\n      dup7\n        /* \"#utility.yul\":25356:25370   */\n      add\n        /* \"#utility.yul\":25349:25387   */\n      mstore\n        /* \"#utility.yul\":25408:25513   */\n      tag_479\n        /* \"#utility.yul\":25508:25512   */\n      dup3\n        /* \"#utility.yul\":25494:25506   */\n      dup3\n        /* \"#utility.yul\":25408:25513   */\n      tag_215\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":25400:25513   */\n      swap2\n      pop\n        /* \"#utility.yul\":25258:25524   */\n      pop\n        /* \"#utility.yul\":25541:25545   */\n      dup1\n        /* \"#utility.yul\":25534:25545   */\n      swap2\n      pop\n        /* \"#utility.yul\":25035:25551   */\n      pop\n        /* \"#utility.yul\":24919:25551   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25557:25817   */\n    tag_217:\n        /* \"#utility.yul\":25678:25688   */\n      0x00\n        /* \"#utility.yul\":25713:25811   */\n      tag_481\n        /* \"#utility.yul\":25807:25810   */\n      dup4\n        /* \"#utility.yul\":25799:25805   */\n      dup4\n        /* \"#utility.yul\":25713:25811   */\n      tag_216\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":25699:25811   */\n      swap1\n      pop\n        /* \"#utility.yul\":25557:25817   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25823:25962   */\n    tag_218:\n        /* \"#utility.yul\":25919:25923   */\n      0x00\n        /* \"#utility.yul\":25951:25955   */\n      0x20\n        /* \"#utility.yul\":25946:25949   */\n      dup3\n        /* \"#utility.yul\":25942:25956   */\n      add\n        /* \"#utility.yul\":25934:25956   */\n      swap1\n      pop\n        /* \"#utility.yul\":25823:25962   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26054:27153   */\n    tag_219:\n        /* \"#utility.yul\":26215:26218   */\n      0x00\n        /* \"#utility.yul\":26244:26324   */\n      tag_484\n        /* \"#utility.yul\":26318:26323   */\n      dup3\n        /* \"#utility.yul\":26244:26324   */\n      tag_210\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":26340:26442   */\n      tag_485\n        /* \"#utility.yul\":26435:26441   */\n      dup2\n        /* \"#utility.yul\":26430:26433   */\n      dup6\n        /* \"#utility.yul\":26340:26442   */\n      tag_211\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":26333:26442   */\n      swap4\n      pop\n        /* \"#utility.yul\":26468:26471   */\n      dup4\n        /* \"#utility.yul\":26513:26517   */\n      0x20\n        /* \"#utility.yul\":26505:26511   */\n      dup3\n        /* \"#utility.yul\":26501:26518   */\n      mul\n        /* \"#utility.yul\":26496:26499   */\n      dup6\n        /* \"#utility.yul\":26492:26519   */\n      add\n        /* \"#utility.yul\":26543:26625   */\n      tag_486\n        /* \"#utility.yul\":26619:26624   */\n      dup6\n        /* \"#utility.yul\":26543:26625   */\n      tag_212\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":26648:26655   */\n      dup1\n        /* \"#utility.yul\":26679:26680   */\n      0x00\n        /* \"#utility.yul\":26664:27108   */\n    tag_487:\n        /* \"#utility.yul\":26689:26695   */\n      dup6\n        /* \"#utility.yul\":26686:26687   */\n      dup2\n        /* \"#utility.yul\":26683:26696   */\n      lt\n        /* \"#utility.yul\":26664:27108   */\n      iszero\n      tag_489\n      jumpi\n        /* \"#utility.yul\":26760:26769   */\n      dup5\n        /* \"#utility.yul\":26754:26758   */\n      dup5\n        /* \"#utility.yul\":26750:26770   */\n      sub\n        /* \"#utility.yul\":26745:26748   */\n      dup10\n        /* \"#utility.yul\":26738:26771   */\n      mstore\n        /* \"#utility.yul\":26811:26817   */\n      dup2\n        /* \"#utility.yul\":26805:26818   */\n      mload\n        /* \"#utility.yul\":26839:26955   */\n      tag_490\n        /* \"#utility.yul\":26950:26954   */\n      dup6\n        /* \"#utility.yul\":26935:26948   */\n      dup3\n        /* \"#utility.yul\":26839:26955   */\n      tag_217\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":26831:26955   */\n      swap5\n      pop\n        /* \"#utility.yul\":26978:27064   */\n      tag_491\n        /* \"#utility.yul\":27057:27063   */\n      dup4\n        /* \"#utility.yul\":26978:27064   */\n      tag_218\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":26968:27064   */\n      swap3\n      pop\n        /* \"#utility.yul\":27093:27097   */\n      0x20\n        /* \"#utility.yul\":27088:27091   */\n      dup11\n        /* \"#utility.yul\":27084:27098   */\n      add\n        /* \"#utility.yul\":27077:27098   */\n      swap10\n      pop\n        /* \"#utility.yul\":26724:27108   */\n      pop\n        /* \"#utility.yul\":26711:26712   */\n      0x01\n        /* \"#utility.yul\":26708:26709   */\n      dup2\n        /* \"#utility.yul\":26704:26713   */\n      add\n        /* \"#utility.yul\":26699:26713   */\n      swap1\n      pop\n        /* \"#utility.yul\":26664:27108   */\n      jump(tag_487)\n    tag_489:\n        /* \"#utility.yul\":26668:26682   */\n      pop\n        /* \"#utility.yul\":27124:27128   */\n      dup3\n        /* \"#utility.yul\":27117:27128   */\n      swap8\n      pop\n        /* \"#utility.yul\":27144:27147   */\n      dup8\n        /* \"#utility.yul\":27137:27147   */\n      swap6\n      pop\n        /* \"#utility.yul\":26220:27153   */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":26054:27153   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27237:27927   */\n    tag_220:\n        /* \"#utility.yul\":27372:27376   */\n      0x60\n        /* \"#utility.yul\":27367:27370   */\n      dup3\n        /* \"#utility.yul\":27363:27377   */\n      add\n        /* \"#utility.yul\":27461:27465   */\n      0x00\n        /* \"#utility.yul\":27454:27459   */\n      dup3\n        /* \"#utility.yul\":27450:27466   */\n      add\n        /* \"#utility.yul\":27444:27467   */\n      mload\n        /* \"#utility.yul\":27480:27541   */\n      tag_493\n        /* \"#utility.yul\":27535:27539   */\n      0x00\n        /* \"#utility.yul\":27530:27533   */\n      dup6\n        /* \"#utility.yul\":27526:27540   */\n      add\n        /* \"#utility.yul\":27512:27524   */\n      dup3\n        /* \"#utility.yul\":27480:27541   */\n      tag_209\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":27387:27551   */\n      pop\n        /* \"#utility.yul\":27645:27649   */\n      0x20\n        /* \"#utility.yul\":27638:27643   */\n      dup3\n        /* \"#utility.yul\":27634:27650   */\n      add\n        /* \"#utility.yul\":27628:27651   */\n      mload\n        /* \"#utility.yul\":27664:27727   */\n      tag_494\n        /* \"#utility.yul\":27721:27725   */\n      0x20\n        /* \"#utility.yul\":27716:27719   */\n      dup6\n        /* \"#utility.yul\":27712:27726   */\n      add\n        /* \"#utility.yul\":27698:27710   */\n      dup3\n        /* \"#utility.yul\":27664:27727   */\n      tag_206\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":27561:27737   */\n      pop\n        /* \"#utility.yul\":27830:27834   */\n      0x40\n        /* \"#utility.yul\":27823:27828   */\n      dup3\n        /* \"#utility.yul\":27819:27835   */\n      add\n        /* \"#utility.yul\":27813:27836   */\n      mload\n        /* \"#utility.yul\":27849:27910   */\n      tag_495\n        /* \"#utility.yul\":27904:27908   */\n      0x40\n        /* \"#utility.yul\":27899:27902   */\n      dup6\n        /* \"#utility.yul\":27895:27909   */\n      add\n        /* \"#utility.yul\":27881:27893   */\n      dup3\n        /* \"#utility.yul\":27849:27910   */\n      tag_209\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":27747:27920   */\n      pop\n        /* \"#utility.yul\":27341:27927   */\n      pop\n        /* \"#utility.yul\":27237:27927   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28021:30226   */\n    tag_221:\n        /* \"#utility.yul\":28148:28151   */\n      0x00\n        /* \"#utility.yul\":28184:28190   */\n      0x0160\n        /* \"#utility.yul\":28179:28182   */\n      dup4\n        /* \"#utility.yul\":28175:28191   */\n      add\n        /* \"#utility.yul\":28273:28277   */\n      0x00\n        /* \"#utility.yul\":28266:28271   */\n      dup4\n        /* \"#utility.yul\":28262:28278   */\n      add\n        /* \"#utility.yul\":28256:28279   */\n      mload\n        /* \"#utility.yul\":28326:28329   */\n      dup5\n        /* \"#utility.yul\":28320:28324   */\n      dup3\n        /* \"#utility.yul\":28316:28330   */\n      sub\n        /* \"#utility.yul\":28309:28313   */\n      0x00\n        /* \"#utility.yul\":28304:28307   */\n      dup7\n        /* \"#utility.yul\":28300:28314   */\n      add\n        /* \"#utility.yul\":28293:28331   */\n      mstore\n        /* \"#utility.yul\":28352:28425   */\n      tag_497\n        /* \"#utility.yul\":28420:28424   */\n      dup3\n        /* \"#utility.yul\":28406:28418   */\n      dup3\n        /* \"#utility.yul\":28352:28425   */\n      tag_205\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":28344:28425   */\n      swap2\n      pop\n        /* \"#utility.yul\":28201:28436   */\n      pop\n        /* \"#utility.yul\":28520:28524   */\n      0x20\n        /* \"#utility.yul\":28513:28518   */\n      dup4\n        /* \"#utility.yul\":28509:28525   */\n      add\n        /* \"#utility.yul\":28503:28526   */\n      mload\n        /* \"#utility.yul\":28573:28576   */\n      dup5\n        /* \"#utility.yul\":28567:28571   */\n      dup3\n        /* \"#utility.yul\":28563:28577   */\n      sub\n        /* \"#utility.yul\":28556:28560   */\n      0x20\n        /* \"#utility.yul\":28551:28554   */\n      dup7\n        /* \"#utility.yul\":28547:28561   */\n      add\n        /* \"#utility.yul\":28540:28578   */\n      mstore\n        /* \"#utility.yul\":28599:28672   */\n      tag_498\n        /* \"#utility.yul\":28667:28671   */\n      dup3\n        /* \"#utility.yul\":28653:28665   */\n      dup3\n        /* \"#utility.yul\":28599:28672   */\n      tag_205\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":28591:28672   */\n      swap2\n      pop\n        /* \"#utility.yul\":28446:28683   */\n      pop\n        /* \"#utility.yul\":28769:28773   */\n      0x40\n        /* \"#utility.yul\":28762:28767   */\n      dup4\n        /* \"#utility.yul\":28758:28774   */\n      add\n        /* \"#utility.yul\":28752:28775   */\n      mload\n        /* \"#utility.yul\":28788:28851   */\n      tag_499\n        /* \"#utility.yul\":28845:28849   */\n      0x40\n        /* \"#utility.yul\":28840:28843   */\n      dup7\n        /* \"#utility.yul\":28836:28850   */\n      add\n        /* \"#utility.yul\":28822:28834   */\n      dup3\n        /* \"#utility.yul\":28788:28851   */\n      tag_206\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":28693:28861   */\n      pop\n        /* \"#utility.yul\":28943:28947   */\n      0x60\n        /* \"#utility.yul\":28936:28941   */\n      dup4\n        /* \"#utility.yul\":28932:28948   */\n      add\n        /* \"#utility.yul\":28926:28949   */\n      mload\n        /* \"#utility.yul\":28996:28999   */\n      dup5\n        /* \"#utility.yul\":28990:28994   */\n      dup3\n        /* \"#utility.yul\":28986:29000   */\n      sub\n        /* \"#utility.yul\":28979:28983   */\n      0x60\n        /* \"#utility.yul\":28974:28977   */\n      dup7\n        /* \"#utility.yul\":28970:28984   */\n      add\n        /* \"#utility.yul\":28963:29001   */\n      mstore\n        /* \"#utility.yul\":29022:29095   */\n      tag_500\n        /* \"#utility.yul\":29090:29094   */\n      dup3\n        /* \"#utility.yul\":29076:29088   */\n      dup3\n        /* \"#utility.yul\":29022:29095   */\n      tag_205\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":29014:29095   */\n      swap2\n      pop\n        /* \"#utility.yul\":28871:29106   */\n      pop\n        /* \"#utility.yul\":29199:29203   */\n      0x80\n        /* \"#utility.yul\":29192:29197   */\n      dup4\n        /* \"#utility.yul\":29188:29204   */\n      add\n        /* \"#utility.yul\":29182:29205   */\n      mload\n        /* \"#utility.yul\":29218:29275   */\n      tag_501\n        /* \"#utility.yul\":29269:29273   */\n      0x80\n        /* \"#utility.yul\":29264:29267   */\n      dup7\n        /* \"#utility.yul\":29260:29274   */\n      add\n        /* \"#utility.yul\":29246:29258   */\n      dup3\n        /* \"#utility.yul\":29218:29275   */\n      tag_208\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":29116:29285   */\n      pop\n        /* \"#utility.yul\":29372:29376   */\n      0xa0\n        /* \"#utility.yul\":29365:29370   */\n      dup4\n        /* \"#utility.yul\":29361:29377   */\n      add\n        /* \"#utility.yul\":29355:29378   */\n      mload\n        /* \"#utility.yul\":29391:29452   */\n      tag_502\n        /* \"#utility.yul\":29446:29450   */\n      0xa0\n        /* \"#utility.yul\":29441:29444   */\n      dup7\n        /* \"#utility.yul\":29437:29451   */\n      add\n        /* \"#utility.yul\":29423:29435   */\n      dup3\n        /* \"#utility.yul\":29391:29452   */\n      tag_209\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":29295:29462   */\n      pop\n        /* \"#utility.yul\":29553:29557   */\n      0xc0\n        /* \"#utility.yul\":29546:29551   */\n      dup4\n        /* \"#utility.yul\":29542:29558   */\n      add\n        /* \"#utility.yul\":29536:29559   */\n      mload\n        /* \"#utility.yul\":29572:29629   */\n      tag_503\n        /* \"#utility.yul\":29623:29627   */\n      0xc0\n        /* \"#utility.yul\":29618:29621   */\n      dup7\n        /* \"#utility.yul\":29614:29628   */\n      add\n        /* \"#utility.yul\":29600:29612   */\n      dup3\n        /* \"#utility.yul\":29572:29629   */\n      tag_208\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":29472:29639   */\n      pop\n        /* \"#utility.yul\":29726:29730   */\n      0xe0\n        /* \"#utility.yul\":29719:29724   */\n      dup4\n        /* \"#utility.yul\":29715:29731   */\n      add\n        /* \"#utility.yul\":29709:29732   */\n      mload\n        /* \"#utility.yul\":29779:29782   */\n      dup5\n        /* \"#utility.yul\":29773:29777   */\n      dup3\n        /* \"#utility.yul\":29769:29783   */\n      sub\n        /* \"#utility.yul\":29762:29766   */\n      0xe0\n        /* \"#utility.yul\":29757:29760   */\n      dup7\n        /* \"#utility.yul\":29753:29767   */\n      add\n        /* \"#utility.yul\":29746:29784   */\n      mstore\n        /* \"#utility.yul\":29805:29960   */\n      tag_504\n        /* \"#utility.yul\":29955:29959   */\n      dup3\n        /* \"#utility.yul\":29941:29953   */\n      dup3\n        /* \"#utility.yul\":29805:29960   */\n      tag_219\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":29797:29960   */\n      swap2\n      pop\n        /* \"#utility.yul\":29649:29971   */\n      pop\n        /* \"#utility.yul\":30055:30061   */\n      0x0100\n        /* \"#utility.yul\":30048:30053   */\n      dup4\n        /* \"#utility.yul\":30044:30062   */\n      add\n        /* \"#utility.yul\":30038:30063   */\n      mload\n        /* \"#utility.yul\":30076:30189   */\n      tag_505\n        /* \"#utility.yul\":30181:30187   */\n      0x0100\n        /* \"#utility.yul\":30176:30179   */\n      dup7\n        /* \"#utility.yul\":30172:30188   */\n      add\n        /* \"#utility.yul\":30158:30170   */\n      dup3\n        /* \"#utility.yul\":30076:30189   */\n      tag_220\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":29981:30199   */\n      pop\n        /* \"#utility.yul\":30216:30220   */\n      dup1\n        /* \"#utility.yul\":30209:30220   */\n      swap2\n      pop\n        /* \"#utility.yul\":28153:30226   */\n      pop\n        /* \"#utility.yul\":28021:30226   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30232:30621   */\n    tag_111:\n        /* \"#utility.yul\":30383:30387   */\n      0x00\n        /* \"#utility.yul\":30421:30423   */\n      0x20\n        /* \"#utility.yul\":30410:30419   */\n      dup3\n        /* \"#utility.yul\":30406:30424   */\n      add\n        /* \"#utility.yul\":30398:30424   */\n      swap1\n      pop\n        /* \"#utility.yul\":30470:30479   */\n      dup2\n        /* \"#utility.yul\":30464:30468   */\n      dup2\n        /* \"#utility.yul\":30460:30480   */\n      sub\n        /* \"#utility.yul\":30456:30457   */\n      0x00\n        /* \"#utility.yul\":30445:30454   */\n      dup4\n        /* \"#utility.yul\":30441:30458   */\n      add\n        /* \"#utility.yul\":30434:30481   */\n      mstore\n        /* \"#utility.yul\":30498:30614   */\n      tag_507\n        /* \"#utility.yul\":30609:30613   */\n      dup2\n        /* \"#utility.yul\":30600:30606   */\n      dup5\n        /* \"#utility.yul\":30498:30614   */\n      tag_221\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":30490:30614   */\n      swap1\n      pop\n        /* \"#utility.yul\":30232:30621   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30627:30731   */\n    tag_222:\n        /* \"#utility.yul\":30672:30679   */\n      0x00\n        /* \"#utility.yul\":30701:30725   */\n      tag_509\n        /* \"#utility.yul\":30719:30724   */\n      dup3\n        /* \"#utility.yul\":30701:30725   */\n      tag_145\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":30690:30725   */\n      swap1\n      pop\n        /* \"#utility.yul\":30627:30731   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30737:30875   */\n    tag_223:\n        /* \"#utility.yul\":30818:30850   */\n      tag_511\n        /* \"#utility.yul\":30844:30849   */\n      dup2\n        /* \"#utility.yul\":30818:30850   */\n      tag_222\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":30811:30816   */\n      dup2\n        /* \"#utility.yul\":30808:30851   */\n      eq\n        /* \"#utility.yul\":30798:30869   */\n      tag_512\n      jumpi\n        /* \"#utility.yul\":30865:30866   */\n      0x00\n        /* \"#utility.yul\":30862:30863   */\n      dup1\n        /* \"#utility.yul\":30855:30867   */\n      revert\n        /* \"#utility.yul\":30798:30869   */\n    tag_512:\n        /* \"#utility.yul\":30737:30875   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30881:31040   */\n    tag_224:\n        /* \"#utility.yul\":30946:30951   */\n      0x00\n        /* \"#utility.yul\":30977:30983   */\n      dup2\n        /* \"#utility.yul\":30971:30984   */\n      mload\n        /* \"#utility.yul\":30962:30984   */\n      swap1\n      pop\n        /* \"#utility.yul\":30993:31034   */\n      tag_514\n        /* \"#utility.yul\":31028:31033   */\n      dup2\n        /* \"#utility.yul\":30993:31034   */\n      tag_223\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":30881:31040   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31046:31565   */\n    tag_119:\n        /* \"#utility.yul\":31131:31137   */\n      0x00\n        /* \"#utility.yul\":31139:31145   */\n      dup1\n        /* \"#utility.yul\":31188:31190   */\n      0x40\n        /* \"#utility.yul\":31176:31185   */\n      dup4\n        /* \"#utility.yul\":31167:31174   */\n      dup6\n        /* \"#utility.yul\":31163:31186   */\n      sub\n        /* \"#utility.yul\":31159:31191   */\n      slt\n        /* \"#utility.yul\":31156:31275   */\n      iszero\n      tag_516\n      jumpi\n        /* \"#utility.yul\":31194:31273   */\n      tag_517\n      tag_143\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":31156:31275   */\n    tag_516:\n        /* \"#utility.yul\":31314:31315   */\n      0x00\n        /* \"#utility.yul\":31339:31401   */\n      tag_518\n        /* \"#utility.yul\":31393:31400   */\n      dup6\n        /* \"#utility.yul\":31384:31390   */\n      dup3\n        /* \"#utility.yul\":31373:31382   */\n      dup7\n        /* \"#utility.yul\":31369:31391   */\n      add\n        /* \"#utility.yul\":31339:31401   */\n      tag_196\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":31329:31401   */\n      swap3\n      pop\n        /* \"#utility.yul\":31285:31411   */\n      pop\n        /* \"#utility.yul\":31450:31452   */\n      0x20\n        /* \"#utility.yul\":31476:31548   */\n      tag_519\n        /* \"#utility.yul\":31540:31547   */\n      dup6\n        /* \"#utility.yul\":31531:31537   */\n      dup3\n        /* \"#utility.yul\":31520:31529   */\n      dup7\n        /* \"#utility.yul\":31516:31538   */\n      add\n        /* \"#utility.yul\":31476:31548   */\n      tag_224\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":31466:31548   */\n      swap2\n      pop\n        /* \"#utility.yul\":31421:31558   */\n      pop\n        /* \"#utility.yul\":31046:31565   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31571:31751   */\n    tag_123:\n        /* \"#utility.yul\":31619:31696   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":31616:31617   */\n      0x00\n        /* \"#utility.yul\":31609:31697   */\n      mstore\n        /* \"#utility.yul\":31716:31720   */\n      0x21\n        /* \"#utility.yul\":31713:31714   */\n      0x04\n        /* \"#utility.yul\":31706:31721   */\n      mstore\n        /* \"#utility.yul\":31740:31744   */\n      0x24\n        /* \"#utility.yul\":31737:31738   */\n      0x00\n        /* \"#utility.yul\":31730:31745   */\n      revert\n\n    auxdata: 0xa26469706673582212208a2bc148d7c22890c14b30aa40416f50efe5a756d49ee7409b7f05da74ce79f464736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_2790": {
									"entryPoint": null,
									"id": 2790,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 497,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:190:7",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "35:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "52:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "55:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "45:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "45:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "45:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "149:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "152:4:7",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "142:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "142:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "142:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "173:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "176:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "166:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "166:15:7"
														}
													]
												},
												"name": "panic_error_0x21",
												"nodeType": "YulFunctionDefinition",
												"src": "7:180:7"
											}
										]
									},
									"contents": "{\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060018060008060068111156200002d576200002c620001f1565b5b6006811115620000425762000041620001f1565b5b81526020019081526020016000208190555060026001600060016006811115620000715762000070620001f1565b5b6006811115620000865762000085620001f1565b5b81526020019081526020016000208190555060046001600060026006811115620000b557620000b4620001f1565b5b6006811115620000ca57620000c9620001f1565b5b81526020019081526020016000208190555060086001600060036006811115620000f957620000f8620001f1565b5b60068111156200010e576200010d620001f1565b5b815260200190815260200160002081905550601060016000600460068111156200013d576200013c620001f1565b5b6006811115620001525762000151620001f1565b5b81526020019081526020016000208190555060206001600060056006811115620001815762000180620001f1565b5b6006811115620001965762000195620001f1565b5b815260200190815260200160002081905550604060016000600680811115620001c457620001c3620001f1565b5b6006811115620001d957620001d8620001f1565b5b81526020019081526020016000208190555062000220565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b611ad280620002306000396000f3fe6080604052600436106100345760003560e01c80630a284cb61461003957806382b562aa14610076578063a1a79cde146100b3575b600080fd5b34801561004557600080fd5b50610060600480360381019061005b9190610dd2565b6100e3565b60405161006d9190610e4a565b60405180910390f35b34801561008257600080fd5b5061009d60048036038101906100989190610e91565b610165565b6040516100aa9190610efd565b60405180910390f35b6100cd60048036038101906100c89190610ff5565b6101d3565b6040516100da91906110d3565b60405180910390f35b60008060006100f48560008661032a565b9250509150601660030b821461013f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161013690611171565b60405180910390fd5b8060008151811061015357610152611191565b5b60200260200101519250505092915050565b600061017183856104a2565b506000610180853086866105ba565b9050601660030b81146101c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101bf90611232565b60405180910390fd5b809150509392505050565b600080600167ffffffffffffffff8111156101f1576101f0610bbc565b5b60405190808252806020026020018201604052801561022a57816020015b610217610a02565b81526020019060019003908161020f5790505b50905061023a60046001306106d8565b8160008151811061024e5761024d611191565b5b6020026020010181905250610261610a22565b87816000018190525086816020018190525085816060018190525030816040019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250506001816080019015159081151581525050848160a0019063ffffffff16908163ffffffff1681525050818160e0018190525060008160c0019015159081151581525050610301308561070f565b8161010001819052506000806103168361076d565b915091508094505050505095945050505050565b600080606060008061016773ffffffffffffffffffffffffffffffffffffffff1663278e0b8860e01b898989604051602401610368939291906113b6565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516103d29190611430565b6000604051808303816000865af19150503d806000811461040f576040519150601f19603f3d011682016040523d82523d6000602084013e610414565b606091505b50915091508161047057601560008067ffffffffffffffff81111561043c5761043b610bbc565b5b60405190808252806020026020018201604052801561046a5781602001602082028036833780820191505090505b50610485565b808060200190518101906104849190611584565b5b8260030b9250809550819650829750505050505093509350939050565b600080600061016773ffffffffffffffffffffffffffffffffffffffff166349146bde60e01b86866040516024016104db9291906115f3565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516105459190611430565b6000604051808303816000865af19150503d8060008114610582576040519150601f19603f3d011682016040523d82523d6000602084013e610587565b606091505b5091509150816105985760156105ad565b808060200190518101906105ac919061161c565b5b60030b9250505092915050565b600080600061016773ffffffffffffffffffffffffffffffffffffffff16635cfc901160e01b888888886040516024016105f79493929190611649565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516106619190611430565b6000604051808303816000865af19150503d806000811461069e576040519150601f19603f3d011682016040523d82523d6000602084013e6106a3565b606091505b5091509150816106b45760156106c9565b808060200190518101906106c8919061161c565b5b60030b92505050949350505050565b6106e0610a02565b60405180604001604052806106f4866108e5565b81526020016107038585610926565b81525090509392505050565b610717610a94565b82816020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505081816040019063ffffffff16908163ffffffff168152505092915050565b6000808260008161010001516000015163ffffffff1614801561079f575060008161010001516040015163ffffffff16145b156107c5576276a7008161010001516040019063ffffffff16908163ffffffff16815250505b60008061016773ffffffffffffffffffffffffffffffffffffffff1634639dc711e060e01b886040516024016107fb91906119cd565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516108659190611430565b60006040518083038185875af1925050503d80600081146108a2576040519150601f19603f3d011682016040523d82523d6000602084013e6108a7565b606091505b5091509150816108ba57601560006108cf565b808060200190518101906108ce9190611a2d565b5b8160030b91508095508196505050505050915091565b6000600160008360068111156108fe576108fd611a6d565b5b60068111156109105761090f611a6d565b5b8152602001908152602001600020549050919050565b61092e610ad7565b6001600481111561094257610941611a6d565b5b83600481111561095557610954611a6d565b5b036109975781816020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250506109fc565b6004808111156109aa576109a9611a6d565b5b8360048111156109bd576109bc611a6d565b5b036109fb5781816080019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250505b5b92915050565b604051806040016040528060008152602001610a1c610ad7565b81525090565b6040518061012001604052806060815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001600015158152602001600063ffffffff16815260200160001515815260200160608152602001610a8e610a94565b81525090565b6040518060600160405280600063ffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600063ffffffff1681525090565b6040518060a00160405280600015158152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b7382610b48565b9050919050565b610b8381610b68565b8114610b8e57600080fd5b50565b600081359050610ba081610b7a565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610bf482610bab565b810181811067ffffffffffffffff82111715610c1357610c12610bbc565b5b80604052505050565b6000610c26610b34565b9050610c328282610beb565b919050565b600067ffffffffffffffff821115610c5257610c51610bbc565b5b602082029050602081019050919050565b600080fd5b600080fd5b600067ffffffffffffffff821115610c8857610c87610bbc565b5b610c9182610bab565b9050602081019050919050565b82818337600083830152505050565b6000610cc0610cbb84610c6d565b610c1c565b905082815260208101848484011115610cdc57610cdb610c68565b5b610ce7848285610c9e565b509392505050565b600082601f830112610d0457610d03610ba6565b5b8135610d14848260208601610cad565b91505092915050565b6000610d30610d2b84610c37565b610c1c565b90508083825260208201905060208402830185811115610d5357610d52610c63565b5b835b81811015610d9a57803567ffffffffffffffff811115610d7857610d77610ba6565b5b808601610d858982610cef565b85526020850194505050602081019050610d55565b5050509392505050565b600082601f830112610db957610db8610ba6565b5b8135610dc9848260208601610d1d565b91505092915050565b60008060408385031215610de957610de8610b3e565b5b6000610df785828601610b91565b925050602083013567ffffffffffffffff811115610e1857610e17610b43565b5b610e2485828601610da4565b9150509250929050565b60008160070b9050919050565b610e4481610e2e565b82525050565b6000602082019050610e5f6000830184610e3b565b92915050565b610e6e81610e2e565b8114610e7957600080fd5b50565b600081359050610e8b81610e65565b92915050565b600080600060608486031215610eaa57610ea9610b3e565b5b6000610eb886828701610b91565b9350506020610ec986828701610b91565b9250506040610eda86828701610e7c565b9150509250925092565b6000819050919050565b610ef781610ee4565b82525050565b6000602082019050610f126000830184610eee565b92915050565b600067ffffffffffffffff821115610f3357610f32610bbc565b5b610f3c82610bab565b9050602081019050919050565b6000610f5c610f5784610f18565b610c1c565b905082815260208101848484011115610f7857610f77610c68565b5b610f83848285610c9e565b509392505050565b600082601f830112610fa057610f9f610ba6565b5b8135610fb0848260208601610f49565b91505092915050565b600063ffffffff82169050919050565b610fd281610fb9565b8114610fdd57600080fd5b50565b600081359050610fef81610fc9565b92915050565b600080600080600060a0868803121561101157611010610b3e565b5b600086013567ffffffffffffffff81111561102f5761102e610b43565b5b61103b88828901610f8b565b955050602086013567ffffffffffffffff81111561105c5761105b610b43565b5b61106888828901610f8b565b945050604086013567ffffffffffffffff81111561108957611088610b43565b5b61109588828901610f8b565b93505060606110a688828901610fe0565b92505060806110b788828901610fe0565b9150509295509295909350565b6110cd81610b68565b82525050565b60006020820190506110e860008301846110c4565b92915050565b600082825260208201905092915050565b7f4661696c656420746f206d696e74206e6f6e2d66756e6769626c6520746f6b6560008201527f6e00000000000000000000000000000000000000000000000000000000000000602082015250565b600061115b6021836110ee565b9150611166826110ff565b604082019050919050565b6000602082019050818103600083015261118a8161114e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4661696c656420746f207472616e73666572206e6f6e2d66756e6769626c652060008201527f746f6b656e000000000000000000000000000000000000000000000000000000602082015250565b600061121c6025836110ee565b9150611227826111c0565b604082019050919050565b6000602082019050818103600083015261124b8161120f565b9050919050565b600067ffffffffffffffff82169050919050565b61126f81611252565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b838110156112db5780820151818401526020810190506112c0565b60008484015250505050565b60006112f2826112a1565b6112fc81856112ac565b935061130c8185602086016112bd565b61131581610bab565b840191505092915050565b600061132c83836112e7565b905092915050565b6000602082019050919050565b600061134c82611275565b6113568185611280565b93508360208202850161136885611291565b8060005b858110156113a457848403895281516113858582611320565b945061139083611334565b925060208a0199505060018101905061136c565b50829750879550505050505092915050565b60006060820190506113cb60008301866110c4565b6113d86020830185611266565b81810360408301526113ea8184611341565b9050949350505050565b600081905092915050565b600061140a826112a1565b61141481856113f4565b93506114248185602086016112bd565b80840191505092915050565b600061143c82846113ff565b915081905092915050565b60008160030b9050919050565b61145d81611447565b811461146857600080fd5b50565b60008151905061147a81611454565b92915050565b61148981611252565b811461149457600080fd5b50565b6000815190506114a681611480565b92915050565b600067ffffffffffffffff8211156114c7576114c6610bbc565b5b602082029050602081019050919050565b6000815190506114e781610e65565b92915050565b60006115006114fb846114ac565b610c1c565b9050808382526020820190506020840283018581111561152357611522610c63565b5b835b8181101561154c578061153888826114d8565b845260208401935050602081019050611525565b5050509392505050565b600082601f83011261156b5761156a610ba6565b5b815161157b8482602086016114ed565b91505092915050565b60008060006060848603121561159d5761159c610b3e565b5b60006115ab8682870161146b565b93505060206115bc86828701611497565b925050604084015167ffffffffffffffff8111156115dd576115dc610b43565b5b6115e986828701611556565b9150509250925092565b600060408201905061160860008301856110c4565b61161560208301846110c4565b9392505050565b60006020828403121561163257611631610b3e565b5b60006116408482850161146b565b91505092915050565b600060808201905061165e60008301876110c4565b61166b60208301866110c4565b61167860408301856110c4565b6116856060830184610e3b565b95945050505050565b600081519050919050565b600082825260208201905092915050565b60006116b58261168e565b6116bf8185611699565b93506116cf8185602086016112bd565b6116d881610bab565b840191505092915050565b6116ec81610b68565b82525050565b60008115159050919050565b611707816116f2565b82525050565b61171681610fb9565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000819050919050565b61175b81611748565b82525050565b600060a08301600083015161177960008601826116fe565b50602083015161178c60208601826116e3565b50604083015184820360408601526117a482826112e7565b915050606083015184820360608601526117be82826112e7565b91505060808301516117d360808601826116e3565b508091505092915050565b60006040830160008301516117f66000860182611752565b506020830151848203602086015261180e8282611761565b9150508091505092915050565b600061182783836117de565b905092915050565b6000602082019050919050565b60006118478261171c565b6118518185611727565b93508360208202850161186385611738565b8060005b8581101561189f5784840389528151611880858261181b565b945061188b8361182f565b925060208a01995050600181019050611867565b50829750879550505050505092915050565b6060820160008201516118c7600085018261170d565b5060208201516118da60208501826116e3565b5060408201516118ed604085018261170d565b50505050565b600061016083016000830151848203600086015261191182826116aa565b9150506020830151848203602086015261192b82826116aa565b915050604083015161194060408601826116e3565b506060830151848203606086015261195882826116aa565b915050608083015161196d60808601826116fe565b5060a083015161198060a086018261170d565b5060c083015161199360c08601826116fe565b5060e083015184820360e08601526119ab828261183c565b9150506101008301516119c26101008601826118b1565b508091505092915050565b600060208201905081810360008301526119e781846118f3565b905092915050565b60006119fa82610b48565b9050919050565b611a0a816119ef565b8114611a1557600080fd5b50565b600081519050611a2781611a01565b92915050565b60008060408385031215611a4457611a43610b3e565b5b6000611a528582860161146b565b9250506020611a6385828601611a18565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fdfea26469706673582212208a2bc148d7c22890c14b30aa40416f50efe5a756d49ee7409b7f05da74ce79f464736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 DUP1 PUSH1 0x0 DUP1 PUSH1 0x6 DUP2 GT ISZERO PUSH3 0x2D JUMPI PUSH3 0x2C PUSH3 0x1F1 JUMP JUMPDEST JUMPDEST PUSH1 0x6 DUP2 GT ISZERO PUSH3 0x42 JUMPI PUSH3 0x41 PUSH3 0x1F1 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x6 DUP2 GT ISZERO PUSH3 0x71 JUMPI PUSH3 0x70 PUSH3 0x1F1 JUMP JUMPDEST JUMPDEST PUSH1 0x6 DUP2 GT ISZERO PUSH3 0x86 JUMPI PUSH3 0x85 PUSH3 0x1F1 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x4 PUSH1 0x1 PUSH1 0x0 PUSH1 0x2 PUSH1 0x6 DUP2 GT ISZERO PUSH3 0xB5 JUMPI PUSH3 0xB4 PUSH3 0x1F1 JUMP JUMPDEST JUMPDEST PUSH1 0x6 DUP2 GT ISZERO PUSH3 0xCA JUMPI PUSH3 0xC9 PUSH3 0x1F1 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x8 PUSH1 0x1 PUSH1 0x0 PUSH1 0x3 PUSH1 0x6 DUP2 GT ISZERO PUSH3 0xF9 JUMPI PUSH3 0xF8 PUSH3 0x1F1 JUMP JUMPDEST JUMPDEST PUSH1 0x6 DUP2 GT ISZERO PUSH3 0x10E JUMPI PUSH3 0x10D PUSH3 0x1F1 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x10 PUSH1 0x1 PUSH1 0x0 PUSH1 0x4 PUSH1 0x6 DUP2 GT ISZERO PUSH3 0x13D JUMPI PUSH3 0x13C PUSH3 0x1F1 JUMP JUMPDEST JUMPDEST PUSH1 0x6 DUP2 GT ISZERO PUSH3 0x152 JUMPI PUSH3 0x151 PUSH3 0x1F1 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x20 PUSH1 0x1 PUSH1 0x0 PUSH1 0x5 PUSH1 0x6 DUP2 GT ISZERO PUSH3 0x181 JUMPI PUSH3 0x180 PUSH3 0x1F1 JUMP JUMPDEST JUMPDEST PUSH1 0x6 DUP2 GT ISZERO PUSH3 0x196 JUMPI PUSH3 0x195 PUSH3 0x1F1 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x40 PUSH1 0x1 PUSH1 0x0 PUSH1 0x6 DUP1 DUP2 GT ISZERO PUSH3 0x1C4 JUMPI PUSH3 0x1C3 PUSH3 0x1F1 JUMP JUMPDEST JUMPDEST PUSH1 0x6 DUP2 GT ISZERO PUSH3 0x1D9 JUMPI PUSH3 0x1D8 PUSH3 0x1F1 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH3 0x220 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1AD2 DUP1 PUSH3 0x230 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA284CB6 EQ PUSH2 0x39 JUMPI DUP1 PUSH4 0x82B562AA EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0xA1A79CDE EQ PUSH2 0xB3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0xDD2 JUMP JUMPDEST PUSH2 0xE3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0xE4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x98 SWAP2 SWAP1 PUSH2 0xE91 JUMP JUMPDEST PUSH2 0x165 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAA SWAP2 SWAP1 PUSH2 0xEFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC8 SWAP2 SWAP1 PUSH2 0xFF5 JUMP JUMPDEST PUSH2 0x1D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDA SWAP2 SWAP1 PUSH2 0x10D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xF4 DUP6 PUSH1 0x0 DUP7 PUSH2 0x32A JUMP JUMPDEST SWAP3 POP POP SWAP2 POP PUSH1 0x16 PUSH1 0x3 SIGNEXTEND DUP3 EQ PUSH2 0x13F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x136 SWAP1 PUSH2 0x1171 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x153 JUMPI PUSH2 0x152 PUSH2 0x1191 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x171 DUP4 DUP6 PUSH2 0x4A2 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x180 DUP6 ADDRESS DUP7 DUP7 PUSH2 0x5BA JUMP JUMPDEST SWAP1 POP PUSH1 0x16 PUSH1 0x3 SIGNEXTEND DUP2 EQ PUSH2 0x1C8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BF SWAP1 PUSH2 0x1232 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F1 JUMPI PUSH2 0x1F0 PUSH2 0xBBC JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x22A JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x217 PUSH2 0xA02 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x20F JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH2 0x23A PUSH1 0x4 PUSH1 0x1 ADDRESS PUSH2 0x6D8 JUMP JUMPDEST DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x24E JUMPI PUSH2 0x24D PUSH2 0x1191 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP PUSH2 0x261 PUSH2 0xA22 JUMP JUMPDEST DUP8 DUP2 PUSH1 0x0 ADD DUP2 SWAP1 MSTORE POP DUP7 DUP2 PUSH1 0x20 ADD DUP2 SWAP1 MSTORE POP DUP6 DUP2 PUSH1 0x60 ADD DUP2 SWAP1 MSTORE POP ADDRESS DUP2 PUSH1 0x40 ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x1 DUP2 PUSH1 0x80 ADD SWAP1 ISZERO ISZERO SWAP1 DUP2 ISZERO ISZERO DUP2 MSTORE POP POP DUP5 DUP2 PUSH1 0xA0 ADD SWAP1 PUSH4 0xFFFFFFFF AND SWAP1 DUP2 PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP POP DUP2 DUP2 PUSH1 0xE0 ADD DUP2 SWAP1 MSTORE POP PUSH1 0x0 DUP2 PUSH1 0xC0 ADD SWAP1 ISZERO ISZERO SWAP1 DUP2 ISZERO ISZERO DUP2 MSTORE POP POP PUSH2 0x301 ADDRESS DUP6 PUSH2 0x70F JUMP JUMPDEST DUP2 PUSH2 0x100 ADD DUP2 SWAP1 MSTORE POP PUSH1 0x0 DUP1 PUSH2 0x316 DUP4 PUSH2 0x76D JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP1 SWAP5 POP POP POP POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x60 PUSH1 0x0 DUP1 PUSH2 0x167 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x278E0B88 PUSH1 0xE0 SHL DUP10 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x368 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x13B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x3D2 SWAP2 SWAP1 PUSH2 0x1430 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x40F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x414 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x470 JUMPI PUSH1 0x15 PUSH1 0x0 DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x43C JUMPI PUSH2 0x43B PUSH2 0xBBC JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x46A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH2 0x485 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x484 SWAP2 SWAP1 PUSH2 0x1584 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 SIGNEXTEND SWAP3 POP DUP1 SWAP6 POP DUP2 SWAP7 POP DUP3 SWAP8 POP POP POP POP POP POP SWAP4 POP SWAP4 POP SWAP4 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x167 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x49146BDE PUSH1 0xE0 SHL DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x4DB SWAP3 SWAP2 SWAP1 PUSH2 0x15F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x545 SWAP2 SWAP1 PUSH2 0x1430 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x582 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x587 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x598 JUMPI PUSH1 0x15 PUSH2 0x5AD JUMP JUMPDEST DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x5AC SWAP2 SWAP1 PUSH2 0x161C JUMP JUMPDEST JUMPDEST PUSH1 0x3 SIGNEXTEND SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x167 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5CFC9011 PUSH1 0xE0 SHL DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x5F7 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1649 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x661 SWAP2 SWAP1 PUSH2 0x1430 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x69E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x6A3 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x6B4 JUMPI PUSH1 0x15 PUSH2 0x6C9 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x6C8 SWAP2 SWAP1 PUSH2 0x161C JUMP JUMPDEST JUMPDEST PUSH1 0x3 SIGNEXTEND SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x6E0 PUSH2 0xA02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x6F4 DUP7 PUSH2 0x8E5 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x703 DUP6 DUP6 PUSH2 0x926 JUMP JUMPDEST DUP2 MSTORE POP SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x717 PUSH2 0xA94 JUMP JUMPDEST DUP3 DUP2 PUSH1 0x20 ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP2 DUP2 PUSH1 0x40 ADD SWAP1 PUSH4 0xFFFFFFFF AND SWAP1 DUP2 PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x0 DUP2 PUSH2 0x100 ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH4 0xFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x79F JUMPI POP PUSH1 0x0 DUP2 PUSH2 0x100 ADD MLOAD PUSH1 0x40 ADD MLOAD PUSH4 0xFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x7C5 JUMPI PUSH3 0x76A700 DUP2 PUSH2 0x100 ADD MLOAD PUSH1 0x40 ADD SWAP1 PUSH4 0xFFFFFFFF AND SWAP1 DUP2 PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP POP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x167 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLVALUE PUSH4 0x9DC711E0 PUSH1 0xE0 SHL DUP9 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x7FB SWAP2 SWAP1 PUSH2 0x19CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x865 SWAP2 SWAP1 PUSH2 0x1430 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x8A2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x8A7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x8BA JUMPI PUSH1 0x15 PUSH1 0x0 PUSH2 0x8CF JUMP JUMPDEST DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x8CE SWAP2 SWAP1 PUSH2 0x1A2D JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x3 SIGNEXTEND SWAP2 POP DUP1 SWAP6 POP DUP2 SWAP7 POP POP POP POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x8FE JUMPI PUSH2 0x8FD PUSH2 0x1A6D JUMP JUMPDEST JUMPDEST PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x910 JUMPI PUSH2 0x90F PUSH2 0x1A6D JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x92E PUSH2 0xAD7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x942 JUMPI PUSH2 0x941 PUSH2 0x1A6D JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x955 JUMPI PUSH2 0x954 PUSH2 0x1A6D JUMP JUMPDEST JUMPDEST SUB PUSH2 0x997 JUMPI DUP2 DUP2 PUSH1 0x20 ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH2 0x9FC JUMP JUMPDEST PUSH1 0x4 DUP1 DUP2 GT ISZERO PUSH2 0x9AA JUMPI PUSH2 0x9A9 PUSH2 0x1A6D JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x9BD JUMPI PUSH2 0x9BC PUSH2 0x1A6D JUMP JUMPDEST JUMPDEST SUB PUSH2 0x9FB JUMPI DUP2 DUP2 PUSH1 0x80 ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA1C PUSH2 0xAD7 JUMP JUMPDEST DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x120 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA8E PUSH2 0xA94 JUMP JUMPDEST DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB73 DUP3 PUSH2 0xB48 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB83 DUP2 PUSH2 0xB68 JUMP JUMPDEST DUP2 EQ PUSH2 0xB8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBA0 DUP2 PUSH2 0xB7A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xBF4 DUP3 PUSH2 0xBAB JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xC13 JUMPI PUSH2 0xC12 PUSH2 0xBBC JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC26 PUSH2 0xB34 JUMP JUMPDEST SWAP1 POP PUSH2 0xC32 DUP3 DUP3 PUSH2 0xBEB JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xC52 JUMPI PUSH2 0xC51 PUSH2 0xBBC JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xC88 JUMPI PUSH2 0xC87 PUSH2 0xBBC JUMP JUMPDEST JUMPDEST PUSH2 0xC91 DUP3 PUSH2 0xBAB JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCC0 PUSH2 0xCBB DUP5 PUSH2 0xC6D JUMP JUMPDEST PUSH2 0xC1C JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xCDC JUMPI PUSH2 0xCDB PUSH2 0xC68 JUMP JUMPDEST JUMPDEST PUSH2 0xCE7 DUP5 DUP3 DUP6 PUSH2 0xC9E JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xD04 JUMPI PUSH2 0xD03 PUSH2 0xBA6 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xD14 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xCAD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD30 PUSH2 0xD2B DUP5 PUSH2 0xC37 JUMP JUMPDEST PUSH2 0xC1C JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0xD53 JUMPI PUSH2 0xD52 PUSH2 0xC63 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xD9A JUMPI DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD78 JUMPI PUSH2 0xD77 PUSH2 0xBA6 JUMP JUMPDEST JUMPDEST DUP1 DUP7 ADD PUSH2 0xD85 DUP10 DUP3 PUSH2 0xCEF JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP5 POP POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xD55 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xDB9 JUMPI PUSH2 0xDB8 PUSH2 0xBA6 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xDC9 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xD1D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDE9 JUMPI PUSH2 0xDE8 PUSH2 0xB3E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDF7 DUP6 DUP3 DUP7 ADD PUSH2 0xB91 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE18 JUMPI PUSH2 0xE17 PUSH2 0xB43 JUMP JUMPDEST JUMPDEST PUSH2 0xE24 DUP6 DUP3 DUP7 ADD PUSH2 0xDA4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x7 SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE44 DUP2 PUSH2 0xE2E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE5F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE3B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE6E DUP2 PUSH2 0xE2E JUMP JUMPDEST DUP2 EQ PUSH2 0xE79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE8B DUP2 PUSH2 0xE65 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xEAA JUMPI PUSH2 0xEA9 PUSH2 0xB3E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xEB8 DUP7 DUP3 DUP8 ADD PUSH2 0xB91 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xEC9 DUP7 DUP3 DUP8 ADD PUSH2 0xB91 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xEDA DUP7 DUP3 DUP8 ADD PUSH2 0xE7C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEF7 DUP2 PUSH2 0xEE4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF12 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xEEE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xF33 JUMPI PUSH2 0xF32 PUSH2 0xBBC JUMP JUMPDEST JUMPDEST PUSH2 0xF3C DUP3 PUSH2 0xBAB JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF5C PUSH2 0xF57 DUP5 PUSH2 0xF18 JUMP JUMPDEST PUSH2 0xC1C JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xF78 JUMPI PUSH2 0xF77 PUSH2 0xC68 JUMP JUMPDEST JUMPDEST PUSH2 0xF83 DUP5 DUP3 DUP6 PUSH2 0xC9E JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xFA0 JUMPI PUSH2 0xF9F PUSH2 0xBA6 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xFB0 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xF49 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFD2 DUP2 PUSH2 0xFB9 JUMP JUMPDEST DUP2 EQ PUSH2 0xFDD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xFEF DUP2 PUSH2 0xFC9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1011 JUMPI PUSH2 0x1010 PUSH2 0xB3E JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x102F JUMPI PUSH2 0x102E PUSH2 0xB43 JUMP JUMPDEST JUMPDEST PUSH2 0x103B DUP9 DUP3 DUP10 ADD PUSH2 0xF8B JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x105C JUMPI PUSH2 0x105B PUSH2 0xB43 JUMP JUMPDEST JUMPDEST PUSH2 0x1068 DUP9 DUP3 DUP10 ADD PUSH2 0xF8B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1089 JUMPI PUSH2 0x1088 PUSH2 0xB43 JUMP JUMPDEST JUMPDEST PUSH2 0x1095 DUP9 DUP3 DUP10 ADD PUSH2 0xF8B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x10A6 DUP9 DUP3 DUP10 ADD PUSH2 0xFE0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x10B7 DUP9 DUP3 DUP10 ADD PUSH2 0xFE0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x10CD DUP2 PUSH2 0xB68 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10E8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x10C4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4661696C656420746F206D696E74206E6F6E2D66756E6769626C6520746F6B65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x115B PUSH1 0x21 DUP4 PUSH2 0x10EE JUMP JUMPDEST SWAP2 POP PUSH2 0x1166 DUP3 PUSH2 0x10FF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x118A DUP2 PUSH2 0x114E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4661696C656420746F207472616E73666572206E6F6E2D66756E6769626C6520 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x746F6B656E000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x121C PUSH1 0x25 DUP4 PUSH2 0x10EE JUMP JUMPDEST SWAP2 POP PUSH2 0x1227 DUP3 PUSH2 0x11C0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x124B DUP2 PUSH2 0x120F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x126F DUP2 PUSH2 0x1252 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x12DB JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x12C0 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12F2 DUP3 PUSH2 0x12A1 JUMP JUMPDEST PUSH2 0x12FC DUP2 DUP6 PUSH2 0x12AC JUMP JUMPDEST SWAP4 POP PUSH2 0x130C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x12BD JUMP JUMPDEST PUSH2 0x1315 DUP2 PUSH2 0xBAB JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x132C DUP4 DUP4 PUSH2 0x12E7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x134C DUP3 PUSH2 0x1275 JUMP JUMPDEST PUSH2 0x1356 DUP2 DUP6 PUSH2 0x1280 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x1368 DUP6 PUSH2 0x1291 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x13A4 JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x1385 DUP6 DUP3 PUSH2 0x1320 JUMP JUMPDEST SWAP5 POP PUSH2 0x1390 DUP4 PUSH2 0x1334 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x136C JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x13CB PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x10C4 JUMP JUMPDEST PUSH2 0x13D8 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1266 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x13EA DUP2 DUP5 PUSH2 0x1341 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140A DUP3 PUSH2 0x12A1 JUMP JUMPDEST PUSH2 0x1414 DUP2 DUP6 PUSH2 0x13F4 JUMP JUMPDEST SWAP4 POP PUSH2 0x1424 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x12BD JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x143C DUP3 DUP5 PUSH2 0x13FF JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x3 SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x145D DUP2 PUSH2 0x1447 JUMP JUMPDEST DUP2 EQ PUSH2 0x1468 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x147A DUP2 PUSH2 0x1454 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1489 DUP2 PUSH2 0x1252 JUMP JUMPDEST DUP2 EQ PUSH2 0x1494 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x14A6 DUP2 PUSH2 0x1480 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x14C7 JUMPI PUSH2 0x14C6 PUSH2 0xBBC JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x14E7 DUP2 PUSH2 0xE65 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1500 PUSH2 0x14FB DUP5 PUSH2 0x14AC JUMP JUMPDEST PUSH2 0xC1C JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1523 JUMPI PUSH2 0x1522 PUSH2 0xC63 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x154C JUMPI DUP1 PUSH2 0x1538 DUP9 DUP3 PUSH2 0x14D8 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1525 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x156B JUMPI PUSH2 0x156A PUSH2 0xBA6 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x157B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x14ED JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x159D JUMPI PUSH2 0x159C PUSH2 0xB3E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15AB DUP7 DUP3 DUP8 ADD PUSH2 0x146B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x15BC DUP7 DUP3 DUP8 ADD PUSH2 0x1497 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15DD JUMPI PUSH2 0x15DC PUSH2 0xB43 JUMP JUMPDEST JUMPDEST PUSH2 0x15E9 DUP7 DUP3 DUP8 ADD PUSH2 0x1556 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1608 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x10C4 JUMP JUMPDEST PUSH2 0x1615 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x10C4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1632 JUMPI PUSH2 0x1631 PUSH2 0xB3E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1640 DUP5 DUP3 DUP6 ADD PUSH2 0x146B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x165E PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x10C4 JUMP JUMPDEST PUSH2 0x166B PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x10C4 JUMP JUMPDEST PUSH2 0x1678 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x10C4 JUMP JUMPDEST PUSH2 0x1685 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0xE3B JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16B5 DUP3 PUSH2 0x168E JUMP JUMPDEST PUSH2 0x16BF DUP2 DUP6 PUSH2 0x1699 JUMP JUMPDEST SWAP4 POP PUSH2 0x16CF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x12BD JUMP JUMPDEST PUSH2 0x16D8 DUP2 PUSH2 0xBAB JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16EC DUP2 PUSH2 0xB68 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1707 DUP2 PUSH2 0x16F2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1716 DUP2 PUSH2 0xFB9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x175B DUP2 PUSH2 0x1748 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x1779 PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x16FE JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x178C PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x16E3 JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0x17A4 DUP3 DUP3 PUSH2 0x12E7 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x60 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x17BE DUP3 DUP3 PUSH2 0x12E7 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x17D3 PUSH1 0x80 DUP7 ADD DUP3 PUSH2 0x16E3 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x17F6 PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x1752 JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x180E DUP3 DUP3 PUSH2 0x1761 JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1827 DUP4 DUP4 PUSH2 0x17DE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1847 DUP3 PUSH2 0x171C JUMP JUMPDEST PUSH2 0x1851 DUP2 DUP6 PUSH2 0x1727 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x1863 DUP6 PUSH2 0x1738 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x189F JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x1880 DUP6 DUP3 PUSH2 0x181B JUMP JUMPDEST SWAP5 POP PUSH2 0x188B DUP4 PUSH2 0x182F JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1867 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x18C7 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x170D JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x18DA PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x16E3 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x18ED PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x170D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x160 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x0 DUP7 ADD MSTORE PUSH2 0x1911 DUP3 DUP3 PUSH2 0x16AA JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x192B DUP3 DUP3 PUSH2 0x16AA JUMP JUMPDEST SWAP2 POP POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x1940 PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x16E3 JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x1958 DUP3 DUP3 PUSH2 0x16AA JUMP JUMPDEST SWAP2 POP POP PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x196D PUSH1 0x80 DUP7 ADD DUP3 PUSH2 0x16FE JUMP JUMPDEST POP PUSH1 0xA0 DUP4 ADD MLOAD PUSH2 0x1980 PUSH1 0xA0 DUP7 ADD DUP3 PUSH2 0x170D JUMP JUMPDEST POP PUSH1 0xC0 DUP4 ADD MLOAD PUSH2 0x1993 PUSH1 0xC0 DUP7 ADD DUP3 PUSH2 0x16FE JUMP JUMPDEST POP PUSH1 0xE0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0xE0 DUP7 ADD MSTORE PUSH2 0x19AB DUP3 DUP3 PUSH2 0x183C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x100 DUP4 ADD MLOAD PUSH2 0x19C2 PUSH2 0x100 DUP7 ADD DUP3 PUSH2 0x18B1 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x19E7 DUP2 DUP5 PUSH2 0x18F3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19FA DUP3 PUSH2 0xB48 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A0A DUP2 PUSH2 0x19EF JUMP JUMPDEST DUP2 EQ PUSH2 0x1A15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1A27 DUP2 PUSH2 0x1A01 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A44 JUMPI PUSH2 0x1A43 PUSH2 0xB3E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A52 DUP6 DUP3 DUP7 ADD PUSH2 0x146B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A63 DUP6 DUP3 DUP7 ADD PUSH2 0x1A18 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 0x2B 0xC1 BASEFEE 0xD7 0xC2 0x28 SWAP1 0xC1 0x4B ADDRESS 0xAA BLOCKHASH COINBASE PUSH16 0x50EFE5A756D49EE7409B7F05DA74CE79 DELEGATECALL PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "358:2283:6:-:0;;;;;;;;;;;;;601:1:5;575:8;:23;584:13;575:23;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:27;;;;636:1;612:8;:21;621:11;612:21;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:25;;;;674:1;647:8;:24;656:14;647:24;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:28;;;;710:1;685:8;:22;694:12;685:22;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:26;;;;748:2;721:8;:24;730:14;721:24;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:29;;;;784:2;760:8;:21;769:11;760:21;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:26;;;;822:2;796:8;:23;805:13;796:23;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:28;;;;358:2283:6;;7:180:7;55:77;52:1;45:88;152:4;149:1;142:15;176:4;173:1;166:15;358:2283:6;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@associateToken_1185": {
									"entryPoint": 1186,
									"id": 1185,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@createAutoRenewExpiry_29": {
									"entryPoint": 1807,
									"id": 29,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@createNft_3448": {
									"entryPoint": 467,
									"id": 3448,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"@createNonFungibleToken_1457": {
									"entryPoint": 1901,
									"id": 1457,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@getKeyType_3174": {
									"entryPoint": 2277,
									"id": 3174,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getKeyValueType_3282": {
									"entryPoint": 2342,
									"id": 3282,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getSingleKey_3014": {
									"entryPoint": 1752,
									"id": 3014,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@mintNft_3485": {
									"entryPoint": 227,
									"id": 3485,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mintToken_1050": {
									"entryPoint": 810,
									"id": 1050,
									"parameterSlots": 3,
									"returnSlots": 3
								},
								"@transferNFT_2001": {
									"entryPoint": 1466,
									"id": 2001,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@transferNft_3529": {
									"entryPoint": 357,
									"id": 3529,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 3357,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_int64_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 5357,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 3245,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 3913,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 2961,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_payable_fromMemory": {
									"entryPoint": 6680,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 3492,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_int64_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 5462,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 3311,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_int32_fromMemory": {
									"entryPoint": 5227,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_int64": {
									"entryPoint": 3708,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_int64_fromMemory": {
									"entryPoint": 5336,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 3979,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint32": {
									"entryPoint": 4064,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint64_fromMemory": {
									"entryPoint": 5271,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_int64": {
									"entryPoint": 3729,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_array$_t_bytes_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 3538,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_int32_fromMemory": {
									"entryPoint": 5660,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_int32t_address_payable_fromMemory": {
									"entryPoint": 6701,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_int32t_uint64t_array$_t_int64_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 5508,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_uint32t_uint32": {
									"entryPoint": 4085,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_encodeUpdatedPos_t_bytes_memory_ptr_to_t_bytes_memory_ptr": {
									"entryPoint": 4896,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_struct$_TokenKey_$2052_memory_ptr_to_t_struct$_TokenKey_$2052_memory_ptr": {
									"entryPoint": 6171,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 5859,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4292,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack": {
									"entryPoint": 4929,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_array$_t_struct$_TokenKey_$2052_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_TokenKey_$2052_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 6204,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool": {
									"entryPoint": 5886,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr": {
									"entryPoint": 4839,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 5119,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_int256_to_t_int256_fromStack": {
									"entryPoint": 3822,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_int64_to_t_int64_fromStack": {
									"entryPoint": 3643,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr": {
									"entryPoint": 5802,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1b4af10c92b76c4a3a958699c6b18d02400d3d3fb629c80d497d7a8c2883a272_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4623,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ac0717d6bfbebcd19ba94ac3f67866c04f07fcffbe24763a234917dbad73feb4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4430,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_Expiry_$2035_memory_ptr_to_t_struct$_Expiry_$2035_memory_ptr": {
									"entryPoint": 6321,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_struct$_HederaToken_$2074_memory_ptr_to_t_struct$_HederaToken_$2074_memory_ptr_fromStack": {
									"entryPoint": 6387,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_KeyValue_$2046_memory_ptr_to_t_struct$_KeyValue_$2046_memory_ptr": {
									"entryPoint": 5985,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_TokenKey_$2052_memory_ptr_to_t_struct$_TokenKey_$2052_memory_ptr": {
									"entryPoint": 6110,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 5970,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint32_to_t_uint32": {
									"entryPoint": 5901,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint64_to_t_uint64_fromStack": {
									"entryPoint": 4710,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 5168,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4307,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 5619,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_address_t_int64__to_t_address_t_address_t_address_t_int64__fromStack_reversed": {
									"entryPoint": 5705,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint64_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__to_t_address_t_uint64_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 5046,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed": {
									"entryPoint": 3837,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_int64__to_t_int64__fromStack_reversed": {
									"entryPoint": 3658,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1b4af10c92b76c4a3a958699c6b18d02400d3d3fb629c80d497d7a8c2883a272__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4658,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ac0717d6bfbebcd19ba94ac3f67866c04f07fcffbe24763a234917dbad73feb4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4465,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_HederaToken_$2074_memory_ptr__to_t_struct$_HederaToken_$2074_memory_ptr__fromStack_reversed": {
									"entryPoint": 6605,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 3100,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 2868,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 3127,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_int64_$dyn_memory_ptr": {
									"entryPoint": 5292,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 3181,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 3864,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 4753,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_struct$_TokenKey_$2052_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 5944,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 4725,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_struct$_TokenKey_$2052_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 5916,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 4769,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5774,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 4916,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_struct$_TokenKey_$2052_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 6191,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack": {
									"entryPoint": 4736,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_struct$_TokenKey_$2052_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 5927,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr": {
									"entryPoint": 4780,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 5108,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr": {
									"entryPoint": 5785,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4334,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2920,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 6639,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5874,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_int256": {
									"entryPoint": 3812,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_int32": {
									"entryPoint": 5191,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_int64": {
									"entryPoint": 3630,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2888,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5960,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint32": {
									"entryPoint": 4025,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint64": {
									"entryPoint": 4690,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 3230,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 4797,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 3051,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 6765,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 4497,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 3004,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 2982,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 3171,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 3176,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 2883,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2878,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 2987,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_1b4af10c92b76c4a3a958699c6b18d02400d3d3fb629c80d497d7a8c2883a272": {
									"entryPoint": 4544,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ac0717d6bfbebcd19ba94ac3f67866c04f07fcffbe24763a234917dbad73feb4": {
									"entryPoint": 4351,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2938,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address_payable": {
									"entryPoint": 6657,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_int32": {
									"entryPoint": 5204,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_int64": {
									"entryPoint": 3685,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint32": {
									"entryPoint": 4041,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint64": {
									"entryPoint": 5248,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:31754:7",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:7",
														"type": ""
													}
												],
												"src": "334:126:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:7",
														"type": ""
													}
												],
												"src": "466:96:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:7"
															},
															"nodeType": "YulIf",
															"src": "621:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:7",
														"type": ""
													}
												],
												"src": "568:122:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:7",
														"type": ""
													}
												],
												"src": "696:139:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "930:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "947:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "950:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "940:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "940:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "940:12:7"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "841:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1012:54:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1022:38:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1040:5:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1047:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1036:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1036:14:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1056:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1052:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1052:7:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1032:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1032:28:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "1022:6:7"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "995:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "1005:6:7",
														"type": ""
													}
												],
												"src": "964:102:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1100:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1117:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1120:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1110:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1110:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1110:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1214:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1217:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1207:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1207:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1207:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1238:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1241:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1231:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1231:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1231:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1072:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1301:238:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1311:58:7",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1333:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "1363:4:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "1341:21:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1341:27:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1329:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1329:40:7"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "1315:10:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1480:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1482:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1482:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1482:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1423:10:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1435:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1420:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1420:34:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1459:10:7"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1471:6:7"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1456:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1456:22:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1417:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1417:62:7"
															},
															"nodeType": "YulIf",
															"src": "1414:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1518:2:7",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1522:10:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1511:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1511:22:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1511:22:7"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1287:6:7",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1295:4:7",
														"type": ""
													}
												],
												"src": "1258:281:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1586:88:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1596:30:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "1606:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1606:20:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1596:6:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1655:6:7"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1663:4:7"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1635:19:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1635:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1635:33:7"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1570:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1579:6:7",
														"type": ""
													}
												],
												"src": "1545:129:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1771:229:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1876:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1878:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1878:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1878:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1848:6:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1856:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1845:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1845:30:7"
															},
															"nodeType": "YulIf",
															"src": "1842:56:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1908:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1920:6:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1928:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "1916:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1916:17:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1908:4:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1970:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1982:4:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1988:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1978:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1978:15:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1970:4:7"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1755:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1766:4:7",
														"type": ""
													}
												],
												"src": "1680:320:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2095:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2112:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2115:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2105:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2105:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2105:12:7"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "2006:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2218:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2235:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2238:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2228:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2228:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2228:12:7"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "2129:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2318:241:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2423:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2425:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2425:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2425:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2395:6:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2403:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2392:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2392:30:7"
															},
															"nodeType": "YulIf",
															"src": "2389:56:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2455:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2485:6:7"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "2463:21:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2463:29:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2455:4:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2529:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "2541:4:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2547:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2537:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2537:15:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2529:4:7"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2302:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2313:4:7",
														"type": ""
													}
												],
												"src": "2252:307:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2629:82:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "2652:3:7"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2657:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2662:6:7"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "2639:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2639:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2639:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "2689:3:7"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2694:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2685:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2685:16:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2703:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2678:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2678:27:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2678:27:7"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2611:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "2616:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2621:6:7",
														"type": ""
													}
												],
												"src": "2565:146:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2800:340:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2810:74:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2876:6:7"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "2835:40:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2835:48:7"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2819:15:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2819:65:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2810:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2900:5:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2907:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2893:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2893:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2893:21:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2923:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2938:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2945:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2934:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2934:16:7"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "2927:3:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2988:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "2990:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2990:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2990:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "2969:3:7"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2974:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2965:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2965:16:7"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2983:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2962:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2962:25:7"
															},
															"nodeType": "YulIf",
															"src": "2959:112:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3117:3:7"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "3122:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3127:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "3080:36:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3080:54:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3080:54:7"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2773:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2778:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2786:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2794:5:7",
														"type": ""
													}
												],
												"src": "2717:423:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3220:277:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3269:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "3271:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3271:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3271:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3248:6:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3256:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3244:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3244:17:7"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "3263:3:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3240:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3240:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3233:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3233:35:7"
															},
															"nodeType": "YulIf",
															"src": "3230:122:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3361:34:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3388:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3375:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3375:20:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3365:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3404:87:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3464:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3472:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3460:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3460:17:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3479:6:7"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3487:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "3413:46:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3413:78:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3404:5:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3198:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3206:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "3214:5:7",
														"type": ""
													}
												],
												"src": "3159:338:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3629:831:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3639:99:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3730:6:7"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "3664:65:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3664:73:7"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "3648:15:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3648:90:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3639:5:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3747:16:7",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "3758:5:7"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "3751:3:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "3780:5:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3787:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3773:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3773:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3773:21:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3803:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "3814:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3821:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3810:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3810:16:7"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "3803:3:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3836:44:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3854:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3866:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3874:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "3862:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3862:17:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3850:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3850:30:7"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "3840:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3908:103:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "3922:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3922:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3922:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3895:6:7"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3903:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3892:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3892:15:7"
															},
															"nodeType": "YulIf",
															"src": "3889:122:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4096:358:7",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4111:36:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "4143:3:7"
																				}
																			],
																			"functionName": {
																				"name": "calldataload",
																				"nodeType": "YulIdentifier",
																				"src": "4130:12:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4130:17:7"
																		},
																		"variables": [
																			{
																				"name": "innerOffset",
																				"nodeType": "YulTypedName",
																				"src": "4115:11:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "4199:83:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																							"nodeType": "YulIdentifier",
																							"src": "4201:77:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4201:79:7"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "4201:79:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "innerOffset",
																					"nodeType": "YulIdentifier",
																					"src": "4166:11:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4179:18:7",
																					"type": "",
																					"value": "0xffffffffffffffff"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "4163:2:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4163:35:7"
																		},
																		"nodeType": "YulIf",
																		"src": "4160:122:7"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4295:42:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "offset",
																					"nodeType": "YulIdentifier",
																					"src": "4317:6:7"
																				},
																				{
																					"name": "innerOffset",
																					"nodeType": "YulIdentifier",
																					"src": "4325:11:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4313:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4313:24:7"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "4299:10:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "4358:3:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "4393:10:7"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "4405:3:7"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_bytes_memory_ptr",
																						"nodeType": "YulIdentifier",
																						"src": "4363:29:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4363:46:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4351:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4351:59:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4351:59:7"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4423:21:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "4434:3:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4439:4:7",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4430:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4430:14:7"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "4423:3:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "4049:3:7"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4054:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4046:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4046:15:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "4062:25:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4064:21:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "4075:3:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4080:4:7",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4071:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4071:14:7"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "4064:3:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "4024:21:7",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4026:17:7",
																		"value": {
																			"name": "offset",
																			"nodeType": "YulIdentifier",
																			"src": "4037:6:7"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nodeType": "YulTypedName",
																				"src": "4030:3:7",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "4020:434:7"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3599:6:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3607:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3615:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "3623:5:7",
														"type": ""
													}
												],
												"src": "3518:942:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4567:302:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4616:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "4618:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4618:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4618:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4595:6:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4603:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4591:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4591:17:7"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "4610:3:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "4587:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4587:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4580:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4580:35:7"
															},
															"nodeType": "YulIf",
															"src": "4577:122:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4708:34:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4735:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4722:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4722:20:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4712:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4751:112:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4836:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4844:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4832:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4832:17:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4851:6:7"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "4859:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "4760:71:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4760:103:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "4751:5:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4545:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4553:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "4561:5:7",
														"type": ""
													}
												],
												"src": "4481:388:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4992:585:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5038:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5040:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5040:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5040:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5013:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5022:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5009:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5009:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5034:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5005:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5005:32:7"
															},
															"nodeType": "YulIf",
															"src": "5002:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "5131:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5146:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5160:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5150:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5175:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5210:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5221:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5206:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5206:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5230:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5185:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5185:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5175:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5258:312:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5273:46:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5304:9:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5315:2:7",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5300:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5300:18:7"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "5287:12:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5287:32:7"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5277:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5366:83:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "5368:77:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5368:79:7"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "5368:79:7"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5338:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5346:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5335:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5335:30:7"
																	},
																	"nodeType": "YulIf",
																	"src": "5332:117:7"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5463:97:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5532:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5543:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5528:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5528:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5552:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "5473:54:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5473:87:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5463:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4954:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4965:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4977:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4985:6:7",
														"type": ""
													}
												],
												"src": "4875:702:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5626:47:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5636:31:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5658:1:7",
																		"type": "",
																		"value": "7"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5661:5:7"
																	}
																],
																"functionName": {
																	"name": "signextend",
																	"nodeType": "YulIdentifier",
																	"src": "5647:10:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5647:20:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5636:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int64",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5608:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5618:7:7",
														"type": ""
													}
												],
												"src": "5583:90:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5740:51:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5757:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5778:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_int64",
																			"nodeType": "YulIdentifier",
																			"src": "5762:15:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5762:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5750:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5750:35:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5750:35:7"
														}
													]
												},
												"name": "abi_encode_t_int64_to_t_int64_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5728:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5735:3:7",
														"type": ""
													}
												],
												"src": "5679:112:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5891:120:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5901:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5913:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5924:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5909:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5909:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5901:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5977:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5990:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6001:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5986:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5986:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_int64_to_t_int64_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5937:39:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5937:67:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5937:67:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_int64__to_t_int64__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5863:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5875:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5886:4:7",
														"type": ""
													}
												],
												"src": "5797:214:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6058:77:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6113:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6122:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6125:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6115:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6115:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6115:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6081:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6104:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_int64",
																					"nodeType": "YulIdentifier",
																					"src": "6088:15:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6088:22:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6078:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6078:33:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6071:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6071:41:7"
															},
															"nodeType": "YulIf",
															"src": "6068:61:7"
														}
													]
												},
												"name": "validator_revert_t_int64",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6051:5:7",
														"type": ""
													}
												],
												"src": "6017:118:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6191:85:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6201:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6223:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6210:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6210:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "6201:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6264:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_int64",
																	"nodeType": "YulIdentifier",
																	"src": "6239:24:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6239:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6239:31:7"
														}
													]
												},
												"name": "abi_decode_t_int64",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6169:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6177:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6185:5:7",
														"type": ""
													}
												],
												"src": "6141:135:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6380:517:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6426:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6428:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6428:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6428:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6401:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6410:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6397:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6397:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6422:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6393:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6393:32:7"
															},
															"nodeType": "YulIf",
															"src": "6390:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "6519:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6534:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6548:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6538:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6563:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6598:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6609:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6594:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6594:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6618:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6573:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6573:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6563:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6646:118:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6661:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6675:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6665:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6691:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6726:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6737:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6722:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6722:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6746:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6701:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6701:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6691:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6774:116:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6789:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6803:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6793:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6819:61:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6852:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6863:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6848:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6848:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6872:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int64",
																			"nodeType": "YulIdentifier",
																			"src": "6829:18:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6829:51:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "6819:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_int64",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6334:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6345:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6357:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6365:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6373:6:7",
														"type": ""
													}
												],
												"src": "6282:615:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6947:32:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6957:16:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "6968:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "6957:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6929:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "6939:7:7",
														"type": ""
													}
												],
												"src": "6903:76:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7048:52:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7065:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7087:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_int256",
																			"nodeType": "YulIdentifier",
																			"src": "7070:16:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7070:23:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7058:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7058:36:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7058:36:7"
														}
													]
												},
												"name": "abi_encode_t_int256_to_t_int256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7036:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7043:3:7",
														"type": ""
													}
												],
												"src": "6985:115:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7202:122:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7212:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7224:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7235:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7220:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7220:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7212:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7290:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7303:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7314:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7299:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7299:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_int256_to_t_int256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7248:41:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7248:69:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7248:69:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7174:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7186:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7197:4:7",
														"type": ""
													}
												],
												"src": "7106:218:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7397:241:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7502:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7504:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7504:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7504:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7474:6:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7482:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7471:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7471:30:7"
															},
															"nodeType": "YulIf",
															"src": "7468:56:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7534:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7564:6:7"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "7542:21:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7542:29:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "7534:4:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7608:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "7620:4:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7626:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7616:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7616:15:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "7608:4:7"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7381:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7392:4:7",
														"type": ""
													}
												],
												"src": "7330:308:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7728:341:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7738:75:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7805:6:7"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "7763:41:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7763:49:7"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "7747:15:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7747:66:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "7738:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "7829:5:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7836:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7822:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7822:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7822:21:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7852:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "7867:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7874:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7863:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7863:16:7"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "7856:3:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7917:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "7919:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7919:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7919:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "7898:3:7"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7903:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7894:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7894:16:7"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "7912:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7891:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7891:25:7"
															},
															"nodeType": "YulIf",
															"src": "7888:112:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "8046:3:7"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "8051:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8056:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "8009:36:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8009:54:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8009:54:7"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "7701:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7706:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7714:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "7722:5:7",
														"type": ""
													}
												],
												"src": "7644:425:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8151:278:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8200:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "8202:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8202:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8202:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8179:6:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8187:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8175:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8175:17:7"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "8194:3:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "8171:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8171:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8164:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8164:35:7"
															},
															"nodeType": "YulIf",
															"src": "8161:122:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8292:34:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8319:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8306:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8306:20:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "8296:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8335:88:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "8396:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8404:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8392:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8392:17:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8411:6:7"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "8419:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "8344:47:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8344:79:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "8335:5:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "8129:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8137:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "8145:5:7",
														"type": ""
													}
												],
												"src": "8089:340:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8479:49:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8489:33:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8504:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8511:10:7",
																		"type": "",
																		"value": "0xffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "8500:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8500:22:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "8489:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8461:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "8471:7:7",
														"type": ""
													}
												],
												"src": "8435:93:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8576:78:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8632:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8641:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8644:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8634:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8634:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8634:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8599:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "8623:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint32",
																					"nodeType": "YulIdentifier",
																					"src": "8606:16:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8606:23:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "8596:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8596:34:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8589:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8589:42:7"
															},
															"nodeType": "YulIf",
															"src": "8586:62:7"
														}
													]
												},
												"name": "validator_revert_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8569:5:7",
														"type": ""
													}
												],
												"src": "8534:120:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8711:86:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8721:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8743:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8730:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8730:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "8721:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8785:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint32",
																	"nodeType": "YulIdentifier",
																	"src": "8759:25:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8759:32:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8759:32:7"
														}
													]
												},
												"name": "abi_decode_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "8689:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8697:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8705:5:7",
														"type": ""
													}
												],
												"src": "8660:137:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8965:1285:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9012:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "9014:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9014:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9014:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8986:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8995:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8982:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8982:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9007:3:7",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8978:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8978:33:7"
															},
															"nodeType": "YulIf",
															"src": "8975:120:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "9105:287:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9120:45:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9151:9:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9162:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9147:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9147:17:7"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "9134:12:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9134:31:7"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9124:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "9212:83:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "9214:77:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9214:79:7"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "9214:79:7"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9184:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9192:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9181:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9181:30:7"
																	},
																	"nodeType": "YulIf",
																	"src": "9178:117:7"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9309:73:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9354:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9365:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9350:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9350:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9374:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "9319:30:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9319:63:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "9309:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9402:288:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9417:46:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9448:9:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9459:2:7",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9444:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9444:18:7"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "9431:12:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9431:32:7"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9421:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "9510:83:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "9512:77:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9512:79:7"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "9512:79:7"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9482:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9490:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9479:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9479:30:7"
																	},
																	"nodeType": "YulIf",
																	"src": "9476:117:7"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9607:73:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9652:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9663:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9648:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9648:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9672:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "9617:30:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9617:63:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "9607:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9700:288:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9715:46:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9746:9:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9757:2:7",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9742:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9742:18:7"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "9729:12:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9729:32:7"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9719:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "9808:83:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "9810:77:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9810:79:7"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "9810:79:7"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9780:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9788:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9777:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9777:30:7"
																	},
																	"nodeType": "YulIf",
																	"src": "9774:117:7"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9905:73:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9950:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9961:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9946:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9946:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9970:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "9915:30:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9915:63:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "9905:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9998:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10013:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10027:2:7",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10017:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10043:62:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10077:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10088:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10073:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10073:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10097:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint32",
																			"nodeType": "YulIdentifier",
																			"src": "10053:19:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10053:52:7"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "10043:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "10125:118:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10140:17:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10154:3:7",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10144:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10171:62:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10205:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10216:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10201:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10201:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10225:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint32",
																			"nodeType": "YulIdentifier",
																			"src": "10181:19:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10181:52:7"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "10171:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_uint32t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8903:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8914:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8926:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8934:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8942:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "8950:6:7",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "8958:6:7",
														"type": ""
													}
												],
												"src": "8803:1447:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10321:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10338:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10361:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "10343:17:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10343:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10331:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10331:37:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10331:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10309:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10316:3:7",
														"type": ""
													}
												],
												"src": "10256:118:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10478:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10488:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10500:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10511:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10496:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10496:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10488:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10568:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10581:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10592:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10577:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10577:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10524:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10524:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10524:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10450:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10462:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10473:4:7",
														"type": ""
													}
												],
												"src": "10380:222:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10704:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10721:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10726:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10714:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10714:19:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10714:19:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10742:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10761:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10766:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10757:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10757:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "10742:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10676:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10681:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "10692:11:7",
														"type": ""
													}
												],
												"src": "10608:169:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10889:114:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10911:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10919:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10907:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10907:14:7"
																	},
																	{
																		"hexValue": "4661696c656420746f206d696e74206e6f6e2d66756e6769626c6520746f6b65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10923:34:7",
																		"type": "",
																		"value": "Failed to mint non-fungible toke"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10900:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10900:58:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10900:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10979:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10987:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10975:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10975:15:7"
																	},
																	{
																		"hexValue": "6e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10992:3:7",
																		"type": "",
																		"value": "n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10968:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10968:28:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10968:28:7"
														}
													]
												},
												"name": "store_literal_in_memory_ac0717d6bfbebcd19ba94ac3f67866c04f07fcffbe24763a234917dbad73feb4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10881:6:7",
														"type": ""
													}
												],
												"src": "10783:220:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11155:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11165:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11231:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11236:2:7",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11172:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11172:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11165:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11337:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ac0717d6bfbebcd19ba94ac3f67866c04f07fcffbe24763a234917dbad73feb4",
																	"nodeType": "YulIdentifier",
																	"src": "11248:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11248:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11248:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11350:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11361:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11366:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11357:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11357:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11350:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ac0717d6bfbebcd19ba94ac3f67866c04f07fcffbe24763a234917dbad73feb4_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11143:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11151:3:7",
														"type": ""
													}
												],
												"src": "11009:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11552:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11562:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11574:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11585:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11570:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11570:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11562:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11609:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11620:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11605:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11605:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11628:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11634:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11624:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11624:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11598:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11598:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11598:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11654:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11788:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ac0717d6bfbebcd19ba94ac3f67866c04f07fcffbe24763a234917dbad73feb4_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11662:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11662:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11654:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ac0717d6bfbebcd19ba94ac3f67866c04f07fcffbe24763a234917dbad73feb4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11532:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11547:4:7",
														"type": ""
													}
												],
												"src": "11381:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11834:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11851:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11854:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11844:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11844:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11844:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11948:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11951:4:7",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11941:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11941:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11941:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11972:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11975:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11965:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11965:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11965:15:7"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "11806:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12098:118:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12120:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12128:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12116:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12116:14:7"
																	},
																	{
																		"hexValue": "4661696c656420746f207472616e73666572206e6f6e2d66756e6769626c6520",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12132:34:7",
																		"type": "",
																		"value": "Failed to transfer non-fungible "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12109:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12109:58:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12109:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12188:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12196:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12184:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12184:15:7"
																	},
																	{
																		"hexValue": "746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12201:7:7",
																		"type": "",
																		"value": "token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12177:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12177:32:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12177:32:7"
														}
													]
												},
												"name": "store_literal_in_memory_1b4af10c92b76c4a3a958699c6b18d02400d3d3fb629c80d497d7a8c2883a272",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12090:6:7",
														"type": ""
													}
												],
												"src": "11992:224:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12368:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12378:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12444:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12449:2:7",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12385:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12385:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12378:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12550:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1b4af10c92b76c4a3a958699c6b18d02400d3d3fb629c80d497d7a8c2883a272",
																	"nodeType": "YulIdentifier",
																	"src": "12461:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12461:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12461:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12563:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12574:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12579:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12570:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12570:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12563:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1b4af10c92b76c4a3a958699c6b18d02400d3d3fb629c80d497d7a8c2883a272_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12356:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12364:3:7",
														"type": ""
													}
												],
												"src": "12222:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12765:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12775:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12787:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12798:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12783:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12783:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12775:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12822:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12833:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12818:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12818:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12841:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12847:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12837:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12837:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12811:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12811:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12811:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12867:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13001:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1b4af10c92b76c4a3a958699c6b18d02400d3d3fb629c80d497d7a8c2883a272_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12875:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12875:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12867:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1b4af10c92b76c4a3a958699c6b18d02400d3d3fb629c80d497d7a8c2883a272__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12745:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12760:4:7",
														"type": ""
													}
												],
												"src": "12594:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13063:57:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13073:41:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13088:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13095:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "13084:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13084:30:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "13073:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint64",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13045:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "13055:7:7",
														"type": ""
													}
												],
												"src": "13019:101:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13189:52:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13206:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13228:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint64",
																			"nodeType": "YulIdentifier",
																			"src": "13211:16:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13211:23:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13199:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13199:36:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13199:36:7"
														}
													]
												},
												"name": "abi_encode_t_uint64_to_t_uint64_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13177:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13184:3:7",
														"type": ""
													}
												],
												"src": "13126:115:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13330:40:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13341:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13357:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "13351:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13351:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "13341:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13313:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "13323:6:7",
														"type": ""
													}
												],
												"src": "13247:123:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13496:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13513:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13518:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13506:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13506:19:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13506:19:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13534:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13553:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13558:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13549:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13549:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "13534:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13468:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "13473:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "13484:11:7",
														"type": ""
													}
												],
												"src": "13376:193:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13656:60:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13666:11:7",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "13674:3:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "13666:4:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13687:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "13699:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13704:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13695:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13695:14:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "13687:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "13643:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "13651:4:7",
														"type": ""
													}
												],
												"src": "13575:141:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13780:40:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13791:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13807:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "13801:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13801:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "13791:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13763:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "13773:6:7",
														"type": ""
													}
												],
												"src": "13722:98:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13911:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13928:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13933:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13921:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13921:19:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13921:19:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13949:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13968:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13973:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13964:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13964:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "13949:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13883:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "13888:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "13899:11:7",
														"type": ""
													}
												],
												"src": "13826:158:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14052:184:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14062:10:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "14071:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "14066:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14131:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "14156:3:7"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "14161:1:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "14152:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14152:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "14175:3:7"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "14180:1:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "14171:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "14171:11:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "14165:5:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14165:18:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "14145:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14145:39:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14145:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "14092:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14095:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "14089:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14089:13:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "14103:19:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "14105:15:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "14114:1:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14117:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "14110:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14110:10:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "14105:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "14085:3:7",
																"statements": []
															},
															"src": "14081:113:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "14214:3:7"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "14219:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14210:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14210:16:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14228:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14203:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14203:27:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14203:27:7"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "14034:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "14039:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "14044:6:7",
														"type": ""
													}
												],
												"src": "13990:246:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14322:273:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14332:52:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14378:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "14346:31:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14346:38:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "14336:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14393:67:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14448:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14453:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "14400:47:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14400:60:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14393:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14508:5:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14515:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14504:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14504:16:7"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14522:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14527:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "14469:34:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14469:65:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14469:65:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14543:46:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14554:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "14581:6:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "14559:21:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14559:29:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14550:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14550:39:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14543:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14303:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14310:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14318:3:7",
														"type": ""
													}
												],
												"src": "14242:353:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14699:94:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14709:78:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14775:6:7"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14783:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "14723:51:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14723:64:7"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "14709:10:7"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_bytes_memory_ptr_to_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14672:6:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14680:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "14688:10:7",
														"type": ""
													}
												],
												"src": "14601:192:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14883:38:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14893:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "14905:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14910:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14901:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14901:14:7"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "14893:4:7"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "14870:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "14878:4:7",
														"type": ""
													}
												],
												"src": "14799:122:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15095:841:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15105:77:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15176:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "15119:56:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15119:63:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "15109:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "15191:102:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15281:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15286:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15198:82:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15198:95:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15191:3:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15302:20:7",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "15319:3:7"
															},
															"variables": [
																{
																	"name": "headStart",
																	"nodeType": "YulTypedName",
																	"src": "15306:9:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15331:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15347:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "15356:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15364:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "15352:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15352:17:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15343:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15343:27:7"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "15335:4:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15379:80:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15453:5:7"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "15394:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15394:65:7"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "15383:7:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15468:21:7",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "15482:7:7"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "15472:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15558:333:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "15579:3:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "tail",
																							"nodeType": "YulIdentifier",
																							"src": "15588:4:7"
																						},
																						{
																							"name": "headStart",
																							"nodeType": "YulIdentifier",
																							"src": "15594:9:7"
																						}
																					],
																					"functionName": {
																						"name": "sub",
																						"nodeType": "YulIdentifier",
																						"src": "15584:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "15584:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "15572:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15572:33:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15572:33:7"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "15618:34:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "15645:6:7"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "15639:5:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15639:13:7"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "15622:13:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "15665:90:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "15735:13:7"
																				},
																				{
																					"name": "tail",
																					"nodeType": "YulIdentifier",
																					"src": "15750:4:7"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_bytes_memory_ptr_to_t_bytes_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "15673:61:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15673:82:7"
																		},
																		"variableNames": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15665:4:7"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "15768:79:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "15840:6:7"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "15778:61:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15778:69:7"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15768:6:7"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "15860:21:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "15871:3:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15876:4:7",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "15867:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15867:14:7"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "15860:3:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "15520:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15523:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "15517:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15517:13:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "15531:18:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "15533:14:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "15542:1:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15545:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "15538:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15538:9:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "15533:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "15502:14:7",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "15504:10:7",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "15513:1:7",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "15508:1:7",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "15498:393:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15900:11:7",
															"value": {
																"name": "tail",
																"nodeType": "YulIdentifier",
																"src": "15907:4:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15900:3:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "15920:10:7",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "15927:3:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15920:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15074:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15081:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15090:3:7",
														"type": ""
													}
												],
												"src": "14953:983:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16162:405:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16172:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16184:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16195:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16180:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16180:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16172:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "16252:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16265:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16276:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16261:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16261:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16208:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16208:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16208:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "16331:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16344:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16355:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16340:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16340:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint64_to_t_uint64_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16289:41:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16289:70:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16289:70:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16380:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16391:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16376:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16376:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16400:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16406:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16396:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16396:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16369:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16369:48:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16369:48:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16426:134:7",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "16546:6:7"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16555:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16434:111:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16434:126:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16426:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint64_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__to_t_address_t_uint64_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16118:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "16130:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "16138:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16146:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16157:4:7",
														"type": ""
													}
												],
												"src": "15942:625:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16686:34:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16696:18:7",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "16711:3:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "16696:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16658:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "16663:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "16674:11:7",
														"type": ""
													}
												],
												"src": "16573:147:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16834:278:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16844:52:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16890:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "16858:31:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16858:38:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "16848:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "16905:95:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16988:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16993:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16912:75:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16912:88:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16905:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "17048:5:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17055:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17044:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17044:16:7"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17062:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "17067:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "17009:34:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "17009:65:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17009:65:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17083:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17094:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "17099:6:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17090:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "17090:16:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "17083:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16815:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16822:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16830:3:7",
														"type": ""
													}
												],
												"src": "16726:386:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17252:137:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17263:100:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "17350:6:7"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17359:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17270:79:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "17270:93:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "17263:3:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "17373:10:7",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "17380:3:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "17373:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17231:3:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "17237:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17248:3:7",
														"type": ""
													}
												],
												"src": "17118:271:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17438:47:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17448:31:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17470:1:7",
																		"type": "",
																		"value": "3"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "17473:5:7"
																	}
																],
																"functionName": {
																	"name": "signextend",
																	"nodeType": "YulIdentifier",
																	"src": "17459:10:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "17459:20:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "17448:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17420:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "17430:7:7",
														"type": ""
													}
												],
												"src": "17395:90:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17532:77:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17587:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17596:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17599:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "17589:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17589:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17589:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "17555:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "17578:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_int32",
																					"nodeType": "YulIdentifier",
																					"src": "17562:15:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17562:22:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "17552:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17552:33:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "17545:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "17545:41:7"
															},
															"nodeType": "YulIf",
															"src": "17542:61:7"
														}
													]
												},
												"name": "validator_revert_t_int32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17525:5:7",
														"type": ""
													}
												],
												"src": "17491:118:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17676:78:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17686:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "17701:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "17695:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "17695:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "17686:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "17742:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_int32",
																	"nodeType": "YulIdentifier",
																	"src": "17717:24:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "17717:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17717:31:7"
														}
													]
												},
												"name": "abi_decode_t_int32_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "17654:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17662:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17670:5:7",
														"type": ""
													}
												],
												"src": "17615:139:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17802:78:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17858:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17867:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17870:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "17860:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17860:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17860:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "17825:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "17849:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint64",
																					"nodeType": "YulIdentifier",
																					"src": "17832:16:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17832:23:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "17822:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17822:34:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "17815:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "17815:42:7"
															},
															"nodeType": "YulIf",
															"src": "17812:62:7"
														}
													]
												},
												"name": "validator_revert_t_uint64",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17795:5:7",
														"type": ""
													}
												],
												"src": "17760:120:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17948:79:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17958:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "17973:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "17967:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "17967:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "17958:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "18015:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint64",
																	"nodeType": "YulIdentifier",
																	"src": "17989:25:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "17989:32:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17989:32:7"
														}
													]
												},
												"name": "abi_decode_t_uint64_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "17926:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17934:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17942:5:7",
														"type": ""
													}
												],
												"src": "17886:141:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18113:229:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18218:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "18220:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18220:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18220:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "18190:6:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18198:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "18187:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "18187:30:7"
															},
															"nodeType": "YulIf",
															"src": "18184:56:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18250:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "18262:6:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18270:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "18258:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "18258:17:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "18250:4:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "18312:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "18324:4:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18330:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18320:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "18320:15:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "18312:4:7"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_int64_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "18097:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "18108:4:7",
														"type": ""
													}
												],
												"src": "18033:309:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18409:78:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18419:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "18434:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "18428:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "18428:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "18419:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "18475:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_int64",
																	"nodeType": "YulIdentifier",
																	"src": "18450:24:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "18450:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18450:31:7"
														}
													]
												},
												"name": "abi_decode_t_int64_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "18387:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "18395:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18403:5:7",
														"type": ""
													}
												],
												"src": "18348:139:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18619:615:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18629:88:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "18709:6:7"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_int64_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "18654:54:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18654:62:7"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "18638:15:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "18638:79:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "18629:5:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "18726:16:7",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "18737:5:7"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "18730:3:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "18759:5:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "18766:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18752:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "18752:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18752:21:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18782:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "18793:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18800:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18789:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "18789:16:7"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "18782:3:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "18815:44:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "18833:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "18845:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18853:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "18841:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18841:17:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18829:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "18829:30:7"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "18819:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18887:103:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "18901:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18901:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18901:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "18874:6:7"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "18882:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "18871:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "18871:15:7"
															},
															"nodeType": "YulIf",
															"src": "18868:122:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19075:153:7",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "19090:21:7",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "19108:3:7"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "19094:10:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "19132:3:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "19167:10:7"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "19179:3:7"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_int64_fromMemory",
																						"nodeType": "YulIdentifier",
																						"src": "19137:29:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "19137:46:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "19125:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19125:59:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19125:59:7"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "19197:21:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "19208:3:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19213:4:7",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "19204:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19204:14:7"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "19197:3:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "19028:3:7"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "19033:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "19025:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "19025:15:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "19041:25:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "19043:21:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "19054:3:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19059:4:7",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "19050:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19050:14:7"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "19043:3:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "19003:21:7",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "19005:17:7",
																		"value": {
																			"name": "offset",
																			"nodeType": "YulIdentifier",
																			"src": "19016:6:7"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nodeType": "YulTypedName",
																				"src": "19009:3:7",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "18999:229:7"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_int64_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "18589:6:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "18597:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "18605:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "18613:5:7",
														"type": ""
													}
												],
												"src": "18508:726:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19341:295:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19390:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "19392:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19392:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19392:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "19369:6:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "19377:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "19365:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19365:17:7"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "19384:3:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "19361:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19361:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "19354:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "19354:35:7"
															},
															"nodeType": "YulIf",
															"src": "19351:122:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "19482:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "19502:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "19496:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "19496:13:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "19486:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19518:112:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "19603:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19611:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19599:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19599:17:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "19618:6:7"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "19626:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_int64_$dyn_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "19527:71:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "19527:103:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "19518:5:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_int64_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "19319:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "19327:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "19335:5:7",
														"type": ""
													}
												],
												"src": "19255:381:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19773:725:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19819:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "19821:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19821:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19821:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "19794:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19803:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19790:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19790:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19815:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "19786:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "19786:32:7"
															},
															"nodeType": "YulIf",
															"src": "19783:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "19912:126:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "19927:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19941:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "19931:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "19956:72:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "20000:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "20011:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "19996:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19996:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "20020:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int32_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "19966:29:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19966:62:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "19956:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "20048:128:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "20063:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20077:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "20067:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "20093:73:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "20138:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "20149:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "20134:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20134:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "20158:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint64_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "20103:30:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20103:63:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "20093:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "20186:305:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "20201:39:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "20225:9:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "20236:2:7",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "20221:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20221:18:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "20215:5:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20215:25:7"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "20205:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "20287:83:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "20289:77:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "20289:79:7"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "20289:79:7"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "20259:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20267:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "20256:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20256:30:7"
																	},
																	"nodeType": "YulIf",
																	"src": "20253:117:7"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "20384:97:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "20453:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "20464:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "20449:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20449:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "20473:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_int64_$dyn_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "20394:54:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20394:87:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "20384:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_int32t_uint64t_array$_t_int64_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19727:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "19738:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "19750:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "19758:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "19766:6:7",
														"type": ""
													}
												],
												"src": "19642:856:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20630:206:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20640:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20652:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20663:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20648:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "20648:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20640:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "20720:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20733:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20744:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20729:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20729:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20676:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "20676:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20676:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "20801:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20814:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20825:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20810:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20810:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20757:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "20757:72:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20757:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20594:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "20606:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "20614:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20625:4:7",
														"type": ""
													}
												],
												"src": "20504:332:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20917:272:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20963:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "20965:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20965:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20965:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "20938:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20947:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20934:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20934:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20959:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "20930:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "20930:32:7"
															},
															"nodeType": "YulIf",
															"src": "20927:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "21056:126:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "21071:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21085:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "21075:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "21100:72:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "21144:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "21155:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "21140:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "21140:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "21164:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int32_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "21110:29:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21110:62:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "21100:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_int32_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20887:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "20898:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "20910:6:7",
														"type": ""
													}
												],
												"src": "20842:347:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21373:367:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21383:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21395:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21406:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21391:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "21391:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21383:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "21464:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21477:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21488:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21473:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21473:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21420:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "21420:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21420:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "21545:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21558:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21569:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21554:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21554:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21501:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "21501:72:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21501:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "21627:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21640:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21651:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21636:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21636:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21583:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "21583:72:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21583:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "21705:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21718:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21729:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21714:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21714:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_int64_to_t_int64_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21665:39:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "21665:68:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21665:68:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_address_t_int64__to_t_address_t_address_t_address_t_int64__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21321:9:7",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "21333:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "21341:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "21349:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "21357:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21368:4:7",
														"type": ""
													}
												],
												"src": "21195:545:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21805:40:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21816:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "21832:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "21826:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "21826:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "21816:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "21788:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "21798:6:7",
														"type": ""
													}
												],
												"src": "21746:99:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21937:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21954:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "21959:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21947:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "21947:19:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21947:19:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21975:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21994:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21999:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21990:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "21990:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "21975:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "21909:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "21914:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "21925:11:7",
														"type": ""
													}
												],
												"src": "21851:159:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22098:275:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "22108:53:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "22155:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "22122:32:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "22122:39:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "22112:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "22170:68:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22226:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "22231:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "22177:48:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "22177:61:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "22170:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "22286:5:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22293:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22282:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22282:16:7"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22300:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "22305:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "22247:34:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "22247:65:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22247:65:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22321:46:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22332:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "22359:6:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "22337:21:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22337:29:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22328:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "22328:39:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "22321:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "22079:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "22086:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "22094:3:7",
														"type": ""
													}
												],
												"src": "22016:357:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22434:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22451:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "22474:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "22456:17:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22456:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22444:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "22444:37:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22444:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "22422:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "22429:3:7",
														"type": ""
													}
												],
												"src": "22379:108:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22535:48:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22545:32:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "22570:5:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "22563:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22563:13:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "22556:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "22556:21:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "22545:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "22517:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "22527:7:7",
														"type": ""
													}
												],
												"src": "22493:90:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22638:50:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22655:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "22675:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "22660:14:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22660:21:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22648:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "22648:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22648:34:7"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "22626:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "22633:3:7",
														"type": ""
													}
												],
												"src": "22589:99:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22747:52:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22764:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "22786:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint32",
																			"nodeType": "YulIdentifier",
																			"src": "22769:16:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22769:23:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22757:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "22757:36:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22757:36:7"
														}
													]
												},
												"name": "abi_encode_t_uint32_to_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "22735:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "22742:3:7",
														"type": ""
													}
												],
												"src": "22694:105:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22905:40:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22916:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "22932:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "22926:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "22926:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "22916:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_struct$_TokenKey_$2052_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "22888:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "22898:6:7",
														"type": ""
													}
												],
												"src": "22805:140:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23078:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23095:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "23100:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23088:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "23088:19:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23088:19:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23116:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23135:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23140:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23131:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "23131:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "23116:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_struct$_TokenKey_$2052_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "23050:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "23055:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "23066:11:7",
														"type": ""
													}
												],
												"src": "22951:200:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23255:60:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23265:11:7",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "23273:3:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "23265:4:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "23286:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "23298:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23303:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23294:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "23294:14:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "23286:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_struct$_TokenKey_$2052_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "23242:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "23250:4:7",
														"type": ""
													}
												],
												"src": "23157:158:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23366:32:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23376:16:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "23387:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "23376:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "23348:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "23358:7:7",
														"type": ""
													}
												],
												"src": "23321:77:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23459:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23476:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "23499:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "23481:17:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23481:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23469:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "23469:37:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23469:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "23447:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "23454:3:7",
														"type": ""
													}
												],
												"src": "23404:108:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23716:1115:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "23726:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23742:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23747:4:7",
																		"type": "",
																		"value": "0xa0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23738:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "23738:14:7"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "23730:4:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "23762:171:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "23810:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "23840:5:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "23847:4:7",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "23836:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "23836:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "23830:5:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23830:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "23814:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "23894:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "23912:3:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "23917:4:7",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "23908:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "23908:14:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_bool_to_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "23866:27:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23866:57:7"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "23866:57:7"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "23943:170:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "23984:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "24014:5:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "24021:4:7",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "24010:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "24010:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "24004:5:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24004:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "23988:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "24074:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "24092:3:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "24097:4:7",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "24088:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "24088:14:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "24040:33:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24040:63:7"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "24040:63:7"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "24123:236:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "24161:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "24191:5:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "24198:4:7",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "24187:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "24187:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "24181:5:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24181:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "24165:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "24229:3:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "24234:4:7",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "24225:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "24225:14:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "tail",
																						"nodeType": "YulIdentifier",
																						"src": "24245:4:7"
																					},
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "24251:3:7"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "24241:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "24241:14:7"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "24218:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24218:38:7"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "24218:38:7"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "24269:79:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "24329:12:7"
																			},
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "24343:4:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "24277:51:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24277:71:7"
																	},
																	"variableNames": [
																		{
																			"name": "tail",
																			"nodeType": "YulIdentifier",
																			"src": "24269:4:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "24369:244:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "24415:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "24445:5:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "24452:4:7",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "24441:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "24441:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "24435:5:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24435:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "24419:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "24483:3:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "24488:4:7",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "24479:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "24479:14:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "tail",
																						"nodeType": "YulIdentifier",
																						"src": "24499:4:7"
																					},
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "24505:3:7"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "24495:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "24495:14:7"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "24472:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24472:38:7"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "24472:38:7"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "24523:79:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "24583:12:7"
																			},
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "24597:4:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "24531:51:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24531:71:7"
																	},
																	"variableNames": [
																		{
																			"name": "tail",
																			"nodeType": "YulIdentifier",
																			"src": "24523:4:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "24623:181:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "24675:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "24705:5:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "24712:4:7",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "24701:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "24701:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "24695:5:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24695:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "24679:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "24765:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "24783:3:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "24788:4:7",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "24779:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "24779:14:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "24731:33:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24731:63:7"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "24731:63:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "24814:11:7",
															"value": {
																"name": "tail",
																"nodeType": "YulIdentifier",
																"src": "24821:4:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "24814:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_KeyValue_$2046_memory_ptr_to_t_struct$_KeyValue_$2046_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "23695:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "23702:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "23711:3:7",
														"type": ""
													}
												],
												"src": "23600:1231:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25035:516:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "25045:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25061:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25066:4:7",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25057:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "25057:14:7"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "25049:4:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "25081:167:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "25119:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "25149:5:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "25156:4:7",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "25145:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "25145:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "25139:5:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25139:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "25123:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "25209:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "25227:3:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "25232:4:7",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "25223:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "25223:14:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "25175:33:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25175:63:7"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "25175:63:7"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "25258:266:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "25292:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "25322:5:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "25329:4:7",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "25318:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "25318:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "25312:5:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25312:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "25296:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "25360:3:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "25365:4:7",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "25356:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "25356:14:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "tail",
																						"nodeType": "YulIdentifier",
																						"src": "25376:4:7"
																					},
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "25382:3:7"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "25372:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "25372:14:7"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "25349:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25349:38:7"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "25349:38:7"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "25400:113:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "25494:12:7"
																			},
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "25508:4:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_struct$_KeyValue_$2046_memory_ptr_to_t_struct$_KeyValue_$2046_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "25408:85:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25408:105:7"
																	},
																	"variableNames": [
																		{
																			"name": "tail",
																			"nodeType": "YulIdentifier",
																			"src": "25400:4:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "25534:11:7",
															"value": {
																"name": "tail",
																"nodeType": "YulIdentifier",
																"src": "25541:4:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "25534:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_TokenKey_$2052_memory_ptr_to_t_struct$_TokenKey_$2052_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "25014:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "25021:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "25030:3:7",
														"type": ""
													}
												],
												"src": "24919:632:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25689:128:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25699:112:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "25799:6:7"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25807:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_TokenKey_$2052_memory_ptr_to_t_struct$_TokenKey_$2052_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "25713:85:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "25713:98:7"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "25699:10:7"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_struct$_TokenKey_$2052_memory_ptr_to_t_struct$_TokenKey_$2052_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "25662:6:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "25670:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "25678:10:7",
														"type": ""
													}
												],
												"src": "25557:260:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25924:38:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25934:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "25946:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25951:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25942:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "25942:14:7"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "25934:4:7"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_struct$_TokenKey_$2052_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "25911:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "25919:4:7",
														"type": ""
													}
												],
												"src": "25823:139:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26220:933:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "26230:94:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "26318:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_struct$_TokenKey_$2052_memory_ptr_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "26244:73:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "26244:80:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "26234:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "26333:109:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26430:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "26435:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_struct$_TokenKey_$2052_memory_ptr_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "26340:89:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "26340:102:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "26333:3:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "26451:20:7",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "26468:3:7"
															},
															"variables": [
																{
																	"name": "headStart",
																	"nodeType": "YulTypedName",
																	"src": "26455:9:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "26480:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26496:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "26505:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26513:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "26501:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26501:17:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26492:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "26492:27:7"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "26484:4:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "26528:97:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "26619:5:7"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_struct$_TokenKey_$2052_memory_ptr_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "26543:75:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "26543:82:7"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "26532:7:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "26634:21:7",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "26648:7:7"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "26638:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "26724:384:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "26745:3:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "tail",
																							"nodeType": "YulIdentifier",
																							"src": "26754:4:7"
																						},
																						{
																							"name": "headStart",
																							"nodeType": "YulIdentifier",
																							"src": "26760:9:7"
																						}
																					],
																					"functionName": {
																						"name": "sub",
																						"nodeType": "YulIdentifier",
																						"src": "26750:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "26750:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "26738:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "26738:33:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "26738:33:7"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "26784:34:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "26811:6:7"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "26805:5:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "26805:13:7"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "26788:13:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "26831:124:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "26935:13:7"
																				},
																				{
																					"name": "tail",
																					"nodeType": "YulIdentifier",
																					"src": "26950:4:7"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_struct$_TokenKey_$2052_memory_ptr_to_t_struct$_TokenKey_$2052_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "26839:95:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "26839:116:7"
																		},
																		"variableNames": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "26831:4:7"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "26968:96:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "27057:6:7"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_struct$_TokenKey_$2052_memory_ptr_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "26978:78:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "26978:86:7"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "26968:6:7"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "27077:21:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "27088:3:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "27093:4:7",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "27084:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "27084:14:7"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "27077:3:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "26686:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "26689:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "26683:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "26683:13:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "26697:18:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "26699:14:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "26708:1:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "26711:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "26704:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "26704:9:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "26699:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "26668:14:7",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "26670:10:7",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "26679:1:7",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "26674:1:7",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "26664:444:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "27117:11:7",
															"value": {
																"name": "tail",
																"nodeType": "YulIdentifier",
																"src": "27124:4:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "27117:3:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "27137:10:7",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "27144:3:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "27137:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_struct$_TokenKey_$2052_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_TokenKey_$2052_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "26199:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "26206:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "26215:3:7",
														"type": ""
													}
												],
												"src": "26054:1099:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27341:586:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "27351:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27367:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27372:4:7",
																		"type": "",
																		"value": "0x60"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "27363:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "27363:14:7"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "27355:4:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "27387:164:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "27424:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "27454:5:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "27461:4:7",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "27450:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "27450:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "27444:5:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27444:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "27428:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "27512:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "27530:3:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "27535:4:7",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "27526:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "27526:14:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint32_to_t_uint32",
																			"nodeType": "YulIdentifier",
																			"src": "27480:31:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27480:61:7"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "27480:61:7"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "27561:176:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "27608:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "27638:5:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "27645:4:7",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "27634:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "27634:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "27628:5:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27628:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "27612:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "27698:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "27716:3:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "27721:4:7",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "27712:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "27712:14:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "27664:33:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27664:63:7"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "27664:63:7"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "27747:173:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "27793:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "27823:5:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "27830:4:7",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "27819:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "27819:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "27813:5:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27813:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "27797:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "27881:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "27899:3:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "27904:4:7",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "27895:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "27895:14:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint32_to_t_uint32",
																			"nodeType": "YulIdentifier",
																			"src": "27849:31:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27849:61:7"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "27849:61:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_Expiry_$2035_memory_ptr_to_t_struct$_Expiry_$2035_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "27328:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "27335:3:7",
														"type": ""
													}
												],
												"src": "27237:690:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28153:2073:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "28163:28:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "28179:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28184:6:7",
																		"type": "",
																		"value": "0x0160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "28175:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "28175:16:7"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "28167:4:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "28201:235:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "28236:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "28266:5:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "28273:4:7",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "28262:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "28262:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "28256:5:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28256:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "28240:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "28304:3:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "28309:4:7",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "28300:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "28300:14:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "tail",
																						"nodeType": "YulIdentifier",
																						"src": "28320:4:7"
																					},
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "28326:3:7"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "28316:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "28316:14:7"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "28293:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28293:38:7"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "28293:38:7"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "28344:81:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "28406:12:7"
																			},
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "28420:4:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "28352:53:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28352:73:7"
																	},
																	"variableNames": [
																		{
																			"name": "tail",
																			"nodeType": "YulIdentifier",
																			"src": "28344:4:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "28446:237:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "28483:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "28513:5:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "28520:4:7",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "28509:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "28509:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "28503:5:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28503:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "28487:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "28551:3:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "28556:4:7",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "28547:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "28547:14:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "tail",
																						"nodeType": "YulIdentifier",
																						"src": "28567:4:7"
																					},
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "28573:3:7"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "28563:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "28563:14:7"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "28540:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28540:38:7"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "28540:38:7"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "28591:81:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "28653:12:7"
																			},
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "28667:4:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "28599:53:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28599:73:7"
																	},
																	"variableNames": [
																		{
																			"name": "tail",
																			"nodeType": "YulIdentifier",
																			"src": "28591:4:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "28693:168:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "28732:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "28762:5:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "28769:4:7",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "28758:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "28758:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "28752:5:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28752:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "28736:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "28822:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "28840:3:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "28845:4:7",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "28836:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "28836:14:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "28788:33:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28788:63:7"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "28788:63:7"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "28871:235:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "28906:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "28936:5:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "28943:4:7",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "28932:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "28932:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "28926:5:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28926:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "28910:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "28974:3:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "28979:4:7",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "28970:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "28970:14:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "tail",
																						"nodeType": "YulIdentifier",
																						"src": "28990:4:7"
																					},
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "28996:3:7"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "28986:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "28986:14:7"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "28963:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28963:38:7"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "28963:38:7"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "29014:81:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "29076:12:7"
																			},
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "29090:4:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "29022:53:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29022:73:7"
																	},
																	"variableNames": [
																		{
																			"name": "tail",
																			"nodeType": "YulIdentifier",
																			"src": "29014:4:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "29116:169:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "29162:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "29192:5:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "29199:4:7",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "29188:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "29188:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "29182:5:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29182:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "29166:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "29246:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "29264:3:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "29269:4:7",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "29260:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "29260:14:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_bool_to_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "29218:27:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29218:57:7"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "29218:57:7"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "29295:167:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "29335:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "29365:5:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "29372:4:7",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "29361:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "29361:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "29355:5:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29355:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "29339:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "29423:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "29441:3:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "29446:4:7",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "29437:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "29437:14:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint32_to_t_uint32",
																			"nodeType": "YulIdentifier",
																			"src": "29391:31:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29391:61:7"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "29391:61:7"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "29472:167:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "29516:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "29546:5:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "29553:4:7",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "29542:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "29542:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "29536:5:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29536:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "29520:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "29600:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "29618:3:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "29623:4:7",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "29614:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "29614:14:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_bool_to_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "29572:27:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29572:57:7"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "29572:57:7"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "29649:322:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "29689:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "29719:5:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "29726:4:7",
																						"type": "",
																						"value": "0xe0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "29715:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "29715:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "29709:5:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29709:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "29693:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "29757:3:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "29762:4:7",
																						"type": "",
																						"value": "0xe0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "29753:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "29753:14:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "tail",
																						"nodeType": "YulIdentifier",
																						"src": "29773:4:7"
																					},
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "29779:3:7"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "29769:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "29769:14:7"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "29746:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29746:38:7"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "29746:38:7"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "29797:163:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "29941:12:7"
																			},
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "29955:4:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_array$_t_struct$_TokenKey_$2052_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_TokenKey_$2052_memory_ptr_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "29805:135:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29805:155:7"
																	},
																	"variableNames": [
																		{
																			"name": "tail",
																			"nodeType": "YulIdentifier",
																			"src": "29797:4:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "29981:218:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "30018:45:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "30048:5:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "30055:6:7",
																						"type": "",
																						"value": "0x0100"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "30044:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "30044:18:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "30038:5:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30038:25:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "30022:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "30158:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "30176:3:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "30181:6:7",
																						"type": "",
																						"value": "0x0100"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "30172:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "30172:16:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_struct$_Expiry_$2035_memory_ptr_to_t_struct$_Expiry_$2035_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "30076:81:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30076:113:7"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "30076:113:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "30209:11:7",
															"value": {
																"name": "tail",
																"nodeType": "YulIdentifier",
																"src": "30216:4:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "30209:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_HederaToken_$2074_memory_ptr_to_t_struct$_HederaToken_$2074_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "28132:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "28139:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "28148:3:7",
														"type": ""
													}
												],
												"src": "28021:2205:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30388:233:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "30398:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "30410:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30421:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "30406:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "30406:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "30398:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "30445:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30456:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30441:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30441:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "30464:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "30470:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "30460:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30460:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30434:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "30434:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30434:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "30490:124:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "30600:6:7"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "30609:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_HederaToken_$2074_memory_ptr_to_t_struct$_HederaToken_$2074_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "30498:101:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "30498:116:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "30490:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_HederaToken_$2074_memory_ptr__to_t_struct$_HederaToken_$2074_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "30360:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "30372:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "30383:4:7",
														"type": ""
													}
												],
												"src": "30232:389:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30680:51:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "30690:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "30719:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "30701:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "30701:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "30690:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "30662:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "30672:7:7",
														"type": ""
													}
												],
												"src": "30627:104:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30788:87:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "30853:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "30862:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "30865:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "30855:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "30855:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "30855:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "30811:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "30844:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address_payable",
																					"nodeType": "YulIdentifier",
																					"src": "30818:25:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "30818:32:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "30808:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30808:43:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "30801:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "30801:51:7"
															},
															"nodeType": "YulIf",
															"src": "30798:71:7"
														}
													]
												},
												"name": "validator_revert_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "30781:5:7",
														"type": ""
													}
												],
												"src": "30737:138:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30952:88:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "30962:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "30977:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "30971:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "30971:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "30962:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "31028:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address_payable",
																	"nodeType": "YulIdentifier",
																	"src": "30993:34:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "30993:41:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30993:41:7"
														}
													]
												},
												"name": "abi_decode_t_address_payable_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "30930:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "30938:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "30946:5:7",
														"type": ""
													}
												],
												"src": "30881:159:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31146:419:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "31192:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "31194:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "31194:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "31194:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "31167:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "31176:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "31163:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31163:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31188:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "31159:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "31159:32:7"
															},
															"nodeType": "YulIf",
															"src": "31156:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "31285:126:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "31300:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31314:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "31304:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "31329:72:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "31373:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "31384:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "31369:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "31369:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "31393:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int32_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "31339:29:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31339:62:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "31329:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "31421:137:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "31436:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31450:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "31440:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "31466:82:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "31520:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "31531:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "31516:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "31516:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "31540:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_payable_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "31476:39:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31476:72:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "31466:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_int32t_address_payable_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "31108:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "31119:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "31131:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "31139:6:7",
														"type": ""
													}
												],
												"src": "31046:519:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31599:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31616:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31619:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "31609:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "31609:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31609:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31713:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31716:4:7",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "31706:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "31706:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31706:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31737:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31740:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "31730:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "31730:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31730:15:7"
														}
													]
												},
												"name": "panic_error_0x21",
												"nodeType": "YulFunctionDefinition",
												"src": "31571:180:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    // bytes[]\n    function abi_decode_available_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let innerOffset := calldataload(src)\n            if gt(innerOffset, 0xffffffffffffffff) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n            let elementPos := add(offset, innerOffset)\n\n            mstore(dst, abi_decode_t_bytes_memory_ptr(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // bytes[]\n    function abi_decode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_array$_t_bytes_memory_ptr_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_int64(value) -> cleaned {\n        cleaned := signextend(7, value)\n    }\n\n    function abi_encode_t_int64_to_t_int64_fromStack(value, pos) {\n        mstore(pos, cleanup_t_int64(value))\n    }\n\n    function abi_encode_tuple_t_int64__to_t_int64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_int64_to_t_int64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_int64(value) {\n        if iszero(eq(value, cleanup_t_int64(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int64(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_int64(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_int64(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_int64(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_int256_to_t_int256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_int256(value))\n    }\n\n    function abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_int256_to_t_int256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_uint32t_uint32(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_ac0717d6bfbebcd19ba94ac3f67866c04f07fcffbe24763a234917dbad73feb4(memPtr) {\n\n        mstore(add(memPtr, 0), \"Failed to mint non-fungible toke\")\n\n        mstore(add(memPtr, 32), \"n\")\n\n    }\n\n    function abi_encode_t_stringliteral_ac0717d6bfbebcd19ba94ac3f67866c04f07fcffbe24763a234917dbad73feb4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_ac0717d6bfbebcd19ba94ac3f67866c04f07fcffbe24763a234917dbad73feb4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ac0717d6bfbebcd19ba94ac3f67866c04f07fcffbe24763a234917dbad73feb4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ac0717d6bfbebcd19ba94ac3f67866c04f07fcffbe24763a234917dbad73feb4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_1b4af10c92b76c4a3a958699c6b18d02400d3d3fb629c80d497d7a8c2883a272(memPtr) {\n\n        mstore(add(memPtr, 0), \"Failed to transfer non-fungible \")\n\n        mstore(add(memPtr, 32), \"token\")\n\n    }\n\n    function abi_encode_t_stringliteral_1b4af10c92b76c4a3a958699c6b18d02400d3d3fb629c80d497d7a8c2883a272_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_1b4af10c92b76c4a3a958699c6b18d02400d3d3fb629c80d497d7a8c2883a272(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1b4af10c92b76c4a3a958699c6b18d02400d3d3fb629c80d497d7a8c2883a272__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1b4af10c92b76c4a3a958699c6b18d02400d3d3fb629c80d497d7a8c2883a272_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function abi_encode_t_uint64_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint64(value))\n    }\n\n    function array_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encodeUpdatedPos_t_bytes_memory_ptr_to_t_bytes_memory_ptr(value0, pos) -> updatedPos {\n        updatedPos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr(value0, pos)\n    }\n\n    function array_nextElement_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // bytes[] -> bytes[]\n    function abi_encode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let headStart := pos\n        let tail := add(pos, mul(length, 0x20))\n        let baseRef := array_dataslot_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, sub(tail, headStart))\n            let elementValue0 := mload(srcPtr)\n            tail := abi_encodeUpdatedPos_t_bytes_memory_ptr_to_t_bytes_memory_ptr(elementValue0, tail)\n            srcPtr := array_nextElement_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(srcPtr)\n            pos := add(pos, 0x20)\n        }\n        pos := tail\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address_t_uint64_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__to_t_address_t_uint64_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack(value2,  tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function cleanup_t_int32(value) -> cleaned {\n        cleaned := signextend(3, value)\n    }\n\n    function validator_revert_t_int32(value) {\n        if iszero(eq(value, cleanup_t_int32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int32(value)\n    }\n\n    function validator_revert_t_uint64(value) {\n        if iszero(eq(value, cleanup_t_uint64(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint64_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint64(value)\n    }\n\n    function array_allocation_size_t_array$_t_int64_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_t_int64_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int64(value)\n    }\n\n    // int64[]\n    function abi_decode_available_length_t_array$_t_int64_$dyn_memory_ptr_fromMemory(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_int64_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_int64_fromMemory(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // int64[]\n    function abi_decode_t_array$_t_int64_$dyn_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_array$_t_int64_$dyn_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_int32t_uint64t_array$_t_int64_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_int32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint64_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_int64_$dyn_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_tuple_t_int32_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_int32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_address_t_int64__to_t_address_t_address_t_address_t_int64__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_int64_to_t_int64_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_uint32_to_t_uint32(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function array_length_t_array$_t_struct$_TokenKey_$2052_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_TokenKey_$2052_memory_ptr_$dyn_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_struct$_TokenKey_$2052_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    // struct IHederaTokenService.KeyValue -> struct IHederaTokenService.KeyValue\n    function abi_encode_t_struct$_KeyValue_$2046_memory_ptr_to_t_struct$_KeyValue_$2046_memory_ptr(value, pos)  -> end  {\n        let tail := add(pos, 0xa0)\n\n        {\n            // inheritAccountKey\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // contractId\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // ed25519\n\n            let memberValue0 := mload(add(value, 0x40))\n\n            mstore(add(pos, 0x40), sub(tail, pos))\n            tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // ECDSA_secp256k1\n\n            let memberValue0 := mload(add(value, 0x60))\n\n            mstore(add(pos, 0x60), sub(tail, pos))\n            tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // delegatableContractId\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x80))\n        }\n\n        end := tail\n    }\n\n    // struct IHederaTokenService.TokenKey -> struct IHederaTokenService.TokenKey\n    function abi_encode_t_struct$_TokenKey_$2052_memory_ptr_to_t_struct$_TokenKey_$2052_memory_ptr(value, pos)  -> end  {\n        let tail := add(pos, 0x40)\n\n        {\n            // keyType\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // key\n\n            let memberValue0 := mload(add(value, 0x20))\n\n            mstore(add(pos, 0x20), sub(tail, pos))\n            tail := abi_encode_t_struct$_KeyValue_$2046_memory_ptr_to_t_struct$_KeyValue_$2046_memory_ptr(memberValue0, tail)\n\n        }\n\n        end := tail\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_TokenKey_$2052_memory_ptr_to_t_struct$_TokenKey_$2052_memory_ptr(value0, pos) -> updatedPos {\n        updatedPos := abi_encode_t_struct$_TokenKey_$2052_memory_ptr_to_t_struct$_TokenKey_$2052_memory_ptr(value0, pos)\n    }\n\n    function array_nextElement_t_array$_t_struct$_TokenKey_$2052_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // struct IHederaTokenService.TokenKey[] -> struct IHederaTokenService.TokenKey[]\n    function abi_encode_t_array$_t_struct$_TokenKey_$2052_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_TokenKey_$2052_memory_ptr_$dyn_memory_ptr(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_TokenKey_$2052_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_TokenKey_$2052_memory_ptr_$dyn_memory_ptr(pos, length)\n        let headStart := pos\n        let tail := add(pos, mul(length, 0x20))\n        let baseRef := array_dataslot_t_array$_t_struct$_TokenKey_$2052_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, sub(tail, headStart))\n            let elementValue0 := mload(srcPtr)\n            tail := abi_encodeUpdatedPos_t_struct$_TokenKey_$2052_memory_ptr_to_t_struct$_TokenKey_$2052_memory_ptr(elementValue0, tail)\n            srcPtr := array_nextElement_t_array$_t_struct$_TokenKey_$2052_memory_ptr_$dyn_memory_ptr(srcPtr)\n            pos := add(pos, 0x20)\n        }\n        pos := tail\n        end := pos\n    }\n\n    // struct IHederaTokenService.Expiry -> struct IHederaTokenService.Expiry\n    function abi_encode_t_struct$_Expiry_$2035_memory_ptr_to_t_struct$_Expiry_$2035_memory_ptr(value, pos)  {\n        let tail := add(pos, 0x60)\n\n        {\n            // second\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint32_to_t_uint32(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // autoRenewAccount\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // autoRenewPeriod\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint32_to_t_uint32(memberValue0, add(pos, 0x40))\n        }\n\n    }\n\n    // struct IHederaTokenService.HederaToken -> struct IHederaTokenService.HederaToken\n    function abi_encode_t_struct$_HederaToken_$2074_memory_ptr_to_t_struct$_HederaToken_$2074_memory_ptr_fromStack(value, pos)  -> end  {\n        let tail := add(pos, 0x0160)\n\n        {\n            // name\n\n            let memberValue0 := mload(add(value, 0x00))\n\n            mstore(add(pos, 0x00), sub(tail, pos))\n            tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // symbol\n\n            let memberValue0 := mload(add(value, 0x20))\n\n            mstore(add(pos, 0x20), sub(tail, pos))\n            tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // treasury\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // memo\n\n            let memberValue0 := mload(add(value, 0x60))\n\n            mstore(add(pos, 0x60), sub(tail, pos))\n            tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // tokenSupplyType\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // maxSupply\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_uint32_to_t_uint32(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // freezeDefault\n\n            let memberValue0 := mload(add(value, 0xc0))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0xc0))\n        }\n\n        {\n            // tokenKeys\n\n            let memberValue0 := mload(add(value, 0xe0))\n\n            mstore(add(pos, 0xe0), sub(tail, pos))\n            tail := abi_encode_t_array$_t_struct$_TokenKey_$2052_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_TokenKey_$2052_memory_ptr_$dyn_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // expiry\n\n            let memberValue0 := mload(add(value, 0x0100))\n            abi_encode_t_struct$_Expiry_$2035_memory_ptr_to_t_struct$_Expiry_$2035_memory_ptr(memberValue0, add(pos, 0x0100))\n        }\n\n        end := tail\n    }\n\n    function abi_encode_tuple_t_struct$_HederaToken_$2074_memory_ptr__to_t_struct$_HederaToken_$2074_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_struct$_HederaToken_$2074_memory_ptr_to_t_struct$_HederaToken_$2074_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_payable_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_tuple_t_int32t_address_payable_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_int32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_payable_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100345760003560e01c80630a284cb61461003957806382b562aa14610076578063a1a79cde146100b3575b600080fd5b34801561004557600080fd5b50610060600480360381019061005b9190610dd2565b6100e3565b60405161006d9190610e4a565b60405180910390f35b34801561008257600080fd5b5061009d60048036038101906100989190610e91565b610165565b6040516100aa9190610efd565b60405180910390f35b6100cd60048036038101906100c89190610ff5565b6101d3565b6040516100da91906110d3565b60405180910390f35b60008060006100f48560008661032a565b9250509150601660030b821461013f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161013690611171565b60405180910390fd5b8060008151811061015357610152611191565b5b60200260200101519250505092915050565b600061017183856104a2565b506000610180853086866105ba565b9050601660030b81146101c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101bf90611232565b60405180910390fd5b809150509392505050565b600080600167ffffffffffffffff8111156101f1576101f0610bbc565b5b60405190808252806020026020018201604052801561022a57816020015b610217610a02565b81526020019060019003908161020f5790505b50905061023a60046001306106d8565b8160008151811061024e5761024d611191565b5b6020026020010181905250610261610a22565b87816000018190525086816020018190525085816060018190525030816040019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250506001816080019015159081151581525050848160a0019063ffffffff16908163ffffffff1681525050818160e0018190525060008160c0019015159081151581525050610301308561070f565b8161010001819052506000806103168361076d565b915091508094505050505095945050505050565b600080606060008061016773ffffffffffffffffffffffffffffffffffffffff1663278e0b8860e01b898989604051602401610368939291906113b6565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516103d29190611430565b6000604051808303816000865af19150503d806000811461040f576040519150601f19603f3d011682016040523d82523d6000602084013e610414565b606091505b50915091508161047057601560008067ffffffffffffffff81111561043c5761043b610bbc565b5b60405190808252806020026020018201604052801561046a5781602001602082028036833780820191505090505b50610485565b808060200190518101906104849190611584565b5b8260030b9250809550819650829750505050505093509350939050565b600080600061016773ffffffffffffffffffffffffffffffffffffffff166349146bde60e01b86866040516024016104db9291906115f3565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516105459190611430565b6000604051808303816000865af19150503d8060008114610582576040519150601f19603f3d011682016040523d82523d6000602084013e610587565b606091505b5091509150816105985760156105ad565b808060200190518101906105ac919061161c565b5b60030b9250505092915050565b600080600061016773ffffffffffffffffffffffffffffffffffffffff16635cfc901160e01b888888886040516024016105f79493929190611649565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516106619190611430565b6000604051808303816000865af19150503d806000811461069e576040519150601f19603f3d011682016040523d82523d6000602084013e6106a3565b606091505b5091509150816106b45760156106c9565b808060200190518101906106c8919061161c565b5b60030b92505050949350505050565b6106e0610a02565b60405180604001604052806106f4866108e5565b81526020016107038585610926565b81525090509392505050565b610717610a94565b82816020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505081816040019063ffffffff16908163ffffffff168152505092915050565b6000808260008161010001516000015163ffffffff1614801561079f575060008161010001516040015163ffffffff16145b156107c5576276a7008161010001516040019063ffffffff16908163ffffffff16815250505b60008061016773ffffffffffffffffffffffffffffffffffffffff1634639dc711e060e01b886040516024016107fb91906119cd565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516108659190611430565b60006040518083038185875af1925050503d80600081146108a2576040519150601f19603f3d011682016040523d82523d6000602084013e6108a7565b606091505b5091509150816108ba57601560006108cf565b808060200190518101906108ce9190611a2d565b5b8160030b91508095508196505050505050915091565b6000600160008360068111156108fe576108fd611a6d565b5b60068111156109105761090f611a6d565b5b8152602001908152602001600020549050919050565b61092e610ad7565b6001600481111561094257610941611a6d565b5b83600481111561095557610954611a6d565b5b036109975781816020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250506109fc565b6004808111156109aa576109a9611a6d565b5b8360048111156109bd576109bc611a6d565b5b036109fb5781816080019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250505b5b92915050565b604051806040016040528060008152602001610a1c610ad7565b81525090565b6040518061012001604052806060815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001600015158152602001600063ffffffff16815260200160001515815260200160608152602001610a8e610a94565b81525090565b6040518060600160405280600063ffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600063ffffffff1681525090565b6040518060a00160405280600015158152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b7382610b48565b9050919050565b610b8381610b68565b8114610b8e57600080fd5b50565b600081359050610ba081610b7a565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610bf482610bab565b810181811067ffffffffffffffff82111715610c1357610c12610bbc565b5b80604052505050565b6000610c26610b34565b9050610c328282610beb565b919050565b600067ffffffffffffffff821115610c5257610c51610bbc565b5b602082029050602081019050919050565b600080fd5b600080fd5b600067ffffffffffffffff821115610c8857610c87610bbc565b5b610c9182610bab565b9050602081019050919050565b82818337600083830152505050565b6000610cc0610cbb84610c6d565b610c1c565b905082815260208101848484011115610cdc57610cdb610c68565b5b610ce7848285610c9e565b509392505050565b600082601f830112610d0457610d03610ba6565b5b8135610d14848260208601610cad565b91505092915050565b6000610d30610d2b84610c37565b610c1c565b90508083825260208201905060208402830185811115610d5357610d52610c63565b5b835b81811015610d9a57803567ffffffffffffffff811115610d7857610d77610ba6565b5b808601610d858982610cef565b85526020850194505050602081019050610d55565b5050509392505050565b600082601f830112610db957610db8610ba6565b5b8135610dc9848260208601610d1d565b91505092915050565b60008060408385031215610de957610de8610b3e565b5b6000610df785828601610b91565b925050602083013567ffffffffffffffff811115610e1857610e17610b43565b5b610e2485828601610da4565b9150509250929050565b60008160070b9050919050565b610e4481610e2e565b82525050565b6000602082019050610e5f6000830184610e3b565b92915050565b610e6e81610e2e565b8114610e7957600080fd5b50565b600081359050610e8b81610e65565b92915050565b600080600060608486031215610eaa57610ea9610b3e565b5b6000610eb886828701610b91565b9350506020610ec986828701610b91565b9250506040610eda86828701610e7c565b9150509250925092565b6000819050919050565b610ef781610ee4565b82525050565b6000602082019050610f126000830184610eee565b92915050565b600067ffffffffffffffff821115610f3357610f32610bbc565b5b610f3c82610bab565b9050602081019050919050565b6000610f5c610f5784610f18565b610c1c565b905082815260208101848484011115610f7857610f77610c68565b5b610f83848285610c9e565b509392505050565b600082601f830112610fa057610f9f610ba6565b5b8135610fb0848260208601610f49565b91505092915050565b600063ffffffff82169050919050565b610fd281610fb9565b8114610fdd57600080fd5b50565b600081359050610fef81610fc9565b92915050565b600080600080600060a0868803121561101157611010610b3e565b5b600086013567ffffffffffffffff81111561102f5761102e610b43565b5b61103b88828901610f8b565b955050602086013567ffffffffffffffff81111561105c5761105b610b43565b5b61106888828901610f8b565b945050604086013567ffffffffffffffff81111561108957611088610b43565b5b61109588828901610f8b565b93505060606110a688828901610fe0565b92505060806110b788828901610fe0565b9150509295509295909350565b6110cd81610b68565b82525050565b60006020820190506110e860008301846110c4565b92915050565b600082825260208201905092915050565b7f4661696c656420746f206d696e74206e6f6e2d66756e6769626c6520746f6b6560008201527f6e00000000000000000000000000000000000000000000000000000000000000602082015250565b600061115b6021836110ee565b9150611166826110ff565b604082019050919050565b6000602082019050818103600083015261118a8161114e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4661696c656420746f207472616e73666572206e6f6e2d66756e6769626c652060008201527f746f6b656e000000000000000000000000000000000000000000000000000000602082015250565b600061121c6025836110ee565b9150611227826111c0565b604082019050919050565b6000602082019050818103600083015261124b8161120f565b9050919050565b600067ffffffffffffffff82169050919050565b61126f81611252565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b838110156112db5780820151818401526020810190506112c0565b60008484015250505050565b60006112f2826112a1565b6112fc81856112ac565b935061130c8185602086016112bd565b61131581610bab565b840191505092915050565b600061132c83836112e7565b905092915050565b6000602082019050919050565b600061134c82611275565b6113568185611280565b93508360208202850161136885611291565b8060005b858110156113a457848403895281516113858582611320565b945061139083611334565b925060208a0199505060018101905061136c565b50829750879550505050505092915050565b60006060820190506113cb60008301866110c4565b6113d86020830185611266565b81810360408301526113ea8184611341565b9050949350505050565b600081905092915050565b600061140a826112a1565b61141481856113f4565b93506114248185602086016112bd565b80840191505092915050565b600061143c82846113ff565b915081905092915050565b60008160030b9050919050565b61145d81611447565b811461146857600080fd5b50565b60008151905061147a81611454565b92915050565b61148981611252565b811461149457600080fd5b50565b6000815190506114a681611480565b92915050565b600067ffffffffffffffff8211156114c7576114c6610bbc565b5b602082029050602081019050919050565b6000815190506114e781610e65565b92915050565b60006115006114fb846114ac565b610c1c565b9050808382526020820190506020840283018581111561152357611522610c63565b5b835b8181101561154c578061153888826114d8565b845260208401935050602081019050611525565b5050509392505050565b600082601f83011261156b5761156a610ba6565b5b815161157b8482602086016114ed565b91505092915050565b60008060006060848603121561159d5761159c610b3e565b5b60006115ab8682870161146b565b93505060206115bc86828701611497565b925050604084015167ffffffffffffffff8111156115dd576115dc610b43565b5b6115e986828701611556565b9150509250925092565b600060408201905061160860008301856110c4565b61161560208301846110c4565b9392505050565b60006020828403121561163257611631610b3e565b5b60006116408482850161146b565b91505092915050565b600060808201905061165e60008301876110c4565b61166b60208301866110c4565b61167860408301856110c4565b6116856060830184610e3b565b95945050505050565b600081519050919050565b600082825260208201905092915050565b60006116b58261168e565b6116bf8185611699565b93506116cf8185602086016112bd565b6116d881610bab565b840191505092915050565b6116ec81610b68565b82525050565b60008115159050919050565b611707816116f2565b82525050565b61171681610fb9565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000819050919050565b61175b81611748565b82525050565b600060a08301600083015161177960008601826116fe565b50602083015161178c60208601826116e3565b50604083015184820360408601526117a482826112e7565b915050606083015184820360608601526117be82826112e7565b91505060808301516117d360808601826116e3565b508091505092915050565b60006040830160008301516117f66000860182611752565b506020830151848203602086015261180e8282611761565b9150508091505092915050565b600061182783836117de565b905092915050565b6000602082019050919050565b60006118478261171c565b6118518185611727565b93508360208202850161186385611738565b8060005b8581101561189f5784840389528151611880858261181b565b945061188b8361182f565b925060208a01995050600181019050611867565b50829750879550505050505092915050565b6060820160008201516118c7600085018261170d565b5060208201516118da60208501826116e3565b5060408201516118ed604085018261170d565b50505050565b600061016083016000830151848203600086015261191182826116aa565b9150506020830151848203602086015261192b82826116aa565b915050604083015161194060408601826116e3565b506060830151848203606086015261195882826116aa565b915050608083015161196d60808601826116fe565b5060a083015161198060a086018261170d565b5060c083015161199360c08601826116fe565b5060e083015184820360e08601526119ab828261183c565b9150506101008301516119c26101008601826118b1565b508091505092915050565b600060208201905081810360008301526119e781846118f3565b905092915050565b60006119fa82610b48565b9050919050565b611a0a816119ef565b8114611a1557600080fd5b50565b600081519050611a2781611a01565b92915050565b60008060408385031215611a4457611a43610b3e565b5b6000611a528582860161146b565b9250506020611a6385828601611a18565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fdfea26469706673582212208a2bc148d7c22890c14b30aa40416f50efe5a756d49ee7409b7f05da74ce79f464736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA284CB6 EQ PUSH2 0x39 JUMPI DUP1 PUSH4 0x82B562AA EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0xA1A79CDE EQ PUSH2 0xB3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0xDD2 JUMP JUMPDEST PUSH2 0xE3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0xE4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x98 SWAP2 SWAP1 PUSH2 0xE91 JUMP JUMPDEST PUSH2 0x165 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAA SWAP2 SWAP1 PUSH2 0xEFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC8 SWAP2 SWAP1 PUSH2 0xFF5 JUMP JUMPDEST PUSH2 0x1D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDA SWAP2 SWAP1 PUSH2 0x10D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xF4 DUP6 PUSH1 0x0 DUP7 PUSH2 0x32A JUMP JUMPDEST SWAP3 POP POP SWAP2 POP PUSH1 0x16 PUSH1 0x3 SIGNEXTEND DUP3 EQ PUSH2 0x13F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x136 SWAP1 PUSH2 0x1171 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x153 JUMPI PUSH2 0x152 PUSH2 0x1191 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x171 DUP4 DUP6 PUSH2 0x4A2 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x180 DUP6 ADDRESS DUP7 DUP7 PUSH2 0x5BA JUMP JUMPDEST SWAP1 POP PUSH1 0x16 PUSH1 0x3 SIGNEXTEND DUP2 EQ PUSH2 0x1C8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BF SWAP1 PUSH2 0x1232 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F1 JUMPI PUSH2 0x1F0 PUSH2 0xBBC JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x22A JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x217 PUSH2 0xA02 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x20F JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH2 0x23A PUSH1 0x4 PUSH1 0x1 ADDRESS PUSH2 0x6D8 JUMP JUMPDEST DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x24E JUMPI PUSH2 0x24D PUSH2 0x1191 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP PUSH2 0x261 PUSH2 0xA22 JUMP JUMPDEST DUP8 DUP2 PUSH1 0x0 ADD DUP2 SWAP1 MSTORE POP DUP7 DUP2 PUSH1 0x20 ADD DUP2 SWAP1 MSTORE POP DUP6 DUP2 PUSH1 0x60 ADD DUP2 SWAP1 MSTORE POP ADDRESS DUP2 PUSH1 0x40 ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x1 DUP2 PUSH1 0x80 ADD SWAP1 ISZERO ISZERO SWAP1 DUP2 ISZERO ISZERO DUP2 MSTORE POP POP DUP5 DUP2 PUSH1 0xA0 ADD SWAP1 PUSH4 0xFFFFFFFF AND SWAP1 DUP2 PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP POP DUP2 DUP2 PUSH1 0xE0 ADD DUP2 SWAP1 MSTORE POP PUSH1 0x0 DUP2 PUSH1 0xC0 ADD SWAP1 ISZERO ISZERO SWAP1 DUP2 ISZERO ISZERO DUP2 MSTORE POP POP PUSH2 0x301 ADDRESS DUP6 PUSH2 0x70F JUMP JUMPDEST DUP2 PUSH2 0x100 ADD DUP2 SWAP1 MSTORE POP PUSH1 0x0 DUP1 PUSH2 0x316 DUP4 PUSH2 0x76D JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP1 SWAP5 POP POP POP POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x60 PUSH1 0x0 DUP1 PUSH2 0x167 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x278E0B88 PUSH1 0xE0 SHL DUP10 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x368 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x13B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x3D2 SWAP2 SWAP1 PUSH2 0x1430 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x40F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x414 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x470 JUMPI PUSH1 0x15 PUSH1 0x0 DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x43C JUMPI PUSH2 0x43B PUSH2 0xBBC JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x46A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH2 0x485 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x484 SWAP2 SWAP1 PUSH2 0x1584 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 SIGNEXTEND SWAP3 POP DUP1 SWAP6 POP DUP2 SWAP7 POP DUP3 SWAP8 POP POP POP POP POP POP SWAP4 POP SWAP4 POP SWAP4 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x167 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x49146BDE PUSH1 0xE0 SHL DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x4DB SWAP3 SWAP2 SWAP1 PUSH2 0x15F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x545 SWAP2 SWAP1 PUSH2 0x1430 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x582 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x587 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x598 JUMPI PUSH1 0x15 PUSH2 0x5AD JUMP JUMPDEST DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x5AC SWAP2 SWAP1 PUSH2 0x161C JUMP JUMPDEST JUMPDEST PUSH1 0x3 SIGNEXTEND SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x167 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5CFC9011 PUSH1 0xE0 SHL DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x5F7 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1649 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x661 SWAP2 SWAP1 PUSH2 0x1430 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x69E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x6A3 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x6B4 JUMPI PUSH1 0x15 PUSH2 0x6C9 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x6C8 SWAP2 SWAP1 PUSH2 0x161C JUMP JUMPDEST JUMPDEST PUSH1 0x3 SIGNEXTEND SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x6E0 PUSH2 0xA02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x6F4 DUP7 PUSH2 0x8E5 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x703 DUP6 DUP6 PUSH2 0x926 JUMP JUMPDEST DUP2 MSTORE POP SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x717 PUSH2 0xA94 JUMP JUMPDEST DUP3 DUP2 PUSH1 0x20 ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP2 DUP2 PUSH1 0x40 ADD SWAP1 PUSH4 0xFFFFFFFF AND SWAP1 DUP2 PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x0 DUP2 PUSH2 0x100 ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH4 0xFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x79F JUMPI POP PUSH1 0x0 DUP2 PUSH2 0x100 ADD MLOAD PUSH1 0x40 ADD MLOAD PUSH4 0xFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x7C5 JUMPI PUSH3 0x76A700 DUP2 PUSH2 0x100 ADD MLOAD PUSH1 0x40 ADD SWAP1 PUSH4 0xFFFFFFFF AND SWAP1 DUP2 PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP POP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x167 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLVALUE PUSH4 0x9DC711E0 PUSH1 0xE0 SHL DUP9 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x7FB SWAP2 SWAP1 PUSH2 0x19CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x865 SWAP2 SWAP1 PUSH2 0x1430 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x8A2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x8A7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x8BA JUMPI PUSH1 0x15 PUSH1 0x0 PUSH2 0x8CF JUMP JUMPDEST DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x8CE SWAP2 SWAP1 PUSH2 0x1A2D JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x3 SIGNEXTEND SWAP2 POP DUP1 SWAP6 POP DUP2 SWAP7 POP POP POP POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x8FE JUMPI PUSH2 0x8FD PUSH2 0x1A6D JUMP JUMPDEST JUMPDEST PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x910 JUMPI PUSH2 0x90F PUSH2 0x1A6D JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x92E PUSH2 0xAD7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x942 JUMPI PUSH2 0x941 PUSH2 0x1A6D JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x955 JUMPI PUSH2 0x954 PUSH2 0x1A6D JUMP JUMPDEST JUMPDEST SUB PUSH2 0x997 JUMPI DUP2 DUP2 PUSH1 0x20 ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH2 0x9FC JUMP JUMPDEST PUSH1 0x4 DUP1 DUP2 GT ISZERO PUSH2 0x9AA JUMPI PUSH2 0x9A9 PUSH2 0x1A6D JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x9BD JUMPI PUSH2 0x9BC PUSH2 0x1A6D JUMP JUMPDEST JUMPDEST SUB PUSH2 0x9FB JUMPI DUP2 DUP2 PUSH1 0x80 ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA1C PUSH2 0xAD7 JUMP JUMPDEST DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x120 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA8E PUSH2 0xA94 JUMP JUMPDEST DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB73 DUP3 PUSH2 0xB48 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB83 DUP2 PUSH2 0xB68 JUMP JUMPDEST DUP2 EQ PUSH2 0xB8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBA0 DUP2 PUSH2 0xB7A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xBF4 DUP3 PUSH2 0xBAB JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xC13 JUMPI PUSH2 0xC12 PUSH2 0xBBC JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC26 PUSH2 0xB34 JUMP JUMPDEST SWAP1 POP PUSH2 0xC32 DUP3 DUP3 PUSH2 0xBEB JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xC52 JUMPI PUSH2 0xC51 PUSH2 0xBBC JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xC88 JUMPI PUSH2 0xC87 PUSH2 0xBBC JUMP JUMPDEST JUMPDEST PUSH2 0xC91 DUP3 PUSH2 0xBAB JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCC0 PUSH2 0xCBB DUP5 PUSH2 0xC6D JUMP JUMPDEST PUSH2 0xC1C JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xCDC JUMPI PUSH2 0xCDB PUSH2 0xC68 JUMP JUMPDEST JUMPDEST PUSH2 0xCE7 DUP5 DUP3 DUP6 PUSH2 0xC9E JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xD04 JUMPI PUSH2 0xD03 PUSH2 0xBA6 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xD14 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xCAD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD30 PUSH2 0xD2B DUP5 PUSH2 0xC37 JUMP JUMPDEST PUSH2 0xC1C JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0xD53 JUMPI PUSH2 0xD52 PUSH2 0xC63 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xD9A JUMPI DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD78 JUMPI PUSH2 0xD77 PUSH2 0xBA6 JUMP JUMPDEST JUMPDEST DUP1 DUP7 ADD PUSH2 0xD85 DUP10 DUP3 PUSH2 0xCEF JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP5 POP POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xD55 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xDB9 JUMPI PUSH2 0xDB8 PUSH2 0xBA6 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xDC9 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xD1D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDE9 JUMPI PUSH2 0xDE8 PUSH2 0xB3E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDF7 DUP6 DUP3 DUP7 ADD PUSH2 0xB91 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE18 JUMPI PUSH2 0xE17 PUSH2 0xB43 JUMP JUMPDEST JUMPDEST PUSH2 0xE24 DUP6 DUP3 DUP7 ADD PUSH2 0xDA4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x7 SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE44 DUP2 PUSH2 0xE2E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE5F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE3B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE6E DUP2 PUSH2 0xE2E JUMP JUMPDEST DUP2 EQ PUSH2 0xE79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE8B DUP2 PUSH2 0xE65 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xEAA JUMPI PUSH2 0xEA9 PUSH2 0xB3E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xEB8 DUP7 DUP3 DUP8 ADD PUSH2 0xB91 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xEC9 DUP7 DUP3 DUP8 ADD PUSH2 0xB91 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xEDA DUP7 DUP3 DUP8 ADD PUSH2 0xE7C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEF7 DUP2 PUSH2 0xEE4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF12 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xEEE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xF33 JUMPI PUSH2 0xF32 PUSH2 0xBBC JUMP JUMPDEST JUMPDEST PUSH2 0xF3C DUP3 PUSH2 0xBAB JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF5C PUSH2 0xF57 DUP5 PUSH2 0xF18 JUMP JUMPDEST PUSH2 0xC1C JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xF78 JUMPI PUSH2 0xF77 PUSH2 0xC68 JUMP JUMPDEST JUMPDEST PUSH2 0xF83 DUP5 DUP3 DUP6 PUSH2 0xC9E JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xFA0 JUMPI PUSH2 0xF9F PUSH2 0xBA6 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xFB0 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xF49 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFD2 DUP2 PUSH2 0xFB9 JUMP JUMPDEST DUP2 EQ PUSH2 0xFDD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xFEF DUP2 PUSH2 0xFC9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1011 JUMPI PUSH2 0x1010 PUSH2 0xB3E JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x102F JUMPI PUSH2 0x102E PUSH2 0xB43 JUMP JUMPDEST JUMPDEST PUSH2 0x103B DUP9 DUP3 DUP10 ADD PUSH2 0xF8B JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x105C JUMPI PUSH2 0x105B PUSH2 0xB43 JUMP JUMPDEST JUMPDEST PUSH2 0x1068 DUP9 DUP3 DUP10 ADD PUSH2 0xF8B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1089 JUMPI PUSH2 0x1088 PUSH2 0xB43 JUMP JUMPDEST JUMPDEST PUSH2 0x1095 DUP9 DUP3 DUP10 ADD PUSH2 0xF8B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x10A6 DUP9 DUP3 DUP10 ADD PUSH2 0xFE0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x10B7 DUP9 DUP3 DUP10 ADD PUSH2 0xFE0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x10CD DUP2 PUSH2 0xB68 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10E8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x10C4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4661696C656420746F206D696E74206E6F6E2D66756E6769626C6520746F6B65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x115B PUSH1 0x21 DUP4 PUSH2 0x10EE JUMP JUMPDEST SWAP2 POP PUSH2 0x1166 DUP3 PUSH2 0x10FF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x118A DUP2 PUSH2 0x114E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4661696C656420746F207472616E73666572206E6F6E2D66756E6769626C6520 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x746F6B656E000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x121C PUSH1 0x25 DUP4 PUSH2 0x10EE JUMP JUMPDEST SWAP2 POP PUSH2 0x1227 DUP3 PUSH2 0x11C0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x124B DUP2 PUSH2 0x120F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x126F DUP2 PUSH2 0x1252 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x12DB JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x12C0 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12F2 DUP3 PUSH2 0x12A1 JUMP JUMPDEST PUSH2 0x12FC DUP2 DUP6 PUSH2 0x12AC JUMP JUMPDEST SWAP4 POP PUSH2 0x130C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x12BD JUMP JUMPDEST PUSH2 0x1315 DUP2 PUSH2 0xBAB JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x132C DUP4 DUP4 PUSH2 0x12E7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x134C DUP3 PUSH2 0x1275 JUMP JUMPDEST PUSH2 0x1356 DUP2 DUP6 PUSH2 0x1280 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x1368 DUP6 PUSH2 0x1291 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x13A4 JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x1385 DUP6 DUP3 PUSH2 0x1320 JUMP JUMPDEST SWAP5 POP PUSH2 0x1390 DUP4 PUSH2 0x1334 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x136C JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x13CB PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x10C4 JUMP JUMPDEST PUSH2 0x13D8 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1266 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x13EA DUP2 DUP5 PUSH2 0x1341 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140A DUP3 PUSH2 0x12A1 JUMP JUMPDEST PUSH2 0x1414 DUP2 DUP6 PUSH2 0x13F4 JUMP JUMPDEST SWAP4 POP PUSH2 0x1424 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x12BD JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x143C DUP3 DUP5 PUSH2 0x13FF JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x3 SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x145D DUP2 PUSH2 0x1447 JUMP JUMPDEST DUP2 EQ PUSH2 0x1468 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x147A DUP2 PUSH2 0x1454 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1489 DUP2 PUSH2 0x1252 JUMP JUMPDEST DUP2 EQ PUSH2 0x1494 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x14A6 DUP2 PUSH2 0x1480 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x14C7 JUMPI PUSH2 0x14C6 PUSH2 0xBBC JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x14E7 DUP2 PUSH2 0xE65 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1500 PUSH2 0x14FB DUP5 PUSH2 0x14AC JUMP JUMPDEST PUSH2 0xC1C JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1523 JUMPI PUSH2 0x1522 PUSH2 0xC63 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x154C JUMPI DUP1 PUSH2 0x1538 DUP9 DUP3 PUSH2 0x14D8 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1525 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x156B JUMPI PUSH2 0x156A PUSH2 0xBA6 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x157B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x14ED JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x159D JUMPI PUSH2 0x159C PUSH2 0xB3E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15AB DUP7 DUP3 DUP8 ADD PUSH2 0x146B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x15BC DUP7 DUP3 DUP8 ADD PUSH2 0x1497 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15DD JUMPI PUSH2 0x15DC PUSH2 0xB43 JUMP JUMPDEST JUMPDEST PUSH2 0x15E9 DUP7 DUP3 DUP8 ADD PUSH2 0x1556 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1608 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x10C4 JUMP JUMPDEST PUSH2 0x1615 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x10C4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1632 JUMPI PUSH2 0x1631 PUSH2 0xB3E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1640 DUP5 DUP3 DUP6 ADD PUSH2 0x146B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x165E PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x10C4 JUMP JUMPDEST PUSH2 0x166B PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x10C4 JUMP JUMPDEST PUSH2 0x1678 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x10C4 JUMP JUMPDEST PUSH2 0x1685 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0xE3B JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16B5 DUP3 PUSH2 0x168E JUMP JUMPDEST PUSH2 0x16BF DUP2 DUP6 PUSH2 0x1699 JUMP JUMPDEST SWAP4 POP PUSH2 0x16CF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x12BD JUMP JUMPDEST PUSH2 0x16D8 DUP2 PUSH2 0xBAB JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16EC DUP2 PUSH2 0xB68 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1707 DUP2 PUSH2 0x16F2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1716 DUP2 PUSH2 0xFB9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x175B DUP2 PUSH2 0x1748 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x1779 PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x16FE JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x178C PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x16E3 JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0x17A4 DUP3 DUP3 PUSH2 0x12E7 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x60 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x17BE DUP3 DUP3 PUSH2 0x12E7 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x17D3 PUSH1 0x80 DUP7 ADD DUP3 PUSH2 0x16E3 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x17F6 PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x1752 JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x180E DUP3 DUP3 PUSH2 0x1761 JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1827 DUP4 DUP4 PUSH2 0x17DE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1847 DUP3 PUSH2 0x171C JUMP JUMPDEST PUSH2 0x1851 DUP2 DUP6 PUSH2 0x1727 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x1863 DUP6 PUSH2 0x1738 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x189F JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x1880 DUP6 DUP3 PUSH2 0x181B JUMP JUMPDEST SWAP5 POP PUSH2 0x188B DUP4 PUSH2 0x182F JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1867 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x18C7 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x170D JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x18DA PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x16E3 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x18ED PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x170D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x160 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x0 DUP7 ADD MSTORE PUSH2 0x1911 DUP3 DUP3 PUSH2 0x16AA JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x192B DUP3 DUP3 PUSH2 0x16AA JUMP JUMPDEST SWAP2 POP POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x1940 PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x16E3 JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x1958 DUP3 DUP3 PUSH2 0x16AA JUMP JUMPDEST SWAP2 POP POP PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x196D PUSH1 0x80 DUP7 ADD DUP3 PUSH2 0x16FE JUMP JUMPDEST POP PUSH1 0xA0 DUP4 ADD MLOAD PUSH2 0x1980 PUSH1 0xA0 DUP7 ADD DUP3 PUSH2 0x170D JUMP JUMPDEST POP PUSH1 0xC0 DUP4 ADD MLOAD PUSH2 0x1993 PUSH1 0xC0 DUP7 ADD DUP3 PUSH2 0x16FE JUMP JUMPDEST POP PUSH1 0xE0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0xE0 DUP7 ADD MSTORE PUSH2 0x19AB DUP3 DUP3 PUSH2 0x183C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x100 DUP4 ADD MLOAD PUSH2 0x19C2 PUSH2 0x100 DUP7 ADD DUP3 PUSH2 0x18B1 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x19E7 DUP2 DUP5 PUSH2 0x18F3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19FA DUP3 PUSH2 0xB48 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A0A DUP2 PUSH2 0x19EF JUMP JUMPDEST DUP2 EQ PUSH2 0x1A15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1A27 DUP2 PUSH2 0x1A01 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A44 JUMPI PUSH2 0x1A43 PUSH2 0xB3E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A52 DUP6 DUP3 DUP7 ADD PUSH2 0x146B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A63 DUP6 DUP3 DUP7 ADD PUSH2 0x1A18 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 0x2B 0xC1 BASEFEE 0xD7 0xC2 0x28 SWAP1 0xC1 0x4B ADDRESS 0xAA BLOCKHASH COINBASE PUSH16 0x50EFE5A756D49EE7409B7F05DA74CE79 DELEGATECALL PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "358:2283:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1696:422;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2126:512;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;421:1267;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1696:422;1796:5;1815:12;1831:21;1856:98;1899:5;1919:1;1935:8;1856:28;:98::i;:::-;1814:140;;;;;2733:2:2;1971:39:6;;:8;:39;1967:115;;2027:43;;;;;;;;;;:::i;:::-;;;;;;;;1967:115;2101:6;2108:1;2101:9;;;;;;;;:::i;:::-;;;;;;;;2094:16;;;;1696:422;;;;:::o;2126:512::-;2246:3;2262:50;2296:8;2306:5;2262:33;:50::i;:::-;;2323:12;2338:133;2383:5;2411:4;2431:8;2454:6;2338:30;:133::i;:::-;2323:148;;2733:2:2;2488:39:6;;:8;:39;2484:119;;2544:47;;;;;;;;;;:::i;:::-;;;;;;;;2484:119;2622:8;2615:15;;;2126:512;;;;;:::o;421:1267::-;622:7;642:55;735:1;700:37;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;642:95;;798:119;825:14;854:24;901:4;798:12;:119::i;:::-;788:4;793:1;788:7;;;;;;;;:::i;:::-;;;;;;;:129;;;;930:44;;:::i;:::-;998:4;985:5;:10;;:17;;;;1028:6;1013:5;:12;;:21;;;;1058:4;1045:5;:10;;:17;;;;1098:4;1073:5;:14;;:30;;;;;;;;;;;1138:4;1114:5;:21;;:28;;;;;;;;;;;1195:9;1177:5;:15;;:27;;;;;;;;;;;1233:4;1215:5;:15;;:22;;;;1270:5;1248;:19;;:27;;;;;;;;;;;1301:53;1331:4;1338:15;1301:21;:53::i;:::-;1286:5;:12;;:68;;;;1411:16;1429:20;1453:62;1509:5;1453:55;:62::i;:::-;1410:105;;;;1668:12;1661:19;;;;;;421:1267;;;;;;;:::o;2570:712:3:-;2721:16;2751:21;2786:28;2840:12;2854:19;289:5;2877:22;;2953:38;;;3009:5;3032:6;3056:8;2913:165;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2877:211;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2839:249;;;;3146:7;:129;;2587:2:2;3257:1:3;3272;3260:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3146:129;;;3179:6;3168:44;;;;;;;;;;;;:::i;:::-;3146:129;3098:177;;;;;;;;;;;;;;;;;2829:453;;2570:712;;;;;;;:::o;6734:476::-;6830:16;6859:12;6873:19;289:5;6896:22;;6972:43;;;7033:7;7058:5;6932:145;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6896:191;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6858:229;;;;7112:7;:91;;2587:2:2;7112:91:3;;;7145:6;7134:27;;;;;;;;;;;;:::i;:::-;7112:91;7097:106;;;;6848:362;;6734:476;;;;:::o;24332:578::-;24478:16;24507:12;24521:19;289:5;24544:22;;24620:40;;;24678:5;24701:6;24725:8;24751:12;24580:197;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24544:243;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24506:281;;;;24812:7;:91;;2587:2:2;24812:91:3;;;24845:6;24834:27;;;;;;;;;;;;:::i;:::-;24812:91;24797:106;;;;24496:414;;24332:578;;;;;;:::o;2821:325:5:-;2953:44;;:::i;:::-;3020:119;;;;;;;;3062:19;3073:7;3062:10;:19::i;:::-;3020:119;;;;3095:34;3111:12;3125:3;3095:15;:34::i;:::-;3020:119;;;3009:130;;2821:325;;;;;:::o;210:277:0:-;336:40;;:::i;:::-;414:16;388:6;:23;;:42;;;;;;;;;;;465:15;440:6;:22;;:40;;;;;;;;;;;210:277;;;;:::o;13005:624:3:-;13161:16;13179:20;13137:5;765:1;742:5;:12;;;:19;;;:24;;;:61;;;;;802:1;770:5;:12;;;:28;;;:33;;;742:61;738:145;;;368:7;819:5;:12;;;:28;;:53;;;;;;;;;;;738:145;13216:12:::1;13230:19:::0;289:5:::1;13253:22;;13296:9;13369:51;;;13438:5;13329:128;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13253:214;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13215:252;;;;13508:7;:114;;2587:2:2;13619:1:3;13508:114;;;13541:6;13530:36;;;;;;;;;;;;:::i;:::-;13508:114;13477:145;;;;;;;;;;;;;13205:424;;13005:624:::0;;;;:::o;4251:110:5:-;4311:7;4337:8;:17;4346:7;4337:17;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;4330:24;;4251:110;;;:::o;5111:414::-;5228:44;;:::i;:::-;5304:24;5288:40;;;;;;;;:::i;:::-;;:12;:40;;;;;;;;:::i;:::-;;;5284:235;;5366:10;5344:8;:19;;:32;;;;;;;;;;;5284:235;;;5413:36;5397:52;;;;;;;;:::i;:::-;;:12;:52;;;;;;;;:::i;:::-;;;5393:126;;5498:10;5465:8;:30;;:43;;;;;;;;;;;5393:126;5284:235;5111:414;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:75:7:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:117::-;950:1;947;940:12;964:102;1005:6;1056:2;1052:7;1047:2;1040:5;1036:14;1032:28;1022:38;;964:102;;;:::o;1072:180::-;1120:77;1117:1;1110:88;1217:4;1214:1;1207:15;1241:4;1238:1;1231:15;1258:281;1341:27;1363:4;1341:27;:::i;:::-;1333:6;1329:40;1471:6;1459:10;1456:22;1435:18;1423:10;1420:34;1417:62;1414:88;;;1482:18;;:::i;:::-;1414:88;1522:10;1518:2;1511:22;1301:238;1258:281;;:::o;1545:129::-;1579:6;1606:20;;:::i;:::-;1596:30;;1635:33;1663:4;1655:6;1635:33;:::i;:::-;1545:129;;;:::o;1680:320::-;1766:4;1856:18;1848:6;1845:30;1842:56;;;1878:18;;:::i;:::-;1842:56;1928:4;1920:6;1916:17;1908:25;;1988:4;1982;1978:15;1970:23;;1680:320;;;:::o;2006:117::-;2115:1;2112;2105:12;2129:117;2238:1;2235;2228:12;2252:307;2313:4;2403:18;2395:6;2392:30;2389:56;;;2425:18;;:::i;:::-;2389:56;2463:29;2485:6;2463:29;:::i;:::-;2455:37;;2547:4;2541;2537:15;2529:23;;2252:307;;;:::o;2565:146::-;2662:6;2657:3;2652;2639:30;2703:1;2694:6;2689:3;2685:16;2678:27;2565:146;;;:::o;2717:423::-;2794:5;2819:65;2835:48;2876:6;2835:48;:::i;:::-;2819:65;:::i;:::-;2810:74;;2907:6;2900:5;2893:21;2945:4;2938:5;2934:16;2983:3;2974:6;2969:3;2965:16;2962:25;2959:112;;;2990:79;;:::i;:::-;2959:112;3080:54;3127:6;3122:3;3117;3080:54;:::i;:::-;2800:340;2717:423;;;;;:::o;3159:338::-;3214:5;3263:3;3256:4;3248:6;3244:17;3240:27;3230:122;;3271:79;;:::i;:::-;3230:122;3388:6;3375:20;3413:78;3487:3;3479:6;3472:4;3464:6;3460:17;3413:78;:::i;:::-;3404:87;;3220:277;3159:338;;;;:::o;3518:942::-;3623:5;3648:90;3664:73;3730:6;3664:73;:::i;:::-;3648:90;:::i;:::-;3639:99;;3758:5;3787:6;3780:5;3773:21;3821:4;3814:5;3810:16;3803:23;;3874:4;3866:6;3862:17;3854:6;3850:30;3903:3;3895:6;3892:15;3889:122;;;3922:79;;:::i;:::-;3889:122;4037:6;4020:434;4054:6;4049:3;4046:15;4020:434;;;4143:3;4130:17;4179:18;4166:11;4163:35;4160:122;;;4201:79;;:::i;:::-;4160:122;4325:11;4317:6;4313:24;4363:46;4405:3;4393:10;4363:46;:::i;:::-;4358:3;4351:59;4439:4;4434:3;4430:14;4423:21;;4096:358;;4080:4;4075:3;4071:14;4064:21;;4020:434;;;4024:21;3629:831;;3518:942;;;;;:::o;4481:388::-;4561:5;4610:3;4603:4;4595:6;4591:17;4587:27;4577:122;;4618:79;;:::i;:::-;4577:122;4735:6;4722:20;4760:103;4859:3;4851:6;4844:4;4836:6;4832:17;4760:103;:::i;:::-;4751:112;;4567:302;4481:388;;;;:::o;4875:702::-;4977:6;4985;5034:2;5022:9;5013:7;5009:23;5005:32;5002:119;;;5040:79;;:::i;:::-;5002:119;5160:1;5185:53;5230:7;5221:6;5210:9;5206:22;5185:53;:::i;:::-;5175:63;;5131:117;5315:2;5304:9;5300:18;5287:32;5346:18;5338:6;5335:30;5332:117;;;5368:79;;:::i;:::-;5332:117;5473:87;5552:7;5543:6;5532:9;5528:22;5473:87;:::i;:::-;5463:97;;5258:312;4875:702;;;;;:::o;5583:90::-;5618:7;5661:5;5658:1;5647:20;5636:31;;5583:90;;;:::o;5679:112::-;5762:22;5778:5;5762:22;:::i;:::-;5757:3;5750:35;5679:112;;:::o;5797:214::-;5886:4;5924:2;5913:9;5909:18;5901:26;;5937:67;6001:1;5990:9;5986:17;5977:6;5937:67;:::i;:::-;5797:214;;;;:::o;6017:118::-;6088:22;6104:5;6088:22;:::i;:::-;6081:5;6078:33;6068:61;;6125:1;6122;6115:12;6068:61;6017:118;:::o;6141:135::-;6185:5;6223:6;6210:20;6201:29;;6239:31;6264:5;6239:31;:::i;:::-;6141:135;;;;:::o;6282:615::-;6357:6;6365;6373;6422:2;6410:9;6401:7;6397:23;6393:32;6390:119;;;6428:79;;:::i;:::-;6390:119;6548:1;6573:53;6618:7;6609:6;6598:9;6594:22;6573:53;:::i;:::-;6563:63;;6519:117;6675:2;6701:53;6746:7;6737:6;6726:9;6722:22;6701:53;:::i;:::-;6691:63;;6646:118;6803:2;6829:51;6872:7;6863:6;6852:9;6848:22;6829:51;:::i;:::-;6819:61;;6774:116;6282:615;;;;;:::o;6903:76::-;6939:7;6968:5;6957:16;;6903:76;;;:::o;6985:115::-;7070:23;7087:5;7070:23;:::i;:::-;7065:3;7058:36;6985:115;;:::o;7106:218::-;7197:4;7235:2;7224:9;7220:18;7212:26;;7248:69;7314:1;7303:9;7299:17;7290:6;7248:69;:::i;:::-;7106:218;;;;:::o;7330:308::-;7392:4;7482:18;7474:6;7471:30;7468:56;;;7504:18;;:::i;:::-;7468:56;7542:29;7564:6;7542:29;:::i;:::-;7534:37;;7626:4;7620;7616:15;7608:23;;7330:308;;;:::o;7644:425::-;7722:5;7747:66;7763:49;7805:6;7763:49;:::i;:::-;7747:66;:::i;:::-;7738:75;;7836:6;7829:5;7822:21;7874:4;7867:5;7863:16;7912:3;7903:6;7898:3;7894:16;7891:25;7888:112;;;7919:79;;:::i;:::-;7888:112;8009:54;8056:6;8051:3;8046;8009:54;:::i;:::-;7728:341;7644:425;;;;;:::o;8089:340::-;8145:5;8194:3;8187:4;8179:6;8175:17;8171:27;8161:122;;8202:79;;:::i;:::-;8161:122;8319:6;8306:20;8344:79;8419:3;8411:6;8404:4;8396:6;8392:17;8344:79;:::i;:::-;8335:88;;8151:278;8089:340;;;;:::o;8435:93::-;8471:7;8511:10;8504:5;8500:22;8489:33;;8435:93;;;:::o;8534:120::-;8606:23;8623:5;8606:23;:::i;:::-;8599:5;8596:34;8586:62;;8644:1;8641;8634:12;8586:62;8534:120;:::o;8660:137::-;8705:5;8743:6;8730:20;8721:29;;8759:32;8785:5;8759:32;:::i;:::-;8660:137;;;;:::o;8803:1447::-;8926:6;8934;8942;8950;8958;9007:3;8995:9;8986:7;8982:23;8978:33;8975:120;;;9014:79;;:::i;:::-;8975:120;9162:1;9151:9;9147:17;9134:31;9192:18;9184:6;9181:30;9178:117;;;9214:79;;:::i;:::-;9178:117;9319:63;9374:7;9365:6;9354:9;9350:22;9319:63;:::i;:::-;9309:73;;9105:287;9459:2;9448:9;9444:18;9431:32;9490:18;9482:6;9479:30;9476:117;;;9512:79;;:::i;:::-;9476:117;9617:63;9672:7;9663:6;9652:9;9648:22;9617:63;:::i;:::-;9607:73;;9402:288;9757:2;9746:9;9742:18;9729:32;9788:18;9780:6;9777:30;9774:117;;;9810:79;;:::i;:::-;9774:117;9915:63;9970:7;9961:6;9950:9;9946:22;9915:63;:::i;:::-;9905:73;;9700:288;10027:2;10053:52;10097:7;10088:6;10077:9;10073:22;10053:52;:::i;:::-;10043:62;;9998:117;10154:3;10181:52;10225:7;10216:6;10205:9;10201:22;10181:52;:::i;:::-;10171:62;;10125:118;8803:1447;;;;;;;;:::o;10256:118::-;10343:24;10361:5;10343:24;:::i;:::-;10338:3;10331:37;10256:118;;:::o;10380:222::-;10473:4;10511:2;10500:9;10496:18;10488:26;;10524:71;10592:1;10581:9;10577:17;10568:6;10524:71;:::i;:::-;10380:222;;;;:::o;10608:169::-;10692:11;10726:6;10721:3;10714:19;10766:4;10761:3;10757:14;10742:29;;10608:169;;;;:::o;10783:220::-;10923:34;10919:1;10911:6;10907:14;10900:58;10992:3;10987:2;10979:6;10975:15;10968:28;10783:220;:::o;11009:366::-;11151:3;11172:67;11236:2;11231:3;11172:67;:::i;:::-;11165:74;;11248:93;11337:3;11248:93;:::i;:::-;11366:2;11361:3;11357:12;11350:19;;11009:366;;;:::o;11381:419::-;11547:4;11585:2;11574:9;11570:18;11562:26;;11634:9;11628:4;11624:20;11620:1;11609:9;11605:17;11598:47;11662:131;11788:4;11662:131;:::i;:::-;11654:139;;11381:419;;;:::o;11806:180::-;11854:77;11851:1;11844:88;11951:4;11948:1;11941:15;11975:4;11972:1;11965:15;11992:224;12132:34;12128:1;12120:6;12116:14;12109:58;12201:7;12196:2;12188:6;12184:15;12177:32;11992:224;:::o;12222:366::-;12364:3;12385:67;12449:2;12444:3;12385:67;:::i;:::-;12378:74;;12461:93;12550:3;12461:93;:::i;:::-;12579:2;12574:3;12570:12;12563:19;;12222:366;;;:::o;12594:419::-;12760:4;12798:2;12787:9;12783:18;12775:26;;12847:9;12841:4;12837:20;12833:1;12822:9;12818:17;12811:47;12875:131;13001:4;12875:131;:::i;:::-;12867:139;;12594:419;;;:::o;13019:101::-;13055:7;13095:18;13088:5;13084:30;13073:41;;13019:101;;;:::o;13126:115::-;13211:23;13228:5;13211:23;:::i;:::-;13206:3;13199:36;13126:115;;:::o;13247:123::-;13323:6;13357:5;13351:12;13341:22;;13247:123;;;:::o;13376:193::-;13484:11;13518:6;13513:3;13506:19;13558:4;13553:3;13549:14;13534:29;;13376:193;;;;:::o;13575:141::-;13651:4;13674:3;13666:11;;13704:4;13699:3;13695:14;13687:22;;13575:141;;;:::o;13722:98::-;13773:6;13807:5;13801:12;13791:22;;13722:98;;;:::o;13826:158::-;13899:11;13933:6;13928:3;13921:19;13973:4;13968:3;13964:14;13949:29;;13826:158;;;;:::o;13990:246::-;14071:1;14081:113;14095:6;14092:1;14089:13;14081:113;;;14180:1;14175:3;14171:11;14165:18;14161:1;14156:3;14152:11;14145:39;14117:2;14114:1;14110:10;14105:15;;14081:113;;;14228:1;14219:6;14214:3;14210:16;14203:27;14052:184;13990:246;;;:::o;14242:353::-;14318:3;14346:38;14378:5;14346:38;:::i;:::-;14400:60;14453:6;14448:3;14400:60;:::i;:::-;14393:67;;14469:65;14527:6;14522:3;14515:4;14508:5;14504:16;14469:65;:::i;:::-;14559:29;14581:6;14559:29;:::i;:::-;14554:3;14550:39;14543:46;;14322:273;14242:353;;;;:::o;14601:192::-;14688:10;14723:64;14783:3;14775:6;14723:64;:::i;:::-;14709:78;;14601:192;;;;:::o;14799:122::-;14878:4;14910;14905:3;14901:14;14893:22;;14799:122;;;:::o;14953:983::-;15090:3;15119:63;15176:5;15119:63;:::i;:::-;15198:95;15286:6;15281:3;15198:95;:::i;:::-;15191:102;;15319:3;15364:4;15356:6;15352:17;15347:3;15343:27;15394:65;15453:5;15394:65;:::i;:::-;15482:7;15513:1;15498:393;15523:6;15520:1;15517:13;15498:393;;;15594:9;15588:4;15584:20;15579:3;15572:33;15645:6;15639:13;15673:82;15750:4;15735:13;15673:82;:::i;:::-;15665:90;;15778:69;15840:6;15778:69;:::i;:::-;15768:79;;15876:4;15871:3;15867:14;15860:21;;15558:333;15545:1;15542;15538:9;15533:14;;15498:393;;;15502:14;15907:4;15900:11;;15927:3;15920:10;;15095:841;;;;;14953:983;;;;:::o;15942:625::-;16157:4;16195:2;16184:9;16180:18;16172:26;;16208:71;16276:1;16265:9;16261:17;16252:6;16208:71;:::i;:::-;16289:70;16355:2;16344:9;16340:18;16331:6;16289:70;:::i;:::-;16406:9;16400:4;16396:20;16391:2;16380:9;16376:18;16369:48;16434:126;16555:4;16546:6;16434:126;:::i;:::-;16426:134;;15942:625;;;;;;:::o;16573:147::-;16674:11;16711:3;16696:18;;16573:147;;;;:::o;16726:386::-;16830:3;16858:38;16890:5;16858:38;:::i;:::-;16912:88;16993:6;16988:3;16912:88;:::i;:::-;16905:95;;17009:65;17067:6;17062:3;17055:4;17048:5;17044:16;17009:65;:::i;:::-;17099:6;17094:3;17090:16;17083:23;;16834:278;16726:386;;;;:::o;17118:271::-;17248:3;17270:93;17359:3;17350:6;17270:93;:::i;:::-;17263:100;;17380:3;17373:10;;17118:271;;;;:::o;17395:90::-;17430:7;17473:5;17470:1;17459:20;17448:31;;17395:90;;;:::o;17491:118::-;17562:22;17578:5;17562:22;:::i;:::-;17555:5;17552:33;17542:61;;17599:1;17596;17589:12;17542:61;17491:118;:::o;17615:139::-;17670:5;17701:6;17695:13;17686:22;;17717:31;17742:5;17717:31;:::i;:::-;17615:139;;;;:::o;17760:120::-;17832:23;17849:5;17832:23;:::i;:::-;17825:5;17822:34;17812:62;;17870:1;17867;17860:12;17812:62;17760:120;:::o;17886:141::-;17942:5;17973:6;17967:13;17958:22;;17989:32;18015:5;17989:32;:::i;:::-;17886:141;;;;:::o;18033:309::-;18108:4;18198:18;18190:6;18187:30;18184:56;;;18220:18;;:::i;:::-;18184:56;18270:4;18262:6;18258:17;18250:25;;18330:4;18324;18320:15;18312:23;;18033:309;;;:::o;18348:139::-;18403:5;18434:6;18428:13;18419:22;;18450:31;18475:5;18450:31;:::i;:::-;18348:139;;;;:::o;18508:726::-;18613:5;18638:79;18654:62;18709:6;18654:62;:::i;:::-;18638:79;:::i;:::-;18629:88;;18737:5;18766:6;18759:5;18752:21;18800:4;18793:5;18789:16;18782:23;;18853:4;18845:6;18841:17;18833:6;18829:30;18882:3;18874:6;18871:15;18868:122;;;18901:79;;:::i;:::-;18868:122;19016:6;18999:229;19033:6;19028:3;19025:15;18999:229;;;19108:3;19137:46;19179:3;19167:10;19137:46;:::i;:::-;19132:3;19125:59;19213:4;19208:3;19204:14;19197:21;;19075:153;19059:4;19054:3;19050:14;19043:21;;18999:229;;;19003:21;18619:615;;18508:726;;;;;:::o;19255:381::-;19335:5;19384:3;19377:4;19369:6;19365:17;19361:27;19351:122;;19392:79;;:::i;:::-;19351:122;19502:6;19496:13;19527:103;19626:3;19618:6;19611:4;19603:6;19599:17;19527:103;:::i;:::-;19518:112;;19341:295;19255:381;;;;:::o;19642:856::-;19750:6;19758;19766;19815:2;19803:9;19794:7;19790:23;19786:32;19783:119;;;19821:79;;:::i;:::-;19783:119;19941:1;19966:62;20020:7;20011:6;20000:9;19996:22;19966:62;:::i;:::-;19956:72;;19912:126;20077:2;20103:63;20158:7;20149:6;20138:9;20134:22;20103:63;:::i;:::-;20093:73;;20048:128;20236:2;20225:9;20221:18;20215:25;20267:18;20259:6;20256:30;20253:117;;;20289:79;;:::i;:::-;20253:117;20394:87;20473:7;20464:6;20453:9;20449:22;20394:87;:::i;:::-;20384:97;;20186:305;19642:856;;;;;:::o;20504:332::-;20625:4;20663:2;20652:9;20648:18;20640:26;;20676:71;20744:1;20733:9;20729:17;20720:6;20676:71;:::i;:::-;20757:72;20825:2;20814:9;20810:18;20801:6;20757:72;:::i;:::-;20504:332;;;;;:::o;20842:347::-;20910:6;20959:2;20947:9;20938:7;20934:23;20930:32;20927:119;;;20965:79;;:::i;:::-;20927:119;21085:1;21110:62;21164:7;21155:6;21144:9;21140:22;21110:62;:::i;:::-;21100:72;;21056:126;20842:347;;;;:::o;21195:545::-;21368:4;21406:3;21395:9;21391:19;21383:27;;21420:71;21488:1;21477:9;21473:17;21464:6;21420:71;:::i;:::-;21501:72;21569:2;21558:9;21554:18;21545:6;21501:72;:::i;:::-;21583;21651:2;21640:9;21636:18;21627:6;21583:72;:::i;:::-;21665:68;21729:2;21718:9;21714:18;21705:6;21665:68;:::i;:::-;21195:545;;;;;;;:::o;21746:99::-;21798:6;21832:5;21826:12;21816:22;;21746:99;;;:::o;21851:159::-;21925:11;21959:6;21954:3;21947:19;21999:4;21994:3;21990:14;21975:29;;21851:159;;;;:::o;22016:357::-;22094:3;22122:39;22155:5;22122:39;:::i;:::-;22177:61;22231:6;22226:3;22177:61;:::i;:::-;22170:68;;22247:65;22305:6;22300:3;22293:4;22286:5;22282:16;22247:65;:::i;:::-;22337:29;22359:6;22337:29;:::i;:::-;22332:3;22328:39;22321:46;;22098:275;22016:357;;;;:::o;22379:108::-;22456:24;22474:5;22456:24;:::i;:::-;22451:3;22444:37;22379:108;;:::o;22493:90::-;22527:7;22570:5;22563:13;22556:21;22545:32;;22493:90;;;:::o;22589:99::-;22660:21;22675:5;22660:21;:::i;:::-;22655:3;22648:34;22589:99;;:::o;22694:105::-;22769:23;22786:5;22769:23;:::i;:::-;22764:3;22757:36;22694:105;;:::o;22805:140::-;22898:6;22932:5;22926:12;22916:22;;22805:140;;;:::o;22951:200::-;23066:11;23100:6;23095:3;23088:19;23140:4;23135:3;23131:14;23116:29;;22951:200;;;;:::o;23157:158::-;23250:4;23273:3;23265:11;;23303:4;23298:3;23294:14;23286:22;;23157:158;;;:::o;23321:77::-;23358:7;23387:5;23376:16;;23321:77;;;:::o;23404:108::-;23481:24;23499:5;23481:24;:::i;:::-;23476:3;23469:37;23404:108;;:::o;23600:1231::-;23711:3;23747:4;23742:3;23738:14;23847:4;23840:5;23836:16;23830:23;23866:57;23917:4;23912:3;23908:14;23894:12;23866:57;:::i;:::-;23762:171;24021:4;24014:5;24010:16;24004:23;24040:63;24097:4;24092:3;24088:14;24074:12;24040:63;:::i;:::-;23943:170;24198:4;24191:5;24187:16;24181:23;24251:3;24245:4;24241:14;24234:4;24229:3;24225:14;24218:38;24277:71;24343:4;24329:12;24277:71;:::i;:::-;24269:79;;24123:236;24452:4;24445:5;24441:16;24435:23;24505:3;24499:4;24495:14;24488:4;24483:3;24479:14;24472:38;24531:71;24597:4;24583:12;24531:71;:::i;:::-;24523:79;;24369:244;24712:4;24705:5;24701:16;24695:23;24731:63;24788:4;24783:3;24779:14;24765:12;24731:63;:::i;:::-;24623:181;24821:4;24814:11;;23716:1115;23600:1231;;;;:::o;24919:632::-;25030:3;25066:4;25061:3;25057:14;25156:4;25149:5;25145:16;25139:23;25175:63;25232:4;25227:3;25223:14;25209:12;25175:63;:::i;:::-;25081:167;25329:4;25322:5;25318:16;25312:23;25382:3;25376:4;25372:14;25365:4;25360:3;25356:14;25349:38;25408:105;25508:4;25494:12;25408:105;:::i;:::-;25400:113;;25258:266;25541:4;25534:11;;25035:516;24919:632;;;;:::o;25557:260::-;25678:10;25713:98;25807:3;25799:6;25713:98;:::i;:::-;25699:112;;25557:260;;;;:::o;25823:139::-;25919:4;25951;25946:3;25942:14;25934:22;;25823:139;;;:::o;26054:1099::-;26215:3;26244:80;26318:5;26244:80;:::i;:::-;26340:102;26435:6;26430:3;26340:102;:::i;:::-;26333:109;;26468:3;26513:4;26505:6;26501:17;26496:3;26492:27;26543:82;26619:5;26543:82;:::i;:::-;26648:7;26679:1;26664:444;26689:6;26686:1;26683:13;26664:444;;;26760:9;26754:4;26750:20;26745:3;26738:33;26811:6;26805:13;26839:116;26950:4;26935:13;26839:116;:::i;:::-;26831:124;;26978:86;27057:6;26978:86;:::i;:::-;26968:96;;27093:4;27088:3;27084:14;27077:21;;26724:384;26711:1;26708;26704:9;26699:14;;26664:444;;;26668:14;27124:4;27117:11;;27144:3;27137:10;;26220:933;;;;;26054:1099;;;;:::o;27237:690::-;27372:4;27367:3;27363:14;27461:4;27454:5;27450:16;27444:23;27480:61;27535:4;27530:3;27526:14;27512:12;27480:61;:::i;:::-;27387:164;27645:4;27638:5;27634:16;27628:23;27664:63;27721:4;27716:3;27712:14;27698:12;27664:63;:::i;:::-;27561:176;27830:4;27823:5;27819:16;27813:23;27849:61;27904:4;27899:3;27895:14;27881:12;27849:61;:::i;:::-;27747:173;27341:586;27237:690;;:::o;28021:2205::-;28148:3;28184:6;28179:3;28175:16;28273:4;28266:5;28262:16;28256:23;28326:3;28320:4;28316:14;28309:4;28304:3;28300:14;28293:38;28352:73;28420:4;28406:12;28352:73;:::i;:::-;28344:81;;28201:235;28520:4;28513:5;28509:16;28503:23;28573:3;28567:4;28563:14;28556:4;28551:3;28547:14;28540:38;28599:73;28667:4;28653:12;28599:73;:::i;:::-;28591:81;;28446:237;28769:4;28762:5;28758:16;28752:23;28788:63;28845:4;28840:3;28836:14;28822:12;28788:63;:::i;:::-;28693:168;28943:4;28936:5;28932:16;28926:23;28996:3;28990:4;28986:14;28979:4;28974:3;28970:14;28963:38;29022:73;29090:4;29076:12;29022:73;:::i;:::-;29014:81;;28871:235;29199:4;29192:5;29188:16;29182:23;29218:57;29269:4;29264:3;29260:14;29246:12;29218:57;:::i;:::-;29116:169;29372:4;29365:5;29361:16;29355:23;29391:61;29446:4;29441:3;29437:14;29423:12;29391:61;:::i;:::-;29295:167;29553:4;29546:5;29542:16;29536:23;29572:57;29623:4;29618:3;29614:14;29600:12;29572:57;:::i;:::-;29472:167;29726:4;29719:5;29715:16;29709:23;29779:3;29773:4;29769:14;29762:4;29757:3;29753:14;29746:38;29805:155;29955:4;29941:12;29805:155;:::i;:::-;29797:163;;29649:322;30055:6;30048:5;30044:18;30038:25;30076:113;30181:6;30176:3;30172:16;30158:12;30076:113;:::i;:::-;29981:218;30216:4;30209:11;;28153:2073;28021:2205;;;;:::o;30232:389::-;30383:4;30421:2;30410:9;30406:18;30398:26;;30470:9;30464:4;30460:20;30456:1;30445:9;30441:17;30434:47;30498:116;30609:4;30600:6;30498:116;:::i;:::-;30490:124;;30232:389;;;;:::o;30627:104::-;30672:7;30701:24;30719:5;30701:24;:::i;:::-;30690:35;;30627:104;;;:::o;30737:138::-;30818:32;30844:5;30818:32;:::i;:::-;30811:5;30808:43;30798:71;;30865:1;30862;30855:12;30798:71;30737:138;:::o;30881:159::-;30946:5;30977:6;30971:13;30962:22;;30993:41;31028:5;30993:41;:::i;:::-;30881:159;;;;:::o;31046:519::-;31131:6;31139;31188:2;31176:9;31167:7;31163:23;31159:32;31156:119;;;31194:79;;:::i;:::-;31156:119;31314:1;31339:62;31393:7;31384:6;31373:9;31369:22;31339:62;:::i;:::-;31329:72;;31285:126;31450:2;31476:72;31540:7;31531:6;31520:9;31516:22;31476:72;:::i;:::-;31466:82;;31421:137;31046:519;;;;;:::o;31571:180::-;31619:77;31616:1;31609:88;31716:4;31713:1;31706:15;31740:4;31737:1;31730:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1373200",
								"executionCost": "157151",
								"totalCost": "1530351"
							},
							"external": {
								"createNft(string,string,string,uint32,uint32)": "infinite",
								"mintNft(address,bytes[])": "infinite",
								"transferNft(address,address,int64)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 358,
									"end": 2641,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 358,
									"end": 2641,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 358,
									"end": 2641,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 358,
									"end": 2641,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 358,
									"end": 2641,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 358,
									"end": 2641,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 358,
									"end": 2641,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 358,
									"end": 2641,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 358,
									"end": 2641,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 358,
									"end": 2641,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 358,
									"end": 2641,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 358,
									"end": 2641,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 358,
									"end": 2641,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 358,
									"end": 2641,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 601,
									"end": 602,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 575,
									"end": 583,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 575,
									"end": 598,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 584,
									"end": 597,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 575,
									"end": 598,
									"name": "PUSH",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 575,
									"end": 598,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 575,
									"end": 598,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 575,
									"end": 598,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 575,
									"end": 598,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 575,
									"end": 598,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 575,
									"end": 598,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 575,
									"end": 598,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 575,
									"end": 598,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 575,
									"end": 598,
									"name": "tag",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 575,
									"end": 598,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 575,
									"end": 598,
									"name": "tag",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 575,
									"end": 598,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 575,
									"end": 598,
									"name": "PUSH",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 575,
									"end": 598,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 575,
									"end": 598,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 575,
									"end": 598,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 575,
									"end": 598,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 575,
									"end": 598,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 575,
									"end": 598,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 575,
									"end": 598,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 575,
									"end": 598,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 575,
									"end": 598,
									"name": "tag",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 575,
									"end": 598,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 575,
									"end": 598,
									"name": "tag",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 575,
									"end": 598,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 575,
									"end": 598,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 575,
									"end": 598,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 575,
									"end": 598,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 575,
									"end": 598,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 575,
									"end": 598,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 575,
									"end": 598,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 575,
									"end": 598,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 575,
									"end": 598,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 575,
									"end": 598,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 575,
									"end": 598,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 575,
									"end": 598,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 575,
									"end": 602,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 575,
									"end": 602,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 575,
									"end": 602,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 575,
									"end": 602,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 636,
									"end": 637,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 612,
									"end": 620,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 612,
									"end": 633,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 621,
									"end": 632,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 612,
									"end": 633,
									"name": "PUSH",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 612,
									"end": 633,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 612,
									"end": 633,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 612,
									"end": 633,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 612,
									"end": 633,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 612,
									"end": 633,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 612,
									"end": 633,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 612,
									"end": 633,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 612,
									"end": 633,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 612,
									"end": 633,
									"name": "tag",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 612,
									"end": 633,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 612,
									"end": 633,
									"name": "tag",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 612,
									"end": 633,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 612,
									"end": 633,
									"name": "PUSH",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 612,
									"end": 633,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 612,
									"end": 633,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 612,
									"end": 633,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 612,
									"end": 633,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 612,
									"end": 633,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 612,
									"end": 633,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 612,
									"end": 633,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 612,
									"end": 633,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 612,
									"end": 633,
									"name": "tag",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 612,
									"end": 633,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 612,
									"end": 633,
									"name": "tag",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 612,
									"end": 633,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 612,
									"end": 633,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 612,
									"end": 633,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 612,
									"end": 633,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 612,
									"end": 633,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 612,
									"end": 633,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 612,
									"end": 633,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 612,
									"end": 633,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 612,
									"end": 633,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 612,
									"end": 633,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 612,
									"end": 633,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 612,
									"end": 633,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 612,
									"end": 637,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 612,
									"end": 637,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 612,
									"end": 637,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 612,
									"end": 637,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 674,
									"end": 675,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 647,
									"end": 655,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 647,
									"end": 671,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 656,
									"end": 670,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 647,
									"end": 671,
									"name": "PUSH",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 647,
									"end": 671,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 647,
									"end": 671,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 647,
									"end": 671,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 647,
									"end": 671,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 647,
									"end": 671,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 647,
									"end": 671,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 647,
									"end": 671,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 647,
									"end": 671,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 647,
									"end": 671,
									"name": "tag",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 647,
									"end": 671,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 647,
									"end": 671,
									"name": "tag",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 647,
									"end": 671,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 647,
									"end": 671,
									"name": "PUSH",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 647,
									"end": 671,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 647,
									"end": 671,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 647,
									"end": 671,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 647,
									"end": 671,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 647,
									"end": 671,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 647,
									"end": 671,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 647,
									"end": 671,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 647,
									"end": 671,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 647,
									"end": 671,
									"name": "tag",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 647,
									"end": 671,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 647,
									"end": 671,
									"name": "tag",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 647,
									"end": 671,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 647,
									"end": 671,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 647,
									"end": 671,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 647,
									"end": 671,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 647,
									"end": 671,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 647,
									"end": 671,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 647,
									"end": 671,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 647,
									"end": 671,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 647,
									"end": 671,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 647,
									"end": 671,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 647,
									"end": 671,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 647,
									"end": 671,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 647,
									"end": 675,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 647,
									"end": 675,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 647,
									"end": 675,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 647,
									"end": 675,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 710,
									"end": 711,
									"name": "PUSH",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 685,
									"end": 693,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 685,
									"end": 707,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 694,
									"end": 706,
									"name": "PUSH",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 685,
									"end": 707,
									"name": "PUSH",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 685,
									"end": 707,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 685,
									"end": 707,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 685,
									"end": 707,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 685,
									"end": 707,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 685,
									"end": 707,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 685,
									"end": 707,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 685,
									"end": 707,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 685,
									"end": 707,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 685,
									"end": 707,
									"name": "tag",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 685,
									"end": 707,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 685,
									"end": 707,
									"name": "tag",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 685,
									"end": 707,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 685,
									"end": 707,
									"name": "PUSH",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 685,
									"end": 707,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 685,
									"end": 707,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 685,
									"end": 707,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 685,
									"end": 707,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 685,
									"end": 707,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 685,
									"end": 707,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 685,
									"end": 707,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 685,
									"end": 707,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 685,
									"end": 707,
									"name": "tag",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 685,
									"end": 707,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 685,
									"end": 707,
									"name": "tag",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 685,
									"end": 707,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 685,
									"end": 707,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 685,
									"end": 707,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 685,
									"end": 707,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 685,
									"end": 707,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 685,
									"end": 707,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 685,
									"end": 707,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 685,
									"end": 707,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 685,
									"end": 707,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 685,
									"end": 707,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 685,
									"end": 707,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 685,
									"end": 707,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 685,
									"end": 711,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 685,
									"end": 711,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 685,
									"end": 711,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 685,
									"end": 711,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 748,
									"end": 750,
									"name": "PUSH",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 721,
									"end": 729,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 721,
									"end": 745,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 730,
									"end": 744,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 721,
									"end": 745,
									"name": "PUSH",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 721,
									"end": 745,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 721,
									"end": 745,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 721,
									"end": 745,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 721,
									"end": 745,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 721,
									"end": 745,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 721,
									"end": 745,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 721,
									"end": 745,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 721,
									"end": 745,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 721,
									"end": 745,
									"name": "tag",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 721,
									"end": 745,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 721,
									"end": 745,
									"name": "tag",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 721,
									"end": 745,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 721,
									"end": 745,
									"name": "PUSH",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 721,
									"end": 745,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 721,
									"end": 745,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 721,
									"end": 745,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 721,
									"end": 745,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 721,
									"end": 745,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 721,
									"end": 745,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 721,
									"end": 745,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 721,
									"end": 745,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 721,
									"end": 745,
									"name": "tag",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 721,
									"end": 745,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 721,
									"end": 745,
									"name": "tag",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 721,
									"end": 745,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 721,
									"end": 745,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 721,
									"end": 745,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 721,
									"end": 745,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 721,
									"end": 745,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 721,
									"end": 745,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 721,
									"end": 745,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 721,
									"end": 745,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 721,
									"end": 745,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 721,
									"end": 745,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 721,
									"end": 745,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 721,
									"end": 745,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 721,
									"end": 750,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 721,
									"end": 750,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 721,
									"end": 750,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 721,
									"end": 750,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 784,
									"end": 786,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 760,
									"end": 768,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 760,
									"end": 781,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 769,
									"end": 780,
									"name": "PUSH",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 760,
									"end": 781,
									"name": "PUSH",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 760,
									"end": 781,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 760,
									"end": 781,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 760,
									"end": 781,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 760,
									"end": 781,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 760,
									"end": 781,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 760,
									"end": 781,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 760,
									"end": 781,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 760,
									"end": 781,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 760,
									"end": 781,
									"name": "tag",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 760,
									"end": 781,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 760,
									"end": 781,
									"name": "tag",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 760,
									"end": 781,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 760,
									"end": 781,
									"name": "PUSH",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 760,
									"end": 781,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 760,
									"end": 781,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 760,
									"end": 781,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 760,
									"end": 781,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 760,
									"end": 781,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 760,
									"end": 781,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 760,
									"end": 781,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 760,
									"end": 781,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 760,
									"end": 781,
									"name": "tag",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 760,
									"end": 781,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 760,
									"end": 781,
									"name": "tag",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 760,
									"end": 781,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 760,
									"end": 781,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 760,
									"end": 781,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 760,
									"end": 781,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 760,
									"end": 781,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 760,
									"end": 781,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 760,
									"end": 781,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 760,
									"end": 781,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 760,
									"end": 781,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 760,
									"end": 781,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 760,
									"end": 781,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 760,
									"end": 781,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 760,
									"end": 786,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 760,
									"end": 786,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 760,
									"end": 786,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 760,
									"end": 786,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 822,
									"end": 824,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 796,
									"end": 804,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 796,
									"end": 819,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 805,
									"end": 818,
									"name": "PUSH",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 796,
									"end": 819,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 796,
									"end": 819,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 796,
									"end": 819,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 796,
									"end": 819,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 796,
									"end": 819,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 796,
									"end": 819,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 796,
									"end": 819,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 796,
									"end": 819,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 796,
									"end": 819,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 796,
									"end": 819,
									"name": "tag",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 796,
									"end": 819,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 796,
									"end": 819,
									"name": "tag",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 796,
									"end": 819,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 796,
									"end": 819,
									"name": "PUSH",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 796,
									"end": 819,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 796,
									"end": 819,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 796,
									"end": 819,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 796,
									"end": 819,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 796,
									"end": 819,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 796,
									"end": 819,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 796,
									"end": 819,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 796,
									"end": 819,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 796,
									"end": 819,
									"name": "tag",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 796,
									"end": 819,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 796,
									"end": 819,
									"name": "tag",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 796,
									"end": 819,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 796,
									"end": 819,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 796,
									"end": 819,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 796,
									"end": 819,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 796,
									"end": 819,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 796,
									"end": 819,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 796,
									"end": 819,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 796,
									"end": 819,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 796,
									"end": 819,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 796,
									"end": 819,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 796,
									"end": 819,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 796,
									"end": 819,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 796,
									"end": 824,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 796,
									"end": 824,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 796,
									"end": 824,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 796,
									"end": 824,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 358,
									"end": 2641,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 358,
									"end": 2641,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7,
									"end": 187,
									"name": "tag",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 7,
									"end": 187,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 55,
									"end": 132,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 52,
									"end": 53,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 45,
									"end": 133,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 152,
									"end": 156,
									"name": "PUSH",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 149,
									"end": 150,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 142,
									"end": 157,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 176,
									"end": 180,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 173,
									"end": 174,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 166,
									"end": 181,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 358,
									"end": 2641,
									"name": "tag",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 358,
									"end": 2641,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 358,
									"end": 2641,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 358,
									"end": 2641,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 358,
									"end": 2641,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 358,
									"end": 2641,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 358,
									"end": 2641,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 358,
									"end": 2641,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 358,
									"end": 2641,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208a2bc148d7c22890c14b30aa40416f50efe5a756d49ee7409b7f05da74ce79f464736f6c63430008110033",
									".code": [
										{
											"begin": 358,
											"end": 2641,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 358,
											"end": 2641,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 358,
											"end": 2641,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 358,
											"end": 2641,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 358,
											"end": 2641,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 358,
											"end": 2641,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 358,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 358,
											"end": 2641,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 358,
											"end": 2641,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 358,
											"end": 2641,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 358,
											"end": 2641,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 358,
											"end": 2641,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 358,
											"end": 2641,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 358,
											"end": 2641,
											"name": "PUSH",
											"source": 6,
											"value": "A284CB6"
										},
										{
											"begin": 358,
											"end": 2641,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 358,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 358,
											"end": 2641,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 358,
											"end": 2641,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 358,
											"end": 2641,
											"name": "PUSH",
											"source": 6,
											"value": "82B562AA"
										},
										{
											"begin": 358,
											"end": 2641,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 358,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 358,
											"end": 2641,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 358,
											"end": 2641,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 358,
											"end": 2641,
											"name": "PUSH",
											"source": 6,
											"value": "A1A79CDE"
										},
										{
											"begin": 358,
											"end": 2641,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 358,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 358,
											"end": 2641,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 358,
											"end": 2641,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 358,
											"end": 2641,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 358,
											"end": 2641,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 358,
											"end": 2641,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 358,
											"end": 2641,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1696,
											"end": 2118,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1696,
											"end": 2118,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1696,
											"end": 2118,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1696,
											"end": 2118,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1696,
											"end": 2118,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1696,
											"end": 2118,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1696,
											"end": 2118,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1696,
											"end": 2118,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1696,
											"end": 2118,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1696,
											"end": 2118,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1696,
											"end": 2118,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1696,
											"end": 2118,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1696,
											"end": 2118,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1696,
											"end": 2118,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1696,
											"end": 2118,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1696,
											"end": 2118,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1696,
											"end": 2118,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1696,
											"end": 2118,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1696,
											"end": 2118,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1696,
											"end": 2118,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1696,
											"end": 2118,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1696,
											"end": 2118,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 1696,
											"end": 2118,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1696,
											"end": 2118,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1696,
											"end": 2118,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 1696,
											"end": 2118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1696,
											"end": 2118,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 1696,
											"end": 2118,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1696,
											"end": 2118,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 1696,
											"end": 2118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1696,
											"end": 2118,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1696,
											"end": 2118,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1696,
											"end": 2118,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1696,
											"end": 2118,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1696,
											"end": 2118,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 1696,
											"end": 2118,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1696,
											"end": 2118,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1696,
											"end": 2118,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 1696,
											"end": 2118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1696,
											"end": 2118,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 1696,
											"end": 2118,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1696,
											"end": 2118,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1696,
											"end": 2118,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1696,
											"end": 2118,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1696,
											"end": 2118,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1696,
											"end": 2118,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1696,
											"end": 2118,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1696,
											"end": 2118,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2126,
											"end": 2638,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2126,
											"end": 2638,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2126,
											"end": 2638,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 2126,
											"end": 2638,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2126,
											"end": 2638,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2126,
											"end": 2638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 2126,
											"end": 2638,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2126,
											"end": 2638,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2126,
											"end": 2638,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2126,
											"end": 2638,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2126,
											"end": 2638,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 2126,
											"end": 2638,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2126,
											"end": 2638,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2126,
											"end": 2638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 2126,
											"end": 2638,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2126,
											"end": 2638,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2126,
											"end": 2638,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2126,
											"end": 2638,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2126,
											"end": 2638,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2126,
											"end": 2638,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2126,
											"end": 2638,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2126,
											"end": 2638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 2126,
											"end": 2638,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2126,
											"end": 2638,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2126,
											"end": 2638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 2126,
											"end": 2638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2126,
											"end": 2638,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 2126,
											"end": 2638,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2126,
											"end": 2638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 2126,
											"end": 2638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2126,
											"end": 2638,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 2126,
											"end": 2638,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2126,
											"end": 2638,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2126,
											"end": 2638,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2126,
											"end": 2638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 2126,
											"end": 2638,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2126,
											"end": 2638,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2126,
											"end": 2638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 2126,
											"end": 2638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2126,
											"end": 2638,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 2126,
											"end": 2638,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2126,
											"end": 2638,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2126,
											"end": 2638,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2126,
											"end": 2638,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2126,
											"end": 2638,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2126,
											"end": 2638,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2126,
											"end": 2638,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2126,
											"end": 2638,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 421,
											"end": 1688,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 421,
											"end": 1688,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 421,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 421,
											"end": 1688,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 421,
											"end": 1688,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 421,
											"end": 1688,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 421,
											"end": 1688,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 421,
											"end": 1688,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 421,
											"end": 1688,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 421,
											"end": 1688,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 421,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 1688,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 421,
											"end": 1688,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 421,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 421,
											"end": 1688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 421,
											"end": 1688,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 1688,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 421,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 421,
											"end": 1688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 421,
											"end": 1688,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 421,
											"end": 1688,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 421,
											"end": 1688,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 1688,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 421,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 421,
											"end": 1688,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 421,
											"end": 1688,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 421,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 421,
											"end": 1688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 421,
											"end": 1688,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 421,
											"end": 1688,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 421,
											"end": 1688,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 1688,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 421,
											"end": 1688,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 421,
											"end": 1688,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 421,
											"end": 1688,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 421,
											"end": 1688,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 421,
											"end": 1688,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1696,
											"end": 2118,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 1696,
											"end": 2118,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1796,
											"end": 1801,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1815,
											"end": 1827,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1831,
											"end": 1852,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1856,
											"end": 1954,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 1899,
											"end": 1904,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1919,
											"end": 1920,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1935,
											"end": 1943,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1856,
											"end": 1884,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 1856,
											"end": 1954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1856,
											"end": 1954,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 1856,
											"end": 1954,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1814,
											"end": 1954,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1814,
											"end": 1954,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1814,
											"end": 1954,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1814,
											"end": 1954,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1814,
											"end": 1954,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2733,
											"end": 2735,
											"name": "PUSH",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1971,
											"end": 2010,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 1971,
											"end": 2010,
											"name": "SIGNEXTEND",
											"source": 6
										},
										{
											"begin": 1971,
											"end": 1979,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1971,
											"end": 2010,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1967,
											"end": 2082,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 1967,
											"end": 2082,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2027,
											"end": 2070,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2027,
											"end": 2070,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2027,
											"end": 2070,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2027,
											"end": 2070,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2027,
											"end": 2070,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2027,
											"end": 2070,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2027,
											"end": 2070,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2027,
											"end": 2070,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 2027,
											"end": 2070,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2027,
											"end": 2070,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 2027,
											"end": 2070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2027,
											"end": 2070,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 2027,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2027,
											"end": 2070,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2027,
											"end": 2070,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2027,
											"end": 2070,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2027,
											"end": 2070,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2027,
											"end": 2070,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2027,
											"end": 2070,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2027,
											"end": 2070,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1967,
											"end": 2082,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 1967,
											"end": 2082,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2101,
											"end": 2107,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2108,
											"end": 2109,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2101,
											"end": 2110,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2101,
											"end": 2110,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2101,
											"end": 2110,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2101,
											"end": 2110,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2101,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 2101,
											"end": 2110,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2101,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 2101,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 2101,
											"end": 2110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2101,
											"end": 2110,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 2101,
											"end": 2110,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2101,
											"end": 2110,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 2101,
											"end": 2110,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2101,
											"end": 2110,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2101,
											"end": 2110,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2101,
											"end": 2110,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2101,
											"end": 2110,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2101,
											"end": 2110,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2101,
											"end": 2110,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2094,
											"end": 2110,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2094,
											"end": 2110,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2094,
											"end": 2110,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2094,
											"end": 2110,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1696,
											"end": 2118,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1696,
											"end": 2118,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1696,
											"end": 2118,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1696,
											"end": 2118,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1696,
											"end": 2118,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2126,
											"end": 2638,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 2126,
											"end": 2638,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2246,
											"end": 2249,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2262,
											"end": 2312,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 2296,
											"end": 2304,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2306,
											"end": 2311,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2262,
											"end": 2295,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 2262,
											"end": 2312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2262,
											"end": 2312,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 2262,
											"end": 2312,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2262,
											"end": 2312,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2323,
											"end": 2335,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2338,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 2383,
											"end": 2388,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2411,
											"end": 2415,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 2431,
											"end": 2439,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2460,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2338,
											"end": 2368,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 2338,
											"end": 2471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2338,
											"end": 2471,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 2338,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2323,
											"end": 2471,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2323,
											"end": 2471,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2733,
											"end": 2735,
											"name": "PUSH",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2488,
											"end": 2527,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2488,
											"end": 2527,
											"name": "SIGNEXTEND",
											"source": 6
										},
										{
											"begin": 2488,
											"end": 2496,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2488,
											"end": 2527,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2484,
											"end": 2603,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 2484,
											"end": 2603,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2544,
											"end": 2591,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2544,
											"end": 2591,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2544,
											"end": 2591,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2544,
											"end": 2591,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2544,
											"end": 2591,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2544,
											"end": 2591,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2544,
											"end": 2591,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2544,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2544,
											"end": 2591,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2544,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 2544,
											"end": 2591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2544,
											"end": 2591,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2544,
											"end": 2591,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2544,
											"end": 2591,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2544,
											"end": 2591,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2544,
											"end": 2591,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2544,
											"end": 2591,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2544,
											"end": 2591,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2544,
											"end": 2591,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2544,
											"end": 2591,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2484,
											"end": 2603,
											"name": "tag",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 2484,
											"end": 2603,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2622,
											"end": 2630,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2615,
											"end": 2630,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2615,
											"end": 2630,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2615,
											"end": 2630,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2126,
											"end": 2638,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2126,
											"end": 2638,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2126,
											"end": 2638,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2126,
											"end": 2638,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2126,
											"end": 2638,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2126,
											"end": 2638,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 421,
											"end": 1688,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 421,
											"end": 1688,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 622,
											"end": 629,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 642,
											"end": 697,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 735,
											"end": 736,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 700,
											"end": 737,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 700,
											"end": 737,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 700,
											"end": 737,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 700,
											"end": 737,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 700,
											"end": 737,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 700,
											"end": 737,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 700,
											"end": 737,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 700,
											"end": 737,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 700,
											"end": 737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 700,
											"end": 737,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 700,
											"end": 737,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 700,
											"end": 737,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 700,
											"end": 737,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 700,
											"end": 737,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 700,
											"end": 737,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 700,
											"end": 737,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 700,
											"end": 737,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 700,
											"end": 737,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 700,
											"end": 737,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 700,
											"end": 737,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 700,
											"end": 737,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 700,
											"end": 737,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 700,
											"end": 737,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 700,
											"end": 737,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 700,
											"end": 737,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 700,
											"end": 737,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 700,
											"end": 737,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 700,
											"end": 737,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 700,
											"end": 737,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 700,
											"end": 737,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 700,
											"end": 737,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 700,
											"end": 737,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 700,
											"end": 737,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 700,
											"end": 737,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 700,
											"end": 737,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 700,
											"end": 737,
											"name": "tag",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 700,
											"end": 737,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 700,
											"end": 737,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 700,
											"end": 737,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 700,
											"end": 737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 700,
											"end": 737,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 700,
											"end": 737,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 700,
											"end": 737,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 700,
											"end": 737,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 700,
											"end": 737,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 700,
											"end": 737,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 700,
											"end": 737,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 700,
											"end": 737,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 700,
											"end": 737,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 700,
											"end": 737,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 700,
											"end": 737,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 700,
											"end": 737,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 700,
											"end": 737,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 700,
											"end": 737,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 700,
											"end": 737,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 700,
											"end": 737,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 700,
											"end": 737,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 700,
											"end": 737,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 700,
											"end": 737,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 642,
											"end": 737,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 642,
											"end": 737,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 798,
											"end": 917,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 825,
											"end": 839,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 854,
											"end": 878,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 901,
											"end": 905,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 798,
											"end": 810,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 798,
											"end": 917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 798,
											"end": 917,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 798,
											"end": 917,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 788,
											"end": 792,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 793,
											"end": 794,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 788,
											"end": 795,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 788,
											"end": 795,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 788,
											"end": 795,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 788,
											"end": 795,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 788,
											"end": 795,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 788,
											"end": 795,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 788,
											"end": 795,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 788,
											"end": 795,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 788,
											"end": 795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 788,
											"end": 795,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 788,
											"end": 795,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 788,
											"end": 795,
											"name": "tag",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 788,
											"end": 795,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 788,
											"end": 795,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 788,
											"end": 795,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 788,
											"end": 795,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 788,
											"end": 795,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 788,
											"end": 795,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 788,
											"end": 917,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 788,
											"end": 917,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 788,
											"end": 917,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 788,
											"end": 917,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 930,
											"end": 974,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 930,
											"end": 974,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 930,
											"end": 974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 930,
											"end": 974,
											"name": "tag",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 930,
											"end": 974,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 998,
											"end": 1002,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 985,
											"end": 990,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 985,
											"end": 995,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 985,
											"end": 995,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 985,
											"end": 1002,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 985,
											"end": 1002,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 985,
											"end": 1002,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 985,
											"end": 1002,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1028,
											"end": 1034,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1013,
											"end": 1018,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1013,
											"end": 1025,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1013,
											"end": 1025,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1013,
											"end": 1034,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1013,
											"end": 1034,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1013,
											"end": 1034,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1013,
											"end": 1034,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1058,
											"end": 1062,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1045,
											"end": 1050,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1045,
											"end": 1055,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1045,
											"end": 1055,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1045,
											"end": 1062,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1045,
											"end": 1062,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1045,
											"end": 1062,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1045,
											"end": 1062,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1098,
											"end": 1102,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 1073,
											"end": 1078,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1073,
											"end": 1087,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1073,
											"end": 1087,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1073,
											"end": 1103,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1073,
											"end": 1103,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1073,
											"end": 1103,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1073,
											"end": 1103,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1073,
											"end": 1103,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1073,
											"end": 1103,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1073,
											"end": 1103,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1073,
											"end": 1103,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1073,
											"end": 1103,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1073,
											"end": 1103,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1073,
											"end": 1103,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1138,
											"end": 1142,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1114,
											"end": 1119,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1114,
											"end": 1135,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 1114,
											"end": 1135,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1114,
											"end": 1142,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1114,
											"end": 1142,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1114,
											"end": 1142,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1114,
											"end": 1142,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1114,
											"end": 1142,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1114,
											"end": 1142,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1114,
											"end": 1142,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1114,
											"end": 1142,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1114,
											"end": 1142,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1114,
											"end": 1142,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1114,
											"end": 1142,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1195,
											"end": 1204,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1177,
											"end": 1182,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1177,
											"end": 1192,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 1177,
											"end": 1192,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1177,
											"end": 1204,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1177,
											"end": 1204,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1177,
											"end": 1204,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1177,
											"end": 1204,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1177,
											"end": 1204,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1177,
											"end": 1204,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1177,
											"end": 1204,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1177,
											"end": 1204,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1177,
											"end": 1204,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1177,
											"end": 1204,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1177,
											"end": 1204,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1233,
											"end": 1237,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1215,
											"end": 1220,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1215,
											"end": 1230,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1215,
											"end": 1230,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1215,
											"end": 1237,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1215,
											"end": 1237,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1215,
											"end": 1237,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1215,
											"end": 1237,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1270,
											"end": 1275,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1248,
											"end": 1267,
											"name": "PUSH",
											"source": 6,
											"value": "C0"
										},
										{
											"begin": 1248,
											"end": 1267,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1248,
											"end": 1275,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1248,
											"end": 1275,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1248,
											"end": 1275,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1248,
											"end": 1275,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1248,
											"end": 1275,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1248,
											"end": 1275,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1248,
											"end": 1275,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1248,
											"end": 1275,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1248,
											"end": 1275,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1248,
											"end": 1275,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1248,
											"end": 1275,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 1331,
											"end": 1335,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 1338,
											"end": 1353,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1322,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 1301,
											"end": 1354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1291,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1298,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1286,
											"end": 1298,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1354,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1354,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1354,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1354,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1411,
											"end": 1427,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1449,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1453,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 1509,
											"end": 1514,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1453,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 1453,
											"end": 1515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1453,
											"end": 1515,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 1453,
											"end": 1515,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1515,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1515,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1515,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1515,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1668,
											"end": 1680,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1661,
											"end": 1680,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 1661,
											"end": 1680,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1661,
											"end": 1680,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1661,
											"end": 1680,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1661,
											"end": 1680,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1661,
											"end": 1680,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 421,
											"end": 1688,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 421,
											"end": 1688,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 421,
											"end": 1688,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 421,
											"end": 1688,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 421,
											"end": 1688,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 421,
											"end": 1688,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 421,
											"end": 1688,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 421,
											"end": 1688,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2570,
											"end": 3282,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 2570,
											"end": 3282,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2721,
											"end": 2737,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2751,
											"end": 2772,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2786,
											"end": 2814,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2840,
											"end": 2852,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2854,
											"end": 2873,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 289,
											"end": 294,
											"name": "PUSH",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 2877,
											"end": 2899,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2877,
											"end": 2899,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2953,
											"end": 2991,
											"name": "PUSH",
											"source": 3,
											"value": "278E0B88"
										},
										{
											"begin": 2953,
											"end": 2991,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 2953,
											"end": 2991,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 3009,
											"end": 3014,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 3032,
											"end": 3038,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 3056,
											"end": 3064,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 2913,
											"end": 3078,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2913,
											"end": 3078,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2913,
											"end": 3078,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2913,
											"end": 3078,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2913,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 2913,
											"end": 3078,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2913,
											"end": 3078,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2913,
											"end": 3078,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2913,
											"end": 3078,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2913,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 2913,
											"end": 3078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2913,
											"end": 3078,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 2913,
											"end": 3078,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2913,
											"end": 3078,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2913,
											"end": 3078,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2913,
											"end": 3078,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2913,
											"end": 3078,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2913,
											"end": 3078,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2913,
											"end": 3078,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2913,
											"end": 3078,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2913,
											"end": 3078,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2913,
											"end": 3078,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2913,
											"end": 3078,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2913,
											"end": 3078,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2913,
											"end": 3078,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2913,
											"end": 3078,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2913,
											"end": 3078,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2913,
											"end": 3078,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2913,
											"end": 3078,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2913,
											"end": 3078,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2913,
											"end": 3078,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2913,
											"end": 3078,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2913,
											"end": 3078,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2913,
											"end": 3078,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2913,
											"end": 3078,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2913,
											"end": 3078,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2913,
											"end": 3078,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2913,
											"end": 3078,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2913,
											"end": 3078,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2913,
											"end": 3078,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 2913,
											"end": 3078,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2913,
											"end": 3078,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2913,
											"end": 3078,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2913,
											"end": 3078,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2913,
											"end": 3078,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2913,
											"end": 3078,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2877,
											"end": 3088,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2877,
											"end": 3088,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2877,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 2877,
											"end": 3088,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2877,
											"end": 3088,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2877,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 2877,
											"end": 3088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2877,
											"end": 3088,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 2877,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2877,
											"end": 3088,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2877,
											"end": 3088,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2877,
											"end": 3088,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2877,
											"end": 3088,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2877,
											"end": 3088,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2877,
											"end": 3088,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2877,
											"end": 3088,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2877,
											"end": 3088,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2877,
											"end": 3088,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2877,
											"end": 3088,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 2877,
											"end": 3088,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 2877,
											"end": 3088,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2877,
											"end": 3088,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2877,
											"end": 3088,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2877,
											"end": 3088,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2877,
											"end": 3088,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2877,
											"end": 3088,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2877,
											"end": 3088,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2877,
											"end": 3088,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2877,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 2877,
											"end": 3088,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2877,
											"end": 3088,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2877,
											"end": 3088,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2877,
											"end": 3088,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2877,
											"end": 3088,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2877,
											"end": 3088,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2877,
											"end": 3088,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2877,
											"end": 3088,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 2877,
											"end": 3088,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2877,
											"end": 3088,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2877,
											"end": 3088,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2877,
											"end": 3088,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2877,
											"end": 3088,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2877,
											"end": 3088,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2877,
											"end": 3088,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2877,
											"end": 3088,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2877,
											"end": 3088,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2877,
											"end": 3088,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2877,
											"end": 3088,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2877,
											"end": 3088,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2877,
											"end": 3088,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2877,
											"end": 3088,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2877,
											"end": 3088,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2877,
											"end": 3088,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 2877,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 2877,
											"end": 3088,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2877,
											"end": 3088,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 2877,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2877,
											"end": 3088,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2877,
											"end": 3088,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2877,
											"end": 3088,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2877,
											"end": 3088,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 2877,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2877,
											"end": 3088,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 3088,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 3088,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 3088,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 3088,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3146,
											"end": 3153,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3146,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 3146,
											"end": 3275,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2587,
											"end": 2589,
											"name": "PUSH",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 3257,
											"end": 3258,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3272,
											"end": 3273,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3260,
											"end": 3274,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3260,
											"end": 3274,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3260,
											"end": 3274,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 3260,
											"end": 3274,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3260,
											"end": 3274,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 3260,
											"end": 3274,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3260,
											"end": 3274,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 3260,
											"end": 3274,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 3260,
											"end": 3274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3260,
											"end": 3274,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 3260,
											"end": 3274,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3260,
											"end": 3274,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 3260,
											"end": 3274,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3260,
											"end": 3274,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3260,
											"end": 3274,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3260,
											"end": 3274,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3260,
											"end": 3274,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3260,
											"end": 3274,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3260,
											"end": 3274,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3260,
											"end": 3274,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3260,
											"end": 3274,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3260,
											"end": 3274,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3260,
											"end": 3274,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3260,
											"end": 3274,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3260,
											"end": 3274,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3260,
											"end": 3274,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3260,
											"end": 3274,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3260,
											"end": 3274,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3260,
											"end": 3274,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3260,
											"end": 3274,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3260,
											"end": 3274,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 3260,
											"end": 3274,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3260,
											"end": 3274,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3260,
											"end": 3274,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3260,
											"end": 3274,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3260,
											"end": 3274,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3260,
											"end": 3274,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3260,
											"end": 3274,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3260,
											"end": 3274,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3260,
											"end": 3274,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3260,
											"end": 3274,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3260,
											"end": 3274,
											"name": "CALLDATACOPY",
											"source": 3
										},
										{
											"begin": 3260,
											"end": 3274,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3260,
											"end": 3274,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3260,
											"end": 3274,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3260,
											"end": 3274,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3260,
											"end": 3274,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3260,
											"end": 3274,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3260,
											"end": 3274,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3260,
											"end": 3274,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3260,
											"end": 3274,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 3260,
											"end": 3274,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3260,
											"end": 3274,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3146,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 3146,
											"end": 3275,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3146,
											"end": 3275,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 3146,
											"end": 3275,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3179,
											"end": 3185,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3168,
											"end": 3212,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3168,
											"end": 3212,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3168,
											"end": 3212,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3168,
											"end": 3212,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3168,
											"end": 3212,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3168,
											"end": 3212,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3168,
											"end": 3212,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3168,
											"end": 3212,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3168,
											"end": 3212,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 3168,
											"end": 3212,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3168,
											"end": 3212,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3168,
											"end": 3212,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 3168,
											"end": 3212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3168,
											"end": 3212,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 3168,
											"end": 3212,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3146,
											"end": 3275,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 3146,
											"end": 3275,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3275,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3275,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 3098,
											"end": 3275,
											"name": "SIGNEXTEND",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3275,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3275,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3275,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3275,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3275,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3275,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3275,
											"name": "SWAP7",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3275,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3275,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3275,
											"name": "SWAP8",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3275,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3275,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3275,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3275,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2829,
											"end": 3282,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2829,
											"end": 3282,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2570,
											"end": 3282,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2570,
											"end": 3282,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2570,
											"end": 3282,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2570,
											"end": 3282,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2570,
											"end": 3282,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2570,
											"end": 3282,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2570,
											"end": 3282,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2570,
											"end": 3282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6734,
											"end": 7210,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 6734,
											"end": 7210,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6830,
											"end": 6846,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6859,
											"end": 6871,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6873,
											"end": 6892,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 289,
											"end": 294,
											"name": "PUSH",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 6896,
											"end": 6918,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6896,
											"end": 6918,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6972,
											"end": 7015,
											"name": "PUSH",
											"source": 3,
											"value": "49146BDE"
										},
										{
											"begin": 6972,
											"end": 7015,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 6972,
											"end": 7015,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 7033,
											"end": 7040,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 7058,
											"end": 7063,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6932,
											"end": 7077,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6932,
											"end": 7077,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6932,
											"end": 7077,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 6932,
											"end": 7077,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6932,
											"end": 7077,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 6932,
											"end": 7077,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6932,
											"end": 7077,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6932,
											"end": 7077,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6932,
											"end": 7077,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 6932,
											"end": 7077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6932,
											"end": 7077,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 6932,
											"end": 7077,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6932,
											"end": 7077,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6932,
											"end": 7077,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6932,
											"end": 7077,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6932,
											"end": 7077,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6932,
											"end": 7077,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6932,
											"end": 7077,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6932,
											"end": 7077,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6932,
											"end": 7077,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6932,
											"end": 7077,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6932,
											"end": 7077,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6932,
											"end": 7077,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6932,
											"end": 7077,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6932,
											"end": 7077,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6932,
											"end": 7077,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6932,
											"end": 7077,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 6932,
											"end": 7077,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6932,
											"end": 7077,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6932,
											"end": 7077,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6932,
											"end": 7077,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6932,
											"end": 7077,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6932,
											"end": 7077,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6932,
											"end": 7077,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6932,
											"end": 7077,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6932,
											"end": 7077,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6932,
											"end": 7077,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6932,
											"end": 7077,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6932,
											"end": 7077,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 6932,
											"end": 7077,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6932,
											"end": 7077,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6932,
											"end": 7077,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6932,
											"end": 7077,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6932,
											"end": 7077,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6932,
											"end": 7077,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6896,
											"end": 7087,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6896,
											"end": 7087,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6896,
											"end": 7087,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 6896,
											"end": 7087,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6896,
											"end": 7087,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6896,
											"end": 7087,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 6896,
											"end": 7087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6896,
											"end": 7087,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 6896,
											"end": 7087,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6896,
											"end": 7087,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6896,
											"end": 7087,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6896,
											"end": 7087,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6896,
											"end": 7087,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6896,
											"end": 7087,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6896,
											"end": 7087,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6896,
											"end": 7087,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6896,
											"end": 7087,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6896,
											"end": 7087,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6896,
											"end": 7087,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 6896,
											"end": 7087,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 6896,
											"end": 7087,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6896,
											"end": 7087,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6896,
											"end": 7087,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6896,
											"end": 7087,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 6896,
											"end": 7087,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6896,
											"end": 7087,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6896,
											"end": 7087,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6896,
											"end": 7087,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 6896,
											"end": 7087,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 6896,
											"end": 7087,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6896,
											"end": 7087,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6896,
											"end": 7087,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6896,
											"end": 7087,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6896,
											"end": 7087,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6896,
											"end": 7087,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 6896,
											"end": 7087,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 6896,
											"end": 7087,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 6896,
											"end": 7087,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 6896,
											"end": 7087,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6896,
											"end": 7087,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6896,
											"end": 7087,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6896,
											"end": 7087,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6896,
											"end": 7087,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6896,
											"end": 7087,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6896,
											"end": 7087,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 6896,
											"end": 7087,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6896,
											"end": 7087,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6896,
											"end": 7087,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 6896,
											"end": 7087,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6896,
											"end": 7087,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6896,
											"end": 7087,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6896,
											"end": 7087,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6896,
											"end": 7087,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 6896,
											"end": 7087,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 6896,
											"end": 7087,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6896,
											"end": 7087,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 6896,
											"end": 7087,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6896,
											"end": 7087,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 6896,
											"end": 7087,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6896,
											"end": 7087,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6896,
											"end": 7087,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 6896,
											"end": 7087,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6896,
											"end": 7087,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6858,
											"end": 7087,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6858,
											"end": 7087,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6858,
											"end": 7087,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6858,
											"end": 7087,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7112,
											"end": 7119,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7112,
											"end": 7203,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 7112,
											"end": 7203,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2587,
											"end": 2589,
											"name": "PUSH",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 7112,
											"end": 7203,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 7112,
											"end": 7203,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7112,
											"end": 7203,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 7112,
											"end": 7203,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7145,
											"end": 7151,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7134,
											"end": 7161,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7134,
											"end": 7161,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7134,
											"end": 7161,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7134,
											"end": 7161,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7134,
											"end": 7161,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7134,
											"end": 7161,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7134,
											"end": 7161,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7134,
											"end": 7161,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7134,
											"end": 7161,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 7134,
											"end": 7161,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7134,
											"end": 7161,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7134,
											"end": 7161,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 7134,
											"end": 7161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7134,
											"end": 7161,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 7134,
											"end": 7161,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7112,
											"end": 7203,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 7112,
											"end": 7203,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7097,
											"end": 7203,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 7097,
											"end": 7203,
											"name": "SIGNEXTEND",
											"source": 3
										},
										{
											"begin": 7097,
											"end": 7203,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7097,
											"end": 7203,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6848,
											"end": 7210,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6848,
											"end": 7210,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6734,
											"end": 7210,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6734,
											"end": 7210,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6734,
											"end": 7210,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6734,
											"end": 7210,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6734,
											"end": 7210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 24332,
											"end": 24910,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 24332,
											"end": 24910,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 24478,
											"end": 24494,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 24507,
											"end": 24519,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 24521,
											"end": 24540,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 289,
											"end": 294,
											"name": "PUSH",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 24544,
											"end": 24566,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24544,
											"end": 24566,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 24620,
											"end": 24660,
											"name": "PUSH",
											"source": 3,
											"value": "5CFC9011"
										},
										{
											"begin": 24620,
											"end": 24660,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 24620,
											"end": 24660,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 24678,
											"end": 24683,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 24701,
											"end": 24707,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 24725,
											"end": 24733,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 24751,
											"end": 24763,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 24580,
											"end": 24777,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 24580,
											"end": 24777,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 24580,
											"end": 24777,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 24580,
											"end": 24777,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 24580,
											"end": 24777,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 24580,
											"end": 24777,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 24580,
											"end": 24777,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 24580,
											"end": 24777,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 24580,
											"end": 24777,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 24580,
											"end": 24777,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 24580,
											"end": 24777,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 24580,
											"end": 24777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 24580,
											"end": 24777,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 24580,
											"end": 24777,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 24580,
											"end": 24777,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 24580,
											"end": 24777,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 24580,
											"end": 24777,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 24580,
											"end": 24777,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 24580,
											"end": 24777,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 24580,
											"end": 24777,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 24580,
											"end": 24777,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 24580,
											"end": 24777,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 24580,
											"end": 24777,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 24580,
											"end": 24777,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 24580,
											"end": 24777,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 24580,
											"end": 24777,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 24580,
											"end": 24777,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 24580,
											"end": 24777,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24580,
											"end": 24777,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 24580,
											"end": 24777,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 24580,
											"end": 24777,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 24580,
											"end": 24777,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 24580,
											"end": 24777,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 24580,
											"end": 24777,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 24580,
											"end": 24777,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 24580,
											"end": 24777,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24580,
											"end": 24777,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 24580,
											"end": 24777,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 24580,
											"end": 24777,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 24580,
											"end": 24777,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 24580,
											"end": 24777,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 24580,
											"end": 24777,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 24580,
											"end": 24777,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 24580,
											"end": 24777,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 24580,
											"end": 24777,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 24580,
											"end": 24777,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 24580,
											"end": 24777,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 24544,
											"end": 24787,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 24544,
											"end": 24787,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 24544,
											"end": 24787,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 24544,
											"end": 24787,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 24544,
											"end": 24787,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 24544,
											"end": 24787,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 24544,
											"end": 24787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 24544,
											"end": 24787,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 24544,
											"end": 24787,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 24544,
											"end": 24787,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 24544,
											"end": 24787,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 24544,
											"end": 24787,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 24544,
											"end": 24787,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 24544,
											"end": 24787,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 24544,
											"end": 24787,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 24544,
											"end": 24787,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 24544,
											"end": 24787,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 24544,
											"end": 24787,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 24544,
											"end": 24787,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 24544,
											"end": 24787,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 24544,
											"end": 24787,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 24544,
											"end": 24787,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 24544,
											"end": 24787,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 24544,
											"end": 24787,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 24544,
											"end": 24787,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 24544,
											"end": 24787,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 24544,
											"end": 24787,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 24544,
											"end": 24787,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 24544,
											"end": 24787,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 24544,
											"end": 24787,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 24544,
											"end": 24787,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 24544,
											"end": 24787,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 24544,
											"end": 24787,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 24544,
											"end": 24787,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 24544,
											"end": 24787,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 24544,
											"end": 24787,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 24544,
											"end": 24787,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 24544,
											"end": 24787,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 24544,
											"end": 24787,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 24544,
											"end": 24787,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 24544,
											"end": 24787,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 24544,
											"end": 24787,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 24544,
											"end": 24787,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 24544,
											"end": 24787,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 24544,
											"end": 24787,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 24544,
											"end": 24787,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 24544,
											"end": 24787,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 24544,
											"end": 24787,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 24544,
											"end": 24787,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 24544,
											"end": 24787,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 24544,
											"end": 24787,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 24544,
											"end": 24787,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 24544,
											"end": 24787,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 24544,
											"end": 24787,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 24544,
											"end": 24787,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 24544,
											"end": 24787,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 24544,
											"end": 24787,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 24544,
											"end": 24787,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 24544,
											"end": 24787,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 24544,
											"end": 24787,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 24544,
											"end": 24787,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 24544,
											"end": 24787,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 24544,
											"end": 24787,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 24506,
											"end": 24787,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 24506,
											"end": 24787,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 24506,
											"end": 24787,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 24506,
											"end": 24787,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 24812,
											"end": 24819,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 24812,
											"end": 24903,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 24812,
											"end": 24903,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2587,
											"end": 2589,
											"name": "PUSH",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 24812,
											"end": 24903,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 24812,
											"end": 24903,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 24812,
											"end": 24903,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 24812,
											"end": 24903,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 24845,
											"end": 24851,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 24834,
											"end": 24861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 24834,
											"end": 24861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 24834,
											"end": 24861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 24834,
											"end": 24861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 24834,
											"end": 24861,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 24834,
											"end": 24861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 24834,
											"end": 24861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 24834,
											"end": 24861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 24834,
											"end": 24861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 24834,
											"end": 24861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 24834,
											"end": 24861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 24834,
											"end": 24861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 24834,
											"end": 24861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 24834,
											"end": 24861,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 24834,
											"end": 24861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 24812,
											"end": 24903,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 24812,
											"end": 24903,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 24797,
											"end": 24903,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 24797,
											"end": 24903,
											"name": "SIGNEXTEND",
											"source": 3
										},
										{
											"begin": 24797,
											"end": 24903,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 24797,
											"end": 24903,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 24496,
											"end": 24910,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 24496,
											"end": 24910,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 24332,
											"end": 24910,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 24332,
											"end": 24910,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 24332,
											"end": 24910,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 24332,
											"end": 24910,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 24332,
											"end": 24910,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 24332,
											"end": 24910,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 24332,
											"end": 24910,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2821,
											"end": 3146,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 2821,
											"end": 3146,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2953,
											"end": 2997,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 2953,
											"end": 2997,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 2953,
											"end": 2997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2953,
											"end": 2997,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 2953,
											"end": 2997,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3020,
											"end": 3139,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3020,
											"end": 3139,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3020,
											"end": 3139,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3020,
											"end": 3139,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3020,
											"end": 3139,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3020,
											"end": 3139,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3020,
											"end": 3139,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3020,
											"end": 3139,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3062,
											"end": 3081,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 3073,
											"end": 3080,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3062,
											"end": 3072,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3062,
											"end": 3081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3062,
											"end": 3081,
											"name": "tag",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 3062,
											"end": 3081,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3020,
											"end": 3139,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3020,
											"end": 3139,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3020,
											"end": 3139,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3020,
											"end": 3139,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 3129,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 3111,
											"end": 3123,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3125,
											"end": 3128,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 3095,
											"end": 3129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 3129,
											"name": "tag",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 3095,
											"end": 3129,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3020,
											"end": 3139,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3020,
											"end": 3139,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3020,
											"end": 3139,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3009,
											"end": 3139,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3009,
											"end": 3139,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2821,
											"end": 3146,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2821,
											"end": 3146,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2821,
											"end": 3146,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2821,
											"end": 3146,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2821,
											"end": 3146,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2821,
											"end": 3146,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 210,
											"end": 487,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 210,
											"end": 487,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 336,
											"end": 376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 336,
											"end": 376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 336,
											"end": 376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 336,
											"end": 376,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 336,
											"end": 376,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 414,
											"end": 430,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 388,
											"end": 394,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 388,
											"end": 411,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 388,
											"end": 411,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 388,
											"end": 430,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 388,
											"end": 430,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 388,
											"end": 430,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 388,
											"end": 430,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 388,
											"end": 430,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 388,
											"end": 430,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 388,
											"end": 430,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 388,
											"end": 430,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 388,
											"end": 430,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 388,
											"end": 430,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 388,
											"end": 430,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 465,
											"end": 480,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 440,
											"end": 446,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 440,
											"end": 462,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 440,
											"end": 462,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 440,
											"end": 480,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 440,
											"end": 480,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 440,
											"end": 480,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 440,
											"end": 480,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 440,
											"end": 480,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 440,
											"end": 480,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 440,
											"end": 480,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 440,
											"end": 480,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 440,
											"end": 480,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 440,
											"end": 480,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 440,
											"end": 480,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 210,
											"end": 487,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 210,
											"end": 487,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 210,
											"end": 487,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 210,
											"end": 487,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 210,
											"end": 487,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13629,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 13005,
											"end": 13629,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13161,
											"end": 13177,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13179,
											"end": 13199,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 13137,
											"end": 13142,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 765,
											"end": 766,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 742,
											"end": 747,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 742,
											"end": 754,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 742,
											"end": 754,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 742,
											"end": 754,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 742,
											"end": 761,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 742,
											"end": 761,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 742,
											"end": 761,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 742,
											"end": 766,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 742,
											"end": 766,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 742,
											"end": 766,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 742,
											"end": 803,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 742,
											"end": 803,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 742,
											"end": 803,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 742,
											"end": 803,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 742,
											"end": 803,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 802,
											"end": 803,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 770,
											"end": 775,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 770,
											"end": 782,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 770,
											"end": 782,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 770,
											"end": 782,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 770,
											"end": 798,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 770,
											"end": 798,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 770,
											"end": 798,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 770,
											"end": 803,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 770,
											"end": 803,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 770,
											"end": 803,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 742,
											"end": 803,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 742,
											"end": 803,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 738,
											"end": 883,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 738,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 738,
											"end": 883,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 368,
											"end": 375,
											"name": "PUSH",
											"source": 3,
											"value": "76A700"
										},
										{
											"begin": 819,
											"end": 824,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 819,
											"end": 831,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 819,
											"end": 831,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 819,
											"end": 831,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 819,
											"end": 847,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 819,
											"end": 847,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 819,
											"end": 872,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 819,
											"end": 872,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 819,
											"end": 872,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 819,
											"end": 872,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 819,
											"end": 872,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 819,
											"end": 872,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 819,
											"end": 872,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 819,
											"end": 872,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 819,
											"end": 872,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 819,
											"end": 872,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 819,
											"end": 872,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 738,
											"end": 883,
											"name": "tag",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 738,
											"end": 883,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13216,
											"end": 13228,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13230,
											"end": 13249,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 289,
											"end": 294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 13253,
											"end": 13275,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13253,
											"end": 13275,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 13296,
											"end": 13305,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 13369,
											"end": 13420,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "9DC711E0"
										},
										{
											"begin": 13369,
											"end": 13420,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 13369,
											"end": 13420,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 13438,
											"end": 13443,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 13329,
											"end": 13457,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 13329,
											"end": 13457,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 13329,
											"end": 13457,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 13329,
											"end": 13457,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13329,
											"end": 13457,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 13329,
											"end": 13457,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 13329,
											"end": 13457,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13329,
											"end": 13457,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 13329,
											"end": 13457,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13329,
											"end": 13457,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 13329,
											"end": 13457,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13329,
											"end": 13457,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 13329,
											"end": 13457,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 13329,
											"end": 13457,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 13329,
											"end": 13457,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13329,
											"end": 13457,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 13329,
											"end": 13457,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 13329,
											"end": 13457,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 13329,
											"end": 13457,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13329,
											"end": 13457,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 13329,
											"end": 13457,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13329,
											"end": 13457,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 13329,
											"end": 13457,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 13329,
											"end": 13457,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13329,
											"end": 13457,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13329,
											"end": 13457,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 13329,
											"end": 13457,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 13329,
											"end": 13457,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 13329,
											"end": 13457,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13329,
											"end": 13457,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13329,
											"end": 13457,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 13329,
											"end": 13457,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 13329,
											"end": 13457,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13329,
											"end": 13457,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 13329,
											"end": 13457,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13329,
											"end": 13457,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 13329,
											"end": 13457,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 13329,
											"end": 13457,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 13329,
											"end": 13457,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 13329,
											"end": 13457,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 13329,
											"end": 13457,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13329,
											"end": 13457,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13329,
											"end": 13457,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13329,
											"end": 13457,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13253,
											"end": 13467,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 13253,
											"end": 13467,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 13253,
											"end": 13467,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 13253,
											"end": 13467,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 13253,
											"end": 13467,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13253,
											"end": 13467,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 13253,
											"end": 13467,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13253,
											"end": 13467,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 13253,
											"end": 13467,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13253,
											"end": 13467,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13253,
											"end": 13467,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 13253,
											"end": 13467,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 13253,
											"end": 13467,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 13253,
											"end": 13467,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 13253,
											"end": 13467,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 13253,
											"end": 13467,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13253,
											"end": 13467,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 13253,
											"end": 13467,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 13253,
											"end": 13467,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 13253,
											"end": 13467,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 13253,
											"end": 13467,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 13253,
											"end": 13467,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13253,
											"end": 13467,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13253,
											"end": 13467,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13253,
											"end": 13467,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 13253,
											"end": 13467,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 13253,
											"end": 13467,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13253,
											"end": 13467,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13253,
											"end": 13467,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 13253,
											"end": 13467,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 13253,
											"end": 13467,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 13253,
											"end": 13467,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 13253,
											"end": 13467,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 13253,
											"end": 13467,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 13253,
											"end": 13467,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13253,
											"end": 13467,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 13253,
											"end": 13467,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 13253,
											"end": 13467,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 13253,
											"end": 13467,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 13253,
											"end": 13467,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13253,
											"end": 13467,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 13253,
											"end": 13467,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13253,
											"end": 13467,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13253,
											"end": 13467,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 13253,
											"end": 13467,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 13253,
											"end": 13467,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 13253,
											"end": 13467,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13253,
											"end": 13467,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 13253,
											"end": 13467,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 13253,
											"end": 13467,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13253,
											"end": 13467,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 13253,
											"end": 13467,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 13253,
											"end": 13467,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13253,
											"end": 13467,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 13253,
											"end": 13467,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 13253,
											"end": 13467,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13253,
											"end": 13467,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 13253,
											"end": 13467,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13253,
											"end": 13467,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 13253,
											"end": 13467,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 13253,
											"end": 13467,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13253,
											"end": 13467,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 13253,
											"end": 13467,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13253,
											"end": 13467,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13215,
											"end": 13467,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 13215,
											"end": 13467,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13215,
											"end": 13467,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 13215,
											"end": 13467,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13508,
											"end": 13515,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13508,
											"end": 13622,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 13508,
											"end": 13622,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2587,
											"end": 2589,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 13619,
											"end": 13620,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13508,
											"end": 13622,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 13508,
											"end": 13622,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13508,
											"end": 13622,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 13508,
											"end": 13622,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13541,
											"end": 13547,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 13530,
											"end": 13566,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 13530,
											"end": 13566,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 13530,
											"end": 13566,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13530,
											"end": 13566,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13530,
											"end": 13566,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 13530,
											"end": 13566,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13530,
											"end": 13566,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13530,
											"end": 13566,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13530,
											"end": 13566,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 13530,
											"end": 13566,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 13530,
											"end": 13566,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13530,
											"end": 13566,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 13530,
											"end": 13566,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13530,
											"end": 13566,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 13530,
											"end": 13566,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13508,
											"end": 13622,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 13508,
											"end": 13622,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13477,
											"end": 13622,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13477,
											"end": 13622,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 13477,
											"end": 13622,
											"modifierDepth": 1,
											"name": "SIGNEXTEND",
											"source": 3
										},
										{
											"begin": 13477,
											"end": 13622,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 13477,
											"end": 13622,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13477,
											"end": 13622,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 13477,
											"end": 13622,
											"modifierDepth": 1,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 13477,
											"end": 13622,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13477,
											"end": 13622,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13477,
											"end": 13622,
											"modifierDepth": 1,
											"name": "SWAP7",
											"source": 3
										},
										{
											"begin": 13477,
											"end": 13622,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13477,
											"end": 13622,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13477,
											"end": 13622,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13205,
											"end": 13629,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13205,
											"end": 13629,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13005,
											"end": 13629,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13005,
											"end": 13629,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 13005,
											"end": 13629,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13005,
											"end": 13629,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 13005,
											"end": 13629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4251,
											"end": 4361,
											"name": "tag",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 4251,
											"end": 4361,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4311,
											"end": 4318,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4337,
											"end": 4345,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 4337,
											"end": 4354,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4346,
											"end": 4353,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4337,
											"end": 4354,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 4337,
											"end": 4354,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4337,
											"end": 4354,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 4337,
											"end": 4354,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4337,
											"end": 4354,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 4337,
											"end": 4354,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4337,
											"end": 4354,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 4337,
											"end": 4354,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 4337,
											"end": 4354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4337,
											"end": 4354,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 4337,
											"end": 4354,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4337,
											"end": 4354,
											"name": "tag",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 4337,
											"end": 4354,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4337,
											"end": 4354,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 4337,
											"end": 4354,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4337,
											"end": 4354,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 4337,
											"end": 4354,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4337,
											"end": 4354,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 4337,
											"end": 4354,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4337,
											"end": 4354,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 4337,
											"end": 4354,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 4337,
											"end": 4354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4337,
											"end": 4354,
											"name": "tag",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 4337,
											"end": 4354,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4337,
											"end": 4354,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 4337,
											"end": 4354,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4337,
											"end": 4354,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4337,
											"end": 4354,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4337,
											"end": 4354,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4337,
											"end": 4354,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4337,
											"end": 4354,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4337,
											"end": 4354,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4337,
											"end": 4354,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4337,
											"end": 4354,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4337,
											"end": 4354,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4337,
											"end": 4354,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4337,
											"end": 4354,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4337,
											"end": 4354,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4330,
											"end": 4354,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4330,
											"end": 4354,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4251,
											"end": 4361,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4251,
											"end": 4361,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4251,
											"end": 4361,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4251,
											"end": 4361,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5111,
											"end": 5525,
											"name": "tag",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 5111,
											"end": 5525,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5228,
											"end": 5272,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 5228,
											"end": 5272,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 5228,
											"end": 5272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5228,
											"end": 5272,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 5228,
											"end": 5272,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5304,
											"end": 5328,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 5288,
											"end": 5328,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5288,
											"end": 5328,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5288,
											"end": 5328,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 5288,
											"end": 5328,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5288,
											"end": 5328,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 5288,
											"end": 5328,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5288,
											"end": 5328,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 5288,
											"end": 5328,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 5288,
											"end": 5328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5288,
											"end": 5328,
											"name": "tag",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 5288,
											"end": 5328,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5288,
											"end": 5328,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 5288,
											"end": 5328,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5288,
											"end": 5300,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5288,
											"end": 5328,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5288,
											"end": 5328,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5288,
											"end": 5328,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 5288,
											"end": 5328,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5288,
											"end": 5328,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 5288,
											"end": 5328,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5288,
											"end": 5328,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 5288,
											"end": 5328,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 5288,
											"end": 5328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5288,
											"end": 5328,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 5288,
											"end": 5328,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5288,
											"end": 5328,
											"name": "tag",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 5288,
											"end": 5328,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5288,
											"end": 5328,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5284,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 5284,
											"end": 5519,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5376,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5344,
											"end": 5352,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5344,
											"end": 5363,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5344,
											"end": 5363,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5344,
											"end": 5376,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5344,
											"end": 5376,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5344,
											"end": 5376,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5344,
											"end": 5376,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5344,
											"end": 5376,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5344,
											"end": 5376,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5344,
											"end": 5376,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5344,
											"end": 5376,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5344,
											"end": 5376,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5344,
											"end": 5376,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5344,
											"end": 5376,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5284,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 5284,
											"end": 5519,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5284,
											"end": 5519,
											"name": "tag",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 5284,
											"end": 5519,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5413,
											"end": 5449,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5397,
											"end": 5449,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5397,
											"end": 5449,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5397,
											"end": 5449,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 5397,
											"end": 5449,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5397,
											"end": 5449,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 5397,
											"end": 5449,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5397,
											"end": 5449,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 5397,
											"end": 5449,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 5397,
											"end": 5449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5397,
											"end": 5449,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 5397,
											"end": 5449,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5397,
											"end": 5449,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 5397,
											"end": 5449,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5397,
											"end": 5409,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5397,
											"end": 5449,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5397,
											"end": 5449,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5397,
											"end": 5449,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 5397,
											"end": 5449,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5397,
											"end": 5449,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 5397,
											"end": 5449,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5397,
											"end": 5449,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 5397,
											"end": 5449,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 5397,
											"end": 5449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5397,
											"end": 5449,
											"name": "tag",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 5397,
											"end": 5449,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5397,
											"end": 5449,
											"name": "tag",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 5397,
											"end": 5449,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5397,
											"end": 5449,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 5393,
											"end": 5519,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5498,
											"end": 5508,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5465,
											"end": 5473,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5465,
											"end": 5495,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 5465,
											"end": 5495,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5465,
											"end": 5508,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5465,
											"end": 5508,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5465,
											"end": 5508,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5465,
											"end": 5508,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5465,
											"end": 5508,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5465,
											"end": 5508,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5465,
											"end": 5508,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5465,
											"end": 5508,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5465,
											"end": 5508,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5465,
											"end": 5508,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5465,
											"end": 5508,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5519,
											"name": "tag",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 5393,
											"end": 5519,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5284,
											"end": 5519,
											"name": "tag",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 5284,
											"end": 5519,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5111,
											"end": 5525,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5111,
											"end": 5525,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5111,
											"end": 5525,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5111,
											"end": 5525,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5111,
											"end": 5525,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "49"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "140"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "127"
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "140"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "55"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "120"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "141"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "104"
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "141"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "104"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "127"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 841,
											"end": 958,
											"name": "tag",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 841,
											"end": 958,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 950,
											"end": 951,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 947,
											"end": 948,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 940,
											"end": 952,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 964,
											"end": 1066,
											"name": "tag",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 964,
											"end": 1066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1005,
											"end": 1011,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1056,
											"end": 1058,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1052,
											"end": 1059,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 1047,
											"end": 1049,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1040,
											"end": 1045,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1032,
											"end": 1060,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1022,
											"end": 1060,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1022,
											"end": 1060,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 964,
											"end": 1066,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 964,
											"end": 1066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 964,
											"end": 1066,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 964,
											"end": 1066,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1252,
											"name": "tag",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 1072,
											"end": 1252,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1120,
											"end": 1197,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1117,
											"end": 1118,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1110,
											"end": 1198,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1217,
											"end": 1221,
											"name": "PUSH",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 1214,
											"end": 1215,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1207,
											"end": 1222,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1241,
											"end": 1245,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1238,
											"end": 1239,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1231,
											"end": 1246,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1258,
											"end": 1539,
											"name": "tag",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 1258,
											"end": 1539,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 1363,
											"end": 1367,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 1341,
											"end": 1368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1368,
											"name": "tag",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 1341,
											"end": 1368,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1333,
											"end": 1339,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1369,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1471,
											"end": 1477,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1459,
											"end": 1469,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1456,
											"end": 1478,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1435,
											"end": 1453,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1423,
											"end": 1433,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1420,
											"end": 1454,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1417,
											"end": 1479,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 1414,
											"end": 1502,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1414,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 1414,
											"end": 1502,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1482,
											"end": 1500,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 1482,
											"end": 1500,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 1482,
											"end": 1500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1482,
											"end": 1500,
											"name": "tag",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 1482,
											"end": 1500,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1414,
											"end": 1502,
											"name": "tag",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 1414,
											"end": 1502,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1522,
											"end": 1532,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1518,
											"end": 1520,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1511,
											"end": 1533,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1301,
											"end": 1539,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1258,
											"end": 1539,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1258,
											"end": 1539,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1258,
											"end": 1539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1545,
											"end": 1674,
											"name": "tag",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 1545,
											"end": 1674,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1579,
											"end": 1585,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1606,
											"end": 1626,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 1606,
											"end": 1626,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 1606,
											"end": 1626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1606,
											"end": 1626,
											"name": "tag",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 1606,
											"end": 1626,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1596,
											"end": 1626,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1596,
											"end": 1626,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1635,
											"end": 1668,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 1663,
											"end": 1667,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1655,
											"end": 1661,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1635,
											"end": 1668,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 1635,
											"end": 1668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1635,
											"end": 1668,
											"name": "tag",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 1635,
											"end": 1668,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1545,
											"end": 1674,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1545,
											"end": 1674,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1545,
											"end": 1674,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1545,
											"end": 1674,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1680,
											"end": 2000,
											"name": "tag",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 1680,
											"end": 2000,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1766,
											"end": 1770,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1856,
											"end": 1874,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1848,
											"end": 1854,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1845,
											"end": 1875,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1842,
											"end": 1898,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1842,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 1842,
											"end": 1898,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1878,
											"end": 1896,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 1878,
											"end": 1896,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 1878,
											"end": 1896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1878,
											"end": 1896,
											"name": "tag",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 1878,
											"end": 1896,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1842,
											"end": 1898,
											"name": "tag",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 1842,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1928,
											"end": 1932,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1920,
											"end": 1926,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1916,
											"end": 1933,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1908,
											"end": 1933,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1908,
											"end": 1933,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1988,
											"end": 1992,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1982,
											"end": 1986,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1978,
											"end": 1993,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1970,
											"end": 1993,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1970,
											"end": 1993,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1680,
											"end": 2000,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1680,
											"end": 2000,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1680,
											"end": 2000,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1680,
											"end": 2000,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2006,
											"end": 2123,
											"name": "tag",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 2006,
											"end": 2123,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2115,
											"end": 2116,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2112,
											"end": 2113,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2105,
											"end": 2117,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2129,
											"end": 2246,
											"name": "tag",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 2129,
											"end": 2246,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2238,
											"end": 2239,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2235,
											"end": 2236,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2228,
											"end": 2240,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2252,
											"end": 2559,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 2252,
											"end": 2559,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2313,
											"end": 2317,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2403,
											"end": 2421,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2395,
											"end": 2401,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2392,
											"end": 2422,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2389,
											"end": 2445,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2389,
											"end": 2445,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 2389,
											"end": 2445,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2425,
											"end": 2443,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 2425,
											"end": 2443,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 2425,
											"end": 2443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2425,
											"end": 2443,
											"name": "tag",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 2425,
											"end": 2443,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2389,
											"end": 2445,
											"name": "tag",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 2389,
											"end": 2445,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2463,
											"end": 2492,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 2485,
											"end": 2491,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2463,
											"end": 2492,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 2463,
											"end": 2492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2463,
											"end": 2492,
											"name": "tag",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 2463,
											"end": 2492,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2455,
											"end": 2492,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2455,
											"end": 2492,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2547,
											"end": 2551,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2541,
											"end": 2545,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2537,
											"end": 2552,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2529,
											"end": 2552,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2529,
											"end": 2552,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2252,
											"end": 2559,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2252,
											"end": 2559,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2252,
											"end": 2559,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2252,
											"end": 2559,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2565,
											"end": 2711,
											"name": "tag",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 2565,
											"end": 2711,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2662,
											"end": 2668,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2657,
											"end": 2660,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2652,
											"end": 2655,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2639,
											"end": 2669,
											"name": "CALLDATACOPY",
											"source": 7
										},
										{
											"begin": 2703,
											"end": 2704,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2694,
											"end": 2700,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2689,
											"end": 2692,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2685,
											"end": 2701,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2678,
											"end": 2705,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2565,
											"end": 2711,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2565,
											"end": 2711,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2565,
											"end": 2711,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2565,
											"end": 2711,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2717,
											"end": 3140,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 2717,
											"end": 3140,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2794,
											"end": 2799,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2819,
											"end": 2884,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 2835,
											"end": 2883,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 2876,
											"end": 2882,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2835,
											"end": 2883,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 2835,
											"end": 2883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2835,
											"end": 2883,
											"name": "tag",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 2835,
											"end": 2883,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2819,
											"end": 2884,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 2819,
											"end": 2884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2819,
											"end": 2884,
											"name": "tag",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 2819,
											"end": 2884,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2810,
											"end": 2884,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2810,
											"end": 2884,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2907,
											"end": 2913,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2900,
											"end": 2905,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2893,
											"end": 2914,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2945,
											"end": 2949,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2938,
											"end": 2943,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2934,
											"end": 2950,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2983,
											"end": 2986,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2974,
											"end": 2980,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2969,
											"end": 2972,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2965,
											"end": 2981,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2962,
											"end": 2987,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2959,
											"end": 3071,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2959,
											"end": 3071,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 2959,
											"end": 3071,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2990,
											"end": 3069,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 2990,
											"end": 3069,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 2990,
											"end": 3069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2990,
											"end": 3069,
											"name": "tag",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 2990,
											"end": 3069,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2959,
											"end": 3071,
											"name": "tag",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 2959,
											"end": 3071,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3080,
											"end": 3134,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 3127,
											"end": 3133,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3122,
											"end": 3125,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3117,
											"end": 3120,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3080,
											"end": 3134,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 3080,
											"end": 3134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3080,
											"end": 3134,
											"name": "tag",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 3080,
											"end": 3134,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2800,
											"end": 3140,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2717,
											"end": 3140,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 2717,
											"end": 3140,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2717,
											"end": 3140,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2717,
											"end": 3140,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2717,
											"end": 3140,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2717,
											"end": 3140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3159,
											"end": 3497,
											"name": "tag",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 3159,
											"end": 3497,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3214,
											"end": 3219,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3263,
											"end": 3266,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3256,
											"end": 3260,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3248,
											"end": 3254,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3244,
											"end": 3261,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3240,
											"end": 3267,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3230,
											"end": 3352,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 3230,
											"end": 3352,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3271,
											"end": 3350,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 3271,
											"end": 3350,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 3271,
											"end": 3350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3271,
											"end": 3350,
											"name": "tag",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 3271,
											"end": 3350,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3230,
											"end": 3352,
											"name": "tag",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 3230,
											"end": 3352,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3388,
											"end": 3394,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3375,
											"end": 3395,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3491,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 3487,
											"end": 3490,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3479,
											"end": 3485,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3472,
											"end": 3476,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3464,
											"end": 3470,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3460,
											"end": 3477,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3491,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 3413,
											"end": 3491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3491,
											"name": "tag",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 3413,
											"end": 3491,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3404,
											"end": 3491,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3404,
											"end": 3491,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3220,
											"end": 3497,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3159,
											"end": 3497,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3159,
											"end": 3497,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3159,
											"end": 3497,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3159,
											"end": 3497,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3159,
											"end": 3497,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3518,
											"end": 4460,
											"name": "tag",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 3518,
											"end": 4460,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3628,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3648,
											"end": 3738,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 3664,
											"end": 3737,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 3730,
											"end": 3736,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3664,
											"end": 3737,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 3664,
											"end": 3737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3664,
											"end": 3737,
											"name": "tag",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 3664,
											"end": 3737,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3648,
											"end": 3738,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 3648,
											"end": 3738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3648,
											"end": 3738,
											"name": "tag",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 3648,
											"end": 3738,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3639,
											"end": 3738,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3639,
											"end": 3738,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3758,
											"end": 3763,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3787,
											"end": 3793,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3780,
											"end": 3785,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3773,
											"end": 3794,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3821,
											"end": 3825,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3814,
											"end": 3819,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3810,
											"end": 3826,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3803,
											"end": 3826,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3803,
											"end": 3826,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3874,
											"end": 3878,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3866,
											"end": 3872,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3862,
											"end": 3879,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3854,
											"end": 3860,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3850,
											"end": 3880,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3903,
											"end": 3906,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3895,
											"end": 3901,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3892,
											"end": 3907,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3889,
											"end": 4011,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3889,
											"end": 4011,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 3889,
											"end": 4011,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3922,
											"end": 4001,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 3922,
											"end": 4001,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 3922,
											"end": 4001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3922,
											"end": 4001,
											"name": "tag",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 3922,
											"end": 4001,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3889,
											"end": 4011,
											"name": "tag",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 3889,
											"end": 4011,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4037,
											"end": 4043,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4020,
											"end": 4454,
											"name": "tag",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 4020,
											"end": 4454,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4054,
											"end": 4060,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4049,
											"end": 4052,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4046,
											"end": 4061,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4020,
											"end": 4454,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4020,
											"end": 4454,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 4020,
											"end": 4454,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4143,
											"end": 4146,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4130,
											"end": 4147,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 4179,
											"end": 4197,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4163,
											"end": 4198,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4160,
											"end": 4282,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4160,
											"end": 4282,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 4160,
											"end": 4282,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4201,
											"end": 4280,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 4201,
											"end": 4280,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 4201,
											"end": 4280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4201,
											"end": 4280,
											"name": "tag",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 4201,
											"end": 4280,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4160,
											"end": 4282,
											"name": "tag",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 4160,
											"end": 4282,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4325,
											"end": 4336,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4317,
											"end": 4323,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4313,
											"end": 4337,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4363,
											"end": 4409,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 4405,
											"end": 4408,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 4393,
											"end": 4403,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4363,
											"end": 4409,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 4363,
											"end": 4409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4363,
											"end": 4409,
											"name": "tag",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 4363,
											"end": 4409,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4358,
											"end": 4361,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4351,
											"end": 4410,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4439,
											"end": 4443,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4434,
											"end": 4437,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4430,
											"end": 4444,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4423,
											"end": 4444,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 4423,
											"end": 4444,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4096,
											"end": 4454,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4096,
											"end": 4454,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4080,
											"end": 4084,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4075,
											"end": 4078,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4071,
											"end": 4085,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4064,
											"end": 4085,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4064,
											"end": 4085,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4020,
											"end": 4454,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 4020,
											"end": 4454,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4020,
											"end": 4454,
											"name": "tag",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 4020,
											"end": 4454,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4024,
											"end": 4045,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3629,
											"end": 4460,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3629,
											"end": 4460,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3518,
											"end": 4460,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3518,
											"end": 4460,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3518,
											"end": 4460,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3518,
											"end": 4460,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3518,
											"end": 4460,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3518,
											"end": 4460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4481,
											"end": 4869,
											"name": "tag",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 4481,
											"end": 4869,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4561,
											"end": 4566,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4610,
											"end": 4613,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4603,
											"end": 4607,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 4595,
											"end": 4601,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4591,
											"end": 4608,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4587,
											"end": 4614,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4577,
											"end": 4699,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 4577,
											"end": 4699,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4618,
											"end": 4697,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 4618,
											"end": 4697,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 4618,
											"end": 4697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4618,
											"end": 4697,
											"name": "tag",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 4618,
											"end": 4697,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4577,
											"end": 4699,
											"name": "tag",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 4577,
											"end": 4699,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4735,
											"end": 4741,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4722,
											"end": 4742,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 4760,
											"end": 4863,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 4859,
											"end": 4862,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4851,
											"end": 4857,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4844,
											"end": 4848,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4836,
											"end": 4842,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4832,
											"end": 4849,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4760,
											"end": 4863,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 4760,
											"end": 4863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4760,
											"end": 4863,
											"name": "tag",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 4760,
											"end": 4863,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4751,
											"end": 4863,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4751,
											"end": 4863,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4567,
											"end": 4869,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4481,
											"end": 4869,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4481,
											"end": 4869,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4481,
											"end": 4869,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4481,
											"end": 4869,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4481,
											"end": 4869,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4875,
											"end": 5577,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 4875,
											"end": 5577,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4977,
											"end": 4983,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4985,
											"end": 4991,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5034,
											"end": 5036,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5022,
											"end": 5031,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5013,
											"end": 5020,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5009,
											"end": 5032,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5005,
											"end": 5037,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 5002,
											"end": 5121,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5002,
											"end": 5121,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 5002,
											"end": 5121,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5040,
											"end": 5119,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 5040,
											"end": 5119,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 5040,
											"end": 5119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5040,
											"end": 5119,
											"name": "tag",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 5040,
											"end": 5119,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5002,
											"end": 5121,
											"name": "tag",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 5002,
											"end": 5121,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5160,
											"end": 5161,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5185,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 5230,
											"end": 5237,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5221,
											"end": 5227,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5210,
											"end": 5219,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5206,
											"end": 5228,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5185,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 5185,
											"end": 5238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5185,
											"end": 5238,
											"name": "tag",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 5185,
											"end": 5238,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5175,
											"end": 5238,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5175,
											"end": 5238,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5131,
											"end": 5248,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5315,
											"end": 5317,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5304,
											"end": 5313,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5300,
											"end": 5318,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5287,
											"end": 5319,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 5346,
											"end": 5364,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5338,
											"end": 5344,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5335,
											"end": 5365,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5332,
											"end": 5449,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5332,
											"end": 5449,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 5332,
											"end": 5449,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5368,
											"end": 5447,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 5368,
											"end": 5447,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 5368,
											"end": 5447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5368,
											"end": 5447,
											"name": "tag",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 5368,
											"end": 5447,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5332,
											"end": 5449,
											"name": "tag",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 5332,
											"end": 5449,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5473,
											"end": 5560,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 5552,
											"end": 5559,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5543,
											"end": 5549,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5532,
											"end": 5541,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5528,
											"end": 5550,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5473,
											"end": 5560,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 5473,
											"end": 5560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5473,
											"end": 5560,
											"name": "tag",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 5473,
											"end": 5560,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5463,
											"end": 5560,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5463,
											"end": 5560,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5258,
											"end": 5570,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4875,
											"end": 5577,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4875,
											"end": 5577,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4875,
											"end": 5577,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4875,
											"end": 5577,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4875,
											"end": 5577,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4875,
											"end": 5577,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5583,
											"end": 5673,
											"name": "tag",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 5583,
											"end": 5673,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5618,
											"end": 5625,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5661,
											"end": 5666,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5658,
											"end": 5659,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 5647,
											"end": 5667,
											"name": "SIGNEXTEND",
											"source": 7
										},
										{
											"begin": 5636,
											"end": 5667,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5636,
											"end": 5667,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5583,
											"end": 5673,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5583,
											"end": 5673,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5583,
											"end": 5673,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5583,
											"end": 5673,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5679,
											"end": 5791,
											"name": "tag",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 5679,
											"end": 5791,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5762,
											"end": 5784,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 5778,
											"end": 5783,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5762,
											"end": 5784,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 5762,
											"end": 5784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5762,
											"end": 5784,
											"name": "tag",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 5762,
											"end": 5784,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5757,
											"end": 5760,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5750,
											"end": 5785,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5679,
											"end": 5791,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5679,
											"end": 5791,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5679,
											"end": 5791,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5797,
											"end": 6011,
											"name": "tag",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 5797,
											"end": 6011,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5886,
											"end": 5890,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5924,
											"end": 5926,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5913,
											"end": 5922,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5909,
											"end": 5927,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5901,
											"end": 5927,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5901,
											"end": 5927,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5937,
											"end": 6004,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 6001,
											"end": 6002,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5990,
											"end": 5999,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5986,
											"end": 6003,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5977,
											"end": 5983,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5937,
											"end": 6004,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 5937,
											"end": 6004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5937,
											"end": 6004,
											"name": "tag",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 5937,
											"end": 6004,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5797,
											"end": 6011,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5797,
											"end": 6011,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5797,
											"end": 6011,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5797,
											"end": 6011,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5797,
											"end": 6011,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6017,
											"end": 6135,
											"name": "tag",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 6017,
											"end": 6135,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6088,
											"end": 6110,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 6104,
											"end": 6109,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6088,
											"end": 6110,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 6088,
											"end": 6110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6088,
											"end": 6110,
											"name": "tag",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 6088,
											"end": 6110,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6081,
											"end": 6086,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6078,
											"end": 6111,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 6068,
											"end": 6129,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 6068,
											"end": 6129,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6125,
											"end": 6126,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6122,
											"end": 6123,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6115,
											"end": 6127,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6068,
											"end": 6129,
											"name": "tag",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 6068,
											"end": 6129,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6017,
											"end": 6135,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6017,
											"end": 6135,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6141,
											"end": 6276,
											"name": "tag",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 6141,
											"end": 6276,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6185,
											"end": 6190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6223,
											"end": 6229,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6210,
											"end": 6230,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 6201,
											"end": 6230,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6201,
											"end": 6230,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6239,
											"end": 6270,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 6264,
											"end": 6269,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6239,
											"end": 6270,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 6239,
											"end": 6270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6239,
											"end": 6270,
											"name": "tag",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 6239,
											"end": 6270,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6141,
											"end": 6276,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6141,
											"end": 6276,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6141,
											"end": 6276,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6141,
											"end": 6276,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6141,
											"end": 6276,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6282,
											"end": 6897,
											"name": "tag",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 6282,
											"end": 6897,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6357,
											"end": 6363,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6365,
											"end": 6371,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6373,
											"end": 6379,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6422,
											"end": 6424,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 6410,
											"end": 6419,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6401,
											"end": 6408,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6397,
											"end": 6420,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6393,
											"end": 6425,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 6390,
											"end": 6509,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6390,
											"end": 6509,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 6390,
											"end": 6509,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6428,
											"end": 6507,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 6428,
											"end": 6507,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 6428,
											"end": 6507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6428,
											"end": 6507,
											"name": "tag",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 6428,
											"end": 6507,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6390,
											"end": 6509,
											"name": "tag",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 6390,
											"end": 6509,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6548,
											"end": 6549,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6573,
											"end": 6626,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 6618,
											"end": 6625,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6609,
											"end": 6615,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6598,
											"end": 6607,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 6594,
											"end": 6616,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6573,
											"end": 6626,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 6573,
											"end": 6626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6573,
											"end": 6626,
											"name": "tag",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 6573,
											"end": 6626,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6563,
											"end": 6626,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6563,
											"end": 6626,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6519,
											"end": 6636,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6675,
											"end": 6677,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6701,
											"end": 6754,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 6746,
											"end": 6753,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6737,
											"end": 6743,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6726,
											"end": 6735,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 6722,
											"end": 6744,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6701,
											"end": 6754,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 6701,
											"end": 6754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6701,
											"end": 6754,
											"name": "tag",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 6701,
											"end": 6754,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6691,
											"end": 6754,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6691,
											"end": 6754,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6646,
											"end": 6764,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6803,
											"end": 6805,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6829,
											"end": 6880,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 6872,
											"end": 6879,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6863,
											"end": 6869,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6852,
											"end": 6861,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 6848,
											"end": 6870,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6829,
											"end": 6880,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 6829,
											"end": 6880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6829,
											"end": 6880,
											"name": "tag",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 6829,
											"end": 6880,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6819,
											"end": 6880,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6819,
											"end": 6880,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6774,
											"end": 6890,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6282,
											"end": 6897,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6282,
											"end": 6897,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6282,
											"end": 6897,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6282,
											"end": 6897,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6282,
											"end": 6897,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6282,
											"end": 6897,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6903,
											"end": 6979,
											"name": "tag",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 6903,
											"end": 6979,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6939,
											"end": 6946,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6968,
											"end": 6973,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6957,
											"end": 6973,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6957,
											"end": 6973,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6903,
											"end": 6979,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6903,
											"end": 6979,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6903,
											"end": 6979,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6903,
											"end": 6979,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6985,
											"end": 7100,
											"name": "tag",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 6985,
											"end": 7100,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7070,
											"end": 7093,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 7087,
											"end": 7092,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7070,
											"end": 7093,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 7070,
											"end": 7093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7070,
											"end": 7093,
											"name": "tag",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 7070,
											"end": 7093,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7065,
											"end": 7068,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7058,
											"end": 7094,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6985,
											"end": 7100,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6985,
											"end": 7100,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6985,
											"end": 7100,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7106,
											"end": 7324,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 7106,
											"end": 7324,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7197,
											"end": 7201,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7235,
											"end": 7237,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7224,
											"end": 7233,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7220,
											"end": 7238,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7212,
											"end": 7238,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7212,
											"end": 7238,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7248,
											"end": 7317,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 7314,
											"end": 7315,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7303,
											"end": 7312,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7299,
											"end": 7316,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7290,
											"end": 7296,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7248,
											"end": 7317,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 7248,
											"end": 7317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7248,
											"end": 7317,
											"name": "tag",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 7248,
											"end": 7317,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7106,
											"end": 7324,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7106,
											"end": 7324,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7106,
											"end": 7324,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7106,
											"end": 7324,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7106,
											"end": 7324,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7330,
											"end": 7638,
											"name": "tag",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 7330,
											"end": 7638,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7392,
											"end": 7396,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7482,
											"end": 7500,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7474,
											"end": 7480,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7471,
											"end": 7501,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 7468,
											"end": 7524,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7468,
											"end": 7524,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 7468,
											"end": 7524,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7504,
											"end": 7522,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 7504,
											"end": 7522,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 7504,
											"end": 7522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7504,
											"end": 7522,
											"name": "tag",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 7504,
											"end": 7522,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7468,
											"end": 7524,
											"name": "tag",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 7468,
											"end": 7524,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7542,
											"end": 7571,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 7564,
											"end": 7570,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7542,
											"end": 7571,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 7542,
											"end": 7571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7542,
											"end": 7571,
											"name": "tag",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 7542,
											"end": 7571,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7534,
											"end": 7571,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7534,
											"end": 7571,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7626,
											"end": 7630,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7620,
											"end": 7624,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7616,
											"end": 7631,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7608,
											"end": 7631,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7608,
											"end": 7631,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7330,
											"end": 7638,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7330,
											"end": 7638,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7330,
											"end": 7638,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7330,
											"end": 7638,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7644,
											"end": 8069,
											"name": "tag",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 7644,
											"end": 8069,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7722,
											"end": 7727,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7747,
											"end": 7813,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 7763,
											"end": 7812,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 7805,
											"end": 7811,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7763,
											"end": 7812,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 7763,
											"end": 7812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7763,
											"end": 7812,
											"name": "tag",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 7763,
											"end": 7812,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7747,
											"end": 7813,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 7747,
											"end": 7813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7747,
											"end": 7813,
											"name": "tag",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 7747,
											"end": 7813,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7738,
											"end": 7813,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7738,
											"end": 7813,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7836,
											"end": 7842,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7829,
											"end": 7834,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7822,
											"end": 7843,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7874,
											"end": 7878,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7867,
											"end": 7872,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7863,
											"end": 7879,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7912,
											"end": 7915,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7903,
											"end": 7909,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7898,
											"end": 7901,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7894,
											"end": 7910,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7891,
											"end": 7916,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 7888,
											"end": 8000,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7888,
											"end": 8000,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 7888,
											"end": 8000,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7919,
											"end": 7998,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 7919,
											"end": 7998,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 7919,
											"end": 7998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7919,
											"end": 7998,
											"name": "tag",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 7919,
											"end": 7998,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7888,
											"end": 8000,
											"name": "tag",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 7888,
											"end": 8000,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8009,
											"end": 8063,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 8056,
											"end": 8062,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8051,
											"end": 8054,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8046,
											"end": 8049,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8009,
											"end": 8063,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 8009,
											"end": 8063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8009,
											"end": 8063,
											"name": "tag",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 8009,
											"end": 8063,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7728,
											"end": 8069,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7644,
											"end": 8069,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7644,
											"end": 8069,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7644,
											"end": 8069,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7644,
											"end": 8069,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7644,
											"end": 8069,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7644,
											"end": 8069,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8089,
											"end": 8429,
											"name": "tag",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 8089,
											"end": 8429,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8145,
											"end": 8150,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8194,
											"end": 8197,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8187,
											"end": 8191,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 8179,
											"end": 8185,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8175,
											"end": 8192,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8171,
											"end": 8198,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 8161,
											"end": 8283,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 8161,
											"end": 8283,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8202,
											"end": 8281,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 8202,
											"end": 8281,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 8202,
											"end": 8281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8202,
											"end": 8281,
											"name": "tag",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 8202,
											"end": 8281,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8161,
											"end": 8283,
											"name": "tag",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 8161,
											"end": 8283,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8319,
											"end": 8325,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8306,
											"end": 8326,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 8344,
											"end": 8423,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 8419,
											"end": 8422,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8411,
											"end": 8417,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8404,
											"end": 8408,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8396,
											"end": 8402,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 8392,
											"end": 8409,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8344,
											"end": 8423,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 8344,
											"end": 8423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8344,
											"end": 8423,
											"name": "tag",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 8344,
											"end": 8423,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8335,
											"end": 8423,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8335,
											"end": 8423,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8151,
											"end": 8429,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8089,
											"end": 8429,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8089,
											"end": 8429,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8089,
											"end": 8429,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8089,
											"end": 8429,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8089,
											"end": 8429,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8435,
											"end": 8528,
											"name": "tag",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 8435,
											"end": 8528,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8471,
											"end": 8478,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8511,
											"end": 8521,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8504,
											"end": 8509,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8500,
											"end": 8522,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8489,
											"end": 8522,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8489,
											"end": 8522,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8435,
											"end": 8528,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8435,
											"end": 8528,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8435,
											"end": 8528,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8435,
											"end": 8528,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8534,
											"end": 8654,
											"name": "tag",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 8534,
											"end": 8654,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8606,
											"end": 8629,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "326"
										},
										{
											"begin": 8623,
											"end": 8628,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8606,
											"end": 8629,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 8606,
											"end": 8629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8606,
											"end": 8629,
											"name": "tag",
											"source": 7,
											"value": "326"
										},
										{
											"begin": 8606,
											"end": 8629,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8599,
											"end": 8604,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8596,
											"end": 8630,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 8586,
											"end": 8648,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "327"
										},
										{
											"begin": 8586,
											"end": 8648,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8644,
											"end": 8645,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8641,
											"end": 8642,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8634,
											"end": 8646,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8586,
											"end": 8648,
											"name": "tag",
											"source": 7,
											"value": "327"
										},
										{
											"begin": 8586,
											"end": 8648,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8534,
											"end": 8654,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8534,
											"end": 8654,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8660,
											"end": 8797,
											"name": "tag",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 8660,
											"end": 8797,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8705,
											"end": 8710,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8743,
											"end": 8749,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8730,
											"end": 8750,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 8721,
											"end": 8750,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8721,
											"end": 8750,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8759,
											"end": 8791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 8785,
											"end": 8790,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8759,
											"end": 8791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 8759,
											"end": 8791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8759,
											"end": 8791,
											"name": "tag",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 8759,
											"end": 8791,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8660,
											"end": 8797,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8660,
											"end": 8797,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8660,
											"end": 8797,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8660,
											"end": 8797,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8660,
											"end": 8797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8803,
											"end": 10250,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 8803,
											"end": 10250,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8926,
											"end": 8932,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8934,
											"end": 8940,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8942,
											"end": 8948,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8950,
											"end": 8956,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8958,
											"end": 8964,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9007,
											"end": 9010,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 8995,
											"end": 9004,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 8986,
											"end": 8993,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 8982,
											"end": 9005,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8978,
											"end": 9011,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 8975,
											"end": 9095,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8975,
											"end": 9095,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 8975,
											"end": 9095,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9014,
											"end": 9093,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 9014,
											"end": 9093,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 9014,
											"end": 9093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9014,
											"end": 9093,
											"name": "tag",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 9014,
											"end": 9093,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8975,
											"end": 9095,
											"name": "tag",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 8975,
											"end": 9095,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9162,
											"end": 9163,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9151,
											"end": 9160,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 9147,
											"end": 9164,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9134,
											"end": 9165,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 9192,
											"end": 9210,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9184,
											"end": 9190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9181,
											"end": 9211,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 9178,
											"end": 9295,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9178,
											"end": 9295,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 9178,
											"end": 9295,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9214,
											"end": 9293,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 9214,
											"end": 9293,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 9214,
											"end": 9293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9214,
											"end": 9293,
											"name": "tag",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 9214,
											"end": 9293,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9178,
											"end": 9295,
											"name": "tag",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 9178,
											"end": 9295,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9319,
											"end": 9382,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 9374,
											"end": 9381,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 9365,
											"end": 9371,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9354,
											"end": 9363,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 9350,
											"end": 9372,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9319,
											"end": 9382,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 9319,
											"end": 9382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9319,
											"end": 9382,
											"name": "tag",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 9319,
											"end": 9382,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9309,
											"end": 9382,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 9309,
											"end": 9382,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9105,
											"end": 9392,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9459,
											"end": 9461,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9448,
											"end": 9457,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 9444,
											"end": 9462,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9431,
											"end": 9463,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 9490,
											"end": 9508,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9482,
											"end": 9488,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9479,
											"end": 9509,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 9476,
											"end": 9593,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9476,
											"end": 9593,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 9476,
											"end": 9593,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9512,
											"end": 9591,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 9512,
											"end": 9591,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 9512,
											"end": 9591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9512,
											"end": 9591,
											"name": "tag",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 9512,
											"end": 9591,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9476,
											"end": 9593,
											"name": "tag",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 9476,
											"end": 9593,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9617,
											"end": 9680,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 9672,
											"end": 9679,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 9663,
											"end": 9669,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9652,
											"end": 9661,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 9648,
											"end": 9670,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9617,
											"end": 9680,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 9617,
											"end": 9680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9617,
											"end": 9680,
											"name": "tag",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 9617,
											"end": 9680,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9607,
											"end": 9680,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 9607,
											"end": 9680,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9402,
											"end": 9690,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9757,
											"end": 9759,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9746,
											"end": 9755,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 9742,
											"end": 9760,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9729,
											"end": 9761,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 9788,
											"end": 9806,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9780,
											"end": 9786,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9777,
											"end": 9807,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 9774,
											"end": 9891,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9774,
											"end": 9891,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 9774,
											"end": 9891,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9810,
											"end": 9889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 9810,
											"end": 9889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 9810,
											"end": 9889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9810,
											"end": 9889,
											"name": "tag",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 9810,
											"end": 9889,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9774,
											"end": 9891,
											"name": "tag",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 9774,
											"end": 9891,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9915,
											"end": 9978,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 9970,
											"end": 9977,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 9961,
											"end": 9967,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9950,
											"end": 9959,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 9946,
											"end": 9968,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9915,
											"end": 9978,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 9915,
											"end": 9978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9915,
											"end": 9978,
											"name": "tag",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 9915,
											"end": 9978,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9905,
											"end": 9978,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 9905,
											"end": 9978,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9700,
											"end": 9988,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10027,
											"end": 10029,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 10053,
											"end": 10105,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "342"
										},
										{
											"begin": 10097,
											"end": 10104,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 10088,
											"end": 10094,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10077,
											"end": 10086,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 10073,
											"end": 10095,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10053,
											"end": 10105,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 10053,
											"end": 10105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10053,
											"end": 10105,
											"name": "tag",
											"source": 7,
											"value": "342"
										},
										{
											"begin": 10053,
											"end": 10105,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10043,
											"end": 10105,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10043,
											"end": 10105,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9998,
											"end": 10115,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10154,
											"end": 10157,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 10181,
											"end": 10233,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 10225,
											"end": 10232,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 10216,
											"end": 10222,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10205,
											"end": 10214,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 10201,
											"end": 10223,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10181,
											"end": 10233,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 10181,
											"end": 10233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10181,
											"end": 10233,
											"name": "tag",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 10181,
											"end": 10233,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10171,
											"end": 10233,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10171,
											"end": 10233,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10125,
											"end": 10243,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8803,
											"end": 10250,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8803,
											"end": 10250,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 8803,
											"end": 10250,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8803,
											"end": 10250,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8803,
											"end": 10250,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 8803,
											"end": 10250,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8803,
											"end": 10250,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 8803,
											"end": 10250,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8803,
											"end": 10250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10256,
											"end": 10374,
											"name": "tag",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 10256,
											"end": 10374,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10343,
											"end": 10367,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "345"
										},
										{
											"begin": 10361,
											"end": 10366,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10343,
											"end": 10367,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 10343,
											"end": 10367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10343,
											"end": 10367,
											"name": "tag",
											"source": 7,
											"value": "345"
										},
										{
											"begin": 10343,
											"end": 10367,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10338,
											"end": 10341,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10331,
											"end": 10368,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10256,
											"end": 10374,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10256,
											"end": 10374,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10256,
											"end": 10374,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10380,
											"end": 10602,
											"name": "tag",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 10380,
											"end": 10602,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10473,
											"end": 10477,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10511,
											"end": 10513,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10500,
											"end": 10509,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10496,
											"end": 10514,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10488,
											"end": 10514,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10488,
											"end": 10514,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10524,
											"end": 10595,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 10592,
											"end": 10593,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10581,
											"end": 10590,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10577,
											"end": 10594,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10568,
											"end": 10574,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10524,
											"end": 10595,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 10524,
											"end": 10595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10524,
											"end": 10595,
											"name": "tag",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 10524,
											"end": 10595,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10380,
											"end": 10602,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10380,
											"end": 10602,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10380,
											"end": 10602,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10380,
											"end": 10602,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10380,
											"end": 10602,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10608,
											"end": 10777,
											"name": "tag",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 10608,
											"end": 10777,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10692,
											"end": 10703,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10726,
											"end": 10732,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10721,
											"end": 10724,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10714,
											"end": 10733,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10766,
											"end": 10770,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10761,
											"end": 10764,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10757,
											"end": 10771,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10742,
											"end": 10771,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10742,
											"end": 10771,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10608,
											"end": 10777,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10608,
											"end": 10777,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10608,
											"end": 10777,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10608,
											"end": 10777,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10608,
											"end": 10777,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10783,
											"end": 11003,
											"name": "tag",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 10783,
											"end": 11003,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10923,
											"end": 10957,
											"name": "PUSH",
											"source": 7,
											"value": "4661696C656420746F206D696E74206E6F6E2D66756E6769626C6520746F6B65"
										},
										{
											"begin": 10919,
											"end": 10920,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10911,
											"end": 10917,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10907,
											"end": 10921,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10900,
											"end": 10958,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10992,
											"end": 10995,
											"name": "PUSH",
											"source": 7,
											"value": "6E00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10987,
											"end": 10989,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10979,
											"end": 10985,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10975,
											"end": 10990,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10968,
											"end": 10996,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10783,
											"end": 11003,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10783,
											"end": 11003,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11009,
											"end": 11375,
											"name": "tag",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 11009,
											"end": 11375,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11151,
											"end": 11154,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11172,
											"end": 11239,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 11236,
											"end": 11238,
											"name": "PUSH",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 11231,
											"end": 11234,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11172,
											"end": 11239,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 11172,
											"end": 11239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11172,
											"end": 11239,
											"name": "tag",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 11172,
											"end": 11239,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11165,
											"end": 11239,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11165,
											"end": 11239,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11248,
											"end": 11341,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 11337,
											"end": 11340,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11248,
											"end": 11341,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 11248,
											"end": 11341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11248,
											"end": 11341,
											"name": "tag",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 11248,
											"end": 11341,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11366,
											"end": 11368,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 11361,
											"end": 11364,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11357,
											"end": 11369,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11350,
											"end": 11369,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11350,
											"end": 11369,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11009,
											"end": 11375,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11009,
											"end": 11375,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11009,
											"end": 11375,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11009,
											"end": 11375,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11381,
											"end": 11800,
											"name": "tag",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 11381,
											"end": 11800,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11547,
											"end": 11551,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11585,
											"end": 11587,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11574,
											"end": 11583,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11570,
											"end": 11588,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11562,
											"end": 11588,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11562,
											"end": 11588,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11634,
											"end": 11643,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11628,
											"end": 11632,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11624,
											"end": 11644,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 11620,
											"end": 11621,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11609,
											"end": 11618,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11605,
											"end": 11622,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11598,
											"end": 11645,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11662,
											"end": 11793,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 11788,
											"end": 11792,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11662,
											"end": 11793,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 11662,
											"end": 11793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11662,
											"end": 11793,
											"name": "tag",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 11662,
											"end": 11793,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11654,
											"end": 11793,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11654,
											"end": 11793,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11381,
											"end": 11800,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11381,
											"end": 11800,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11381,
											"end": 11800,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11381,
											"end": 11800,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11806,
											"end": 11986,
											"name": "tag",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 11806,
											"end": 11986,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11854,
											"end": 11931,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11851,
											"end": 11852,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11844,
											"end": 11932,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11951,
											"end": 11955,
											"name": "PUSH",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 11948,
											"end": 11949,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 11941,
											"end": 11956,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11975,
											"end": 11979,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 11972,
											"end": 11973,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11965,
											"end": 11980,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 11992,
											"end": 12216,
											"name": "tag",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 11992,
											"end": 12216,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12132,
											"end": 12166,
											"name": "PUSH",
											"source": 7,
											"value": "4661696C656420746F207472616E73666572206E6F6E2D66756E6769626C6520"
										},
										{
											"begin": 12128,
											"end": 12129,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12120,
											"end": 12126,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12116,
											"end": 12130,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12109,
											"end": 12167,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12201,
											"end": 12208,
											"name": "PUSH",
											"source": 7,
											"value": "746F6B656E000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12196,
											"end": 12198,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12188,
											"end": 12194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12184,
											"end": 12199,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12177,
											"end": 12209,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11992,
											"end": 12216,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11992,
											"end": 12216,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12222,
											"end": 12588,
											"name": "tag",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 12222,
											"end": 12588,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12364,
											"end": 12367,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12385,
											"end": 12452,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 12449,
											"end": 12451,
											"name": "PUSH",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 12444,
											"end": 12447,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12385,
											"end": 12452,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 12385,
											"end": 12452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12385,
											"end": 12452,
											"name": "tag",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 12385,
											"end": 12452,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12378,
											"end": 12452,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12378,
											"end": 12452,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12461,
											"end": 12554,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 12550,
											"end": 12553,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12461,
											"end": 12554,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 12461,
											"end": 12554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12461,
											"end": 12554,
											"name": "tag",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 12461,
											"end": 12554,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12579,
											"end": 12581,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 12574,
											"end": 12577,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12570,
											"end": 12582,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12563,
											"end": 12582,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12563,
											"end": 12582,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12222,
											"end": 12588,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12222,
											"end": 12588,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12222,
											"end": 12588,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12222,
											"end": 12588,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12594,
											"end": 13013,
											"name": "tag",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 12594,
											"end": 13013,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12760,
											"end": 12764,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12798,
											"end": 12800,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12787,
											"end": 12796,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12783,
											"end": 12801,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12775,
											"end": 12801,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12775,
											"end": 12801,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12847,
											"end": 12856,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12841,
											"end": 12845,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12837,
											"end": 12857,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 12833,
											"end": 12834,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12822,
											"end": 12831,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12818,
											"end": 12835,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12811,
											"end": 12858,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12875,
											"end": 13006,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 13001,
											"end": 13005,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12875,
											"end": 13006,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 12875,
											"end": 13006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12875,
											"end": 13006,
											"name": "tag",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 12875,
											"end": 13006,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12867,
											"end": 13006,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12867,
											"end": 13006,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12594,
											"end": 13013,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12594,
											"end": 13013,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12594,
											"end": 13013,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12594,
											"end": 13013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13019,
											"end": 13120,
											"name": "tag",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 13019,
											"end": 13120,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13055,
											"end": 13062,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13095,
											"end": 13113,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13088,
											"end": 13093,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13084,
											"end": 13114,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 13073,
											"end": 13114,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13073,
											"end": 13114,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13019,
											"end": 13120,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13019,
											"end": 13120,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13019,
											"end": 13120,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13019,
											"end": 13120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13126,
											"end": 13241,
											"name": "tag",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 13126,
											"end": 13241,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13211,
											"end": 13234,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 13228,
											"end": 13233,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13211,
											"end": 13234,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 13211,
											"end": 13234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13211,
											"end": 13234,
											"name": "tag",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 13211,
											"end": 13234,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13206,
											"end": 13209,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13235,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13126,
											"end": 13241,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13126,
											"end": 13241,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13126,
											"end": 13241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13247,
											"end": 13370,
											"name": "tag",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 13247,
											"end": 13370,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13323,
											"end": 13329,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13357,
											"end": 13362,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13351,
											"end": 13363,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 13341,
											"end": 13363,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13341,
											"end": 13363,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13247,
											"end": 13370,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13247,
											"end": 13370,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13247,
											"end": 13370,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13247,
											"end": 13370,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13376,
											"end": 13569,
											"name": "tag",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 13376,
											"end": 13569,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13484,
											"end": 13495,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13518,
											"end": 13524,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13513,
											"end": 13516,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13506,
											"end": 13525,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13558,
											"end": 13562,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13553,
											"end": 13556,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13549,
											"end": 13563,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13534,
											"end": 13563,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13534,
											"end": 13563,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13376,
											"end": 13569,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 13376,
											"end": 13569,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13376,
											"end": 13569,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13376,
											"end": 13569,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13376,
											"end": 13569,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13575,
											"end": 13716,
											"name": "tag",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 13575,
											"end": 13716,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13651,
											"end": 13655,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13674,
											"end": 13677,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13666,
											"end": 13677,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13666,
											"end": 13677,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13704,
											"end": 13708,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13699,
											"end": 13702,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13695,
											"end": 13709,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13687,
											"end": 13709,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13687,
											"end": 13709,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13575,
											"end": 13716,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13575,
											"end": 13716,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13575,
											"end": 13716,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13575,
											"end": 13716,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13722,
											"end": 13820,
											"name": "tag",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 13722,
											"end": 13820,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13773,
											"end": 13779,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13807,
											"end": 13812,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13801,
											"end": 13813,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 13791,
											"end": 13813,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13791,
											"end": 13813,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13722,
											"end": 13820,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13722,
											"end": 13820,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13722,
											"end": 13820,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13722,
											"end": 13820,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13826,
											"end": 13984,
											"name": "tag",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 13826,
											"end": 13984,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13899,
											"end": 13910,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13933,
											"end": 13939,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13928,
											"end": 13931,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13921,
											"end": 13940,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13973,
											"end": 13977,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13968,
											"end": 13971,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13964,
											"end": 13978,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13949,
											"end": 13978,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13949,
											"end": 13978,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13826,
											"end": 13984,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 13826,
											"end": 13984,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13826,
											"end": 13984,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13826,
											"end": 13984,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13826,
											"end": 13984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13990,
											"end": 14236,
											"name": "tag",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 13990,
											"end": 14236,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14071,
											"end": 14072,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14081,
											"end": 14194,
											"name": "tag",
											"source": 7,
											"value": "371"
										},
										{
											"begin": 14081,
											"end": 14194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14095,
											"end": 14101,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14092,
											"end": 14093,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14089,
											"end": 14102,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 14081,
											"end": 14194,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 14081,
											"end": 14194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "373"
										},
										{
											"begin": 14081,
											"end": 14194,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 14180,
											"end": 14181,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 14175,
											"end": 14178,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14171,
											"end": 14182,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14165,
											"end": 14183,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 14161,
											"end": 14162,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14156,
											"end": 14159,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 14152,
											"end": 14163,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14145,
											"end": 14184,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14117,
											"end": 14119,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 14114,
											"end": 14115,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14110,
											"end": 14120,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14105,
											"end": 14120,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14105,
											"end": 14120,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14081,
											"end": 14194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "371"
										},
										{
											"begin": 14081,
											"end": 14194,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14081,
											"end": 14194,
											"name": "tag",
											"source": 7,
											"value": "373"
										},
										{
											"begin": 14081,
											"end": 14194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14228,
											"end": 14229,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14219,
											"end": 14225,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 14214,
											"end": 14217,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 14210,
											"end": 14226,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14203,
											"end": 14230,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14052,
											"end": 14236,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13990,
											"end": 14236,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13990,
											"end": 14236,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13990,
											"end": 14236,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13990,
											"end": 14236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14242,
											"end": 14595,
											"name": "tag",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 14242,
											"end": 14595,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14318,
											"end": 14321,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14346,
											"end": 14384,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "375"
										},
										{
											"begin": 14378,
											"end": 14383,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14346,
											"end": 14384,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 14346,
											"end": 14384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14346,
											"end": 14384,
											"name": "tag",
											"source": 7,
											"value": "375"
										},
										{
											"begin": 14346,
											"end": 14384,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14400,
											"end": 14460,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "376"
										},
										{
											"begin": 14453,
											"end": 14459,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14448,
											"end": 14451,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 14400,
											"end": 14460,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 14400,
											"end": 14460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14400,
											"end": 14460,
											"name": "tag",
											"source": 7,
											"value": "376"
										},
										{
											"begin": 14400,
											"end": 14460,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14393,
											"end": 14460,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 14393,
											"end": 14460,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14469,
											"end": 14534,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "377"
										},
										{
											"begin": 14527,
											"end": 14533,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14522,
											"end": 14525,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 14515,
											"end": 14519,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 14508,
											"end": 14513,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 14504,
											"end": 14520,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14469,
											"end": 14534,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 14469,
											"end": 14534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14469,
											"end": 14534,
											"name": "tag",
											"source": 7,
											"value": "377"
										},
										{
											"begin": 14469,
											"end": 14534,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14559,
											"end": 14588,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "378"
										},
										{
											"begin": 14581,
											"end": 14587,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14559,
											"end": 14588,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 14559,
											"end": 14588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14559,
											"end": 14588,
											"name": "tag",
											"source": 7,
											"value": "378"
										},
										{
											"begin": 14559,
											"end": 14588,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14554,
											"end": 14557,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 14550,
											"end": 14589,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14543,
											"end": 14589,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14543,
											"end": 14589,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14322,
											"end": 14595,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14242,
											"end": 14595,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 14242,
											"end": 14595,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14242,
											"end": 14595,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14242,
											"end": 14595,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14242,
											"end": 14595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14601,
											"end": 14793,
											"name": "tag",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 14601,
											"end": 14793,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14688,
											"end": 14698,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14723,
											"end": 14787,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "380"
										},
										{
											"begin": 14783,
											"end": 14786,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14775,
											"end": 14781,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14723,
											"end": 14787,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 14723,
											"end": 14787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14723,
											"end": 14787,
											"name": "tag",
											"source": 7,
											"value": "380"
										},
										{
											"begin": 14723,
											"end": 14787,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14709,
											"end": 14787,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14709,
											"end": 14787,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14601,
											"end": 14793,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 14601,
											"end": 14793,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14601,
											"end": 14793,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14601,
											"end": 14793,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14601,
											"end": 14793,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14799,
											"end": 14921,
											"name": "tag",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 14799,
											"end": 14921,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14878,
											"end": 14882,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14910,
											"end": 14914,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 14905,
											"end": 14908,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14901,
											"end": 14915,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14893,
											"end": 14915,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14893,
											"end": 14915,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14799,
											"end": 14921,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14799,
											"end": 14921,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14799,
											"end": 14921,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14799,
											"end": 14921,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14953,
											"end": 15936,
											"name": "tag",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 14953,
											"end": 15936,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15090,
											"end": 15093,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15119,
											"end": 15182,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "383"
										},
										{
											"begin": 15176,
											"end": 15181,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15119,
											"end": 15182,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 15119,
											"end": 15182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15119,
											"end": 15182,
											"name": "tag",
											"source": 7,
											"value": "383"
										},
										{
											"begin": 15119,
											"end": 15182,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15198,
											"end": 15293,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 15286,
											"end": 15292,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15281,
											"end": 15284,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 15198,
											"end": 15293,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 15198,
											"end": 15293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15198,
											"end": 15293,
											"name": "tag",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 15198,
											"end": 15293,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15191,
											"end": 15293,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 15191,
											"end": 15293,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15319,
											"end": 15322,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15364,
											"end": 15368,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 15356,
											"end": 15362,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15352,
											"end": 15369,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 15347,
											"end": 15350,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 15343,
											"end": 15370,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15394,
											"end": 15459,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "385"
										},
										{
											"begin": 15453,
											"end": 15458,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 15394,
											"end": 15459,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 15394,
											"end": 15459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15394,
											"end": 15459,
											"name": "tag",
											"source": 7,
											"value": "385"
										},
										{
											"begin": 15394,
											"end": 15459,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15482,
											"end": 15489,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 15513,
											"end": 15514,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15498,
											"end": 15891,
											"name": "tag",
											"source": 7,
											"value": "386"
										},
										{
											"begin": 15498,
											"end": 15891,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15523,
											"end": 15529,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 15520,
											"end": 15521,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15517,
											"end": 15530,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 15498,
											"end": 15891,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 15498,
											"end": 15891,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "388"
										},
										{
											"begin": 15498,
											"end": 15891,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 15594,
											"end": 15603,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 15588,
											"end": 15592,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 15584,
											"end": 15604,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 15579,
											"end": 15582,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 15572,
											"end": 15605,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15645,
											"end": 15651,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15639,
											"end": 15652,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 15673,
											"end": 15755,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "389"
										},
										{
											"begin": 15750,
											"end": 15754,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 15735,
											"end": 15748,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15673,
											"end": 15755,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 15673,
											"end": 15755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15673,
											"end": 15755,
											"name": "tag",
											"source": 7,
											"value": "389"
										},
										{
											"begin": 15673,
											"end": 15755,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15665,
											"end": 15755,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 15665,
											"end": 15755,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15778,
											"end": 15847,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 15840,
											"end": 15846,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15778,
											"end": 15847,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 15778,
											"end": 15847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15778,
											"end": 15847,
											"name": "tag",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 15778,
											"end": 15847,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15768,
											"end": 15847,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 15768,
											"end": 15847,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15876,
											"end": 15880,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 15871,
											"end": 15874,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 15867,
											"end": 15881,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15860,
											"end": 15881,
											"name": "SWAP10",
											"source": 7
										},
										{
											"begin": 15860,
											"end": 15881,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15558,
											"end": 15891,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15545,
											"end": 15546,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 15542,
											"end": 15543,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15538,
											"end": 15547,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15533,
											"end": 15547,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15533,
											"end": 15547,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15498,
											"end": 15891,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "386"
										},
										{
											"begin": 15498,
											"end": 15891,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15498,
											"end": 15891,
											"name": "tag",
											"source": 7,
											"value": "388"
										},
										{
											"begin": 15498,
											"end": 15891,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15502,
											"end": 15516,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15907,
											"end": 15911,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15900,
											"end": 15911,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": 15900,
											"end": 15911,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15927,
											"end": 15930,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 15920,
											"end": 15930,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 15920,
											"end": 15930,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15095,
											"end": 15936,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15095,
											"end": 15936,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15095,
											"end": 15936,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15095,
											"end": 15936,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15095,
											"end": 15936,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14953,
											"end": 15936,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 14953,
											"end": 15936,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14953,
											"end": 15936,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14953,
											"end": 15936,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14953,
											"end": 15936,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15942,
											"end": 16567,
											"name": "tag",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 15942,
											"end": 16567,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16157,
											"end": 16161,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16195,
											"end": 16197,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 16184,
											"end": 16193,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16180,
											"end": 16198,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16172,
											"end": 16198,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16172,
											"end": 16198,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16208,
											"end": 16279,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "392"
										},
										{
											"begin": 16276,
											"end": 16277,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16265,
											"end": 16274,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16261,
											"end": 16278,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16252,
											"end": 16258,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 16208,
											"end": 16279,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 16208,
											"end": 16279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16208,
											"end": 16279,
											"name": "tag",
											"source": 7,
											"value": "392"
										},
										{
											"begin": 16208,
											"end": 16279,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16289,
											"end": 16359,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "393"
										},
										{
											"begin": 16355,
											"end": 16357,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 16344,
											"end": 16353,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16340,
											"end": 16358,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16331,
											"end": 16337,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 16289,
											"end": 16359,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 16289,
											"end": 16359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16289,
											"end": 16359,
											"name": "tag",
											"source": 7,
											"value": "393"
										},
										{
											"begin": 16289,
											"end": 16359,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16406,
											"end": 16415,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16400,
											"end": 16404,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16396,
											"end": 16416,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 16391,
											"end": 16393,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 16380,
											"end": 16389,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16376,
											"end": 16394,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16369,
											"end": 16417,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16434,
											"end": 16560,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "394"
										},
										{
											"begin": 16555,
											"end": 16559,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16546,
											"end": 16552,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 16434,
											"end": 16560,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 16434,
											"end": 16560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16434,
											"end": 16560,
											"name": "tag",
											"source": 7,
											"value": "394"
										},
										{
											"begin": 16434,
											"end": 16560,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16426,
											"end": 16560,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16426,
											"end": 16560,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15942,
											"end": 16567,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 15942,
											"end": 16567,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 15942,
											"end": 16567,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15942,
											"end": 16567,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15942,
											"end": 16567,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15942,
											"end": 16567,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15942,
											"end": 16567,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16573,
											"end": 16720,
											"name": "tag",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 16573,
											"end": 16720,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16674,
											"end": 16685,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16711,
											"end": 16714,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16696,
											"end": 16714,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16696,
											"end": 16714,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16573,
											"end": 16720,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 16573,
											"end": 16720,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16573,
											"end": 16720,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16573,
											"end": 16720,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16573,
											"end": 16720,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16726,
											"end": 17112,
											"name": "tag",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 16726,
											"end": 17112,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16830,
											"end": 16833,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16858,
											"end": 16896,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "397"
										},
										{
											"begin": 16890,
											"end": 16895,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16858,
											"end": 16896,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 16858,
											"end": 16896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16858,
											"end": 16896,
											"name": "tag",
											"source": 7,
											"value": "397"
										},
										{
											"begin": 16858,
											"end": 16896,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16912,
											"end": 17000,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "398"
										},
										{
											"begin": 16993,
											"end": 16999,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16988,
											"end": 16991,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 16912,
											"end": 17000,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 16912,
											"end": 17000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16912,
											"end": 17000,
											"name": "tag",
											"source": 7,
											"value": "398"
										},
										{
											"begin": 16912,
											"end": 17000,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16905,
											"end": 17000,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 16905,
											"end": 17000,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17009,
											"end": 17074,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "399"
										},
										{
											"begin": 17067,
											"end": 17073,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17062,
											"end": 17065,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 17055,
											"end": 17059,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 17048,
											"end": 17053,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17009,
											"end": 17074,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 17009,
											"end": 17074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17009,
											"end": 17074,
											"name": "tag",
											"source": 7,
											"value": "399"
										},
										{
											"begin": 17009,
											"end": 17074,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17099,
											"end": 17105,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 17094,
											"end": 17097,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 17090,
											"end": 17106,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17083,
											"end": 17106,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17083,
											"end": 17106,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16834,
											"end": 17112,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16726,
											"end": 17112,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 16726,
											"end": 17112,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16726,
											"end": 17112,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16726,
											"end": 17112,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16726,
											"end": 17112,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17118,
											"end": 17389,
											"name": "tag",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 17118,
											"end": 17389,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17248,
											"end": 17251,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17270,
											"end": 17363,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "401"
										},
										{
											"begin": 17359,
											"end": 17362,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17350,
											"end": 17356,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 17270,
											"end": 17363,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 17270,
											"end": 17363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17270,
											"end": 17363,
											"name": "tag",
											"source": 7,
											"value": "401"
										},
										{
											"begin": 17270,
											"end": 17363,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17263,
											"end": 17363,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17263,
											"end": 17363,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17380,
											"end": 17383,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17373,
											"end": 17383,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17373,
											"end": 17383,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17118,
											"end": 17389,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 17118,
											"end": 17389,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17118,
											"end": 17389,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17118,
											"end": 17389,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17118,
											"end": 17389,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17395,
											"end": 17485,
											"name": "tag",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 17395,
											"end": 17485,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17430,
											"end": 17437,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17473,
											"end": 17478,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17470,
											"end": 17471,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 17459,
											"end": 17479,
											"name": "SIGNEXTEND",
											"source": 7
										},
										{
											"begin": 17448,
											"end": 17479,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17448,
											"end": 17479,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17395,
											"end": 17485,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17395,
											"end": 17485,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17395,
											"end": 17485,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17395,
											"end": 17485,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17491,
											"end": 17609,
											"name": "tag",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 17491,
											"end": 17609,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17562,
											"end": 17584,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "404"
										},
										{
											"begin": 17578,
											"end": 17583,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17562,
											"end": 17584,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 17562,
											"end": 17584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17562,
											"end": 17584,
											"name": "tag",
											"source": 7,
											"value": "404"
										},
										{
											"begin": 17562,
											"end": 17584,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17555,
											"end": 17560,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17552,
											"end": 17585,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 17542,
											"end": 17603,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 17542,
											"end": 17603,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 17599,
											"end": 17600,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17596,
											"end": 17597,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 17589,
											"end": 17601,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 17542,
											"end": 17603,
											"name": "tag",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 17542,
											"end": 17603,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17491,
											"end": 17609,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17491,
											"end": 17609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17615,
											"end": 17754,
											"name": "tag",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 17615,
											"end": 17754,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17670,
											"end": 17675,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17701,
											"end": 17707,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17695,
											"end": 17708,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 17686,
											"end": 17708,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17686,
											"end": 17708,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17717,
											"end": 17748,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "407"
										},
										{
											"begin": 17742,
											"end": 17747,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17717,
											"end": 17748,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 17717,
											"end": 17748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17717,
											"end": 17748,
											"name": "tag",
											"source": 7,
											"value": "407"
										},
										{
											"begin": 17717,
											"end": 17748,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17615,
											"end": 17754,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 17615,
											"end": 17754,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17615,
											"end": 17754,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17615,
											"end": 17754,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17615,
											"end": 17754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17760,
											"end": 17880,
											"name": "tag",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 17760,
											"end": 17880,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17832,
											"end": 17855,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "409"
										},
										{
											"begin": 17849,
											"end": 17854,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17832,
											"end": 17855,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 17832,
											"end": 17855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17832,
											"end": 17855,
											"name": "tag",
											"source": 7,
											"value": "409"
										},
										{
											"begin": 17832,
											"end": 17855,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17825,
											"end": 17830,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17822,
											"end": 17856,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 17812,
											"end": 17874,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "410"
										},
										{
											"begin": 17812,
											"end": 17874,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 17870,
											"end": 17871,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17867,
											"end": 17868,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 17860,
											"end": 17872,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 17812,
											"end": 17874,
											"name": "tag",
											"source": 7,
											"value": "410"
										},
										{
											"begin": 17812,
											"end": 17874,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17760,
											"end": 17880,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17760,
											"end": 17880,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17886,
											"end": 18027,
											"name": "tag",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 17886,
											"end": 18027,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17942,
											"end": 17947,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17973,
											"end": 17979,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17967,
											"end": 17980,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 17958,
											"end": 17980,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17958,
											"end": 17980,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17989,
											"end": 18021,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "412"
										},
										{
											"begin": 18015,
											"end": 18020,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17989,
											"end": 18021,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 17989,
											"end": 18021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17989,
											"end": 18021,
											"name": "tag",
											"source": 7,
											"value": "412"
										},
										{
											"begin": 17989,
											"end": 18021,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17886,
											"end": 18027,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 17886,
											"end": 18027,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17886,
											"end": 18027,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17886,
											"end": 18027,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17886,
											"end": 18027,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18033,
											"end": 18342,
											"name": "tag",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 18033,
											"end": 18342,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18108,
											"end": 18112,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18198,
											"end": 18216,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18190,
											"end": 18196,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18187,
											"end": 18217,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 18184,
											"end": 18240,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 18184,
											"end": 18240,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "414"
										},
										{
											"begin": 18184,
											"end": 18240,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 18220,
											"end": 18238,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "415"
										},
										{
											"begin": 18220,
											"end": 18238,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 18220,
											"end": 18238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18220,
											"end": 18238,
											"name": "tag",
											"source": 7,
											"value": "415"
										},
										{
											"begin": 18220,
											"end": 18238,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18184,
											"end": 18240,
											"name": "tag",
											"source": 7,
											"value": "414"
										},
										{
											"begin": 18184,
											"end": 18240,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18270,
											"end": 18274,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 18262,
											"end": 18268,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18258,
											"end": 18275,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 18250,
											"end": 18275,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18250,
											"end": 18275,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18330,
											"end": 18334,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 18324,
											"end": 18328,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 18320,
											"end": 18335,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18312,
											"end": 18335,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18312,
											"end": 18335,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18033,
											"end": 18342,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 18033,
											"end": 18342,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18033,
											"end": 18342,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18033,
											"end": 18342,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18348,
											"end": 18487,
											"name": "tag",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 18348,
											"end": 18487,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18403,
											"end": 18408,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18434,
											"end": 18440,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 18428,
											"end": 18441,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 18419,
											"end": 18441,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18419,
											"end": 18441,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18450,
											"end": 18481,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "417"
										},
										{
											"begin": 18475,
											"end": 18480,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 18450,
											"end": 18481,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 18450,
											"end": 18481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18450,
											"end": 18481,
											"name": "tag",
											"source": 7,
											"value": "417"
										},
										{
											"begin": 18450,
											"end": 18481,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18348,
											"end": 18487,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 18348,
											"end": 18487,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 18348,
											"end": 18487,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18348,
											"end": 18487,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18348,
											"end": 18487,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18508,
											"end": 19234,
											"name": "tag",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 18508,
											"end": 19234,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18613,
											"end": 18618,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18638,
											"end": 18717,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 18654,
											"end": 18716,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "420"
										},
										{
											"begin": 18709,
											"end": 18715,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 18654,
											"end": 18716,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 18654,
											"end": 18716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18654,
											"end": 18716,
											"name": "tag",
											"source": 7,
											"value": "420"
										},
										{
											"begin": 18654,
											"end": 18716,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18638,
											"end": 18717,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 18638,
											"end": 18717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18638,
											"end": 18717,
											"name": "tag",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 18638,
											"end": 18717,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18629,
											"end": 18717,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18629,
											"end": 18717,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18737,
											"end": 18742,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 18766,
											"end": 18772,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 18759,
											"end": 18764,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18752,
											"end": 18773,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 18800,
											"end": 18804,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 18793,
											"end": 18798,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18789,
											"end": 18805,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18782,
											"end": 18805,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18782,
											"end": 18805,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18853,
											"end": 18857,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 18845,
											"end": 18851,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 18841,
											"end": 18858,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 18833,
											"end": 18839,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 18829,
											"end": 18859,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18882,
											"end": 18885,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 18874,
											"end": 18880,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 18871,
											"end": 18886,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 18868,
											"end": 18990,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 18868,
											"end": 18990,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "421"
										},
										{
											"begin": 18868,
											"end": 18990,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 18901,
											"end": 18980,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "422"
										},
										{
											"begin": 18901,
											"end": 18980,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 18901,
											"end": 18980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18901,
											"end": 18980,
											"name": "tag",
											"source": 7,
											"value": "422"
										},
										{
											"begin": 18901,
											"end": 18980,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18868,
											"end": 18990,
											"name": "tag",
											"source": 7,
											"value": "421"
										},
										{
											"begin": 18868,
											"end": 18990,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19016,
											"end": 19022,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 18999,
											"end": 19228,
											"name": "tag",
											"source": 7,
											"value": "423"
										},
										{
											"begin": 18999,
											"end": 19228,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19033,
											"end": 19039,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 19028,
											"end": 19031,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 19025,
											"end": 19040,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 18999,
											"end": 19228,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 18999,
											"end": 19228,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "425"
										},
										{
											"begin": 18999,
											"end": 19228,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 19108,
											"end": 19111,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 19137,
											"end": 19183,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 19179,
											"end": 19182,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 19167,
											"end": 19177,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19137,
											"end": 19183,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 19137,
											"end": 19183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19137,
											"end": 19183,
											"name": "tag",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 19137,
											"end": 19183,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19132,
											"end": 19135,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 19125,
											"end": 19184,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 19213,
											"end": 19217,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 19208,
											"end": 19211,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 19204,
											"end": 19218,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19197,
											"end": 19218,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 19197,
											"end": 19218,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19075,
											"end": 19228,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19059,
											"end": 19063,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 19054,
											"end": 19057,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 19050,
											"end": 19064,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19043,
											"end": 19064,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 19043,
											"end": 19064,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18999,
											"end": 19228,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "423"
										},
										{
											"begin": 18999,
											"end": 19228,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18999,
											"end": 19228,
											"name": "tag",
											"source": 7,
											"value": "425"
										},
										{
											"begin": 18999,
											"end": 19228,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19003,
											"end": 19024,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18619,
											"end": 19234,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18619,
											"end": 19234,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18508,
											"end": 19234,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 18508,
											"end": 19234,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 18508,
											"end": 19234,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18508,
											"end": 19234,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18508,
											"end": 19234,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18508,
											"end": 19234,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19255,
											"end": 19636,
											"name": "tag",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 19255,
											"end": 19636,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19335,
											"end": 19340,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19384,
											"end": 19387,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19377,
											"end": 19381,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 19369,
											"end": 19375,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 19365,
											"end": 19382,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19361,
											"end": 19388,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 19351,
											"end": 19473,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "428"
										},
										{
											"begin": 19351,
											"end": 19473,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 19392,
											"end": 19471,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "429"
										},
										{
											"begin": 19392,
											"end": 19471,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 19392,
											"end": 19471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19392,
											"end": 19471,
											"name": "tag",
											"source": 7,
											"value": "429"
										},
										{
											"begin": 19392,
											"end": 19471,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19351,
											"end": 19473,
											"name": "tag",
											"source": 7,
											"value": "428"
										},
										{
											"begin": 19351,
											"end": 19473,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19502,
											"end": 19508,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 19496,
											"end": 19509,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 19527,
											"end": 19630,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "430"
										},
										{
											"begin": 19626,
											"end": 19629,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 19618,
											"end": 19624,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19611,
											"end": 19615,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 19603,
											"end": 19609,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 19599,
											"end": 19616,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19527,
											"end": 19630,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 19527,
											"end": 19630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19527,
											"end": 19630,
											"name": "tag",
											"source": 7,
											"value": "430"
										},
										{
											"begin": 19527,
											"end": 19630,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19518,
											"end": 19630,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 19518,
											"end": 19630,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19341,
											"end": 19636,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19255,
											"end": 19636,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 19255,
											"end": 19636,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 19255,
											"end": 19636,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19255,
											"end": 19636,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19255,
											"end": 19636,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19642,
											"end": 20498,
											"name": "tag",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 19642,
											"end": 20498,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19750,
											"end": 19756,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19758,
											"end": 19764,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 19766,
											"end": 19772,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19815,
											"end": 19817,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 19803,
											"end": 19812,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 19794,
											"end": 19801,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 19790,
											"end": 19813,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 19786,
											"end": 19818,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 19783,
											"end": 19902,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 19783,
											"end": 19902,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "432"
										},
										{
											"begin": 19783,
											"end": 19902,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 19821,
											"end": 19900,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "433"
										},
										{
											"begin": 19821,
											"end": 19900,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 19821,
											"end": 19900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19821,
											"end": 19900,
											"name": "tag",
											"source": 7,
											"value": "433"
										},
										{
											"begin": 19821,
											"end": 19900,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19783,
											"end": 19902,
											"name": "tag",
											"source": 7,
											"value": "432"
										},
										{
											"begin": 19783,
											"end": 19902,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19941,
											"end": 19942,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19966,
											"end": 20028,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "434"
										},
										{
											"begin": 20020,
											"end": 20027,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 20011,
											"end": 20017,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20000,
											"end": 20009,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 19996,
											"end": 20018,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19966,
											"end": 20028,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 19966,
											"end": 20028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19966,
											"end": 20028,
											"name": "tag",
											"source": 7,
											"value": "434"
										},
										{
											"begin": 19966,
											"end": 20028,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19956,
											"end": 20028,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 19956,
											"end": 20028,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19912,
											"end": 20038,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20077,
											"end": 20079,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 20103,
											"end": 20166,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "435"
										},
										{
											"begin": 20158,
											"end": 20165,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 20149,
											"end": 20155,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20138,
											"end": 20147,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 20134,
											"end": 20156,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20103,
											"end": 20166,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 20103,
											"end": 20166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20103,
											"end": 20166,
											"name": "tag",
											"source": 7,
											"value": "435"
										},
										{
											"begin": 20103,
											"end": 20166,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20093,
											"end": 20166,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 20093,
											"end": 20166,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20048,
											"end": 20176,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20236,
											"end": 20238,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 20225,
											"end": 20234,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 20221,
											"end": 20239,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20215,
											"end": 20240,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 20267,
											"end": 20285,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20259,
											"end": 20265,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 20256,
											"end": 20286,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 20253,
											"end": 20370,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 20253,
											"end": 20370,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "436"
										},
										{
											"begin": 20253,
											"end": 20370,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 20289,
											"end": 20368,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "437"
										},
										{
											"begin": 20289,
											"end": 20368,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 20289,
											"end": 20368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20289,
											"end": 20368,
											"name": "tag",
											"source": 7,
											"value": "437"
										},
										{
											"begin": 20289,
											"end": 20368,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20253,
											"end": 20370,
											"name": "tag",
											"source": 7,
											"value": "436"
										},
										{
											"begin": 20253,
											"end": 20370,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20394,
											"end": 20481,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "438"
										},
										{
											"begin": 20473,
											"end": 20480,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 20464,
											"end": 20470,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20453,
											"end": 20462,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 20449,
											"end": 20471,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20394,
											"end": 20481,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 20394,
											"end": 20481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20394,
											"end": 20481,
											"name": "tag",
											"source": 7,
											"value": "438"
										},
										{
											"begin": 20394,
											"end": 20481,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20384,
											"end": 20481,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 20384,
											"end": 20481,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20186,
											"end": 20491,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19642,
											"end": 20498,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 19642,
											"end": 20498,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19642,
											"end": 20498,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 19642,
											"end": 20498,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19642,
											"end": 20498,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 19642,
											"end": 20498,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20504,
											"end": 20836,
											"name": "tag",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 20504,
											"end": 20836,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20625,
											"end": 20629,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 20663,
											"end": 20665,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 20652,
											"end": 20661,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20648,
											"end": 20666,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20640,
											"end": 20666,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 20640,
											"end": 20666,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20676,
											"end": 20747,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "440"
										},
										{
											"begin": 20744,
											"end": 20745,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 20733,
											"end": 20742,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 20729,
											"end": 20746,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20720,
											"end": 20726,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 20676,
											"end": 20747,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 20676,
											"end": 20747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20676,
											"end": 20747,
											"name": "tag",
											"source": 7,
											"value": "440"
										},
										{
											"begin": 20676,
											"end": 20747,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20757,
											"end": 20829,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "441"
										},
										{
											"begin": 20825,
											"end": 20827,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 20814,
											"end": 20823,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 20810,
											"end": 20828,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20801,
											"end": 20807,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 20757,
											"end": 20829,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 20757,
											"end": 20829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20757,
											"end": 20829,
											"name": "tag",
											"source": 7,
											"value": "441"
										},
										{
											"begin": 20757,
											"end": 20829,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20504,
											"end": 20836,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 20504,
											"end": 20836,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 20504,
											"end": 20836,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20504,
											"end": 20836,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20504,
											"end": 20836,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20504,
											"end": 20836,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20842,
											"end": 21189,
											"name": "tag",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 20842,
											"end": 21189,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20910,
											"end": 20916,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 20959,
											"end": 20961,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 20947,
											"end": 20956,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20938,
											"end": 20945,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 20934,
											"end": 20957,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 20930,
											"end": 20962,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 20927,
											"end": 21046,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 20927,
											"end": 21046,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "443"
										},
										{
											"begin": 20927,
											"end": 21046,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 20965,
											"end": 21044,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "444"
										},
										{
											"begin": 20965,
											"end": 21044,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 20965,
											"end": 21044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20965,
											"end": 21044,
											"name": "tag",
											"source": 7,
											"value": "444"
										},
										{
											"begin": 20965,
											"end": 21044,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20927,
											"end": 21046,
											"name": "tag",
											"source": 7,
											"value": "443"
										},
										{
											"begin": 20927,
											"end": 21046,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21085,
											"end": 21086,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 21110,
											"end": 21172,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "445"
										},
										{
											"begin": 21164,
											"end": 21171,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 21155,
											"end": 21161,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 21144,
											"end": 21153,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 21140,
											"end": 21162,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 21110,
											"end": 21172,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 21110,
											"end": 21172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21110,
											"end": 21172,
											"name": "tag",
											"source": 7,
											"value": "445"
										},
										{
											"begin": 21110,
											"end": 21172,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21100,
											"end": 21172,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 21100,
											"end": 21172,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21056,
											"end": 21182,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20842,
											"end": 21189,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 20842,
											"end": 21189,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 20842,
											"end": 21189,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20842,
											"end": 21189,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20842,
											"end": 21189,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21195,
											"end": 21740,
											"name": "tag",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 21195,
											"end": 21740,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21368,
											"end": 21372,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 21406,
											"end": 21409,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 21395,
											"end": 21404,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 21391,
											"end": 21410,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 21383,
											"end": 21410,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 21383,
											"end": 21410,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21420,
											"end": 21491,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "447"
										},
										{
											"begin": 21488,
											"end": 21489,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 21477,
											"end": 21486,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 21473,
											"end": 21490,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 21464,
											"end": 21470,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 21420,
											"end": 21491,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 21420,
											"end": 21491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21420,
											"end": 21491,
											"name": "tag",
											"source": 7,
											"value": "447"
										},
										{
											"begin": 21420,
											"end": 21491,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21501,
											"end": 21573,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "448"
										},
										{
											"begin": 21569,
											"end": 21571,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 21558,
											"end": 21567,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 21554,
											"end": 21572,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 21545,
											"end": 21551,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 21501,
											"end": 21573,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 21501,
											"end": 21573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21501,
											"end": 21573,
											"name": "tag",
											"source": 7,
											"value": "448"
										},
										{
											"begin": 21501,
											"end": 21573,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21583,
											"end": 21655,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "449"
										},
										{
											"begin": 21651,
											"end": 21653,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 21640,
											"end": 21649,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 21636,
											"end": 21654,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 21627,
											"end": 21633,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 21583,
											"end": 21655,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 21583,
											"end": 21655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21583,
											"end": 21655,
											"name": "tag",
											"source": 7,
											"value": "449"
										},
										{
											"begin": 21583,
											"end": 21655,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21665,
											"end": 21733,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "450"
										},
										{
											"begin": 21729,
											"end": 21731,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 21718,
											"end": 21727,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 21714,
											"end": 21732,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 21705,
											"end": 21711,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 21665,
											"end": 21733,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 21665,
											"end": 21733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21665,
											"end": 21733,
											"name": "tag",
											"source": 7,
											"value": "450"
										},
										{
											"begin": 21665,
											"end": 21733,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21195,
											"end": 21740,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 21195,
											"end": 21740,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 21195,
											"end": 21740,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21195,
											"end": 21740,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21195,
											"end": 21740,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21195,
											"end": 21740,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21195,
											"end": 21740,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21195,
											"end": 21740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21746,
											"end": 21845,
											"name": "tag",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 21746,
											"end": 21845,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21798,
											"end": 21804,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 21832,
											"end": 21837,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 21826,
											"end": 21838,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 21816,
											"end": 21838,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 21816,
											"end": 21838,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21746,
											"end": 21845,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 21746,
											"end": 21845,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 21746,
											"end": 21845,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21746,
											"end": 21845,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21851,
											"end": 22010,
											"name": "tag",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 21851,
											"end": 22010,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21925,
											"end": 21936,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 21959,
											"end": 21965,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 21954,
											"end": 21957,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 21947,
											"end": 21966,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 21999,
											"end": 22003,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 21994,
											"end": 21997,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 21990,
											"end": 22004,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 21975,
											"end": 22004,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 21975,
											"end": 22004,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21851,
											"end": 22010,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 21851,
											"end": 22010,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 21851,
											"end": 22010,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21851,
											"end": 22010,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21851,
											"end": 22010,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 22016,
											"end": 22373,
											"name": "tag",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 22016,
											"end": 22373,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22094,
											"end": 22097,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 22122,
											"end": 22161,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "454"
										},
										{
											"begin": 22155,
											"end": 22160,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 22122,
											"end": 22161,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 22122,
											"end": 22161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 22122,
											"end": 22161,
											"name": "tag",
											"source": 7,
											"value": "454"
										},
										{
											"begin": 22122,
											"end": 22161,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22177,
											"end": 22238,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "455"
										},
										{
											"begin": 22231,
											"end": 22237,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 22226,
											"end": 22229,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 22177,
											"end": 22238,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 22177,
											"end": 22238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 22177,
											"end": 22238,
											"name": "tag",
											"source": 7,
											"value": "455"
										},
										{
											"begin": 22177,
											"end": 22238,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22170,
											"end": 22238,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 22170,
											"end": 22238,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22247,
											"end": 22312,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "456"
										},
										{
											"begin": 22305,
											"end": 22311,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 22300,
											"end": 22303,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 22293,
											"end": 22297,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 22286,
											"end": 22291,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 22282,
											"end": 22298,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 22247,
											"end": 22312,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 22247,
											"end": 22312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 22247,
											"end": 22312,
											"name": "tag",
											"source": 7,
											"value": "456"
										},
										{
											"begin": 22247,
											"end": 22312,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22337,
											"end": 22366,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "457"
										},
										{
											"begin": 22359,
											"end": 22365,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 22337,
											"end": 22366,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 22337,
											"end": 22366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 22337,
											"end": 22366,
											"name": "tag",
											"source": 7,
											"value": "457"
										},
										{
											"begin": 22337,
											"end": 22366,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22332,
											"end": 22335,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 22328,
											"end": 22367,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 22321,
											"end": 22367,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 22321,
											"end": 22367,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22098,
											"end": 22373,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22016,
											"end": 22373,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 22016,
											"end": 22373,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 22016,
											"end": 22373,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22016,
											"end": 22373,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22016,
											"end": 22373,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 22379,
											"end": 22487,
											"name": "tag",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 22379,
											"end": 22487,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22456,
											"end": 22480,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "459"
										},
										{
											"begin": 22474,
											"end": 22479,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 22456,
											"end": 22480,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 22456,
											"end": 22480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 22456,
											"end": 22480,
											"name": "tag",
											"source": 7,
											"value": "459"
										},
										{
											"begin": 22456,
											"end": 22480,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22451,
											"end": 22454,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 22444,
											"end": 22481,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 22379,
											"end": 22487,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22379,
											"end": 22487,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22379,
											"end": 22487,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 22493,
											"end": 22583,
											"name": "tag",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 22493,
											"end": 22583,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22527,
											"end": 22534,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 22570,
											"end": 22575,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 22563,
											"end": 22576,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 22556,
											"end": 22577,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 22545,
											"end": 22577,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 22545,
											"end": 22577,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22493,
											"end": 22583,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 22493,
											"end": 22583,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 22493,
											"end": 22583,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22493,
											"end": 22583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 22589,
											"end": 22688,
											"name": "tag",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 22589,
											"end": 22688,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22660,
											"end": 22681,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "462"
										},
										{
											"begin": 22675,
											"end": 22680,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 22660,
											"end": 22681,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 22660,
											"end": 22681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 22660,
											"end": 22681,
											"name": "tag",
											"source": 7,
											"value": "462"
										},
										{
											"begin": 22660,
											"end": 22681,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22655,
											"end": 22658,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 22648,
											"end": 22682,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 22589,
											"end": 22688,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22589,
											"end": 22688,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22589,
											"end": 22688,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 22694,
											"end": 22799,
											"name": "tag",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 22694,
											"end": 22799,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22769,
											"end": 22792,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "464"
										},
										{
											"begin": 22786,
											"end": 22791,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 22769,
											"end": 22792,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 22769,
											"end": 22792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 22769,
											"end": 22792,
											"name": "tag",
											"source": 7,
											"value": "464"
										},
										{
											"begin": 22769,
											"end": 22792,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22764,
											"end": 22767,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 22757,
											"end": 22793,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 22694,
											"end": 22799,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22694,
											"end": 22799,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22694,
											"end": 22799,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 22805,
											"end": 22945,
											"name": "tag",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 22805,
											"end": 22945,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22898,
											"end": 22904,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 22932,
											"end": 22937,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 22926,
											"end": 22938,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 22916,
											"end": 22938,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 22916,
											"end": 22938,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22805,
											"end": 22945,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 22805,
											"end": 22945,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 22805,
											"end": 22945,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22805,
											"end": 22945,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 22951,
											"end": 23151,
											"name": "tag",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 22951,
											"end": 23151,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 23066,
											"end": 23077,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 23100,
											"end": 23106,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 23095,
											"end": 23098,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 23088,
											"end": 23107,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 23140,
											"end": 23144,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 23135,
											"end": 23138,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 23131,
											"end": 23145,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 23116,
											"end": 23145,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 23116,
											"end": 23145,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22951,
											"end": 23151,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 22951,
											"end": 23151,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 22951,
											"end": 23151,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22951,
											"end": 23151,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22951,
											"end": 23151,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 23157,
											"end": 23315,
											"name": "tag",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 23157,
											"end": 23315,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 23250,
											"end": 23254,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 23273,
											"end": 23276,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 23265,
											"end": 23276,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 23265,
											"end": 23276,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 23303,
											"end": 23307,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 23298,
											"end": 23301,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 23294,
											"end": 23308,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 23286,
											"end": 23308,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 23286,
											"end": 23308,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 23157,
											"end": 23315,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 23157,
											"end": 23315,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 23157,
											"end": 23315,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 23157,
											"end": 23315,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 23321,
											"end": 23398,
											"name": "tag",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 23321,
											"end": 23398,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 23358,
											"end": 23365,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 23387,
											"end": 23392,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 23376,
											"end": 23392,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 23376,
											"end": 23392,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 23321,
											"end": 23398,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 23321,
											"end": 23398,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 23321,
											"end": 23398,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 23321,
											"end": 23398,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 23404,
											"end": 23512,
											"name": "tag",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 23404,
											"end": 23512,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 23481,
											"end": 23505,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "470"
										},
										{
											"begin": 23499,
											"end": 23504,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 23481,
											"end": 23505,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 23481,
											"end": 23505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 23481,
											"end": 23505,
											"name": "tag",
											"source": 7,
											"value": "470"
										},
										{
											"begin": 23481,
											"end": 23505,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 23476,
											"end": 23479,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 23469,
											"end": 23506,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 23404,
											"end": 23512,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 23404,
											"end": 23512,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 23404,
											"end": 23512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 23600,
											"end": 24831,
											"name": "tag",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 23600,
											"end": 24831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 23711,
											"end": 23714,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 23747,
											"end": 23751,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 23742,
											"end": 23745,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 23738,
											"end": 23752,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 23847,
											"end": 23851,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 23840,
											"end": 23845,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 23836,
											"end": 23852,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 23830,
											"end": 23853,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 23866,
											"end": 23923,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "472"
										},
										{
											"begin": 23917,
											"end": 23921,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 23912,
											"end": 23915,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 23908,
											"end": 23922,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 23894,
											"end": 23906,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 23866,
											"end": 23923,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 23866,
											"end": 23923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 23866,
											"end": 23923,
											"name": "tag",
											"source": 7,
											"value": "472"
										},
										{
											"begin": 23866,
											"end": 23923,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 23762,
											"end": 23933,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 24021,
											"end": 24025,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 24014,
											"end": 24019,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 24010,
											"end": 24026,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 24004,
											"end": 24027,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 24040,
											"end": 24103,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "473"
										},
										{
											"begin": 24097,
											"end": 24101,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 24092,
											"end": 24095,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 24088,
											"end": 24102,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 24074,
											"end": 24086,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 24040,
											"end": 24103,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 24040,
											"end": 24103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 24040,
											"end": 24103,
											"name": "tag",
											"source": 7,
											"value": "473"
										},
										{
											"begin": 24040,
											"end": 24103,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 23943,
											"end": 24113,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 24198,
											"end": 24202,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 24191,
											"end": 24196,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 24187,
											"end": 24203,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 24181,
											"end": 24204,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 24251,
											"end": 24254,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 24245,
											"end": 24249,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 24241,
											"end": 24255,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 24234,
											"end": 24238,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 24229,
											"end": 24232,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 24225,
											"end": 24239,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 24218,
											"end": 24256,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 24277,
											"end": 24348,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "474"
										},
										{
											"begin": 24343,
											"end": 24347,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 24329,
											"end": 24341,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 24277,
											"end": 24348,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 24277,
											"end": 24348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 24277,
											"end": 24348,
											"name": "tag",
											"source": 7,
											"value": "474"
										},
										{
											"begin": 24277,
											"end": 24348,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 24269,
											"end": 24348,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 24269,
											"end": 24348,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 24123,
											"end": 24359,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 24452,
											"end": 24456,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 24445,
											"end": 24450,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 24441,
											"end": 24457,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 24435,
											"end": 24458,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 24505,
											"end": 24508,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 24499,
											"end": 24503,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 24495,
											"end": 24509,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 24488,
											"end": 24492,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 24483,
											"end": 24486,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 24479,
											"end": 24493,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 24472,
											"end": 24510,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 24531,
											"end": 24602,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "475"
										},
										{
											"begin": 24597,
											"end": 24601,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 24583,
											"end": 24595,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 24531,
											"end": 24602,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 24531,
											"end": 24602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 24531,
											"end": 24602,
											"name": "tag",
											"source": 7,
											"value": "475"
										},
										{
											"begin": 24531,
											"end": 24602,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 24523,
											"end": 24602,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 24523,
											"end": 24602,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 24369,
											"end": 24613,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 24712,
											"end": 24716,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 24705,
											"end": 24710,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 24701,
											"end": 24717,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 24695,
											"end": 24718,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 24731,
											"end": 24794,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "476"
										},
										{
											"begin": 24788,
											"end": 24792,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 24783,
											"end": 24786,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 24779,
											"end": 24793,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 24765,
											"end": 24777,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 24731,
											"end": 24794,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 24731,
											"end": 24794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 24731,
											"end": 24794,
											"name": "tag",
											"source": 7,
											"value": "476"
										},
										{
											"begin": 24731,
											"end": 24794,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 24623,
											"end": 24804,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 24821,
											"end": 24825,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 24814,
											"end": 24825,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 24814,
											"end": 24825,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 23716,
											"end": 24831,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 23600,
											"end": 24831,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 23600,
											"end": 24831,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 23600,
											"end": 24831,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 23600,
											"end": 24831,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 23600,
											"end": 24831,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 24919,
											"end": 25551,
											"name": "tag",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 24919,
											"end": 25551,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 25030,
											"end": 25033,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 25066,
											"end": 25070,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 25061,
											"end": 25064,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 25057,
											"end": 25071,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 25156,
											"end": 25160,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 25149,
											"end": 25154,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 25145,
											"end": 25161,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 25139,
											"end": 25162,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 25175,
											"end": 25238,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "478"
										},
										{
											"begin": 25232,
											"end": 25236,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 25227,
											"end": 25230,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 25223,
											"end": 25237,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 25209,
											"end": 25221,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 25175,
											"end": 25238,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 25175,
											"end": 25238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 25175,
											"end": 25238,
											"name": "tag",
											"source": 7,
											"value": "478"
										},
										{
											"begin": 25175,
											"end": 25238,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 25081,
											"end": 25248,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 25329,
											"end": 25333,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 25322,
											"end": 25327,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 25318,
											"end": 25334,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 25312,
											"end": 25335,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 25382,
											"end": 25385,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 25376,
											"end": 25380,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 25372,
											"end": 25386,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 25365,
											"end": 25369,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 25360,
											"end": 25363,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 25356,
											"end": 25370,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 25349,
											"end": 25387,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 25408,
											"end": 25513,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "479"
										},
										{
											"begin": 25508,
											"end": 25512,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 25494,
											"end": 25506,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 25408,
											"end": 25513,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 25408,
											"end": 25513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 25408,
											"end": 25513,
											"name": "tag",
											"source": 7,
											"value": "479"
										},
										{
											"begin": 25408,
											"end": 25513,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 25400,
											"end": 25513,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 25400,
											"end": 25513,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 25258,
											"end": 25524,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 25541,
											"end": 25545,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 25534,
											"end": 25545,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 25534,
											"end": 25545,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 25035,
											"end": 25551,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 24919,
											"end": 25551,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 24919,
											"end": 25551,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 24919,
											"end": 25551,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 24919,
											"end": 25551,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 24919,
											"end": 25551,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 25557,
											"end": 25817,
											"name": "tag",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 25557,
											"end": 25817,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 25678,
											"end": 25688,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 25713,
											"end": 25811,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "481"
										},
										{
											"begin": 25807,
											"end": 25810,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 25799,
											"end": 25805,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 25713,
											"end": 25811,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 25713,
											"end": 25811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 25713,
											"end": 25811,
											"name": "tag",
											"source": 7,
											"value": "481"
										},
										{
											"begin": 25713,
											"end": 25811,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 25699,
											"end": 25811,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 25699,
											"end": 25811,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 25557,
											"end": 25817,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 25557,
											"end": 25817,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 25557,
											"end": 25817,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 25557,
											"end": 25817,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 25557,
											"end": 25817,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 25823,
											"end": 25962,
											"name": "tag",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 25823,
											"end": 25962,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 25919,
											"end": 25923,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 25951,
											"end": 25955,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 25946,
											"end": 25949,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 25942,
											"end": 25956,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 25934,
											"end": 25956,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 25934,
											"end": 25956,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 25823,
											"end": 25962,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 25823,
											"end": 25962,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 25823,
											"end": 25962,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 25823,
											"end": 25962,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 26054,
											"end": 27153,
											"name": "tag",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 26054,
											"end": 27153,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 26215,
											"end": 26218,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 26244,
											"end": 26324,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "484"
										},
										{
											"begin": 26318,
											"end": 26323,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 26244,
											"end": 26324,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 26244,
											"end": 26324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 26244,
											"end": 26324,
											"name": "tag",
											"source": 7,
											"value": "484"
										},
										{
											"begin": 26244,
											"end": 26324,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 26340,
											"end": 26442,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "485"
										},
										{
											"begin": 26435,
											"end": 26441,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 26430,
											"end": 26433,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 26340,
											"end": 26442,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 26340,
											"end": 26442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 26340,
											"end": 26442,
											"name": "tag",
											"source": 7,
											"value": "485"
										},
										{
											"begin": 26340,
											"end": 26442,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 26333,
											"end": 26442,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 26333,
											"end": 26442,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 26468,
											"end": 26471,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 26513,
											"end": 26517,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 26505,
											"end": 26511,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 26501,
											"end": 26518,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 26496,
											"end": 26499,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 26492,
											"end": 26519,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 26543,
											"end": 26625,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "486"
										},
										{
											"begin": 26619,
											"end": 26624,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 26543,
											"end": 26625,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 26543,
											"end": 26625,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 26543,
											"end": 26625,
											"name": "tag",
											"source": 7,
											"value": "486"
										},
										{
											"begin": 26543,
											"end": 26625,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 26648,
											"end": 26655,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 26679,
											"end": 26680,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 26664,
											"end": 27108,
											"name": "tag",
											"source": 7,
											"value": "487"
										},
										{
											"begin": 26664,
											"end": 27108,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 26689,
											"end": 26695,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 26686,
											"end": 26687,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 26683,
											"end": 26696,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 26664,
											"end": 27108,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 26664,
											"end": 27108,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "489"
										},
										{
											"begin": 26664,
											"end": 27108,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 26760,
											"end": 26769,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 26754,
											"end": 26758,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 26750,
											"end": 26770,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 26745,
											"end": 26748,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 26738,
											"end": 26771,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 26811,
											"end": 26817,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 26805,
											"end": 26818,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 26839,
											"end": 26955,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "490"
										},
										{
											"begin": 26950,
											"end": 26954,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 26935,
											"end": 26948,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 26839,
											"end": 26955,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 26839,
											"end": 26955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 26839,
											"end": 26955,
											"name": "tag",
											"source": 7,
											"value": "490"
										},
										{
											"begin": 26839,
											"end": 26955,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 26831,
											"end": 26955,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 26831,
											"end": 26955,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 26978,
											"end": 27064,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "491"
										},
										{
											"begin": 27057,
											"end": 27063,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 26978,
											"end": 27064,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 26978,
											"end": 27064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 26978,
											"end": 27064,
											"name": "tag",
											"source": 7,
											"value": "491"
										},
										{
											"begin": 26978,
											"end": 27064,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 26968,
											"end": 27064,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 26968,
											"end": 27064,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 27093,
											"end": 27097,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 27088,
											"end": 27091,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 27084,
											"end": 27098,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 27077,
											"end": 27098,
											"name": "SWAP10",
											"source": 7
										},
										{
											"begin": 27077,
											"end": 27098,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 26724,
											"end": 27108,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 26711,
											"end": 26712,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 26708,
											"end": 26709,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 26704,
											"end": 26713,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 26699,
											"end": 26713,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 26699,
											"end": 26713,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 26664,
											"end": 27108,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "487"
										},
										{
											"begin": 26664,
											"end": 27108,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 26664,
											"end": 27108,
											"name": "tag",
											"source": 7,
											"value": "489"
										},
										{
											"begin": 26664,
											"end": 27108,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 26668,
											"end": 26682,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 27124,
											"end": 27128,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 27117,
											"end": 27128,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": 27117,
											"end": 27128,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 27144,
											"end": 27147,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 27137,
											"end": 27147,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 27137,
											"end": 27147,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 26220,
											"end": 27153,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 26220,
											"end": 27153,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 26220,
											"end": 27153,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 26220,
											"end": 27153,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 26220,
											"end": 27153,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 26054,
											"end": 27153,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 26054,
											"end": 27153,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 26054,
											"end": 27153,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 26054,
											"end": 27153,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 26054,
											"end": 27153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 27237,
											"end": 27927,
											"name": "tag",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 27237,
											"end": 27927,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 27372,
											"end": 27376,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 27367,
											"end": 27370,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 27363,
											"end": 27377,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 27461,
											"end": 27465,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 27454,
											"end": 27459,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 27450,
											"end": 27466,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 27444,
											"end": 27467,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 27480,
											"end": 27541,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "493"
										},
										{
											"begin": 27535,
											"end": 27539,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 27530,
											"end": 27533,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 27526,
											"end": 27540,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 27512,
											"end": 27524,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 27480,
											"end": 27541,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 27480,
											"end": 27541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 27480,
											"end": 27541,
											"name": "tag",
											"source": 7,
											"value": "493"
										},
										{
											"begin": 27480,
											"end": 27541,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 27387,
											"end": 27551,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 27645,
											"end": 27649,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 27638,
											"end": 27643,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 27634,
											"end": 27650,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 27628,
											"end": 27651,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 27664,
											"end": 27727,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "494"
										},
										{
											"begin": 27721,
											"end": 27725,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 27716,
											"end": 27719,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 27712,
											"end": 27726,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 27698,
											"end": 27710,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 27664,
											"end": 27727,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 27664,
											"end": 27727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 27664,
											"end": 27727,
											"name": "tag",
											"source": 7,
											"value": "494"
										},
										{
											"begin": 27664,
											"end": 27727,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 27561,
											"end": 27737,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 27830,
											"end": 27834,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 27823,
											"end": 27828,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 27819,
											"end": 27835,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 27813,
											"end": 27836,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 27849,
											"end": 27910,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "495"
										},
										{
											"begin": 27904,
											"end": 27908,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 27899,
											"end": 27902,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 27895,
											"end": 27909,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 27881,
											"end": 27893,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 27849,
											"end": 27910,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 27849,
											"end": 27910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 27849,
											"end": 27910,
											"name": "tag",
											"source": 7,
											"value": "495"
										},
										{
											"begin": 27849,
											"end": 27910,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 27747,
											"end": 27920,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 27341,
											"end": 27927,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 27237,
											"end": 27927,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 27237,
											"end": 27927,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 27237,
											"end": 27927,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 28021,
											"end": 30226,
											"name": "tag",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 28021,
											"end": 30226,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 28148,
											"end": 28151,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 28184,
											"end": 28190,
											"name": "PUSH",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 28179,
											"end": 28182,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 28175,
											"end": 28191,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 28273,
											"end": 28277,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 28266,
											"end": 28271,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 28262,
											"end": 28278,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 28256,
											"end": 28279,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 28326,
											"end": 28329,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 28320,
											"end": 28324,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 28316,
											"end": 28330,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 28309,
											"end": 28313,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 28304,
											"end": 28307,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 28300,
											"end": 28314,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 28293,
											"end": 28331,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 28352,
											"end": 28425,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "497"
										},
										{
											"begin": 28420,
											"end": 28424,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 28406,
											"end": 28418,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 28352,
											"end": 28425,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 28352,
											"end": 28425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 28352,
											"end": 28425,
											"name": "tag",
											"source": 7,
											"value": "497"
										},
										{
											"begin": 28352,
											"end": 28425,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 28344,
											"end": 28425,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 28344,
											"end": 28425,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 28201,
											"end": 28436,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 28520,
											"end": 28524,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 28513,
											"end": 28518,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 28509,
											"end": 28525,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 28503,
											"end": 28526,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 28573,
											"end": 28576,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 28567,
											"end": 28571,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 28563,
											"end": 28577,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 28556,
											"end": 28560,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 28551,
											"end": 28554,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 28547,
											"end": 28561,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 28540,
											"end": 28578,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 28599,
											"end": 28672,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "498"
										},
										{
											"begin": 28667,
											"end": 28671,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 28653,
											"end": 28665,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 28599,
											"end": 28672,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 28599,
											"end": 28672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 28599,
											"end": 28672,
											"name": "tag",
											"source": 7,
											"value": "498"
										},
										{
											"begin": 28599,
											"end": 28672,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 28591,
											"end": 28672,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 28591,
											"end": 28672,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 28446,
											"end": 28683,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 28769,
											"end": 28773,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 28762,
											"end": 28767,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 28758,
											"end": 28774,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 28752,
											"end": 28775,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 28788,
											"end": 28851,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "499"
										},
										{
											"begin": 28845,
											"end": 28849,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 28840,
											"end": 28843,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 28836,
											"end": 28850,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 28822,
											"end": 28834,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 28788,
											"end": 28851,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 28788,
											"end": 28851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 28788,
											"end": 28851,
											"name": "tag",
											"source": 7,
											"value": "499"
										},
										{
											"begin": 28788,
											"end": 28851,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 28693,
											"end": 28861,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 28943,
											"end": 28947,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 28936,
											"end": 28941,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 28932,
											"end": 28948,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 28926,
											"end": 28949,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 28996,
											"end": 28999,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 28990,
											"end": 28994,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 28986,
											"end": 29000,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 28979,
											"end": 28983,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 28974,
											"end": 28977,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 28970,
											"end": 28984,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 28963,
											"end": 29001,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 29022,
											"end": 29095,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "500"
										},
										{
											"begin": 29090,
											"end": 29094,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 29076,
											"end": 29088,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 29022,
											"end": 29095,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 29022,
											"end": 29095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 29022,
											"end": 29095,
											"name": "tag",
											"source": 7,
											"value": "500"
										},
										{
											"begin": 29022,
											"end": 29095,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 29014,
											"end": 29095,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 29014,
											"end": 29095,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 28871,
											"end": 29106,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 29199,
											"end": 29203,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 29192,
											"end": 29197,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 29188,
											"end": 29204,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 29182,
											"end": 29205,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 29218,
											"end": 29275,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "501"
										},
										{
											"begin": 29269,
											"end": 29273,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 29264,
											"end": 29267,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 29260,
											"end": 29274,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 29246,
											"end": 29258,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 29218,
											"end": 29275,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 29218,
											"end": 29275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 29218,
											"end": 29275,
											"name": "tag",
											"source": 7,
											"value": "501"
										},
										{
											"begin": 29218,
											"end": 29275,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 29116,
											"end": 29285,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 29372,
											"end": 29376,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 29365,
											"end": 29370,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 29361,
											"end": 29377,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 29355,
											"end": 29378,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 29391,
											"end": 29452,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "502"
										},
										{
											"begin": 29446,
											"end": 29450,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 29441,
											"end": 29444,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 29437,
											"end": 29451,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 29423,
											"end": 29435,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 29391,
											"end": 29452,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 29391,
											"end": 29452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 29391,
											"end": 29452,
											"name": "tag",
											"source": 7,
											"value": "502"
										},
										{
											"begin": 29391,
											"end": 29452,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 29295,
											"end": 29462,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 29553,
											"end": 29557,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 29546,
											"end": 29551,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 29542,
											"end": 29558,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 29536,
											"end": 29559,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 29572,
											"end": 29629,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "503"
										},
										{
											"begin": 29623,
											"end": 29627,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 29618,
											"end": 29621,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 29614,
											"end": 29628,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 29600,
											"end": 29612,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 29572,
											"end": 29629,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 29572,
											"end": 29629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 29572,
											"end": 29629,
											"name": "tag",
											"source": 7,
											"value": "503"
										},
										{
											"begin": 29572,
											"end": 29629,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 29472,
											"end": 29639,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 29726,
											"end": 29730,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 29719,
											"end": 29724,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 29715,
											"end": 29731,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 29709,
											"end": 29732,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 29779,
											"end": 29782,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 29773,
											"end": 29777,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 29769,
											"end": 29783,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 29762,
											"end": 29766,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 29757,
											"end": 29760,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 29753,
											"end": 29767,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 29746,
											"end": 29784,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 29805,
											"end": 29960,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "504"
										},
										{
											"begin": 29955,
											"end": 29959,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 29941,
											"end": 29953,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 29805,
											"end": 29960,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 29805,
											"end": 29960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 29805,
											"end": 29960,
											"name": "tag",
											"source": 7,
											"value": "504"
										},
										{
											"begin": 29805,
											"end": 29960,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 29797,
											"end": 29960,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 29797,
											"end": 29960,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 29649,
											"end": 29971,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 30055,
											"end": 30061,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 30048,
											"end": 30053,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 30044,
											"end": 30062,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 30038,
											"end": 30063,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 30076,
											"end": 30189,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "505"
										},
										{
											"begin": 30181,
											"end": 30187,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 30176,
											"end": 30179,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 30172,
											"end": 30188,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 30158,
											"end": 30170,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 30076,
											"end": 30189,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 30076,
											"end": 30189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 30076,
											"end": 30189,
											"name": "tag",
											"source": 7,
											"value": "505"
										},
										{
											"begin": 30076,
											"end": 30189,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 29981,
											"end": 30199,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 30216,
											"end": 30220,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 30209,
											"end": 30220,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 30209,
											"end": 30220,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 28153,
											"end": 30226,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 28021,
											"end": 30226,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 28021,
											"end": 30226,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 28021,
											"end": 30226,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 28021,
											"end": 30226,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 28021,
											"end": 30226,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 30232,
											"end": 30621,
											"name": "tag",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 30232,
											"end": 30621,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 30383,
											"end": 30387,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 30421,
											"end": 30423,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 30410,
											"end": 30419,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 30406,
											"end": 30424,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 30398,
											"end": 30424,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 30398,
											"end": 30424,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 30470,
											"end": 30479,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 30464,
											"end": 30468,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 30460,
											"end": 30480,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 30456,
											"end": 30457,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 30445,
											"end": 30454,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 30441,
											"end": 30458,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 30434,
											"end": 30481,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 30498,
											"end": 30614,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "507"
										},
										{
											"begin": 30609,
											"end": 30613,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 30600,
											"end": 30606,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 30498,
											"end": 30614,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 30498,
											"end": 30614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 30498,
											"end": 30614,
											"name": "tag",
											"source": 7,
											"value": "507"
										},
										{
											"begin": 30498,
											"end": 30614,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 30490,
											"end": 30614,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 30490,
											"end": 30614,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 30232,
											"end": 30621,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 30232,
											"end": 30621,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 30232,
											"end": 30621,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 30232,
											"end": 30621,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 30232,
											"end": 30621,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 30627,
											"end": 30731,
											"name": "tag",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 30627,
											"end": 30731,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 30672,
											"end": 30679,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 30701,
											"end": 30725,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "509"
										},
										{
											"begin": 30719,
											"end": 30724,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 30701,
											"end": 30725,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 30701,
											"end": 30725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 30701,
											"end": 30725,
											"name": "tag",
											"source": 7,
											"value": "509"
										},
										{
											"begin": 30701,
											"end": 30725,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 30690,
											"end": 30725,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 30690,
											"end": 30725,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 30627,
											"end": 30731,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 30627,
											"end": 30731,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 30627,
											"end": 30731,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 30627,
											"end": 30731,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 30737,
											"end": 30875,
											"name": "tag",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 30737,
											"end": 30875,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 30818,
											"end": 30850,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "511"
										},
										{
											"begin": 30844,
											"end": 30849,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 30818,
											"end": 30850,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 30818,
											"end": 30850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 30818,
											"end": 30850,
											"name": "tag",
											"source": 7,
											"value": "511"
										},
										{
											"begin": 30818,
											"end": 30850,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 30811,
											"end": 30816,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 30808,
											"end": 30851,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 30798,
											"end": 30869,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "512"
										},
										{
											"begin": 30798,
											"end": 30869,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 30865,
											"end": 30866,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 30862,
											"end": 30863,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 30855,
											"end": 30867,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 30798,
											"end": 30869,
											"name": "tag",
											"source": 7,
											"value": "512"
										},
										{
											"begin": 30798,
											"end": 30869,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 30737,
											"end": 30875,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 30737,
											"end": 30875,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 30881,
											"end": 31040,
											"name": "tag",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 30881,
											"end": 31040,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 30946,
											"end": 30951,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 30977,
											"end": 30983,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 30971,
											"end": 30984,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 30962,
											"end": 30984,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 30962,
											"end": 30984,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 30993,
											"end": 31034,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "514"
										},
										{
											"begin": 31028,
											"end": 31033,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 30993,
											"end": 31034,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 30993,
											"end": 31034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 30993,
											"end": 31034,
											"name": "tag",
											"source": 7,
											"value": "514"
										},
										{
											"begin": 30993,
											"end": 31034,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 30881,
											"end": 31040,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 30881,
											"end": 31040,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 30881,
											"end": 31040,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 30881,
											"end": 31040,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 30881,
											"end": 31040,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 31046,
											"end": 31565,
											"name": "tag",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 31046,
											"end": 31565,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 31131,
											"end": 31137,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 31139,
											"end": 31145,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 31188,
											"end": 31190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 31176,
											"end": 31185,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 31167,
											"end": 31174,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 31163,
											"end": 31186,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 31159,
											"end": 31191,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 31156,
											"end": 31275,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 31156,
											"end": 31275,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "516"
										},
										{
											"begin": 31156,
											"end": 31275,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 31194,
											"end": 31273,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "517"
										},
										{
											"begin": 31194,
											"end": 31273,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 31194,
											"end": 31273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 31194,
											"end": 31273,
											"name": "tag",
											"source": 7,
											"value": "517"
										},
										{
											"begin": 31194,
											"end": 31273,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 31156,
											"end": 31275,
											"name": "tag",
											"source": 7,
											"value": "516"
										},
										{
											"begin": 31156,
											"end": 31275,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 31314,
											"end": 31315,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 31339,
											"end": 31401,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "518"
										},
										{
											"begin": 31393,
											"end": 31400,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 31384,
											"end": 31390,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 31373,
											"end": 31382,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 31369,
											"end": 31391,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 31339,
											"end": 31401,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 31339,
											"end": 31401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 31339,
											"end": 31401,
											"name": "tag",
											"source": 7,
											"value": "518"
										},
										{
											"begin": 31339,
											"end": 31401,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 31329,
											"end": 31401,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 31329,
											"end": 31401,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 31285,
											"end": 31411,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 31450,
											"end": 31452,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 31476,
											"end": 31548,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "519"
										},
										{
											"begin": 31540,
											"end": 31547,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 31531,
											"end": 31537,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 31520,
											"end": 31529,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 31516,
											"end": 31538,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 31476,
											"end": 31548,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 31476,
											"end": 31548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 31476,
											"end": 31548,
											"name": "tag",
											"source": 7,
											"value": "519"
										},
										{
											"begin": 31476,
											"end": 31548,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 31466,
											"end": 31548,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 31466,
											"end": 31548,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 31421,
											"end": 31558,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 31046,
											"end": 31565,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 31046,
											"end": 31565,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 31046,
											"end": 31565,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 31046,
											"end": 31565,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 31046,
											"end": 31565,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 31046,
											"end": 31565,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 31571,
											"end": 31751,
											"name": "tag",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 31571,
											"end": 31751,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 31619,
											"end": 31696,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 31616,
											"end": 31617,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 31609,
											"end": 31697,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 31716,
											"end": 31720,
											"name": "PUSH",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 31713,
											"end": 31714,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 31706,
											"end": 31721,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 31740,
											"end": 31744,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 31737,
											"end": 31738,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 31730,
											"end": 31745,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"hbar/SmartContracts/Auction2/hts-precompile/ExpiryHelper.sol",
								"hbar/SmartContracts/Auction2/hts-precompile/FeeHelper.sol",
								"hbar/SmartContracts/Auction2/hts-precompile/HederaResponseCodes.sol",
								"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol",
								"hbar/SmartContracts/Auction2/hts-precompile/IHederaTokenService.sol",
								"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol",
								"hbar/SmartContracts/Tests/MintAndTransfer3.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"createNft(string,string,string,uint32,uint32)": "a1a79cde",
							"mintNft(address,bytes[])": "0a284cb6",
							"transferNft(address,address,int64)": "82b562aa"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"memo\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"maxSupply\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"autoRenewPeriod\",\"type\":\"uint32\"}],\"name\":\"createNft\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bytes[]\",\"name\":\"metadata\",\"type\":\"bytes[]\"}],\"name\":\"mintNft\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"serial\",\"type\":\"int64\"}],\"name\":\"transferNft\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":\"NFTCreator\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"hbar/SmartContracts/Auction2/hts-precompile/ExpiryHelper.sol\":{\"keccak256\":\"0x3150d37980e98a44321db698f48b60a1524148430a8a0d0834384fe930d73c3a\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7bc64280edb76f4ee24f57cc27f78a79ac1e399730b11559847d304dfb72ec66\",\"dweb:/ipfs/Qmf7JsXjkd8iBPBcJSJGvD2VnHpTphEJLaUspB6mM7F5MY\"]},\"hbar/SmartContracts/Auction2/hts-precompile/FeeHelper.sol\":{\"keccak256\":\"0xa32e4e1b0247b3d57315c606d18b2b513df6678ae1c1c0b730f646b23a0fb2bb\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5c4ff72e6f513df35a937b005e467a3ae883a6cfab754cdbebf7ff619be30459\",\"dweb:/ipfs/QmYiPpnn1ij9TmddBRkEVL2Tf8mKfiqaHn8zJeScAFLMws\"]},\"hbar/SmartContracts/Auction2/hts-precompile/HederaResponseCodes.sol\":{\"keccak256\":\"0x9af70d38d34a234475b792a23c59f8cae63bf9d3407d0fb0a3112a40ce25627b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://90d2abceb9a6f0244395d92abcad6669f5a4696fb876079271fbc4c32b7752f7\",\"dweb:/ipfs/QmaKsVGmmcEwj6rcBmvbdKL213Seq8HwZTXf1DYnoaSELZ\"]},\"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol\":{\"keccak256\":\"0x01265799f3f9010d1a5597f4a15a684ff8793bb426493951741b92d5bcb40cac\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3734ef870596280f3177545c02c74f4d25fec55388a0785fa73dbdb1af064b52\",\"dweb:/ipfs/QmW2WzmvTqumStJVs9absA8SC6mHpFN1FbC4rw5BxtVpRj\"]},\"hbar/SmartContracts/Auction2/hts-precompile/IHederaTokenService.sol\":{\"keccak256\":\"0x1df4449743626e64ff38122822b5fa56466e14bf3944f7b679eae145c05f0112\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0d63c9a9ef88b6082fd0ce110d23a057e8f9f3360a5d4b7195b7d859788f0833\",\"dweb:/ipfs/QmNUKRfuFiCxMW9qyqh8ytWMEHMQxH3Lr3v5vAjTrt2Mj2\"]},\"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol\":{\"keccak256\":\"0x1c445127746a07dc4bdb8ea93cd151fbec3b686c9d7ee5845c875475eb89d8c3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e0253869a15bd8d06a2a45b8cefdcefc64e4aee675c5ac5d5465ca2bb67d64df\",\"dweb:/ipfs/QmabBXMqR3avxQ6nHeqFXmVhGpfNH5bZXP9zaBRDZ7WYtN\"]},\"hbar/SmartContracts/Tests/MintAndTransfer3.sol\":{\"keccak256\":\"0xf6144b1b377c03ece561d2bc26a56065ea5c9984d8a67d30f0eac2504467ecf0\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://1c2d32586ae3b11342260e512234471706bd810352ab73c42dfdd9811d23fd25\",\"dweb:/ipfs/QmRwa6jYAmuB2XDZwUTRfLBr9MFHd9YbzL5eyntoe6cgEK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2718,
								"contract": "hbar/SmartContracts/Tests/MintAndTransfer3.sol:NFTCreator",
								"label": "supplyContract",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 2723,
								"contract": "hbar/SmartContracts/Tests/MintAndTransfer3.sol:NFTCreator",
								"label": "keyTypes",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_enum(KeyType)2731,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_enum(KeyType)2731": {
								"encoding": "inplace",
								"label": "enum KeyHelper.KeyType",
								"numberOfBytes": "1"
							},
							"t_mapping(t_enum(KeyType)2731,t_uint256)": {
								"encoding": "mapping",
								"key": "t_enum(KeyType)2731",
								"label": "mapping(enum KeyHelper.KeyType => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n  --> hbar/SmartContracts/Auction2/hts-precompile/ExpiryHelper.sol:10:5:\n   |\n10 |     function createAutoRenewExpiry(\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 487,
					"file": "hbar/SmartContracts/Auction2/hts-precompile/ExpiryHelper.sol",
					"start": 210
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n  --> hbar/SmartContracts/Auction2/hts-precompile/ExpiryHelper.sol:18:5:\n   |\n18 |     function createSecondExpiry(uint32 second) internal view returns (IHederaTokenService.Expiry memory expiry) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 640,
					"file": "hbar/SmartContracts/Auction2/hts-precompile/ExpiryHelper.sol",
					"start": 493
				},
				"type": "Warning"
			}
		],
		"sources": {
			"hbar/SmartContracts/Auction2/hts-precompile/ExpiryHelper.sol": {
				"ast": {
					"absolutePath": "hbar/SmartContracts/Auction2/hts-precompile/ExpiryHelper.sol",
					"exportedSymbols": {
						"Bits": [
							3307
						],
						"ExpiryHelper": [
							45
						],
						"FeeHelper": [
							361
						],
						"HederaResponseCodes": [
							880
						],
						"HederaTokenService": [
							2002
						],
						"IHederaTokenService": [
							2709
						],
						"KeyHelper": [
							3283
						]
					},
					"id": 46,
					"license": "Apache-2.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "39:31:0"
						},
						{
							"id": 2,
							"literals": [
								"experimental",
								"ABIEncoderV2"
							],
							"nodeType": "PragmaDirective",
							"src": "71:33:0"
						},
						{
							"absolutePath": "hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol",
							"file": "./HederaTokenService.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 46,
							"sourceUnit": 2003,
							"src": "106:34:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "hbar/SmartContracts/Auction2/hts-precompile/FeeHelper.sol",
							"file": "./FeeHelper.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 46,
							"sourceUnit": 362,
							"src": "141:25:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "FeeHelper",
										"nameLocations": [
											"193:9:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 361,
										"src": "193:9:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "193:9:0"
								}
							],
							"canonicalName": "ExpiryHelper",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 45,
							"linearizedBaseContracts": [
								45,
								361,
								3283
							],
							"name": "ExpiryHelper",
							"nameLocation": "177:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 28,
										"nodeType": "Block",
										"src": "378:109:0",
										"statements": [
											{
												"expression": {
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 16,
															"name": "expiry",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 14,
															"src": "388:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Expiry_$2035_memory_ptr",
																"typeString": "struct IHederaTokenService.Expiry memory"
															}
														},
														"id": 18,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "395:16:0",
														"memberName": "autoRenewAccount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2032,
														"src": "388:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 19,
														"name": "autoRenewAccount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "414:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "388:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "388:42:0"
											},
											{
												"expression": {
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 22,
															"name": "expiry",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 14,
															"src": "440:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Expiry_$2035_memory_ptr",
																"typeString": "struct IHederaTokenService.Expiry memory"
															}
														},
														"id": 24,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "447:15:0",
														"memberName": "autoRenewPeriod",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2034,
														"src": "440:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 25,
														"name": "autoRenewPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "465:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "440:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 27,
												"nodeType": "ExpressionStatement",
												"src": "440:40:0"
											}
										]
									},
									"id": 29,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "createAutoRenewExpiry",
									"nameLocation": "219:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "autoRenewAccount",
												"nameLocation": "258:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "250:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 7,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "250:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "autoRenewPeriod",
												"nameLocation": "291:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "284:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 9,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "284:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "240:72:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "expiry",
												"nameLocation": "370:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "336:40:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Expiry_$2035_memory_ptr",
													"typeString": "struct IHederaTokenService.Expiry"
												},
												"typeName": {
													"id": 13,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 12,
														"name": "IHederaTokenService.Expiry",
														"nameLocations": [
															"336:19:0",
															"356:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2035,
														"src": "336:26:0"
													},
													"referencedDeclaration": 2035,
													"src": "336:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Expiry_$2035_storage_ptr",
														"typeString": "struct IHederaTokenService.Expiry"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "335:42:0"
									},
									"scope": 45,
									"src": "210:277:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "601:39:0",
										"statements": [
											{
												"expression": {
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 37,
															"name": "expiry",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 35,
															"src": "611:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Expiry_$2035_memory_ptr",
																"typeString": "struct IHederaTokenService.Expiry memory"
															}
														},
														"id": 39,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "618:6:0",
														"memberName": "second",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2030,
														"src": "611:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 40,
														"name": "second",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 31,
														"src": "627:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "611:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "611:22:0"
											}
										]
									},
									"id": 44,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "createSecondExpiry",
									"nameLocation": "502:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "second",
												"nameLocation": "528:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "521:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 30,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "521:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "520:15:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "expiry",
												"nameLocation": "593:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "559:40:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Expiry_$2035_memory_ptr",
													"typeString": "struct IHederaTokenService.Expiry"
												},
												"typeName": {
													"id": 34,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 33,
														"name": "IHederaTokenService.Expiry",
														"nameLocations": [
															"559:19:0",
															"579:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2035,
														"src": "559:26:0"
													},
													"referencedDeclaration": 2035,
													"src": "559:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Expiry_$2035_storage_ptr",
														"typeString": "struct IHederaTokenService.Expiry"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "558:42:0"
									},
									"scope": 45,
									"src": "493:147:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 46,
							"src": "168:474:0",
							"usedErrors": []
						}
					],
					"src": "39:603:0"
				},
				"id": 0
			},
			"hbar/SmartContracts/Auction2/hts-precompile/FeeHelper.sol": {
				"ast": {
					"absolutePath": "hbar/SmartContracts/Auction2/hts-precompile/FeeHelper.sol",
					"exportedSymbols": {
						"Bits": [
							3307
						],
						"FeeHelper": [
							361
						],
						"HederaResponseCodes": [
							880
						],
						"HederaTokenService": [
							2002
						],
						"IHederaTokenService": [
							2709
						],
						"KeyHelper": [
							3283
						]
					},
					"id": 362,
					"license": "Apache-2.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 47,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "39:31:1"
						},
						{
							"id": 48,
							"literals": [
								"experimental",
								"ABIEncoderV2"
							],
							"nodeType": "PragmaDirective",
							"src": "71:33:1"
						},
						{
							"absolutePath": "hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol",
							"file": "./HederaTokenService.sol",
							"id": 49,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 362,
							"sourceUnit": 2003,
							"src": "106:34:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "hbar/SmartContracts/Auction2/hts-precompile/HederaResponseCodes.sol",
							"file": "./HederaResponseCodes.sol",
							"id": 50,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 362,
							"sourceUnit": 881,
							"src": "141:35:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "hbar/SmartContracts/Auction2/hts-precompile/IHederaTokenService.sol",
							"file": "./IHederaTokenService.sol",
							"id": 51,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 362,
							"sourceUnit": 2710,
							"src": "177:35:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol",
							"file": "./KeyHelper.sol",
							"id": 52,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 362,
							"sourceUnit": 3308,
							"src": "213:25:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 53,
										"name": "KeyHelper",
										"nameLocations": [
											"262:9:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3283,
										"src": "262:9:1"
									},
									"id": 54,
									"nodeType": "InheritanceSpecifier",
									"src": "262:9:1"
								}
							],
							"canonicalName": "FeeHelper",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 361,
							"linearizedBaseContracts": [
								361,
								3283
							],
							"name": "FeeHelper",
							"nameLocation": "249:9:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "435:131:1",
										"statements": [
											{
												"expression": {
													"id": 68,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 64,
															"name": "fixedFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 62,
															"src": "445:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FixedFee_$2148_memory_ptr",
																"typeString": "struct IHederaTokenService.FixedFee memory"
															}
														},
														"id": 66,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "454:6:1",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2139,
														"src": "445:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 67,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "463:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "445:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 69,
												"nodeType": "ExpressionStatement",
												"src": "445:24:1"
											},
											{
												"expression": {
													"id": 74,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 70,
															"name": "fixedFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 62,
															"src": "479:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FixedFee_$2148_memory_ptr",
																"typeString": "struct IHederaTokenService.FixedFee memory"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "488:18:1",
														"memberName": "useHbarsForPayment",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2143,
														"src": "479:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 73,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "509:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "479:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 75,
												"nodeType": "ExpressionStatement",
												"src": "479:34:1"
											},
											{
												"expression": {
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 76,
															"name": "fixedFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 62,
															"src": "523:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FixedFee_$2148_memory_ptr",
																"typeString": "struct IHederaTokenService.FixedFee memory"
															}
														},
														"id": 78,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "532:12:1",
														"memberName": "feeCollector",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2147,
														"src": "523:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 79,
														"name": "feeCollector",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 58,
														"src": "547:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "523:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "523:36:1"
											}
										]
									},
									"id": 83,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "createFixedHbarFee",
									"nameLocation": "288:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "323:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "316:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 55,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "316:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "feeCollector",
												"nameLocation": "347:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "339:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 57,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "339:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "306:59:1"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "fixedFee",
												"nameLocation": "425:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "389:44:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedFee_$2148_memory_ptr",
													"typeString": "struct IHederaTokenService.FixedFee"
												},
												"typeName": {
													"id": 61,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 60,
														"name": "IHederaTokenService.FixedFee",
														"nameLocations": [
															"389:19:1",
															"409:8:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2148,
														"src": "389:28:1"
													},
													"referencedDeclaration": 2148,
													"src": "389:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedFee_$2148_storage_ptr",
														"typeString": "struct IHederaTokenService.FixedFee"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "388:46:1"
									},
									"scope": 361,
									"src": "279:287:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 113,
										"nodeType": "Block",
										"src": "754:123:1",
										"statements": [
											{
												"expression": {
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 95,
															"name": "fixedFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 93,
															"src": "764:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FixedFee_$2148_memory_ptr",
																"typeString": "struct IHederaTokenService.FixedFee memory"
															}
														},
														"id": 97,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "773:6:1",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2139,
														"src": "764:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 98,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 85,
														"src": "782:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "764:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 100,
												"nodeType": "ExpressionStatement",
												"src": "764:24:1"
											},
											{
												"expression": {
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 101,
															"name": "fixedFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 93,
															"src": "798:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FixedFee_$2148_memory_ptr",
																"typeString": "struct IHederaTokenService.FixedFee memory"
															}
														},
														"id": 103,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "807:7:1",
														"memberName": "tokenId",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2141,
														"src": "798:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 104,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 87,
														"src": "817:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "798:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 106,
												"nodeType": "ExpressionStatement",
												"src": "798:26:1"
											},
											{
												"expression": {
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 107,
															"name": "fixedFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 93,
															"src": "834:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FixedFee_$2148_memory_ptr",
																"typeString": "struct IHederaTokenService.FixedFee memory"
															}
														},
														"id": 109,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "843:12:1",
														"memberName": "feeCollector",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2147,
														"src": "834:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 110,
														"name": "feeCollector",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 89,
														"src": "858:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "834:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 112,
												"nodeType": "ExpressionStatement",
												"src": "834:36:1"
											}
										]
									},
									"id": 114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "createFixedTokenFee",
									"nameLocation": "581:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "617:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "610:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 84,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "610:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "641:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "633:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 86,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "633:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "feeCollector",
												"nameLocation": "666:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "658:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 88,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:84:1"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "fixedFee",
												"nameLocation": "744:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "708:44:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedFee_$2148_memory_ptr",
													"typeString": "struct IHederaTokenService.FixedFee"
												},
												"typeName": {
													"id": 92,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 91,
														"name": "IHederaTokenService.FixedFee",
														"nameLocations": [
															"708:19:1",
															"728:8:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2148,
														"src": "708:28:1"
													},
													"referencedDeclaration": 2148,
													"src": "708:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedFee_$2148_storage_ptr",
														"typeString": "struct IHederaTokenService.FixedFee"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "707:46:1"
									},
									"scope": 361,
									"src": "572:305:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 142,
										"nodeType": "Block",
										"src": "1050:138:1",
										"statements": [
											{
												"expression": {
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 124,
															"name": "fixedFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 122,
															"src": "1060:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FixedFee_$2148_memory_ptr",
																"typeString": "struct IHederaTokenService.FixedFee memory"
															}
														},
														"id": 126,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1069:6:1",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2139,
														"src": "1060:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 127,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 116,
														"src": "1078:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "1060:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 129,
												"nodeType": "ExpressionStatement",
												"src": "1060:24:1"
											},
											{
												"expression": {
													"id": 134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 130,
															"name": "fixedFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 122,
															"src": "1094:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FixedFee_$2148_memory_ptr",
																"typeString": "struct IHederaTokenService.FixedFee memory"
															}
														},
														"id": 132,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1103:25:1",
														"memberName": "useCurrentTokenForPayment",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2145,
														"src": "1094:34:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 133,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1131:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1094:41:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 135,
												"nodeType": "ExpressionStatement",
												"src": "1094:41:1"
											},
											{
												"expression": {
													"id": 140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 136,
															"name": "fixedFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 122,
															"src": "1145:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FixedFee_$2148_memory_ptr",
																"typeString": "struct IHederaTokenService.FixedFee memory"
															}
														},
														"id": 138,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1154:12:1",
														"memberName": "feeCollector",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2147,
														"src": "1145:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 139,
														"name": "feeCollector",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 118,
														"src": "1169:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1145:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 141,
												"nodeType": "ExpressionStatement",
												"src": "1145:36:1"
											}
										]
									},
									"id": 143,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "createFixedSelfDenominatedFee",
									"nameLocation": "892:29:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "938:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "931:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 115,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "931:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "feeCollector",
												"nameLocation": "962:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "954:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "954:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "921:59:1"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "fixedFee",
												"nameLocation": "1040:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "1004:44:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedFee_$2148_memory_ptr",
													"typeString": "struct IHederaTokenService.FixedFee"
												},
												"typeName": {
													"id": 121,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 120,
														"name": "IHederaTokenService.FixedFee",
														"nameLocations": [
															"1004:19:1",
															"1024:8:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2148,
														"src": "1004:28:1"
													},
													"referencedDeclaration": 2148,
													"src": "1004:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedFee_$2148_storage_ptr",
														"typeString": "struct IHederaTokenService.FixedFee"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1003:46:1"
									},
									"scope": 361,
									"src": "883:305:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 181,
										"nodeType": "Block",
										"src": "1421:207:1",
										"statements": [
											{
												"expression": {
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 157,
															"name": "fractionalFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 155,
															"src": "1431:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FractionalFee_$2161_memory_ptr",
																"typeString": "struct IHederaTokenService.FractionalFee memory"
															}
														},
														"id": 159,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1445:9:1",
														"memberName": "numerator",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2150,
														"src": "1431:23:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 160,
														"name": "numerator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 145,
														"src": "1457:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "1431:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 162,
												"nodeType": "ExpressionStatement",
												"src": "1431:35:1"
											},
											{
												"expression": {
													"id": 167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 163,
															"name": "fractionalFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 155,
															"src": "1476:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FractionalFee_$2161_memory_ptr",
																"typeString": "struct IHederaTokenService.FractionalFee memory"
															}
														},
														"id": 165,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1490:11:1",
														"memberName": "denominator",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2152,
														"src": "1476:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 166,
														"name": "denominator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 147,
														"src": "1504:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "1476:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 168,
												"nodeType": "ExpressionStatement",
												"src": "1476:39:1"
											},
											{
												"expression": {
													"id": 173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 169,
															"name": "fractionalFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 155,
															"src": "1525:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FractionalFee_$2161_memory_ptr",
																"typeString": "struct IHederaTokenService.FractionalFee memory"
															}
														},
														"id": 171,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1539:14:1",
														"memberName": "netOfTransfers",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2158,
														"src": "1525:28:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 172,
														"name": "netOfTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 149,
														"src": "1556:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1525:45:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 174,
												"nodeType": "ExpressionStatement",
												"src": "1525:45:1"
											},
											{
												"expression": {
													"id": 179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 175,
															"name": "fractionalFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 155,
															"src": "1580:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FractionalFee_$2161_memory_ptr",
																"typeString": "struct IHederaTokenService.FractionalFee memory"
															}
														},
														"id": 177,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1594:12:1",
														"memberName": "feeCollector",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2160,
														"src": "1580:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 178,
														"name": "feeCollector",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 151,
														"src": "1609:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1580:41:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 180,
												"nodeType": "ExpressionStatement",
												"src": "1580:41:1"
											}
										]
									},
									"id": 182,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "createFractionalFee",
									"nameLocation": "1203:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "numerator",
												"nameLocation": "1239:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1232:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 144,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1232:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "1265:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1258:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 146,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1258:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "netOfTransfers",
												"nameLocation": "1291:14:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1286:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 148,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1286:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "feeCollector",
												"nameLocation": "1323:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1315:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 150,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1315:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:119:1"
									},
									"returnParameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "fractionalFee",
												"nameLocation": "1406:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1365:54:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FractionalFee_$2161_memory_ptr",
													"typeString": "struct IHederaTokenService.FractionalFee"
												},
												"typeName": {
													"id": 154,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 153,
														"name": "IHederaTokenService.FractionalFee",
														"nameLocations": [
															"1365:19:1",
															"1385:13:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2161,
														"src": "1365:33:1"
													},
													"referencedDeclaration": 2161,
													"src": "1365:33:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FractionalFee_$2161_storage_ptr",
														"typeString": "struct IHederaTokenService.FractionalFee"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1364:56:1"
									},
									"scope": 361,
									"src": "1194:434:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "1934:313:1",
										"statements": [
											{
												"expression": {
													"id": 204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 200,
															"name": "fractionalFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "1944:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FractionalFee_$2161_memory_ptr",
																"typeString": "struct IHederaTokenService.FractionalFee memory"
															}
														},
														"id": 202,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1958:9:1",
														"memberName": "numerator",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2150,
														"src": "1944:23:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 203,
														"name": "numerator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 184,
														"src": "1970:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "1944:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 205,
												"nodeType": "ExpressionStatement",
												"src": "1944:35:1"
											},
											{
												"expression": {
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 206,
															"name": "fractionalFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "1989:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FractionalFee_$2161_memory_ptr",
																"typeString": "struct IHederaTokenService.FractionalFee memory"
															}
														},
														"id": 208,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2003:11:1",
														"memberName": "denominator",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2152,
														"src": "1989:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 209,
														"name": "denominator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 186,
														"src": "2017:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "1989:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 211,
												"nodeType": "ExpressionStatement",
												"src": "1989:39:1"
											},
											{
												"expression": {
													"id": 216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 212,
															"name": "fractionalFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "2038:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FractionalFee_$2161_memory_ptr",
																"typeString": "struct IHederaTokenService.FractionalFee memory"
															}
														},
														"id": 214,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2052:13:1",
														"memberName": "minimumAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2154,
														"src": "2038:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 215,
														"name": "minimumAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 188,
														"src": "2068:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "2038:43:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 217,
												"nodeType": "ExpressionStatement",
												"src": "2038:43:1"
											},
											{
												"expression": {
													"id": 222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 218,
															"name": "fractionalFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "2091:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FractionalFee_$2161_memory_ptr",
																"typeString": "struct IHederaTokenService.FractionalFee memory"
															}
														},
														"id": 220,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2105:13:1",
														"memberName": "maximumAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2156,
														"src": "2091:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 221,
														"name": "maximumAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 190,
														"src": "2121:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "2091:43:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 223,
												"nodeType": "ExpressionStatement",
												"src": "2091:43:1"
											},
											{
												"expression": {
													"id": 228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 224,
															"name": "fractionalFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "2144:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FractionalFee_$2161_memory_ptr",
																"typeString": "struct IHederaTokenService.FractionalFee memory"
															}
														},
														"id": 226,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2158:14:1",
														"memberName": "netOfTransfers",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2158,
														"src": "2144:28:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 227,
														"name": "netOfTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "2175:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2144:45:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 229,
												"nodeType": "ExpressionStatement",
												"src": "2144:45:1"
											},
											{
												"expression": {
													"id": 234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 230,
															"name": "fractionalFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "2199:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FractionalFee_$2161_memory_ptr",
																"typeString": "struct IHederaTokenService.FractionalFee memory"
															}
														},
														"id": 232,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2213:12:1",
														"memberName": "feeCollector",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2160,
														"src": "2199:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 233,
														"name": "feeCollector",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "2228:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2199:41:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 235,
												"nodeType": "ExpressionStatement",
												"src": "2199:41:1"
											}
										]
									},
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "createFractionalFeeWithMinAndMax",
									"nameLocation": "1643:32:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "numerator",
												"nameLocation": "1692:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "1685:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 183,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1685:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "1718:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "1711:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 185,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1711:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "minimumAmount",
												"nameLocation": "1746:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "1739:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 187,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1739:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "maximumAmount",
												"nameLocation": "1776:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "1769:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 189,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1769:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "netOfTransfers",
												"nameLocation": "1804:14:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "1799:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 191,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1799:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "feeCollector",
												"nameLocation": "1836:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "1828:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1828:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1675:179:1"
									},
									"returnParameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "fractionalFee",
												"nameLocation": "1919:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "1878:54:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FractionalFee_$2161_memory_ptr",
													"typeString": "struct IHederaTokenService.FractionalFee"
												},
												"typeName": {
													"id": 197,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 196,
														"name": "IHederaTokenService.FractionalFee",
														"nameLocations": [
															"1878:19:1",
															"1898:13:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2161,
														"src": "1878:33:1"
													},
													"referencedDeclaration": 2161,
													"src": "1878:33:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FractionalFee_$2161_storage_ptr",
														"typeString": "struct IHederaTokenService.FractionalFee"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1877:56:1"
									},
									"scope": 361,
									"src": "1634:613:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 267,
										"nodeType": "Block",
										"src": "2457:143:1",
										"statements": [
											{
												"expression": {
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 249,
															"name": "royaltyFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 247,
															"src": "2467:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoyaltyFee_$2174_memory_ptr",
																"typeString": "struct IHederaTokenService.RoyaltyFee memory"
															}
														},
														"id": 251,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2478:9:1",
														"memberName": "numerator",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2163,
														"src": "2467:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 252,
														"name": "numerator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 239,
														"src": "2490:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "2467:32:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 254,
												"nodeType": "ExpressionStatement",
												"src": "2467:32:1"
											},
											{
												"expression": {
													"id": 259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 255,
															"name": "royaltyFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 247,
															"src": "2509:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoyaltyFee_$2174_memory_ptr",
																"typeString": "struct IHederaTokenService.RoyaltyFee memory"
															}
														},
														"id": 257,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2520:11:1",
														"memberName": "denominator",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2165,
														"src": "2509:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 258,
														"name": "denominator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 241,
														"src": "2534:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "2509:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 260,
												"nodeType": "ExpressionStatement",
												"src": "2509:36:1"
											},
											{
												"expression": {
													"id": 265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 261,
															"name": "royaltyFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 247,
															"src": "2555:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoyaltyFee_$2174_memory_ptr",
																"typeString": "struct IHederaTokenService.RoyaltyFee memory"
															}
														},
														"id": 263,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2566:12:1",
														"memberName": "feeCollector",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2173,
														"src": "2555:23:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 264,
														"name": "feeCollector",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "2581:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2555:38:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 266,
												"nodeType": "ExpressionStatement",
												"src": "2555:38:1"
											}
										]
									},
									"id": 268,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "createRoyaltyFeeWithoutFallback",
									"nameLocation": "2262:31:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "numerator",
												"nameLocation": "2310:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "2303:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 238,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2303:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "2336:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "2329:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 240,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2329:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "feeCollector",
												"nameLocation": "2365:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "2357:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2293:90:1"
									},
									"returnParameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "royaltyFee",
												"nameLocation": "2445:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "2407:48:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_RoyaltyFee_$2174_memory_ptr",
													"typeString": "struct IHederaTokenService.RoyaltyFee"
												},
												"typeName": {
													"id": 246,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 245,
														"name": "IHederaTokenService.RoyaltyFee",
														"nameLocations": [
															"2407:19:1",
															"2427:10:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2174,
														"src": "2407:30:1"
													},
													"referencedDeclaration": 2174,
													"src": "2407:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RoyaltyFee_$2174_storage_ptr",
														"typeString": "struct IHederaTokenService.RoyaltyFee"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2406:50:1"
									},
									"scope": 361,
									"src": "2253:347:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 312,
										"nodeType": "Block",
										"src": "2837:225:1",
										"statements": [
											{
												"expression": {
													"id": 286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 282,
															"name": "royaltyFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 280,
															"src": "2847:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoyaltyFee_$2174_memory_ptr",
																"typeString": "struct IHederaTokenService.RoyaltyFee memory"
															}
														},
														"id": 284,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2858:9:1",
														"memberName": "numerator",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2163,
														"src": "2847:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 285,
														"name": "numerator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 270,
														"src": "2870:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "2847:32:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 287,
												"nodeType": "ExpressionStatement",
												"src": "2847:32:1"
											},
											{
												"expression": {
													"id": 292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 288,
															"name": "royaltyFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 280,
															"src": "2889:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoyaltyFee_$2174_memory_ptr",
																"typeString": "struct IHederaTokenService.RoyaltyFee memory"
															}
														},
														"id": 290,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2900:11:1",
														"memberName": "denominator",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2165,
														"src": "2889:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 291,
														"name": "denominator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 272,
														"src": "2914:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "2889:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 293,
												"nodeType": "ExpressionStatement",
												"src": "2889:36:1"
											},
											{
												"expression": {
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 294,
															"name": "royaltyFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 280,
															"src": "2935:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoyaltyFee_$2174_memory_ptr",
																"typeString": "struct IHederaTokenService.RoyaltyFee memory"
															}
														},
														"id": 296,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2946:6:1",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2167,
														"src": "2935:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 297,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 274,
														"src": "2955:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "2935:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 299,
												"nodeType": "ExpressionStatement",
												"src": "2935:26:1"
											},
											{
												"expression": {
													"id": 304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 300,
															"name": "royaltyFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 280,
															"src": "2971:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoyaltyFee_$2174_memory_ptr",
																"typeString": "struct IHederaTokenService.RoyaltyFee memory"
															}
														},
														"id": 302,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2982:18:1",
														"memberName": "useHbarsForPayment",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2171,
														"src": "2971:29:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 303,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3003:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2971:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 305,
												"nodeType": "ExpressionStatement",
												"src": "2971:36:1"
											},
											{
												"expression": {
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 306,
															"name": "royaltyFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 280,
															"src": "3017:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoyaltyFee_$2174_memory_ptr",
																"typeString": "struct IHederaTokenService.RoyaltyFee memory"
															}
														},
														"id": 308,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3028:12:1",
														"memberName": "feeCollector",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2173,
														"src": "3017:23:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 309,
														"name": "feeCollector",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 276,
														"src": "3043:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3017:38:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 311,
												"nodeType": "ExpressionStatement",
												"src": "3017:38:1"
											}
										]
									},
									"id": 313,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "createRoyaltyFeeWithHbarFallbackFee",
									"nameLocation": "2615:35:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "numerator",
												"nameLocation": "2667:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "2660:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 269,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2660:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "2693:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "2686:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 271,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2686:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2721:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "2714:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 273,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2714:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "feeCollector",
												"nameLocation": "2745:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "2737:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 275,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2650:113:1"
									},
									"returnParameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "royaltyFee",
												"nameLocation": "2825:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "2787:48:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_RoyaltyFee_$2174_memory_ptr",
													"typeString": "struct IHederaTokenService.RoyaltyFee"
												},
												"typeName": {
													"id": 279,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 278,
														"name": "IHederaTokenService.RoyaltyFee",
														"nameLocations": [
															"2787:19:1",
															"2807:10:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2174,
														"src": "2787:30:1"
													},
													"referencedDeclaration": 2174,
													"src": "2787:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RoyaltyFee_$2174_storage_ptr",
														"typeString": "struct IHederaTokenService.RoyaltyFee"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2786:50:1"
									},
									"scope": 361,
									"src": "2606:456:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 359,
										"nodeType": "Block",
										"src": "3336:217:1",
										"statements": [
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 329,
															"name": "royaltyFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 327,
															"src": "3346:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoyaltyFee_$2174_memory_ptr",
																"typeString": "struct IHederaTokenService.RoyaltyFee memory"
															}
														},
														"id": 331,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3357:9:1",
														"memberName": "numerator",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2163,
														"src": "3346:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "numerator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "3369:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "3346:32:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "3346:32:1"
											},
											{
												"expression": {
													"id": 339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 335,
															"name": "royaltyFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 327,
															"src": "3388:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoyaltyFee_$2174_memory_ptr",
																"typeString": "struct IHederaTokenService.RoyaltyFee memory"
															}
														},
														"id": 337,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3399:11:1",
														"memberName": "denominator",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2165,
														"src": "3388:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 338,
														"name": "denominator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "3413:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "3388:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 340,
												"nodeType": "ExpressionStatement",
												"src": "3388:36:1"
											},
											{
												"expression": {
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 341,
															"name": "royaltyFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 327,
															"src": "3434:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoyaltyFee_$2174_memory_ptr",
																"typeString": "struct IHederaTokenService.RoyaltyFee memory"
															}
														},
														"id": 343,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3445:6:1",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2167,
														"src": "3434:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 344,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "3454:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "3434:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 346,
												"nodeType": "ExpressionStatement",
												"src": "3434:26:1"
											},
											{
												"expression": {
													"id": 351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 347,
															"name": "royaltyFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 327,
															"src": "3470:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoyaltyFee_$2174_memory_ptr",
																"typeString": "struct IHederaTokenService.RoyaltyFee memory"
															}
														},
														"id": 349,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3481:7:1",
														"memberName": "tokenId",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2169,
														"src": "3470:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 350,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 321,
														"src": "3491:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3470:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 352,
												"nodeType": "ExpressionStatement",
												"src": "3470:28:1"
											},
											{
												"expression": {
													"id": 357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 353,
															"name": "royaltyFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 327,
															"src": "3508:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoyaltyFee_$2174_memory_ptr",
																"typeString": "struct IHederaTokenService.RoyaltyFee memory"
															}
														},
														"id": 355,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3519:12:1",
														"memberName": "feeCollector",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2173,
														"src": "3508:23:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 356,
														"name": "feeCollector",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 323,
														"src": "3534:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3508:38:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 358,
												"nodeType": "ExpressionStatement",
												"src": "3508:38:1"
											}
										]
									},
									"id": 360,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "createRoyaltyFeeWithTokenDenominatedFallbackFee",
									"nameLocation": "3077:47:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "numerator",
												"nameLocation": "3141:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "3134:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 314,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "3134:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3167:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "3160:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 316,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "3160:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3195:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "3188:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 318,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "3188:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3219:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "3211:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 320,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3211:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "feeCollector",
												"nameLocation": "3244:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "3236:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 322,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3236:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3124:138:1"
									},
									"returnParameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "royaltyFee",
												"nameLocation": "3324:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "3286:48:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_RoyaltyFee_$2174_memory_ptr",
													"typeString": "struct IHederaTokenService.RoyaltyFee"
												},
												"typeName": {
													"id": 326,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 325,
														"name": "IHederaTokenService.RoyaltyFee",
														"nameLocations": [
															"3286:19:1",
															"3306:10:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2174,
														"src": "3286:30:1"
													},
													"referencedDeclaration": 2174,
													"src": "3286:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RoyaltyFee_$2174_storage_ptr",
														"typeString": "struct IHederaTokenService.RoyaltyFee"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3285:50:1"
									},
									"scope": 361,
									"src": "3068:485:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 362,
							"src": "240:3315:1",
							"usedErrors": []
						}
					],
					"src": "39:3516:1"
				},
				"id": 1
			},
			"hbar/SmartContracts/Auction2/hts-precompile/HederaResponseCodes.sol": {
				"ast": {
					"absolutePath": "hbar/SmartContracts/Auction2/hts-precompile/HederaResponseCodes.sol",
					"exportedSymbols": {
						"HederaResponseCodes": [
							880
						]
					},
					"id": 881,
					"license": "Apache-2.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 363,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".9",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "39:31:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "HederaResponseCodes",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 880,
							"linearizedBaseContracts": [
								880
							],
							"name": "HederaResponseCodes",
							"nameLocation": "90:19:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 366,
									"mutability": "constant",
									"name": "OK",
									"nameLocation": "163:2:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "139:30:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 364,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "139:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 365,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "168:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 369,
									"mutability": "constant",
									"name": "INVALID_TRANSACTION",
									"nameLocation": "251:19:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "227:47:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 367,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "227:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 368,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "273:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 372,
									"mutability": "constant",
									"name": "PAYER_ACCOUNT_NOT_FOUND",
									"nameLocation": "371:23:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "347:51:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 370,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "347:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 371,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "397:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 375,
									"mutability": "constant",
									"name": "INVALID_NODE_ACCOUNT",
									"nameLocation": "460:20:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "436:48:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 373,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "436:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "33",
										"id": 374,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "483:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3_by_1",
											"typeString": "int_const 3"
										},
										"value": "3"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 378,
									"mutability": "constant",
									"name": "TRANSACTION_EXPIRED",
									"nameLocation": "616:19:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "592:47:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 376,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "592:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "34",
										"id": 377,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "638:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_4_by_1",
											"typeString": "int_const 4"
										},
										"value": "4"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 381,
									"mutability": "constant",
									"name": "INVALID_TRANSACTION_START",
									"nameLocation": "779:25:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "755:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 379,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "755:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "35",
										"id": 380,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "807:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5_by_1",
											"typeString": "int_const 5"
										},
										"value": "5"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 384,
									"mutability": "constant",
									"name": "INVALID_TRANSACTION_DURATION",
									"nameLocation": "903:28:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "879:56:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 382,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "879:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "36",
										"id": 383,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "934:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_6_by_1",
											"typeString": "int_const 6"
										},
										"value": "6"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 387,
									"mutability": "constant",
									"name": "INVALID_SIGNATURE",
									"nameLocation": "1057:17:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "1033:45:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 385,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "1033:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "37",
										"id": 386,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1077:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_7_by_1",
											"typeString": "int_const 7"
										},
										"value": "7"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 390,
									"mutability": "constant",
									"name": "MEMO_TOO_LONG",
									"nameLocation": "1150:13:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "1126:41:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 388,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "1126:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "38",
										"id": 389,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1166:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_8_by_1",
											"typeString": "int_const 8"
										},
										"value": "8"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 393,
									"mutability": "constant",
									"name": "INSUFFICIENT_TX_FEE",
									"nameLocation": "1240:19:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "1216:47:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 391,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "1216:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "39",
										"id": 392,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1262:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_9_by_1",
											"typeString": "int_const 9"
										},
										"value": "9"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 396,
									"mutability": "constant",
									"name": "INSUFFICIENT_PAYER_BALANCE",
									"nameLocation": "1377:26:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "1353:55:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 394,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "1353:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "3130",
										"id": 395,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1406:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10_by_1",
											"typeString": "int_const 10"
										},
										"value": "10"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 399,
									"mutability": "constant",
									"name": "DUPLICATE_TRANSACTION",
									"nameLocation": "1518:21:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "1494:50:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 397,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "1494:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "3131",
										"id": 398,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1542:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_11_by_1",
											"typeString": "int_const 11"
										},
										"value": "11"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 402,
									"mutability": "constant",
									"name": "BUSY",
									"nameLocation": "1713:4:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "1689:33:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 400,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "1689:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "3132",
										"id": 401,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1720:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_12_by_1",
											"typeString": "int_const 12"
										},
										"value": "12"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 405,
									"mutability": "constant",
									"name": "NOT_SUPPORTED",
									"nameLocation": "1778:13:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "1754:42:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 403,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "1754:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "3133",
										"id": 404,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1794:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_13_by_1",
											"typeString": "int_const 13"
										},
										"value": "13"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 408,
									"mutability": "constant",
									"name": "INVALID_FILE_ID",
									"nameLocation": "1864:15:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "1840:44:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 406,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "1840:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "3134",
										"id": 407,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1882:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_14_by_1",
											"typeString": "int_const 14"
										},
										"value": "14"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 411,
									"mutability": "constant",
									"name": "INVALID_ACCOUNT_ID",
									"nameLocation": "1957:18:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "1933:47:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 409,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "1933:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "3135",
										"id": 410,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1978:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_15_by_1",
											"typeString": "int_const 15"
										},
										"value": "15"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 414,
									"mutability": "constant",
									"name": "INVALID_CONTRACT_ID",
									"nameLocation": "2056:19:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "2032:48:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 412,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "2032:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "3136",
										"id": 413,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2078:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_16_by_1",
											"typeString": "int_const 16"
										},
										"value": "16"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 417,
									"mutability": "constant",
									"name": "INVALID_TRANSACTION_ID",
									"nameLocation": "2157:22:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "2133:51:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 415,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "2133:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "3137",
										"id": 416,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2182:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_17_by_1",
											"typeString": "int_const 17"
										},
										"value": "17"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 420,
									"mutability": "constant",
									"name": "RECEIPT_NOT_FOUND",
									"nameLocation": "2244:17:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "2220:46:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 418,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "2220:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "3138",
										"id": 419,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2264:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "18"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 423,
									"mutability": "constant",
									"name": "RECORD_NOT_FOUND",
									"nameLocation": "2346:16:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "2322:45:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 421,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "2322:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "3139",
										"id": 422,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2365:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_19_by_1",
											"typeString": "int_const 19"
										},
										"value": "19"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 426,
									"mutability": "constant",
									"name": "INVALID_SOLIDITY_ID",
									"nameLocation": "2446:19:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "2422:48:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 424,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "2422:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 425,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2468:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 429,
									"mutability": "constant",
									"name": "UNKNOWN",
									"nameLocation": "2577:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "2553:36:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 427,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "2553:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "3231",
										"id": 428,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2587:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_21_by_1",
											"typeString": "int_const 21"
										},
										"value": "21"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 432,
									"mutability": "constant",
									"name": "SUCCESS",
									"nameLocation": "2723:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "2699:36:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 430,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "2699:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "3232",
										"id": 431,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2733:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_22_by_1",
											"typeString": "int_const 22"
										},
										"value": "22"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 435,
									"mutability": "constant",
									"name": "FAIL_INVALID",
									"nameLocation": "2794:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "2770:41:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 433,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "2770:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "3233",
										"id": 434,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2809:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_23_by_1",
											"typeString": "int_const 23"
										},
										"value": "23"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 438,
									"mutability": "constant",
									"name": "FAIL_FEE",
									"nameLocation": "2935:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "2911:37:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 436,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "2911:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "3234",
										"id": 437,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2946:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_24_by_1",
											"typeString": "int_const 24"
										},
										"value": "24"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 441,
									"mutability": "constant",
									"name": "FAIL_BALANCE",
									"nameLocation": "3061:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "3037:41:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 439,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "3037:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "3235",
										"id": 440,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3076:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_25_by_1",
											"typeString": "int_const 25"
										},
										"value": "25"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 444,
									"mutability": "constant",
									"name": "KEY_REQUIRED",
									"nameLocation": "3191:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "3167:41:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 442,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "3167:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "3236",
										"id": 443,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3206:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_26_by_1",
											"typeString": "int_const 26"
										},
										"value": "26"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 447,
									"mutability": "constant",
									"name": "BAD_ENCODING",
									"nameLocation": "3281:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "3257:41:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 445,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "3257:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "3237",
										"id": 446,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3296:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_27_by_1",
											"typeString": "int_const 27"
										},
										"value": "27"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 450,
									"mutability": "constant",
									"name": "INSUFFICIENT_ACCOUNT_BALANCE",
									"nameLocation": "3394:28:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "3370:57:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 448,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "3370:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "3238",
										"id": 449,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3425:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_28_by_1",
											"typeString": "int_const 28"
										},
										"value": "28"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 453,
									"mutability": "constant",
									"name": "INVALID_SOLIDITY_ADDRESS",
									"nameLocation": "3519:24:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "3495:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 451,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "3495:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "3239",
										"id": 452,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3546:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_29_by_1",
											"typeString": "int_const 29"
										},
										"value": "29"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 456,
									"mutability": "constant",
									"name": "INSUFFICIENT_GAS",
									"nameLocation": "3673:16:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "3649:45:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 454,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "3649:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "3330",
										"id": 455,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3692:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_30_by_1",
											"typeString": "int_const 30"
										},
										"value": "30"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 459,
									"mutability": "constant",
									"name": "CONTRACT_SIZE_LIMIT_EXCEEDED",
									"nameLocation": "3777:28:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "3753:57:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 457,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "3753:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "3331",
										"id": 458,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3808:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_31_by_1",
											"typeString": "int_const 31"
										},
										"value": "31"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 462,
									"mutability": "constant",
									"name": "LOCAL_CALL_MODIFICATION_EXCEPTION",
									"nameLocation": "3884:33:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "3860:62:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 460,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "3860:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "3332",
										"id": 461,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3920:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_32_by_1",
											"typeString": "int_const 32"
										},
										"value": "32"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 465,
									"mutability": "constant",
									"name": "CONTRACT_REVERT_EXECUTED",
									"nameLocation": "4026:24:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "4002:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 463,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "4002:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "3333",
										"id": 464,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4053:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_33_by_1",
											"typeString": "int_const 33"
										},
										"value": "33"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 468,
									"mutability": "constant",
									"name": "CONTRACT_EXECUTION_EXCEPTION",
									"nameLocation": "4119:28:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "4095:57:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 466,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "4095:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "3334",
										"id": 467,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4150:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_34_by_1",
											"typeString": "int_const 34"
										},
										"value": "34"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 471,
									"mutability": "constant",
									"name": "INVALID_RECEIVING_NODE_ACCOUNT",
									"nameLocation": "4275:30:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "4251:59:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 469,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "4251:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "3335",
										"id": 470,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4308:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_35_by_1",
											"typeString": "int_const 35"
										},
										"value": "35"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 474,
									"mutability": "constant",
									"name": "MISSING_QUERY_HEADER",
									"nameLocation": "4488:20:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "4464:49:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 472,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "4464:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "3336",
										"id": 473,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4511:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_36_by_1",
											"typeString": "int_const 36"
										},
										"value": "36"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 477,
									"mutability": "constant",
									"name": "ACCOUNT_UPDATE_FAILED",
									"nameLocation": "4582:21:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "4558:50:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 475,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "4558:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "3337",
										"id": 476,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4606:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_37_by_1",
											"typeString": "int_const 37"
										},
										"value": "37"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 480,
									"mutability": "constant",
									"name": "INVALID_KEY_ENCODING",
									"nameLocation": "4674:20:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "4650:49:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 478,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "4650:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "3338",
										"id": 479,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4697:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_38_by_1",
											"typeString": "int_const 38"
										},
										"value": "38"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 483,
									"mutability": "constant",
									"name": "NULL_SOLIDITY_ADDRESS",
									"nameLocation": "4786:21:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "4762:50:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 481,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "4762:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "3339",
										"id": 482,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4810:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_39_by_1",
											"typeString": "int_const 39"
										},
										"value": "39"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 486,
									"mutability": "constant",
									"name": "CONTRACT_UPDATE_FAILED",
									"nameLocation": "4868:22:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "4844:51:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 484,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "4844:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "3430",
										"id": 485,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4893:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_40_by_1",
											"typeString": "int_const 40"
										},
										"value": "40"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 489,
									"mutability": "constant",
									"name": "INVALID_QUERY_HEADER",
									"nameLocation": "4958:20:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "4934:49:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 487,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "4934:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "3431",
										"id": 488,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4981:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_41_by_1",
											"typeString": "int_const 41"
										},
										"value": "41"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 492,
									"mutability": "constant",
									"name": "INVALID_FEE_SUBMITTED",
									"nameLocation": "5045:21:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "5021:50:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 490,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "5021:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "3432",
										"id": 491,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5069:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_42_by_1",
											"typeString": "int_const 42"
										},
										"value": "42"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 495,
									"mutability": "constant",
									"name": "INVALID_PAYER_SIGNATURE",
									"nameLocation": "5126:23:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "5102:52:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 493,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "5102:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "3433",
										"id": 494,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5152:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_43_by_1",
											"typeString": "int_const 43"
										},
										"value": "43"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 498,
									"mutability": "constant",
									"name": "KEY_NOT_PROVIDED",
									"nameLocation": "5215:16:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "5191:45:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 496,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "5191:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "3434",
										"id": 497,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5234:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_44_by_1",
											"typeString": "int_const 44"
										},
										"value": "44"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 501,
									"mutability": "constant",
									"name": "INVALID_EXPIRATION_TIME",
									"nameLocation": "5312:23:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "5288:52:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 499,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "5288:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "3435",
										"id": 500,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5338:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_45_by_1",
											"typeString": "int_const 45"
										},
										"value": "45"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 504,
									"mutability": "constant",
									"name": "NO_WACL_KEY",
									"nameLocation": "5430:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "5406:40:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 502,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "5406:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "3436",
										"id": 503,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5444:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_46_by_1",
											"typeString": "int_const 46"
										},
										"value": "46"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 507,
									"mutability": "constant",
									"name": "FILE_CONTENT_EMPTY",
									"nameLocation": "5533:18:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "5509:47:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 505,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "5509:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "3437",
										"id": 506,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5554:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_47_by_1",
											"typeString": "int_const 47"
										},
										"value": "47"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 510,
									"mutability": "constant",
									"name": "INVALID_ACCOUNT_AMOUNTS",
									"nameLocation": "5632:23:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "5608:52:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 508,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "5608:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "3438",
										"id": 509,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5658:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_48_by_1",
											"typeString": "int_const 48"
										},
										"value": "48"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 513,
									"mutability": "constant",
									"name": "EMPTY_TRANSACTION_BODY",
									"nameLocation": "5752:22:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "5728:51:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 511,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "5728:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "3439",
										"id": 512,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5777:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_49_by_1",
											"typeString": "int_const 49"
										},
										"value": "49"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 516,
									"mutability": "constant",
									"name": "INVALID_TRANSACTION_BODY",
									"nameLocation": "5847:24:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "5823:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 514,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "5823:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "3530",
										"id": 515,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5874:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_50_by_1",
											"typeString": "int_const 50"
										},
										"value": "50"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 519,
									"mutability": "constant",
									"name": "INVALID_SIGNATURE_TYPE_MISMATCHING_KEY",
									"nameLocation": "5944:38:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "5920:67:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 517,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "5920:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "3531",
										"id": 518,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5985:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_51_by_1",
											"typeString": "int_const 51"
										},
										"value": "51"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 522,
									"mutability": "constant",
									"name": "INVALID_SIGNATURE_COUNT_MISMATCHING_KEY",
									"nameLocation": "6184:39:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "6160:68:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 520,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "6160:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "3532",
										"id": 521,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "6226:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_52_by_1",
											"typeString": "int_const 52"
										},
										"value": "52"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 525,
									"mutability": "constant",
									"name": "EMPTY_LIVE_HASH_BODY",
									"nameLocation": "6491:20:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "6467:49:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 523,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "6467:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "3533",
										"id": 524,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "6514:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_53_by_1",
											"typeString": "int_const 53"
										},
										"value": "53"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 528,
									"mutability": "constant",
									"name": "EMPTY_LIVE_HASH",
									"nameLocation": "6576:15:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "6552:44:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 526,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "6552:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "3534",
										"id": 527,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "6594:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_54_by_1",
											"typeString": "int_const 54"
										},
										"value": "54"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 531,
									"mutability": "constant",
									"name": "EMPTY_LIVE_HASH_KEYS",
									"nameLocation": "6658:20:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "6634:49:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 529,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "6634:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "3535",
										"id": 530,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "6681:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_55_by_1",
											"typeString": "int_const 55"
										},
										"value": "55"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 534,
									"mutability": "constant",
									"name": "INVALID_LIVE_HASH_SIZE",
									"nameLocation": "6752:22:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "6728:51:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 532,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "6728:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "3536",
										"id": 533,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "6777:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_56_by_1",
											"typeString": "int_const 56"
										},
										"value": "56"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 537,
									"mutability": "constant",
									"name": "EMPTY_QUERY_BODY",
									"nameLocation": "6869:16:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "6845:45:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 535,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "6845:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "3537",
										"id": 536,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "6888:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_57_by_1",
											"typeString": "int_const 57"
										},
										"value": "57"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 540,
									"mutability": "constant",
									"name": "EMPTY_LIVE_HASH_QUERY",
									"nameLocation": "6947:21:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "6923:50:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 538,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "6923:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "3538",
										"id": 539,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "6971:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_58_by_1",
											"typeString": "int_const 58"
										},
										"value": "58"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 543,
									"mutability": "constant",
									"name": "LIVE_HASH_NOT_FOUND",
									"nameLocation": "7041:19:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "7017:48:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 541,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "7017:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "3539",
										"id": 542,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7063:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_59_by_1",
											"typeString": "int_const 59"
										},
										"value": "59"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 546,
									"mutability": "constant",
									"name": "ACCOUNT_ID_DOES_NOT_EXIST",
									"nameLocation": "7126:25:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "7102:54:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 544,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "7102:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "3630",
										"id": 545,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7154:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_60_by_1",
											"typeString": "int_const 60"
										},
										"value": "60"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 549,
									"mutability": "constant",
									"name": "LIVE_HASH_ALREADY_EXISTS",
									"nameLocation": "7237:24:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "7213:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 547,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "7213:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "3631",
										"id": 548,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7264:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_61_by_1",
											"typeString": "int_const 61"
										},
										"value": "61"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 552,
									"mutability": "constant",
									"name": "INVALID_FILE_WACL",
									"nameLocation": "7348:17:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "7324:46:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 550,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "7324:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "3632",
										"id": 551,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7368:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_62_by_1",
											"typeString": "int_const 62"
										},
										"value": "62"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 555,
									"mutability": "constant",
									"name": "SERIALIZATION_FAILED",
									"nameLocation": "7430:20:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "7406:49:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 553,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "7406:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "3633",
										"id": 554,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7453:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_63_by_1",
											"typeString": "int_const 63"
										},
										"value": "63"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 558,
									"mutability": "constant",
									"name": "TRANSACTION_OVERSIZE",
									"nameLocation": "7510:20:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "7486:49:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 556,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "7486:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "3634",
										"id": 557,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7533:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_64_by_1",
											"typeString": "int_const 64"
										},
										"value": "64"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 561,
									"mutability": "constant",
									"name": "TRANSACTION_TOO_MANY_LAYERS",
									"nameLocation": "7632:27:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "7608:56:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 559,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "7608:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "3635",
										"id": 560,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7662:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_65_by_1",
											"typeString": "int_const 65"
										},
										"value": "65"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 564,
									"mutability": "constant",
									"name": "CONTRACT_DELETED",
									"nameLocation": "7737:16:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "7713:45:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 562,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "7713:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "3636",
										"id": 563,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7756:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_66_by_1",
											"typeString": "int_const 66"
										},
										"value": "66"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 567,
									"mutability": "constant",
									"name": "PLATFORM_NOT_ACTIVE",
									"nameLocation": "7821:19:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "7797:48:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 565,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "7797:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "3637",
										"id": 566,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7843:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_67_by_1",
											"typeString": "int_const 67"
										},
										"value": "67"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 570,
									"mutability": "constant",
									"name": "KEY_PREFIX_MISMATCH",
									"nameLocation": "7938:19:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "7914:48:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 568,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "7914:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "3638",
										"id": 569,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7960:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_68_by_1",
											"typeString": "int_const 68"
										},
										"value": "68"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 573,
									"mutability": "constant",
									"name": "PLATFORM_TRANSACTION_NOT_CREATED",
									"nameLocation": "8064:32:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "8040:61:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 571,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "8040:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "3639",
										"id": 572,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8099:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_69_by_1",
											"typeString": "int_const 69"
										},
										"value": "69"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 576,
									"mutability": "constant",
									"name": "INVALID_RENEWAL_PERIOD",
									"nameLocation": "8191:22:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "8167:51:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 574,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "8167:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "3730",
										"id": 575,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8216:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_70_by_1",
											"typeString": "int_const 70"
										},
										"value": "70"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 579,
									"mutability": "constant",
									"name": "INVALID_PAYER_ACCOUNT_ID",
									"nameLocation": "8307:24:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "8283:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 577,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "8283:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "3731",
										"id": 578,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8334:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_71_by_1",
											"typeString": "int_const 71"
										},
										"value": "71"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 582,
									"mutability": "constant",
									"name": "ACCOUNT_DELETED",
									"nameLocation": "8447:15:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "8423:44:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 580,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "8423:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "3732",
										"id": 581,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8465:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_72_by_1",
											"typeString": "int_const 72"
										},
										"value": "72"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 585,
									"mutability": "constant",
									"name": "FILE_DELETED",
									"nameLocation": "8539:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "8515:41:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 583,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "8515:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "3733",
										"id": 584,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8554:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_73_by_1",
											"typeString": "int_const 73"
										},
										"value": "73"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 588,
									"mutability": "constant",
									"name": "ACCOUNT_REPEATED_IN_ACCOUNT_AMOUNTS",
									"nameLocation": "8625:35:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "8601:64:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 586,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "8601:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "3734",
										"id": 587,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8663:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_74_by_1",
											"typeString": "int_const 74"
										},
										"value": "74"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 591,
									"mutability": "constant",
									"name": "SETTING_NEGATIVE_ACCOUNT_BALANCE",
									"nameLocation": "8750:32:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "8726:61:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 589,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "8726:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "3735",
										"id": 590,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8785:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_75_by_1",
											"typeString": "int_const 75"
										},
										"value": "75"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 594,
									"mutability": "constant",
									"name": "OBTAINER_REQUIRED",
									"nameLocation": "8880:17:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "8856:46:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 592,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "8856:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "3736",
										"id": 593,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8900:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_76_by_1",
											"typeString": "int_const 76"
										},
										"value": "76"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 597,
									"mutability": "constant",
									"name": "OBTAINER_SAME_CONTRACT_ID",
									"nameLocation": "9051:25:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "9027:54:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 595,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "9027:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "3737",
										"id": 596,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9079:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_77_by_1",
											"typeString": "int_const 77"
										},
										"value": "77"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 600,
									"mutability": "constant",
									"name": "OBTAINER_DOES_NOT_EXIST",
									"nameLocation": "9250:23:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "9226:52:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 598,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "9226:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "3738",
										"id": 599,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9276:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_78_by_1",
											"typeString": "int_const 78"
										},
										"value": "78"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 603,
									"mutability": "constant",
									"name": "MODIFYING_IMMUTABLE_CONTRACT",
									"nameLocation": "9395:28:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "9371:57:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 601,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "9371:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "3739",
										"id": 602,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9426:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_79_by_1",
											"typeString": "int_const 79"
										},
										"value": "79"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 606,
									"mutability": "constant",
									"name": "FILE_SYSTEM_EXCEPTION",
									"nameLocation": "9565:21:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "9541:50:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 604,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "9541:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "3830",
										"id": 605,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9589:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_80_by_1",
											"typeString": "int_const 80"
										},
										"value": "80"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 609,
									"mutability": "constant",
									"name": "AUTORENEW_DURATION_NOT_IN_RANGE",
									"nameLocation": "9676:31:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "9652:60:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 607,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "9652:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "3831",
										"id": 608,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9710:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_81_by_1",
											"typeString": "int_const 81"
										},
										"value": "81"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 612,
									"mutability": "constant",
									"name": "ERROR_DECODING_BYTESTRING",
									"nameLocation": "9833:25:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "9809:54:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 610,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "9809:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "3832",
										"id": 611,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9861:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_82_by_1",
											"typeString": "int_const 82"
										},
										"value": "82"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 615,
									"mutability": "constant",
									"name": "CONTRACT_FILE_EMPTY",
									"nameLocation": "9999:19:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "9975:48:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 613,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "9975:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "3833",
										"id": 614,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "10021:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_83_by_1",
											"typeString": "int_const 83"
										},
										"value": "83"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 618,
									"mutability": "constant",
									"name": "CONTRACT_BYTECODE_EMPTY",
									"nameLocation": "10107:23:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "10083:52:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 616,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "10083:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "3834",
										"id": 617,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "10133:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_84_by_1",
											"typeString": "int_const 84"
										},
										"value": "84"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 621,
									"mutability": "constant",
									"name": "INVALID_INITIAL_BALANCE",
									"nameLocation": "10214:23:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "10190:52:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 619,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "10190:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "3835",
										"id": 620,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "10240:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_85_by_1",
											"typeString": "int_const 85"
										},
										"value": "85"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 624,
									"mutability": "constant",
									"name": "INVALID_RECEIVE_RECORD_THRESHOLD",
									"nameLocation": "10315:32:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "10291:61:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 622,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "10291:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "3836",
										"id": 623,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "10350:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_86_by_1",
											"typeString": "int_const 86"
										},
										"value": "86"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 627,
									"mutability": "constant",
									"name": "INVALID_SEND_RECORD_THRESHOLD",
									"nameLocation": "10448:29:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "10424:58:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 625,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "10424:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "3837",
										"id": 626,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "10480:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_87_by_1",
											"typeString": "int_const 87"
										},
										"value": "87"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 630,
									"mutability": "constant",
									"name": "ACCOUNT_IS_NOT_GENESIS_ACCOUNT",
									"nameLocation": "10575:30:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "10551:59:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 628,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "10551:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "3838",
										"id": 629,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "10608:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_88_by_1",
											"typeString": "int_const 88"
										},
										"value": "88"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 633,
									"mutability": "constant",
									"name": "PAYER_ACCOUNT_UNAUTHORIZED",
									"nameLocation": "10761:26:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "10737:55:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 631,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "10737:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "3839",
										"id": 632,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "10790:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_89_by_1",
											"typeString": "int_const 89"
										},
										"value": "89"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 636,
									"mutability": "constant",
									"name": "INVALID_FREEZE_TRANSACTION_BODY",
									"nameLocation": "10898:31:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "10874:60:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 634,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "10874:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "3930",
										"id": 635,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "10932:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_90_by_1",
											"typeString": "int_const 90"
										},
										"value": "90"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 639,
									"mutability": "constant",
									"name": "FREEZE_TRANSACTION_BODY_NOT_FOUND",
									"nameLocation": "11000:33:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "10976:62:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 637,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "10976:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "3931",
										"id": 638,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "11036:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_91_by_1",
											"typeString": "int_const 91"
										},
										"value": "91"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 642,
									"mutability": "constant",
									"name": "TRANSFER_LIST_SIZE_LIMIT_EXCEEDED",
									"nameLocation": "11108:33:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "11084:62:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 640,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "11084:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "3932",
										"id": 641,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "11144:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_92_by_1",
											"typeString": "int_const 92"
										},
										"value": "92"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 645,
									"mutability": "constant",
									"name": "RESULT_SIZE_LIMIT_EXCEEDED",
									"nameLocation": "11262:26:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "11238:55:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 643,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "11238:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "3933",
										"id": 644,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "11291:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_93_by_1",
											"typeString": "int_const 93"
										},
										"value": "93"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 648,
									"mutability": "constant",
									"name": "NOT_SPECIAL_ACCOUNT",
									"nameLocation": "11390:19:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "11366:48:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 646,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "11366:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "3934",
										"id": 647,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "11412:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_94_by_1",
											"typeString": "int_const 94"
										},
										"value": "94"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 651,
									"mutability": "constant",
									"name": "CONTRACT_NEGATIVE_GAS",
									"nameLocation": "11505:21:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "11481:50:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 649,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "11481:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "3935",
										"id": 650,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "11529:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_95_by_1",
											"typeString": "int_const 95"
										},
										"value": "95"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 654,
									"mutability": "constant",
									"name": "CONTRACT_NEGATIVE_VALUE",
									"nameLocation": "11612:23:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "11588:52:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 652,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "11588:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "3936",
										"id": 653,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "11638:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_96_by_1",
											"typeString": "int_const 96"
										},
										"value": "96"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 657,
									"mutability": "constant",
									"name": "INVALID_FEE_FILE",
									"nameLocation": "11754:16:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "11730:45:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 655,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "11730:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "3937",
										"id": 656,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "11773:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_97_by_1",
											"typeString": "int_const 97"
										},
										"value": "97"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 660,
									"mutability": "constant",
									"name": "INVALID_EXCHANGE_RATE_FILE",
									"nameLocation": "11834:26:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "11810:55:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 658,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "11810:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "3938",
										"id": 659,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "11863:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_98_by_1",
											"typeString": "int_const 98"
										},
										"value": "98"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 663,
									"mutability": "constant",
									"name": "INSUFFICIENT_LOCAL_CALL_GAS",
									"nameLocation": "11934:27:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "11910:56:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 661,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "11910:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "3939",
										"id": 662,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "11964:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_99_by_1",
											"typeString": "int_const 99"
										},
										"value": "99"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 666,
									"mutability": "constant",
									"name": "ENTITY_NOT_ALLOWED_TO_DELETE",
									"nameLocation": "12078:28:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "12054:58:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 664,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "12054:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "313030",
										"id": 665,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "12109:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100_by_1",
											"typeString": "int_const 100"
										},
										"value": "100"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 669,
									"mutability": "constant",
									"name": "AUTHORIZATION_FAILED",
									"nameLocation": "12210:20:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "12186:50:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 667,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "12186:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "313031",
										"id": 668,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "12233:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_101_by_1",
											"typeString": "int_const 101"
										},
										"value": "101"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 672,
									"mutability": "constant",
									"name": "FILE_UPLOADED_PROTO_INVALID",
									"nameLocation": "12743:27:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "12719:57:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 670,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "12719:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "313032",
										"id": 671,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "12773:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_102_by_1",
											"typeString": "int_const 102"
										},
										"value": "102"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 675,
									"mutability": "constant",
									"name": "FILE_UPLOADED_PROTO_NOT_SAVED_TO_DISK",
									"nameLocation": "12882:37:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "12858:67:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 673,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "12858:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "313033",
										"id": 674,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "12922:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_103_by_1",
											"typeString": "int_const 103"
										},
										"value": "103"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 678,
									"mutability": "constant",
									"name": "FEE_SCHEDULE_FILE_PART_UPLOADED",
									"nameLocation": "13031:31:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "13007:61:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 676,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "13007:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "313034",
										"id": 677,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "13065:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_104_by_1",
											"typeString": "int_const 104"
										},
										"value": "104"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 681,
									"mutability": "constant",
									"name": "EXCHANGE_RATE_CHANGE_LIMIT_EXCEEDED",
									"nameLocation": "13139:35:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "13115:65:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 679,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "13115:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "313035",
										"id": 680,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "13177:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_105_by_1",
											"typeString": "int_const 105"
										},
										"value": "105"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 684,
									"mutability": "constant",
									"name": "MAX_CONTRACT_STORAGE_EXCEEDED",
									"nameLocation": "13282:29:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "13258:59:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 682,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "13258:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "313036",
										"id": 683,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "13314:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_106_by_1",
											"typeString": "int_const 106"
										},
										"value": "106"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 687,
									"mutability": "constant",
									"name": "TRANSFER_ACCOUNT_SAME_AS_DELETE_ACCOUNT",
									"nameLocation": "13416:39:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "13392:69:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 685,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "13392:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "313037",
										"id": 686,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "13458:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_107_by_1",
											"typeString": "int_const 107"
										},
										"value": "107"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 690,
									"mutability": "constant",
									"name": "TOTAL_LEDGER_BALANCE_INVALID",
									"nameLocation": "13555:28:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "13531:58:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 688,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "13531:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "313038",
										"id": 689,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "13586:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_108_by_1",
											"typeString": "int_const 108"
										},
										"value": "108"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 693,
									"mutability": "constant",
									"name": "EXPIRATION_REDUCTION_NOT_ALLOWED",
									"nameLocation": "13619:32:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "13595:62:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 691,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "13595:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "313130",
										"id": 692,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "13654:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_110_by_1",
											"typeString": "int_const 110"
										},
										"value": "110"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 696,
									"mutability": "constant",
									"name": "MAX_GAS_LIMIT_EXCEEDED",
									"nameLocation": "13754:22:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "13730:52:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 694,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "13730:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "313131",
										"id": 695,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "13779:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_111_by_1",
											"typeString": "int_const 111"
										},
										"value": "111"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 699,
									"mutability": "constant",
									"name": "MAX_FILE_SIZE_EXCEEDED",
									"nameLocation": "13873:22:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "13849:52:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 697,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "13849:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "313132",
										"id": 698,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "13898:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_112_by_1",
											"typeString": "int_const 112"
										},
										"value": "112"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 702,
									"mutability": "constant",
									"name": "INVALID_TOPIC_ID",
									"nameLocation": "13984:16:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "13960:46:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 700,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "13960:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "313530",
										"id": 701,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "14003:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_150_by_1",
											"typeString": "int_const 150"
										},
										"value": "150"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 705,
									"mutability": "constant",
									"name": "INVALID_ADMIN_KEY",
									"nameLocation": "14084:17:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "14060:47:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 703,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "14060:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "313535",
										"id": 704,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "14104:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_155_by_1",
											"typeString": "int_const 155"
										},
										"value": "155"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 708,
									"mutability": "constant",
									"name": "INVALID_SUBMIT_KEY",
									"nameLocation": "14174:18:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "14150:48:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 706,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "14150:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "313536",
										"id": 707,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "14195:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_156_by_1",
											"typeString": "int_const 156"
										},
										"value": "156"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 711,
									"mutability": "constant",
									"name": "UNAUTHORIZED",
									"nameLocation": "14266:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "14242:42:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 709,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "14242:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "313537",
										"id": 710,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "14281:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_157_by_1",
											"typeString": "int_const 157"
										},
										"value": "157"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 714,
									"mutability": "constant",
									"name": "INVALID_TOPIC_MESSAGE",
									"nameLocation": "14410:21:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "14386:51:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 712,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "14386:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "313538",
										"id": 713,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "14434:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_158_by_1",
											"typeString": "int_const 158"
										},
										"value": "158"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 717,
									"mutability": "constant",
									"name": "INVALID_AUTORENEW_ACCOUNT",
									"nameLocation": "14507:25:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "14483:55:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 715,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "14483:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "313539",
										"id": 716,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "14535:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_159_by_1",
											"typeString": "int_const 159"
										},
										"value": "159"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 720,
									"mutability": "constant",
									"name": "AUTORENEW_ACCOUNT_NOT_ALLOWED",
									"nameLocation": "14634:29:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "14610:59:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 718,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "14610:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "313630",
										"id": 719,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "14666:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_160_by_1",
											"typeString": "int_const 160"
										},
										"value": "160"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 723,
									"mutability": "constant",
									"name": "TOPIC_EXPIRED",
									"nameLocation": "15040:13:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "15016:43:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 721,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "15016:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "313632",
										"id": 722,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "15056:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_162_by_1",
											"typeString": "int_const 162"
										},
										"value": "162"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 726,
									"mutability": "constant",
									"name": "INVALID_CHUNK_NUMBER",
									"nameLocation": "15089:20:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "15065:50:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 724,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "15065:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "313633",
										"id": 725,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "15112:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_163_by_1",
											"typeString": "int_const 163"
										},
										"value": "163"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 729,
									"mutability": "constant",
									"name": "INVALID_CHUNK_TRANSACTION_ID",
									"nameLocation": "15205:28:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "15181:58:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 727,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "15181:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "313634",
										"id": 728,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "15236:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_164_by_1",
											"typeString": "int_const 164"
										},
										"value": "164"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 732,
									"mutability": "constant",
									"name": "ACCOUNT_FROZEN_FOR_TOKEN",
									"nameLocation": "15558:24:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "15534:54:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 730,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "15534:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "313635",
										"id": 731,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "15585:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_165_by_1",
											"typeString": "int_const 165"
										},
										"value": "165"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 735,
									"mutability": "constant",
									"name": "TOKENS_PER_ACCOUNT_LIMIT_EXCEEDED",
									"nameLocation": "15674:33:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "15650:63:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 733,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "15650:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "313636",
										"id": 734,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "15710:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_166_by_1",
											"typeString": "int_const 166"
										},
										"value": "166"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 738,
									"mutability": "constant",
									"name": "INVALID_TOKEN_ID",
									"nameLocation": "15856:16:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "15832:46:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 736,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "15832:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "313637",
										"id": 737,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "15875:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_167_by_1",
											"typeString": "int_const 167"
										},
										"value": "167"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 741,
									"mutability": "constant",
									"name": "INVALID_TOKEN_DECIMALS",
									"nameLocation": "15950:22:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "15926:52:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 739,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "15926:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "313638",
										"id": 740,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "15975:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_168_by_1",
											"typeString": "int_const 168"
										},
										"value": "168"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 744,
									"mutability": "constant",
									"name": "INVALID_TOKEN_INITIAL_SUPPLY",
									"nameLocation": "16034:28:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "16010:58:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 742,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "16010:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "313639",
										"id": 743,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "16065:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_169_by_1",
											"typeString": "int_const 169"
										},
										"value": "169"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 747,
									"mutability": "constant",
									"name": "INVALID_TREASURY_ACCOUNT_FOR_TOKEN",
									"nameLocation": "16130:34:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "16106:64:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 745,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "16106:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "313730",
										"id": 746,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "16167:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_170_by_1",
											"typeString": "int_const 170"
										},
										"value": "170"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 750,
									"mutability": "constant",
									"name": "INVALID_TOKEN_SYMBOL",
									"nameLocation": "16249:20:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "16225:50:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 748,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "16225:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "313731",
										"id": 749,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "16272:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_171_by_1",
											"typeString": "int_const 171"
										},
										"value": "171"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 753,
									"mutability": "constant",
									"name": "TOKEN_HAS_NO_FREEZE_KEY",
									"nameLocation": "16366:23:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "16342:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 751,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "16342:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "313732",
										"id": 752,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "16392:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_172_by_1",
											"typeString": "int_const 172"
										},
										"value": "172"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 756,
									"mutability": "constant",
									"name": "TRANSFERS_NOT_ZERO_SUM_FOR_TOKEN",
									"nameLocation": "16459:32:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "16435:62:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 754,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "16435:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "313733",
										"id": 755,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "16494:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_173_by_1",
											"typeString": "int_const 173"
										},
										"value": "173"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 759,
									"mutability": "constant",
									"name": "MISSING_TOKEN_SYMBOL",
									"nameLocation": "16572:20:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "16548:50:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 757,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "16548:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "313734",
										"id": 758,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "16595:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_174_by_1",
											"typeString": "int_const 174"
										},
										"value": "174"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 762,
									"mutability": "constant",
									"name": "TOKEN_SYMBOL_TOO_LONG",
									"nameLocation": "16663:21:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "16639:51:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 760,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "16639:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "313735",
										"id": 761,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "16687:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_175_by_1",
											"typeString": "int_const 175"
										},
										"value": "175"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 765,
									"mutability": "constant",
									"name": "ACCOUNT_KYC_NOT_GRANTED_FOR_TOKEN",
									"nameLocation": "16762:33:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "16738:63:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 763,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "16738:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "313736",
										"id": 764,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "16798:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_176_by_1",
											"typeString": "int_const 176"
										},
										"value": "176"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 768,
									"mutability": "constant",
									"name": "TOKEN_HAS_NO_KYC_KEY",
									"nameLocation": "16892:20:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "16868:50:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 766,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "16868:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "313737",
										"id": 767,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "16915:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_177_by_1",
											"typeString": "int_const 177"
										},
										"value": "177"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 771,
									"mutability": "constant",
									"name": "INSUFFICIENT_TOKEN_BALANCE",
									"nameLocation": "16979:26:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "16955:56:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 769,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "16955:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "313738",
										"id": 770,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "17008:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_178_by_1",
											"typeString": "int_const 178"
										},
										"value": "178"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 774,
									"mutability": "constant",
									"name": "TOKEN_WAS_DELETED",
									"nameLocation": "17096:17:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "17072:47:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 772,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "17072:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "313739",
										"id": 773,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "17116:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_179_by_1",
											"typeString": "int_const 179"
										},
										"value": "179"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 777,
									"mutability": "constant",
									"name": "TOKEN_HAS_NO_SUPPLY_KEY",
									"nameLocation": "17207:23:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "17183:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 775,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "17183:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "313830",
										"id": 776,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "17233:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_180_by_1",
											"typeString": "int_const 180"
										},
										"value": "180"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 780,
									"mutability": "constant",
									"name": "TOKEN_HAS_NO_WIPE_KEY",
									"nameLocation": "17300:21:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "17276:51:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 778,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "17276:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "313831",
										"id": 779,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "17324:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_181_by_1",
											"typeString": "int_const 181"
										},
										"value": "181"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 783,
									"mutability": "constant",
									"name": "INVALID_TOKEN_MINT_AMOUNT",
									"nameLocation": "17389:25:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "17365:55:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 781,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "17365:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "313832",
										"id": 782,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "17417:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_182_by_1",
											"typeString": "int_const 182"
										},
										"value": "182"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 786,
									"mutability": "constant",
									"name": "INVALID_TOKEN_BURN_AMOUNT",
									"nameLocation": "17521:25:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "17497:55:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 784,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "17497:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "313833",
										"id": 785,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "17549:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_183_by_1",
											"typeString": "int_const 183"
										},
										"value": "183"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 789,
									"mutability": "constant",
									"name": "TOKEN_NOT_ASSOCIATED_TO_ACCOUNT",
									"nameLocation": "17653:31:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "17629:61:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 787,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "17629:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "313834",
										"id": 788,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "17687:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_184_by_1",
											"typeString": "int_const 184"
										},
										"value": "184"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 792,
									"mutability": "constant",
									"name": "CANNOT_WIPE_TOKEN_TREASURY_ACCOUNT",
									"nameLocation": "17772:34:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "17748:64:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 790,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "17748:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "313835",
										"id": 791,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "17809:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_185_by_1",
											"typeString": "int_const 185"
										},
										"value": "185"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 795,
									"mutability": "constant",
									"name": "INVALID_KYC_KEY",
									"nameLocation": "17907:15:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "17883:45:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 793,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "17883:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "313836",
										"id": 794,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "17925:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_186_by_1",
											"typeString": "int_const 186"
										},
										"value": "186"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 798,
									"mutability": "constant",
									"name": "INVALID_WIPE_KEY",
									"nameLocation": "17995:16:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "17971:46:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 796,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "17971:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "313837",
										"id": 797,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "18014:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_187_by_1",
											"typeString": "int_const 187"
										},
										"value": "187"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 801,
									"mutability": "constant",
									"name": "INVALID_FREEZE_KEY",
									"nameLocation": "18085:18:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "18061:48:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 799,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "18061:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "313838",
										"id": 800,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "18106:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_188_by_1",
											"typeString": "int_const 188"
										},
										"value": "188"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 804,
									"mutability": "constant",
									"name": "INVALID_SUPPLY_KEY",
									"nameLocation": "18179:18:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "18155:48:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 802,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "18155:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "313839",
										"id": 803,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "18200:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_189_by_1",
											"typeString": "int_const 189"
										},
										"value": "189"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 807,
									"mutability": "constant",
									"name": "MISSING_TOKEN_NAME",
									"nameLocation": "18273:18:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "18249:48:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 805,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "18249:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "313930",
										"id": 806,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "18294:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_190_by_1",
											"typeString": "int_const 190"
										},
										"value": "190"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 810,
									"mutability": "constant",
									"name": "TOKEN_NAME_TOO_LONG",
									"nameLocation": "18357:19:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "18333:49:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 808,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "18333:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "313931",
										"id": 809,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "18379:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_191_by_1",
											"typeString": "int_const 191"
										},
										"value": "191"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 813,
									"mutability": "constant",
									"name": "INVALID_WIPING_AMOUNT",
									"nameLocation": "18438:21:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "18414:51:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 811,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "18414:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "313932",
										"id": 812,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "18462:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_192_by_1",
											"typeString": "int_const 192"
										},
										"value": "192"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 816,
									"mutability": "constant",
									"name": "TOKEN_IS_IMMUTABLE",
									"nameLocation": "18590:18:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "18566:48:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 814,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "18566:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "313933",
										"id": 815,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "18611:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_193_by_1",
											"typeString": "int_const 193"
										},
										"value": "193"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 819,
									"mutability": "constant",
									"name": "TOKEN_ALREADY_ASSOCIATED_TO_ACCOUNT",
									"nameLocation": "18734:35:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "18710:65:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 817,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "18710:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "313934",
										"id": 818,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "18772:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_194_by_1",
											"typeString": "int_const 194"
										},
										"value": "194"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 822,
									"mutability": "constant",
									"name": "TRANSACTION_REQUIRES_ZERO_TOKEN_BALANCES",
									"nameLocation": "18897:40:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "18873:70:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 820,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "18873:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "313935",
										"id": 821,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "18940:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_195_by_1",
											"typeString": "int_const 195"
										},
										"value": "195"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 825,
									"mutability": "constant",
									"name": "ACCOUNT_IS_TREASURY",
									"nameLocation": "19067:19:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "19043:49:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 823,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "19043:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "313936",
										"id": 824,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "19089:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_196_by_1",
											"typeString": "int_const 196"
										},
										"value": "196"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 828,
									"mutability": "constant",
									"name": "TOKEN_ID_REPEATED_IN_TOKEN_LIST",
									"nameLocation": "19193:31:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "19169:61:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 826,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "19169:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "313937",
										"id": 827,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "19227:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_197_by_1",
											"typeString": "int_const 197"
										},
										"value": "197"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 831,
									"mutability": "constant",
									"name": "TOKEN_TRANSFER_LIST_SIZE_LIMIT_EXCEEDED",
									"nameLocation": "19303:39:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "19279:69:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 829,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "19279:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "313938",
										"id": 830,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "19345:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_198_by_1",
											"typeString": "int_const 198"
										},
										"value": "198"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 834,
									"mutability": "constant",
									"name": "EMPTY_TOKEN_TRANSFER_BODY",
									"nameLocation": "19471:25:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "19447:55:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 832,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "19447:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "313939",
										"id": 833,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "19499:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_199_by_1",
											"typeString": "int_const 199"
										},
										"value": "199"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 837,
									"mutability": "constant",
									"name": "EMPTY_TOKEN_TRANSFER_ACCOUNT_AMOUNTS",
									"nameLocation": "19590:36:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "19566:66:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 835,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "19566:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "323030",
										"id": 836,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "19629:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_200_by_1",
											"typeString": "int_const 200"
										},
										"value": "200"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 840,
									"mutability": "constant",
									"name": "INVALID_SCHEDULE_ID",
									"nameLocation": "19743:19:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "19719:49:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 838,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "19719:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "323031",
										"id": 839,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "19765:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_201_by_1",
											"typeString": "int_const 201"
										},
										"value": "201"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 843,
									"mutability": "constant",
									"name": "SCHEDULE_IS_IMMUTABLE",
									"nameLocation": "19889:21:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "19865:51:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 841,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "19865:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "323032",
										"id": 842,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "19913:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_202_by_1",
											"typeString": "int_const 202"
										},
										"value": "202"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 846,
									"mutability": "constant",
									"name": "INVALID_SCHEDULE_PAYER_ID",
									"nameLocation": "20008:25:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "19984:55:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 844,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "19984:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "323033",
										"id": 845,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "20036:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_203_by_1",
											"typeString": "int_const 203"
										},
										"value": "203"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 849,
									"mutability": "constant",
									"name": "INVALID_SCHEDULE_ACCOUNT_ID",
									"nameLocation": "20116:27:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "20092:57:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 847,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "20092:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "323034",
										"id": 848,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "20146:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_204_by_1",
											"typeString": "int_const 204"
										},
										"value": "204"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 852,
									"mutability": "constant",
									"name": "NO_NEW_VALID_SIGNATURES",
									"nameLocation": "20251:23:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "20227:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 850,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "20227:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "323035",
										"id": 851,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "20277:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_205_by_1",
											"typeString": "int_const 205"
										},
										"value": "205"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 855,
									"mutability": "constant",
									"name": "UNRESOLVABLE_REQUIRED_SIGNERS",
									"nameLocation": "20426:29:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "20402:59:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 853,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "20402:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "323036",
										"id": 854,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "20458:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_206_by_1",
											"typeString": "int_const 206"
										},
										"value": "206"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 858,
									"mutability": "constant",
									"name": "SCHEDULED_TRANSACTION_NOT_IN_WHITELIST",
									"nameLocation": "20622:38:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "20598:68:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 856,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "20598:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "323037",
										"id": 857,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "20663:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_207_by_1",
											"typeString": "int_const 207"
										},
										"value": "207"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 861,
									"mutability": "constant",
									"name": "SOME_SIGNATURES_WERE_INVALID",
									"nameLocation": "20751:28:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "20727:58:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 859,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "20727:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "323038",
										"id": 860,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "20782:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_208_by_1",
											"typeString": "int_const 208"
										},
										"value": "208"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 864,
									"mutability": "constant",
									"name": "TRANSACTION_ID_FIELD_NOT_ALLOWED",
									"nameLocation": "20933:32:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "20909:62:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 862,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "20909:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "323039",
										"id": 863,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "20968:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_209_by_1",
											"typeString": "int_const 209"
										},
										"value": "209"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 867,
									"mutability": "constant",
									"name": "IDENTICAL_SCHEDULE_ALREADY_CREATED",
									"nameLocation": "21068:34:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "21044:64:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 865,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "21044:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "323130",
										"id": 866,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "21105:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_210_by_1",
											"typeString": "int_const 210"
										},
										"value": "210"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 870,
									"mutability": "constant",
									"name": "INVALID_ZERO_BYTE_IN_STRING",
									"nameLocation": "21288:27:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "21264:57:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 868,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "21264:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "323131",
										"id": 869,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "21318:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_211_by_1",
											"typeString": "int_const 211"
										},
										"value": "211"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 873,
									"mutability": "constant",
									"name": "SCHEDULE_ALREADY_DELETED",
									"nameLocation": "21439:24:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "21415:54:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 871,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "21415:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "323132",
										"id": 872,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "21466:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_212_by_1",
											"typeString": "int_const 212"
										},
										"value": "212"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 876,
									"mutability": "constant",
									"name": "SCHEDULE_ALREADY_EXECUTED",
									"nameLocation": "21562:25:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "21538:55:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 874,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "21538:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "323133",
										"id": 875,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "21590:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_213_by_1",
											"typeString": "int_const 213"
										},
										"value": "213"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 879,
									"mutability": "constant",
									"name": "MESSAGE_SIZE_TOO_LARGE",
									"nameLocation": "21687:22:2",
									"nodeType": "VariableDeclaration",
									"scope": 880,
									"src": "21663:52:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int32",
										"typeString": "int32"
									},
									"typeName": {
										"id": 877,
										"name": "int32",
										"nodeType": "ElementaryTypeName",
										"src": "21663:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int32",
											"typeString": "int32"
										}
									},
									"value": {
										"hexValue": "323134",
										"id": 878,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "21712:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_214_by_1",
											"typeString": "int_const 214"
										},
										"value": "214"
									},
									"visibility": "internal"
								}
							],
							"scope": 881,
							"src": "72:21719:2",
							"usedErrors": []
						}
					],
					"src": "39:21753:2"
				},
				"id": 2
			},
			"hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol": {
				"ast": {
					"absolutePath": "hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol",
					"exportedSymbols": {
						"HederaResponseCodes": [
							880
						],
						"HederaTokenService": [
							2002
						],
						"IHederaTokenService": [
							2709
						]
					},
					"id": 2003,
					"license": "Apache-2.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 882,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "39:31:3"
						},
						{
							"id": 883,
							"literals": [
								"experimental",
								"ABIEncoderV2"
							],
							"nodeType": "PragmaDirective",
							"src": "71:33:3"
						},
						{
							"absolutePath": "hbar/SmartContracts/Auction2/hts-precompile/HederaResponseCodes.sol",
							"file": "./HederaResponseCodes.sol",
							"id": 884,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2003,
							"sourceUnit": 881,
							"src": "105:35:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "hbar/SmartContracts/Auction2/hts-precompile/IHederaTokenService.sol",
							"file": "./IHederaTokenService.sol",
							"id": 885,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2003,
							"sourceUnit": 2710,
							"src": "141:35:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 886,
										"name": "HederaResponseCodes",
										"nameLocations": [
											"218:19:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 880,
										"src": "218:19:3"
									},
									"id": 887,
									"nodeType": "InheritanceSpecifier",
									"src": "218:19:3"
								}
							],
							"canonicalName": "HederaTokenService",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2002,
							"linearizedBaseContracts": [
								2002,
								880
							],
							"name": "HederaTokenService",
							"nameLocation": "196:18:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 893,
									"mutability": "constant",
									"name": "precompileAddress",
									"nameLocation": "261:17:3",
									"nodeType": "VariableDeclaration",
									"scope": 2002,
									"src": "244:51:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 888,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "244:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "3078313637",
												"id": 891,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "289:5:3",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_359_by_1",
													"typeString": "int_const 359"
												},
												"value": "0x167"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_359_by_1",
													"typeString": "int_const 359"
												}
											],
											"id": 890,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "281:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 889,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "281:7:3",
												"typeDescriptions": {}
											}
										},
										"id": 892,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "281:14:3",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 896,
									"mutability": "constant",
									"name": "defaultAutoRenewPeriod",
									"nameLocation": "343:22:3",
									"nodeType": "VariableDeclaration",
									"scope": 2002,
									"src": "327:48:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint32",
										"typeString": "uint32"
									},
									"typeName": {
										"id": 894,
										"name": "uint32",
										"nodeType": "ElementaryTypeName",
										"src": "327:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint32",
											"typeString": "uint32"
										}
									},
									"value": {
										"hexValue": "37373736303030",
										"id": 895,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "368:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_7776000_by_1",
											"typeString": "int_const 7776000"
										},
										"value": "7776000"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 899,
									"mutability": "constant",
									"name": "ADMIN_KEY_TYPE",
									"nameLocation": "396:14:3",
									"nodeType": "VariableDeclaration",
									"scope": 2002,
									"src": "382:32:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 897,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "382:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 898,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "413:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 902,
									"mutability": "constant",
									"name": "KYC_KEY_TYPE",
									"nameLocation": "434:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 2002,
									"src": "420:30:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 900,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "420:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 901,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "449:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 905,
									"mutability": "constant",
									"name": "FREEZE_KEY_TYPE",
									"nameLocation": "470:15:3",
									"nodeType": "VariableDeclaration",
									"scope": 2002,
									"src": "456:33:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 903,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "456:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "34",
										"id": 904,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "488:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_4_by_1",
											"typeString": "int_const 4"
										},
										"value": "4"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 908,
									"mutability": "constant",
									"name": "WIPE_KEY_TYPE",
									"nameLocation": "509:13:3",
									"nodeType": "VariableDeclaration",
									"scope": 2002,
									"src": "495:31:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 906,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "495:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "38",
										"id": 907,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "525:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_8_by_1",
											"typeString": "int_const 8"
										},
										"value": "8"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 911,
									"mutability": "constant",
									"name": "SUPPLY_KEY_TYPE",
									"nameLocation": "546:15:3",
									"nodeType": "VariableDeclaration",
									"scope": 2002,
									"src": "532:34:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 909,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "532:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3136",
										"id": 910,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "564:2:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_16_by_1",
											"typeString": "int_const 16"
										},
										"value": "16"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 914,
									"mutability": "constant",
									"name": "FEE_SCHEDULE_KEY_TYPE",
									"nameLocation": "586:21:3",
									"nodeType": "VariableDeclaration",
									"scope": 2002,
									"src": "572:40:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 912,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "572:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3332",
										"id": 913,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "610:2:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_32_by_1",
											"typeString": "int_const 32"
										},
										"value": "32"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 917,
									"mutability": "constant",
									"name": "PAUSE_KEY_TYPE",
									"nameLocation": "632:14:3",
									"nodeType": "VariableDeclaration",
									"scope": 2002,
									"src": "618:33:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 915,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "618:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3634",
										"id": 916,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "649:2:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_64_by_1",
											"typeString": "int_const 64"
										},
										"value": "64"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 944,
										"nodeType": "Block",
										"src": "728:172:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 932,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"id": 926,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"id": 922,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 920,
																	"src": "742:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_HederaToken_$2074_memory_ptr",
																		"typeString": "struct IHederaTokenService.HederaToken memory"
																	}
																},
																"id": 923,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "748:6:3",
																"memberName": "expiry",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2073,
																"src": "742:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Expiry_$2035_memory_ptr",
																	"typeString": "struct IHederaTokenService.Expiry memory"
																}
															},
															"id": 924,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "755:6:3",
															"memberName": "second",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2030,
															"src": "742:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 925,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "765:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "742:24:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"id": 931,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"id": 927,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 920,
																	"src": "770:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_HederaToken_$2074_memory_ptr",
																		"typeString": "struct IHederaTokenService.HederaToken memory"
																	}
																},
																"id": 928,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "776:6:3",
																"memberName": "expiry",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2073,
																"src": "770:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Expiry_$2035_memory_ptr",
																	"typeString": "struct IHederaTokenService.Expiry memory"
																}
															},
															"id": 929,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "783:15:3",
															"memberName": "autoRenewPeriod",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2034,
															"src": "770:28:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 930,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "802:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "770:33:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "742:61:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 942,
												"nodeType": "IfStatement",
												"src": "738:145:3",
												"trueBody": {
													"id": 941,
													"nodeType": "Block",
													"src": "805:78:3",
													"statements": [
														{
															"expression": {
																"id": 939,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"expression": {
																			"id": 933,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 920,
																			"src": "819:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_HederaToken_$2074_memory_ptr",
																				"typeString": "struct IHederaTokenService.HederaToken memory"
																			}
																		},
																		"id": 936,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "825:6:3",
																		"memberName": "expiry",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2073,
																		"src": "819:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Expiry_$2035_memory_ptr",
																			"typeString": "struct IHederaTokenService.Expiry memory"
																		}
																	},
																	"id": 937,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "832:15:3",
																	"memberName": "autoRenewPeriod",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2034,
																	"src": "819:28:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 938,
																	"name": "defaultAutoRenewPeriod",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 896,
																	"src": "850:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"src": "819:53:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"id": 940,
															"nodeType": "ExpressionStatement",
															"src": "819:53:3"
														}
													]
												}
											},
											{
												"id": 943,
												"nodeType": "PlaceholderStatement",
												"src": "892:1:3"
											}
										]
									},
									"id": 945,
									"name": "nonEmptyExpiry",
									"nameLocation": "667:14:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "721:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "682:44:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_HederaToken_$2074_memory_ptr",
													"typeString": "struct IHederaTokenService.HederaToken"
												},
												"typeName": {
													"id": 919,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 918,
														"name": "IHederaTokenService.HederaToken",
														"nameLocations": [
															"682:19:3",
															"702:11:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2074,
														"src": "682:31:3"
													},
													"referencedDeclaration": 2074,
													"src": "682:31:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_HederaToken_$2074_storage_ptr",
														"typeString": "struct IHederaTokenService.HederaToken"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "681:46:3"
									},
									"src": "658:242:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 984,
										"nodeType": "Block",
										"src": "1229:346:3",
										"statements": [
											{
												"assignments": [
													956,
													958
												],
												"declarations": [
													{
														"constant": false,
														"id": 956,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1245:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 984,
														"src": "1240:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 955,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1240:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 958,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "1267:6:3",
														"nodeType": "VariableDeclaration",
														"scope": 984,
														"src": "1254:19:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 957,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1254:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 969,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 963,
																			"name": "IHederaTokenService",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2709,
																			"src": "1353:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IHederaTokenService_$2709_$",
																				"typeString": "type(contract IHederaTokenService)"
																			}
																		},
																		"id": 964,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "1373:14:3",
																		"memberName": "cryptoTransfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2184,
																		"src": "1353:34:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_array$_t_struct$_TokenTransferList_$2028_memory_ptr_$dyn_memory_ptr_$returns$_t_int64_$",
																			"typeString": "function IHederaTokenService.cryptoTransfer(struct IHederaTokenService.TokenTransferList memory[] memory) returns (int64)"
																		}
																	},
																	"id": 965,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "1388:8:3",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1353:43:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 966,
																	"name": "tokenTransfers",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 950,
																	"src": "1414:14:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_TokenTransferList_$2028_memory_ptr_$dyn_memory_ptr",
																		"typeString": "struct IHederaTokenService.TokenTransferList memory[] memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_array$_t_struct$_TokenTransferList_$2028_memory_ptr_$dyn_memory_ptr",
																		"typeString": "struct IHederaTokenService.TokenTransferList memory[] memory"
																	}
																],
																"expression": {
																	"id": 961,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1313:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 962,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1317:18:3",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1313:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 967,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1313:129:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 959,
															"name": "precompileAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 893,
															"src": "1277:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 960,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1295:4:3",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "1277:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 968,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1277:175:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1239:213:3"
											},
											{
												"expression": {
													"id": 982,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 970,
														"name": "responseCode",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 953,
														"src": "1462:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"condition": {
															"id": 971,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 956,
															"src": "1477:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"expression": {
																"id": 979,
																"name": "HederaResponseCodes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 880,
																"src": "1541:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_HederaResponseCodes_$880_$",
																	"typeString": "type(contract HederaResponseCodes)"
																}
															},
															"id": 980,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "1561:7:3",
															"memberName": "UNKNOWN",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 429,
															"src": "1541:27:3",
															"typeDescriptions": {
																"typeIdentifier": "t_int32",
																"typeString": "int32"
															}
														},
														"id": 981,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "1477:91:3",
														"trueExpression": {
															"arguments": [
																{
																	"id": 974,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 958,
																	"src": "1510:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"components": [
																		{
																			"id": 976,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1519:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_int32_$",
																				"typeString": "type(int32)"
																			},
																			"typeName": {
																				"id": 975,
																				"name": "int32",
																				"nodeType": "ElementaryTypeName",
																				"src": "1519:5:3",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"id": 977,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1518:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_int32_$",
																		"typeString": "type(int32)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_type$_t_int32_$",
																		"typeString": "type(int32)"
																	}
																],
																"expression": {
																	"id": 972,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1499:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 973,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1503:6:3",
																"memberName": "decode",
																"nodeType": "MemberAccess",
																"src": "1499:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 978,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1499:27:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int32",
																"typeString": "int32"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_int32",
															"typeString": "int32"
														}
													},
													"src": "1462:106:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 983,
												"nodeType": "ExpressionStatement",
												"src": "1462:106:3"
											}
										]
									},
									"documentation": {
										"id": 946,
										"nodeType": "StructuredDocumentation",
										"src": "906:181:3",
										"text": "Initiates a Token Transfer\n @param tokenTransfers the list of transfers to do\n @return responseCode The response code for the status of the request. SUCCESS is 22."
									},
									"id": 985,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cryptoTransfer",
									"nameLocation": "1101:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "tokenTransfers",
												"nameLocation": "1172:14:3",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "1125:61:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_TokenTransferList_$2028_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IHederaTokenService.TokenTransferList[]"
												},
												"typeName": {
													"baseType": {
														"id": 948,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 947,
															"name": "IHederaTokenService.TokenTransferList",
															"nameLocations": [
																"1125:19:3",
																"1145:17:3"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 2028,
															"src": "1125:37:3"
														},
														"referencedDeclaration": 2028,
														"src": "1125:37:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenTransferList_$2028_storage_ptr",
															"typeString": "struct IHederaTokenService.TokenTransferList"
														}
													},
													"id": 949,
													"nodeType": "ArrayTypeName",
													"src": "1125:39:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_TokenTransferList_$2028_storage_$dyn_storage_ptr",
														"typeString": "struct IHederaTokenService.TokenTransferList[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1115:77:3"
									},
									"returnParameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "1215:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "1211:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 952,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "1211:3:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:18:3"
									},
									"scope": 2002,
									"src": "1092:483:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1049,
										"nodeType": "Block",
										"src": "2829:453:3",
										"statements": [
											{
												"assignments": [
													1004,
													1006
												],
												"declarations": [
													{
														"constant": false,
														"id": 1004,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2845:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 1049,
														"src": "2840:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1003,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2840:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1006,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "2867:6:3",
														"nodeType": "VariableDeclaration",
														"scope": 1049,
														"src": "2854:19:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1005,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2854:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1019,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1011,
																			"name": "IHederaTokenService",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2709,
																			"src": "2953:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IHederaTokenService_$2709_$",
																				"typeString": "type(contract IHederaTokenService)"
																			}
																		},
																		"id": 1012,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "2973:9:3",
																		"memberName": "mintToken",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2202,
																		"src": "2953:29:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint64_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$returns$_t_int64_$_t_uint64_$_t_array$_t_int64_$dyn_memory_ptr_$",
																			"typeString": "function IHederaTokenService.mintToken(address,uint64,bytes memory[] memory) returns (int64,uint64,int64[] memory)"
																		}
																	},
																	"id": 1013,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "2983:8:3",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2953:38:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1014,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 988,
																	"src": "3009:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1015,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 990,
																	"src": "3032:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																{
																	"id": 1016,
																	"name": "metadata",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 993,
																	"src": "3056:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
																		"typeString": "bytes memory[] memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	},
																	{
																		"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
																		"typeString": "bytes memory[] memory"
																	}
																],
																"expression": {
																	"id": 1009,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2913:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1010,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2917:18:3",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2913:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1017,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2913:165:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1007,
															"name": "precompileAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 893,
															"src": "2877:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1008,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2895:4:3",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "2877:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2877:211:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2839:249:3"
											},
											{
												"expression": {
													"id": 1047,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 1020,
																"name": "responseCode",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 996,
																"src": "3099:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															{
																"id": 1021,
																"name": "newTotalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 998,
																"src": "3113:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															{
																"id": 1022,
																"name": "serialNumbers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1001,
																"src": "3129:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_int64_$dyn_memory_ptr",
																	"typeString": "int64[] memory"
																}
															}
														],
														"id": 1023,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "3098:45:3",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_int256_$_t_uint64_$_t_array$_t_int64_$dyn_memory_ptr_$",
															"typeString": "tuple(int256,uint64,int64[] memory)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"condition": {
															"id": 1024,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1004,
															"src": "3146:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"components": [
																{
																	"expression": {
																		"id": 1037,
																		"name": "HederaResponseCodes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 880,
																		"src": "3228:19:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_HederaResponseCodes_$880_$",
																			"typeString": "type(contract HederaResponseCodes)"
																		}
																	},
																	"id": 1038,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "3248:7:3",
																	"memberName": "UNKNOWN",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 429,
																	"src": "3228:27:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int32",
																		"typeString": "int32"
																	}
																},
																{
																	"hexValue": "30",
																	"id": 1039,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3257:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																{
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1043,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3272:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1042,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "NewExpression",
																		"src": "3260:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_int64_$dyn_memory_ptr_$",
																			"typeString": "function (uint256) pure returns (int64[] memory)"
																		},
																		"typeName": {
																			"baseType": {
																				"id": 1040,
																				"name": "int64",
																				"nodeType": "ElementaryTypeName",
																				"src": "3264:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int64",
																					"typeString": "int64"
																				}
																			},
																			"id": 1041,
																			"nodeType": "ArrayTypeName",
																			"src": "3264:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_int64_$dyn_storage_ptr",
																				"typeString": "int64[]"
																			}
																		}
																	},
																	"id": 1044,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3260:14:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_int64_$dyn_memory_ptr",
																		"typeString": "int64[] memory"
																	}
																}
															],
															"id": 1045,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3227:48:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_int32_$_t_rational_0_by_1_$_t_array$_t_int64_$dyn_memory_ptr_$",
																"typeString": "tuple(int32,int_const 0,int64[] memory)"
															}
														},
														"id": 1046,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "3146:129:3",
														"trueExpression": {
															"arguments": [
																{
																	"id": 1027,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1006,
																	"src": "3179:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"components": [
																		{
																			"id": 1029,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3188:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_int32_$",
																				"typeString": "type(int32)"
																			},
																			"typeName": {
																				"id": 1028,
																				"name": "int32",
																				"nodeType": "ElementaryTypeName",
																				"src": "3188:5:3",
																				"typeDescriptions": {}
																			}
																		},
																		{
																			"id": 1031,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3195:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint64_$",
																				"typeString": "type(uint64)"
																			},
																			"typeName": {
																				"id": 1030,
																				"name": "uint64",
																				"nodeType": "ElementaryTypeName",
																				"src": "3195:6:3",
																				"typeDescriptions": {}
																			}
																		},
																		{
																			"baseExpression": {
																				"id": 1033,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3203:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_int64_$",
																					"typeString": "type(int64)"
																				},
																				"typeName": {
																					"id": 1032,
																					"name": "int64",
																					"nodeType": "ElementaryTypeName",
																					"src": "3203:5:3",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1034,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3203:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_array$_t_int64_$dyn_memory_ptr_$",
																				"typeString": "type(int64[] memory)"
																			}
																		}
																	],
																	"id": 1035,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3187:24:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_type$_t_int32_$_$_t_type$_t_uint64_$_$_t_type$_t_array$_t_int64_$dyn_memory_ptr_$_$",
																		"typeString": "tuple(type(int32),type(uint64),type(int64[] memory))"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_type$_t_int32_$_$_t_type$_t_uint64_$_$_t_type$_t_array$_t_int64_$dyn_memory_ptr_$_$",
																		"typeString": "tuple(type(int32),type(uint64),type(int64[] memory))"
																	}
																],
																"expression": {
																	"id": 1025,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "3168:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1026,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "3172:6:3",
																"memberName": "decode",
																"nodeType": "MemberAccess",
																"src": "3168:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1036,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3168:44:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_int32_$_t_uint64_$_t_array$_t_int64_$dyn_memory_ptr_$",
																"typeString": "tuple(int32,uint64,int64[] memory)"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_int32_$_t_uint64_$_t_array$_t_int64_$dyn_memory_ptr_$",
															"typeString": "tuple(int32,uint64,int64[] memory)"
														}
													},
													"src": "3098:177:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1048,
												"nodeType": "ExpressionStatement",
												"src": "3098:177:3"
											}
										]
									},
									"documentation": {
										"id": 986,
										"nodeType": "StructuredDocumentation",
										"src": "1581:984:3",
										"text": "Mints an amount of the token to the defined treasury account\n @param token The token for which to mint tokens. If token does not exist, transaction results in\n              INVALID_TOKEN_ID\n @param amount Applicable to tokens of type FUNGIBLE_COMMON. The amount to mint to the Treasury Account.\n               Amount must be a positive non-zero number represented in the lowest denomination of the\n               token. The new supply must be lower than 2^63.\n @param metadata Applicable to tokens of type NON_FUNGIBLE_UNIQUE. A list of metadata that are being created.\n                 Maximum allowed size of each metadata is 100 bytes\n @return responseCode The response code for the status of the request. SUCCESS is 22.\n @return newTotalSupply The new supply of tokens. For NFTs it is the total count of NFTs\n @return serialNumbers If the token is an NFT the newly generate serial numbers, otherwise empty."
									},
									"id": 1050,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mintToken",
									"nameLocation": "2579:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 988,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2606:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "2598:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 987,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2598:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2628:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "2621:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 989,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "2621:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 993,
												"mutability": "mutable",
												"name": "metadata",
												"nameLocation": "2659:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "2644:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
													"typeString": "bytes[]"
												},
												"typeName": {
													"baseType": {
														"id": 991,
														"name": "bytes",
														"nodeType": "ElementaryTypeName",
														"src": "2644:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage_ptr",
															"typeString": "bytes"
														}
													},
													"id": 992,
													"nodeType": "ArrayTypeName",
													"src": "2644:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
														"typeString": "bytes[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2588:85:3"
									},
									"returnParameters": {
										"id": 1002,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "2725:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "2721:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 995,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "2721:3:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 998,
												"mutability": "mutable",
												"name": "newTotalSupply",
												"nameLocation": "2758:14:3",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "2751:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 997,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "2751:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1001,
												"mutability": "mutable",
												"name": "serialNumbers",
												"nameLocation": "2801:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "2786:28:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_int64_$dyn_memory_ptr",
													"typeString": "int64[]"
												},
												"typeName": {
													"baseType": {
														"id": 999,
														"name": "int64",
														"nodeType": "ElementaryTypeName",
														"src": "2786:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_int64",
															"typeString": "int64"
														}
													},
													"id": 1000,
													"nodeType": "ArrayTypeName",
													"src": "2786:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_int64_$dyn_storage_ptr",
														"typeString": "int64[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2707:117:3"
									},
									"scope": 2002,
									"src": "2570:712:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1102,
										"nodeType": "Block",
										"src": "4295:418:3",
										"statements": [
											{
												"assignments": [
													1066,
													1068
												],
												"declarations": [
													{
														"constant": false,
														"id": 1066,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4311:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 1102,
														"src": "4306:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1065,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4306:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1068,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "4333:6:3",
														"nodeType": "VariableDeclaration",
														"scope": 1102,
														"src": "4320:19:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1067,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4320:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1081,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1073,
																			"name": "IHederaTokenService",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2709,
																			"src": "4419:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IHederaTokenService_$2709_$",
																				"typeString": "type(contract IHederaTokenService)"
																			}
																		},
																		"id": 1074,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "4439:9:3",
																		"memberName": "burnToken",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2217,
																		"src": "4419:29:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint64_$_t_array$_t_int64_$dyn_memory_ptr_$returns$_t_int64_$_t_uint64_$",
																			"typeString": "function IHederaTokenService.burnToken(address,uint64,int64[] memory) returns (int64,uint64)"
																		}
																	},
																	"id": 1075,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "4449:8:3",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "4419:38:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1076,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1053,
																	"src": "4475:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1077,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1055,
																	"src": "4498:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																{
																	"id": 1078,
																	"name": "serialNumbers",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1058,
																	"src": "4522:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_int64_$dyn_memory_ptr",
																		"typeString": "int64[] memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	},
																	{
																		"typeIdentifier": "t_array$_t_int64_$dyn_memory_ptr",
																		"typeString": "int64[] memory"
																	}
																],
																"expression": {
																	"id": 1071,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4379:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1072,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4383:18:3",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "4379:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1079,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4379:170:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1069,
															"name": "precompileAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 893,
															"src": "4343:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1070,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4361:4:3",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "4343:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4343:216:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4305:254:3"
											},
											{
												"expression": {
													"id": 1100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 1082,
																"name": "responseCode",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1061,
																"src": "4570:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															{
																"id": 1083,
																"name": "newTotalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1063,
																"src": "4584:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															}
														],
														"id": 1084,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "4569:30:3",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_int256_$_t_uint64_$",
															"typeString": "tuple(int256,uint64)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"condition": {
															"id": 1085,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1066,
															"src": "4602:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"components": [
																{
																	"expression": {
																		"id": 1095,
																		"name": "HederaResponseCodes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 880,
																		"src": "4675:19:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_HederaResponseCodes_$880_$",
																			"typeString": "type(contract HederaResponseCodes)"
																		}
																	},
																	"id": 1096,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "4695:7:3",
																	"memberName": "UNKNOWN",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 429,
																	"src": "4675:27:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int32",
																		"typeString": "int32"
																	}
																},
																{
																	"hexValue": "30",
																	"id": 1097,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4704:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"id": 1098,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4674:32:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_int32_$_t_rational_0_by_1_$",
																"typeString": "tuple(int32,int_const 0)"
															}
														},
														"id": 1099,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "4602:104:3",
														"trueExpression": {
															"arguments": [
																{
																	"id": 1088,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1068,
																	"src": "4635:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"components": [
																		{
																			"id": 1090,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4644:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_int32_$",
																				"typeString": "type(int32)"
																			},
																			"typeName": {
																				"id": 1089,
																				"name": "int32",
																				"nodeType": "ElementaryTypeName",
																				"src": "4644:5:3",
																				"typeDescriptions": {}
																			}
																		},
																		{
																			"id": 1092,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4651:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint64_$",
																				"typeString": "type(uint64)"
																			},
																			"typeName": {
																				"id": 1091,
																				"name": "uint64",
																				"nodeType": "ElementaryTypeName",
																				"src": "4651:6:3",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"id": 1093,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4643:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_type$_t_int32_$_$_t_type$_t_uint64_$_$",
																		"typeString": "tuple(type(int32),type(uint64))"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_type$_t_int32_$_$_t_type$_t_uint64_$_$",
																		"typeString": "tuple(type(int32),type(uint64))"
																	}
																],
																"expression": {
																	"id": 1086,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4624:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1087,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4628:6:3",
																"memberName": "decode",
																"nodeType": "MemberAccess",
																"src": "4624:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1094,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4624:35:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_int32_$_t_uint64_$",
																"typeString": "tuple(int32,uint64)"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_int32_$_t_uint64_$",
															"typeString": "tuple(int32,uint64)"
														}
													},
													"src": "4569:137:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1101,
												"nodeType": "ExpressionStatement",
												"src": "4569:137:3"
											}
										]
									},
									"documentation": {
										"id": 1051,
										"nodeType": "StructuredDocumentation",
										"src": "3288:834:3",
										"text": "Burns an amount of the token from the defined treasury account\n @param token The token for which to burn tokens. If token does not exist, transaction results in\n              INVALID_TOKEN_ID\n @param amount  Applicable to tokens of type FUNGIBLE_COMMON. The amount to burn from the Treasury Account.\n                Amount must be a positive non-zero number, not bigger than the token balance of the treasury\n                account (0; balance], represented in the lowest denomination.\n @param serialNumbers Applicable to tokens of type NON_FUNGIBLE_UNIQUE. The list of serial numbers to be burned.\n @return responseCode The response code for the status of the request. SUCCESS is 22.\n @return newTotalSupply The new supply of tokens. For NFTs it is the total count of NFTs"
									},
									"id": 1103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnToken",
									"nameLocation": "4136:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1059,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4163:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "4155:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1052,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4155:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4185:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "4178:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1054,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "4178:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "serialNumbers",
												"nameLocation": "4216:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "4201:28:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_int64_$dyn_memory_ptr",
													"typeString": "int64[]"
												},
												"typeName": {
													"baseType": {
														"id": 1056,
														"name": "int64",
														"nodeType": "ElementaryTypeName",
														"src": "4201:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_int64",
															"typeString": "int64"
														}
													},
													"id": 1057,
													"nodeType": "ArrayTypeName",
													"src": "4201:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_int64_$dyn_storage_ptr",
														"typeString": "int64[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4145:90:3"
									},
									"returnParameters": {
										"id": 1064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "4258:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "4254:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1060,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "4254:3:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1063,
												"mutability": "mutable",
												"name": "newTotalSupply",
												"nameLocation": "4279:14:3",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "4272:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1062,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "4272:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4253:41:3"
									},
									"scope": 2002,
									"src": "4127:586:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1144,
										"nodeType": "Block",
										"src": "6364:364:3",
										"statements": [
											{
												"assignments": [
													1115,
													1117
												],
												"declarations": [
													{
														"constant": false,
														"id": 1115,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6380:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 1144,
														"src": "6375:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1114,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6375:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1117,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "6402:6:3",
														"nodeType": "VariableDeclaration",
														"scope": 1144,
														"src": "6389:19:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1116,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6389:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1129,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1122,
																			"name": "IHederaTokenService",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2709,
																			"src": "6488:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IHederaTokenService_$2709_$",
																				"typeString": "type(contract IHederaTokenService)"
																			}
																		},
																		"id": 1123,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6508:15:3",
																		"memberName": "associateTokens",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2228,
																		"src": "6488:35:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_int64_$",
																			"typeString": "function IHederaTokenService.associateTokens(address,address[] memory) returns (int64)"
																		}
																	},
																	"id": 1124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "6524:8:3",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "6488:44:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1125,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1106,
																	"src": "6550:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1126,
																	"name": "tokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1109,
																	"src": "6575:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																],
																"expression": {
																	"id": 1120,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "6448:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1121,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "6452:18:3",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "6448:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1127,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6448:147:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1118,
															"name": "precompileAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 893,
															"src": "6412:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1119,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6430:4:3",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "6412:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6412:193:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6374:231:3"
											},
											{
												"expression": {
													"id": 1142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1130,
														"name": "responseCode",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1112,
														"src": "6615:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"condition": {
															"id": 1131,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1115,
															"src": "6630:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"expression": {
																"id": 1139,
																"name": "HederaResponseCodes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 880,
																"src": "6694:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_HederaResponseCodes_$880_$",
																	"typeString": "type(contract HederaResponseCodes)"
																}
															},
															"id": 1140,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "6714:7:3",
															"memberName": "UNKNOWN",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 429,
															"src": "6694:27:3",
															"typeDescriptions": {
																"typeIdentifier": "t_int32",
																"typeString": "int32"
															}
														},
														"id": 1141,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "6630:91:3",
														"trueExpression": {
															"arguments": [
																{
																	"id": 1134,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1117,
																	"src": "6663:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"components": [
																		{
																			"id": 1136,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6672:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_int32_$",
																				"typeString": "type(int32)"
																			},
																			"typeName": {
																				"id": 1135,
																				"name": "int32",
																				"nodeType": "ElementaryTypeName",
																				"src": "6672:5:3",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"id": 1137,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "6671:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_int32_$",
																		"typeString": "type(int32)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_type$_t_int32_$",
																		"typeString": "type(int32)"
																	}
																],
																"expression": {
																	"id": 1132,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "6652:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1133,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "6656:6:3",
																"memberName": "decode",
																"nodeType": "MemberAccess",
																"src": "6652:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1138,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6652:27:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int32",
																"typeString": "int32"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_int32",
															"typeString": "int32"
														}
													},
													"src": "6615:106:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 1143,
												"nodeType": "ExpressionStatement",
												"src": "6615:106:3"
											}
										]
									},
									"documentation": {
										"id": 1104,
										"nodeType": "StructuredDocumentation",
										"src": "4719:1515:3",
										"text": "Associates the provided account with the provided tokens. Must be signed by the provided\n  Account's key or called from the accounts contract key\n  If the provided account is not found, the transaction will resolve to INVALID_ACCOUNT_ID.\n  If the provided account has been deleted, the transaction will resolve to ACCOUNT_DELETED.\n  If any of the provided tokens is not found, the transaction will resolve to INVALID_TOKEN_REF.\n  If any of the provided tokens has been deleted, the transaction will resolve to TOKEN_WAS_DELETED.\n  If an association between the provided account and any of the tokens already exists, the\n  transaction will resolve to TOKEN_ALREADY_ASSOCIATED_TO_ACCOUNT.\n  If the provided account's associations count exceed the constraint of maximum token associations\n    per account, the transaction will resolve to TOKENS_PER_ACCOUNT_LIMIT_EXCEEDED.\n  On success, associations between the provided account and tokens are made and the account is\n    ready to interact with the tokens.\n @param account The account to be associated with the provided tokens\n @param tokens The tokens to be associated with the provided account. In the case of NON_FUNGIBLE_UNIQUE\n               Type, once an account is associated, it can hold any number of NFTs (serial numbers) of that\n               token type\n @return responseCode The response code for the status of the request. SUCCESS is 22."
									},
									"id": 1145,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "associateTokens",
									"nameLocation": "6248:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1106,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6281:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1145,
												"src": "6273:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6273:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1109,
												"mutability": "mutable",
												"name": "tokens",
												"nameLocation": "6315:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1145,
												"src": "6298:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1107,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "6298:7:3",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1108,
													"nodeType": "ArrayTypeName",
													"src": "6298:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6263:64:3"
									},
									"returnParameters": {
										"id": 1113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1112,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "6350:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 1145,
												"src": "6346:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1111,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "6346:3:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6345:18:3"
									},
									"scope": 2002,
									"src": "6239:489:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1184,
										"nodeType": "Block",
										"src": "6848:362:3",
										"statements": [
											{
												"assignments": [
													1155,
													1157
												],
												"declarations": [
													{
														"constant": false,
														"id": 1155,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6864:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 1184,
														"src": "6859:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1154,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6859:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1157,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "6886:6:3",
														"nodeType": "VariableDeclaration",
														"scope": 1184,
														"src": "6873:19:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1156,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6873:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1169,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1162,
																			"name": "IHederaTokenService",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2709,
																			"src": "6972:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IHederaTokenService_$2709_$",
																				"typeString": "type(contract IHederaTokenService)"
																			}
																		},
																		"id": 1163,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6992:14:3",
																		"memberName": "associateToken",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2238,
																		"src": "6972:34:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$returns$_t_int64_$",
																			"typeString": "function IHederaTokenService.associateToken(address,address) returns (int64)"
																		}
																	},
																	"id": 1164,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "7007:8:3",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "6972:43:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1165,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1147,
																	"src": "7033:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1166,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1149,
																	"src": "7058:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1160,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "6932:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1161,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "6936:18:3",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "6932:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1167,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6932:145:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1158,
															"name": "precompileAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 893,
															"src": "6896:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1159,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6914:4:3",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "6896:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6896:191:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6858:229:3"
											},
											{
												"expression": {
													"id": 1182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1170,
														"name": "responseCode",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1152,
														"src": "7097:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"condition": {
															"id": 1171,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1155,
															"src": "7112:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"expression": {
																"id": 1179,
																"name": "HederaResponseCodes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 880,
																"src": "7176:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_HederaResponseCodes_$880_$",
																	"typeString": "type(contract HederaResponseCodes)"
																}
															},
															"id": 1180,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "7196:7:3",
															"memberName": "UNKNOWN",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 429,
															"src": "7176:27:3",
															"typeDescriptions": {
																"typeIdentifier": "t_int32",
																"typeString": "int32"
															}
														},
														"id": 1181,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "7112:91:3",
														"trueExpression": {
															"arguments": [
																{
																	"id": 1174,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1157,
																	"src": "7145:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"components": [
																		{
																			"id": 1176,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7154:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_int32_$",
																				"typeString": "type(int32)"
																			},
																			"typeName": {
																				"id": 1175,
																				"name": "int32",
																				"nodeType": "ElementaryTypeName",
																				"src": "7154:5:3",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"id": 1177,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7153:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_int32_$",
																		"typeString": "type(int32)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_type$_t_int32_$",
																		"typeString": "type(int32)"
																	}
																],
																"expression": {
																	"id": 1172,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "7134:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1173,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "7138:6:3",
																"memberName": "decode",
																"nodeType": "MemberAccess",
																"src": "7134:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1178,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7134:27:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int32",
																"typeString": "int32"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_int32",
															"typeString": "int32"
														}
													},
													"src": "7097:106:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 1183,
												"nodeType": "ExpressionStatement",
												"src": "7097:106:3"
											}
										]
									},
									"id": 1185,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "associateToken",
									"nameLocation": "6743:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6775:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1185,
												"src": "6767:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6767:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1149,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6800:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1185,
												"src": "6792:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1148,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6792:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6757:54:3"
									},
									"returnParameters": {
										"id": 1153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1152,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "6834:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 1185,
												"src": "6830:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1151,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "6830:3:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6829:18:3"
									},
									"scope": 2002,
									"src": "6734:476:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1226,
										"nodeType": "Block",
										"src": "8880:365:3",
										"statements": [
											{
												"assignments": [
													1197,
													1199
												],
												"declarations": [
													{
														"constant": false,
														"id": 1197,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "8896:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 1226,
														"src": "8891:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1196,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "8891:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1199,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8918:6:3",
														"nodeType": "VariableDeclaration",
														"scope": 1226,
														"src": "8905:19:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1198,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "8905:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1211,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1204,
																			"name": "IHederaTokenService",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2709,
																			"src": "9004:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IHederaTokenService_$2709_$",
																				"typeString": "type(contract IHederaTokenService)"
																			}
																		},
																		"id": 1205,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "9024:16:3",
																		"memberName": "dissociateTokens",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2249,
																		"src": "9004:36:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_int64_$",
																			"typeString": "function IHederaTokenService.dissociateTokens(address,address[] memory) returns (int64)"
																		}
																	},
																	"id": 1206,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "9041:8:3",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "9004:45:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1207,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1188,
																	"src": "9067:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1208,
																	"name": "tokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1191,
																	"src": "9092:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																],
																"expression": {
																	"id": 1202,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "8964:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1203,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "8968:18:3",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "8964:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1209,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8964:148:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1200,
															"name": "precompileAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 893,
															"src": "8928:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1201,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8946:4:3",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "8928:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8928:194:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8890:232:3"
											},
											{
												"expression": {
													"id": 1224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1212,
														"name": "responseCode",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1194,
														"src": "9132:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"condition": {
															"id": 1213,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1197,
															"src": "9147:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"expression": {
																"id": 1221,
																"name": "HederaResponseCodes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 880,
																"src": "9211:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_HederaResponseCodes_$880_$",
																	"typeString": "type(contract HederaResponseCodes)"
																}
															},
															"id": 1222,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "9231:7:3",
															"memberName": "UNKNOWN",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 429,
															"src": "9211:27:3",
															"typeDescriptions": {
																"typeIdentifier": "t_int32",
																"typeString": "int32"
															}
														},
														"id": 1223,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "9147:91:3",
														"trueExpression": {
															"arguments": [
																{
																	"id": 1216,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1199,
																	"src": "9180:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"components": [
																		{
																			"id": 1218,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9189:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_int32_$",
																				"typeString": "type(int32)"
																			},
																			"typeName": {
																				"id": 1217,
																				"name": "int32",
																				"nodeType": "ElementaryTypeName",
																				"src": "9189:5:3",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"id": 1219,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9188:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_int32_$",
																		"typeString": "type(int32)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_type$_t_int32_$",
																		"typeString": "type(int32)"
																	}
																],
																"expression": {
																	"id": 1214,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "9169:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1215,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "9173:6:3",
																"memberName": "decode",
																"nodeType": "MemberAccess",
																"src": "9169:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1220,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9169:27:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int32",
																"typeString": "int32"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_int32",
															"typeString": "int32"
														}
													},
													"src": "9132:106:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 1225,
												"nodeType": "ExpressionStatement",
												"src": "9132:106:3"
											}
										]
									},
									"documentation": {
										"id": 1186,
										"nodeType": "StructuredDocumentation",
										"src": "7216:1533:3",
										"text": "Dissociates the provided account with the provided tokens. Must be signed by the provided\n Account's key.\n If the provided account is not found, the transaction will resolve to INVALID_ACCOUNT_ID.\n If the provided account has been deleted, the transaction will resolve to ACCOUNT_DELETED.\n If any of the provided tokens is not found, the transaction will resolve to INVALID_TOKEN_REF.\n If any of the provided tokens has been deleted, the transaction will resolve to TOKEN_WAS_DELETED.\n If an association between the provided account and any of the tokens does not exist, the\n transaction will resolve to TOKEN_NOT_ASSOCIATED_TO_ACCOUNT.\n If a token has not been deleted and has not expired, and the user has a nonzero balance, the\n transaction will resolve to TRANSACTION_REQUIRES_ZERO_TOKEN_BALANCES.\n If a <b>fungible token</b> has expired, the user can disassociate even if their token balance is\n not zero.\n If a <b>non fungible token</b> has expired, the user can <b>not</b> disassociate if their token\n balance is not zero. The transaction will resolve to TRANSACTION_REQUIRED_ZERO_TOKEN_BALANCES.\n On success, associations between the provided account and tokens are removed.\n @param account The account to be dissociated from the provided tokens\n @param tokens The tokens to be dissociated from the provided account.\n @return responseCode The response code for the status of the request. SUCCESS is 22."
									},
									"id": 1227,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "dissociateTokens",
									"nameLocation": "8763:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1188,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8797:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "8789:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8789:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1191,
												"mutability": "mutable",
												"name": "tokens",
												"nameLocation": "8831:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "8814:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1189,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "8814:7:3",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1190,
													"nodeType": "ArrayTypeName",
													"src": "8814:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8779:64:3"
									},
									"returnParameters": {
										"id": 1195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1194,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "8866:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "8862:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1193,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "8862:3:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8861:18:3"
									},
									"scope": 2002,
									"src": "8754:491:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1266,
										"nodeType": "Block",
										"src": "9366:363:3",
										"statements": [
											{
												"assignments": [
													1237,
													1239
												],
												"declarations": [
													{
														"constant": false,
														"id": 1237,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9382:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 1266,
														"src": "9377:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1236,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9377:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1239,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9404:6:3",
														"nodeType": "VariableDeclaration",
														"scope": 1266,
														"src": "9391:19:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1238,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "9391:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1251,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1244,
																			"name": "IHederaTokenService",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2709,
																			"src": "9490:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IHederaTokenService_$2709_$",
																				"typeString": "type(contract IHederaTokenService)"
																			}
																		},
																		"id": 1245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "9510:15:3",
																		"memberName": "dissociateToken",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2259,
																		"src": "9490:35:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$returns$_t_int64_$",
																			"typeString": "function IHederaTokenService.dissociateToken(address,address) returns (int64)"
																		}
																	},
																	"id": 1246,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "9526:8:3",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "9490:44:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1247,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1229,
																	"src": "9552:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1248,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1231,
																	"src": "9577:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1242,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "9450:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1243,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "9454:18:3",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "9450:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1249,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9450:146:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1240,
															"name": "precompileAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 893,
															"src": "9414:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1241,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9432:4:3",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "9414:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9414:192:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9376:230:3"
											},
											{
												"expression": {
													"id": 1264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1252,
														"name": "responseCode",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1234,
														"src": "9616:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"condition": {
															"id": 1253,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1237,
															"src": "9631:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"expression": {
																"id": 1261,
																"name": "HederaResponseCodes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 880,
																"src": "9695:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_HederaResponseCodes_$880_$",
																	"typeString": "type(contract HederaResponseCodes)"
																}
															},
															"id": 1262,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "9715:7:3",
															"memberName": "UNKNOWN",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 429,
															"src": "9695:27:3",
															"typeDescriptions": {
																"typeIdentifier": "t_int32",
																"typeString": "int32"
															}
														},
														"id": 1263,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "9631:91:3",
														"trueExpression": {
															"arguments": [
																{
																	"id": 1256,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1239,
																	"src": "9664:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"components": [
																		{
																			"id": 1258,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9673:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_int32_$",
																				"typeString": "type(int32)"
																			},
																			"typeName": {
																				"id": 1257,
																				"name": "int32",
																				"nodeType": "ElementaryTypeName",
																				"src": "9673:5:3",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"id": 1259,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9672:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_int32_$",
																		"typeString": "type(int32)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_type$_t_int32_$",
																		"typeString": "type(int32)"
																	}
																],
																"expression": {
																	"id": 1254,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "9653:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1255,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "9657:6:3",
																"memberName": "decode",
																"nodeType": "MemberAccess",
																"src": "9653:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1260,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9653:27:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int32",
																"typeString": "int32"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_int32",
															"typeString": "int32"
														}
													},
													"src": "9616:106:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 1265,
												"nodeType": "ExpressionStatement",
												"src": "9616:106:3"
											}
										]
									},
									"id": 1267,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "dissociateToken",
									"nameLocation": "9260:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1229,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9293:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1267,
												"src": "9285:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9285:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1231,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9318:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1267,
												"src": "9310:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9310:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9275:54:3"
									},
									"returnParameters": {
										"id": 1235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1234,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "9352:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 1267,
												"src": "9348:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1233,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "9348:3:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9347:18:3"
									},
									"scope": 2002,
									"src": "9251:478:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1328,
										"nodeType": "Block",
										"src": "10557:484:3",
										"statements": [
											{
												"assignments": [
													1286,
													1288
												],
												"declarations": [
													{
														"constant": false,
														"id": 1286,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "10573:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 1328,
														"src": "10568:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1285,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "10568:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1288,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10595:6:3",
														"nodeType": "VariableDeclaration",
														"scope": 1328,
														"src": "10582:19:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1287,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "10582:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1304,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1296,
																			"name": "IHederaTokenService",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2709,
																			"src": "10721:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IHederaTokenService_$2709_$",
																				"typeString": "type(contract IHederaTokenService)"
																			}
																		},
																		"id": 1297,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "10741:19:3",
																		"memberName": "createFungibleToken",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2274,
																		"src": "10721:39:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_payable$_t_struct$_HederaToken_$2074_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_int64_$_t_address_$",
																			"typeString": "function IHederaTokenService.createFungibleToken(struct IHederaTokenService.HederaToken memory,uint256,uint256) payable returns (int64,address)"
																		}
																	},
																	"id": 1298,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "10761:8:3",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "10721:48:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1299,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1271,
																	"src": "10787:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_HederaToken_$2074_memory_ptr",
																		"typeString": "struct IHederaTokenService.HederaToken memory"
																	}
																},
																{
																	"id": 1300,
																	"name": "initialTotalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1273,
																	"src": "10810:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1301,
																	"name": "decimals",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1275,
																	"src": "10846:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_struct$_HederaToken_$2074_memory_ptr",
																		"typeString": "struct IHederaTokenService.HederaToken memory"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1294,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "10681:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1295,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "10685:18:3",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "10681:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10681:187:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1289,
																"name": "precompileAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 893,
																"src": "10605:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1290,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10623:4:3",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "10605:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1293,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"expression": {
																	"id": 1291,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "10648:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1292,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "10652:5:3",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "10648:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "10605:62:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10605:273:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10567:311:3"
											},
											{
												"expression": {
													"id": 1326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 1305,
																"name": "responseCode",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1281,
																"src": "10890:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															{
																"id": 1306,
																"name": "tokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1283,
																"src": "10904:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"id": 1307,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "10889:28:3",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_int256_$_t_address_$",
															"typeString": "tuple(int256,address)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"condition": {
															"id": 1308,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1286,
															"src": "10920:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"components": [
																{
																	"expression": {
																		"id": 1318,
																		"name": "HederaResponseCodes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 880,
																		"src": "10994:19:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_HederaResponseCodes_$880_$",
																			"typeString": "type(contract HederaResponseCodes)"
																		}
																	},
																	"id": 1319,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "11014:7:3",
																	"memberName": "UNKNOWN",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 429,
																	"src": "10994:27:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int32",
																		"typeString": "int32"
																	}
																},
																{
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1322,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11031:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1321,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "11023:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1320,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "11023:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1323,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11023:10:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"id": 1324,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "10993:41:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_int32_$_t_address_$",
																"typeString": "tuple(int32,address)"
															}
														},
														"id": 1325,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "10920:114:3",
														"trueExpression": {
															"arguments": [
																{
																	"id": 1311,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1288,
																	"src": "10953:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"components": [
																		{
																			"id": 1313,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10962:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_int32_$",
																				"typeString": "type(int32)"
																			},
																			"typeName": {
																				"id": 1312,
																				"name": "int32",
																				"nodeType": "ElementaryTypeName",
																				"src": "10962:5:3",
																				"typeDescriptions": {}
																			}
																		},
																		{
																			"id": 1315,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10969:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1314,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10969:7:3",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"id": 1316,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10961:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_type$_t_int32_$_$_t_type$_t_address_$_$",
																		"typeString": "tuple(type(int32),type(address))"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_type$_t_int32_$_$_t_type$_t_address_$_$",
																		"typeString": "tuple(type(int32),type(address))"
																	}
																],
																"expression": {
																	"id": 1309,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "10942:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1310,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "10946:6:3",
																"memberName": "decode",
																"nodeType": "MemberAccess",
																"src": "10942:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1317,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10942:36:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_int32_$_t_address_payable_$",
																"typeString": "tuple(int32,address payable)"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_int32_$_t_address_$",
															"typeString": "tuple(int32,address)"
														}
													},
													"src": "10889:145:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1327,
												"nodeType": "ExpressionStatement",
												"src": "10889:145:3"
											}
										]
									},
									"documentation": {
										"id": 1268,
										"nodeType": "StructuredDocumentation",
										"src": "9735:564:3",
										"text": "Creates a Fungible Token with the specified properties\n @param token the basic properties of the token being created\n @param initialTotalSupply Specifies the initial supply of tokens to be put in circulation. The\n initial supply is sent to the Treasury Account. The supply is in the lowest denomination possible.\n @param decimals the number of decimal places a token is divisible by\n @return responseCode The response code for the status of the request. SUCCESS is 22.\n @return tokenAddress the created token's address"
									},
									"id": 1329,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1278,
													"name": "token",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1271,
													"src": "10489:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_HederaToken_$2074_memory_ptr",
														"typeString": "struct IHederaTokenService.HederaToken memory"
													}
												}
											],
											"id": 1279,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1277,
												"name": "nonEmptyExpiry",
												"nameLocations": [
													"10474:14:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 945,
												"src": "10474:14:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "10474:21:3"
										}
									],
									"name": "createFungibleToken",
									"nameLocation": "10313:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1271,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "10381:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "10342:44:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_HederaToken_$2074_memory_ptr",
													"typeString": "struct IHederaTokenService.HederaToken"
												},
												"typeName": {
													"id": 1270,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1269,
														"name": "IHederaTokenService.HederaToken",
														"nameLocations": [
															"10342:19:3",
															"10362:11:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2074,
														"src": "10342:31:3"
													},
													"referencedDeclaration": 2074,
													"src": "10342:31:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_HederaToken_$2074_storage_ptr",
														"typeString": "struct IHederaTokenService.HederaToken"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1273,
												"mutability": "mutable",
												"name": "initialTotalSupply",
												"nameLocation": "10401:18:3",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "10396:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1272,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10396:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1275,
												"mutability": "mutable",
												"name": "decimals",
												"nameLocation": "10434:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "10429:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1274,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10429:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10332:116:3"
									},
									"returnParameters": {
										"id": 1284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1281,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "10517:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "10513:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1280,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "10513:3:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nameLocation": "10539:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "10531:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10531:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10512:40:3"
									},
									"scope": 2002,
									"src": "10304:737:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1400,
										"nodeType": "Block",
										"src": "12149:556:3",
										"statements": [
											{
												"assignments": [
													1356,
													1358
												],
												"declarations": [
													{
														"constant": false,
														"id": 1356,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "12165:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 1400,
														"src": "12160:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1355,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "12160:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1358,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12187:6:3",
														"nodeType": "VariableDeclaration",
														"scope": 1400,
														"src": "12174:19:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1357,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "12174:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1376,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1366,
																			"name": "IHederaTokenService",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2709,
																			"src": "12313:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IHederaTokenService_$2709_$",
																				"typeString": "type(contract IHederaTokenService)"
																			}
																		},
																		"id": 1367,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "12333:33:3",
																		"memberName": "createFungibleTokenWithCustomFees",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2297,
																		"src": "12313:53:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_payable$_t_struct$_HederaToken_$2074_memory_ptr_$_t_uint256_$_t_uint256_$_t_array$_t_struct$_FixedFee_$2148_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_FractionalFee_$2161_memory_ptr_$dyn_memory_ptr_$returns$_t_int64_$_t_address_$",
																			"typeString": "function IHederaTokenService.createFungibleTokenWithCustomFees(struct IHederaTokenService.HederaToken memory,uint256,uint256,struct IHederaTokenService.FixedFee memory[] memory,struct IHederaTokenService.FractionalFee memory[] memory) payable returns (int64,address)"
																		}
																	},
																	"id": 1368,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "12367:8:3",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "12313:62:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1369,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1333,
																	"src": "12393:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_HederaToken_$2074_memory_ptr",
																		"typeString": "struct IHederaTokenService.HederaToken memory"
																	}
																},
																{
																	"id": 1370,
																	"name": "initialTotalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1335,
																	"src": "12416:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1371,
																	"name": "decimals",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1337,
																	"src": "12452:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1372,
																	"name": "fixedFees",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1341,
																	"src": "12478:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_FixedFee_$2148_memory_ptr_$dyn_memory_ptr",
																		"typeString": "struct IHederaTokenService.FixedFee memory[] memory"
																	}
																},
																{
																	"id": 1373,
																	"name": "fractionalFees",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1345,
																	"src": "12505:14:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_FractionalFee_$2161_memory_ptr_$dyn_memory_ptr",
																		"typeString": "struct IHederaTokenService.FractionalFee memory[] memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_struct$_HederaToken_$2074_memory_ptr",
																		"typeString": "struct IHederaTokenService.HederaToken memory"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_array$_t_struct$_FixedFee_$2148_memory_ptr_$dyn_memory_ptr",
																		"typeString": "struct IHederaTokenService.FixedFee memory[] memory"
																	},
																	{
																		"typeIdentifier": "t_array$_t_struct$_FractionalFee_$2161_memory_ptr_$dyn_memory_ptr",
																		"typeString": "struct IHederaTokenService.FractionalFee memory[] memory"
																	}
																],
																"expression": {
																	"id": 1364,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "12273:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1365,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "12277:18:3",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "12273:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1374,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12273:260:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1359,
																"name": "precompileAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 893,
																"src": "12197:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12215:4:3",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "12197:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1363,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"expression": {
																	"id": 1361,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "12240:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1362,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "12244:5:3",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "12240:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "12197:62:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12197:346:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12159:384:3"
											},
											{
												"expression": {
													"id": 1398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 1377,
																"name": "responseCode",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1351,
																"src": "12554:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															{
																"id": 1378,
																"name": "tokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1353,
																"src": "12568:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"id": 1379,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "12553:28:3",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_int256_$_t_address_$",
															"typeString": "tuple(int256,address)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"condition": {
															"id": 1380,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1356,
															"src": "12584:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"components": [
																{
																	"expression": {
																		"id": 1390,
																		"name": "HederaResponseCodes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 880,
																		"src": "12658:19:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_HederaResponseCodes_$880_$",
																			"typeString": "type(contract HederaResponseCodes)"
																		}
																	},
																	"id": 1391,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "12678:7:3",
																	"memberName": "UNKNOWN",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 429,
																	"src": "12658:27:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int32",
																		"typeString": "int32"
																	}
																},
																{
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1394,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12695:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1393,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "12687:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1392,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "12687:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1395,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12687:10:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"id": 1396,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "12657:41:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_int32_$_t_address_$",
																"typeString": "tuple(int32,address)"
															}
														},
														"id": 1397,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "12584:114:3",
														"trueExpression": {
															"arguments": [
																{
																	"id": 1383,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1358,
																	"src": "12617:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"components": [
																		{
																			"id": 1385,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12626:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_int32_$",
																				"typeString": "type(int32)"
																			},
																			"typeName": {
																				"id": 1384,
																				"name": "int32",
																				"nodeType": "ElementaryTypeName",
																				"src": "12626:5:3",
																				"typeDescriptions": {}
																			}
																		},
																		{
																			"id": 1387,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12633:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1386,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12633:7:3",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"id": 1388,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "12625:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_type$_t_int32_$_$_t_type$_t_address_$_$",
																		"typeString": "tuple(type(int32),type(address))"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_type$_t_int32_$_$_t_type$_t_address_$_$",
																		"typeString": "tuple(type(int32),type(address))"
																	}
																],
																"expression": {
																	"id": 1381,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "12606:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1382,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "12610:6:3",
																"memberName": "decode",
																"nodeType": "MemberAccess",
																"src": "12606:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12606:36:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_int32_$_t_address_payable_$",
																"typeString": "tuple(int32,address payable)"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_int32_$_t_address_$",
															"typeString": "tuple(int32,address)"
														}
													},
													"src": "12553:145:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1399,
												"nodeType": "ExpressionStatement",
												"src": "12553:145:3"
											}
										]
									},
									"documentation": {
										"id": 1330,
										"nodeType": "StructuredDocumentation",
										"src": "11047:706:3",
										"text": "Creates a Fungible Token with the specified properties\n @param token the basic properties of the token being created\n @param initialTotalSupply Specifies the initial supply of tokens to be put in circulation. The\n initial supply is sent to the Treasury Account. The supply is in the lowest denomination possible.\n @param decimals the number of decimal places a token is divisible by\n @param fixedFees list of fixed fees to apply to the token\n @param fractionalFees list of fractional fees to apply to the token\n @return responseCode The response code for the status of the request. SUCCESS is 22.\n @return tokenAddress the created token's address"
									},
									"id": 1401,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1348,
													"name": "token",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1333,
													"src": "12081:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_HederaToken_$2074_memory_ptr",
														"typeString": "struct IHederaTokenService.HederaToken memory"
													}
												}
											],
											"id": 1349,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1347,
												"name": "nonEmptyExpiry",
												"nameLocations": [
													"12066:14:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 945,
												"src": "12066:14:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "12066:21:3"
										}
									],
									"name": "createFungibleTokenWithCustomFees",
									"nameLocation": "11767:33:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1333,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "11849:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1401,
												"src": "11810:44:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_HederaToken_$2074_memory_ptr",
													"typeString": "struct IHederaTokenService.HederaToken"
												},
												"typeName": {
													"id": 1332,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1331,
														"name": "IHederaTokenService.HederaToken",
														"nameLocations": [
															"11810:19:3",
															"11830:11:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2074,
														"src": "11810:31:3"
													},
													"referencedDeclaration": 2074,
													"src": "11810:31:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_HederaToken_$2074_storage_ptr",
														"typeString": "struct IHederaTokenService.HederaToken"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1335,
												"mutability": "mutable",
												"name": "initialTotalSupply",
												"nameLocation": "11869:18:3",
												"nodeType": "VariableDeclaration",
												"scope": 1401,
												"src": "11864:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1334,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11864:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1337,
												"mutability": "mutable",
												"name": "decimals",
												"nameLocation": "11902:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1401,
												"src": "11897:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1336,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11897:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1341,
												"mutability": "mutable",
												"name": "fixedFees",
												"nameLocation": "11958:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 1401,
												"src": "11920:47:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_FixedFee_$2148_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IHederaTokenService.FixedFee[]"
												},
												"typeName": {
													"baseType": {
														"id": 1339,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1338,
															"name": "IHederaTokenService.FixedFee",
															"nameLocations": [
																"11920:19:3",
																"11940:8:3"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 2148,
															"src": "11920:28:3"
														},
														"referencedDeclaration": 2148,
														"src": "11920:28:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FixedFee_$2148_storage_ptr",
															"typeString": "struct IHederaTokenService.FixedFee"
														}
													},
													"id": 1340,
													"nodeType": "ArrayTypeName",
													"src": "11920:30:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_FixedFee_$2148_storage_$dyn_storage_ptr",
														"typeString": "struct IHederaTokenService.FixedFee[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1345,
												"mutability": "mutable",
												"name": "fractionalFees",
												"nameLocation": "12020:14:3",
												"nodeType": "VariableDeclaration",
												"scope": 1401,
												"src": "11977:57:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_FractionalFee_$2161_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IHederaTokenService.FractionalFee[]"
												},
												"typeName": {
													"baseType": {
														"id": 1343,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1342,
															"name": "IHederaTokenService.FractionalFee",
															"nameLocations": [
																"11977:19:3",
																"11997:13:3"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 2161,
															"src": "11977:33:3"
														},
														"referencedDeclaration": 2161,
														"src": "11977:33:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FractionalFee_$2161_storage_ptr",
															"typeString": "struct IHederaTokenService.FractionalFee"
														}
													},
													"id": 1344,
													"nodeType": "ArrayTypeName",
													"src": "11977:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_FractionalFee_$2161_storage_$dyn_storage_ptr",
														"typeString": "struct IHederaTokenService.FractionalFee[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11800:240:3"
									},
									"returnParameters": {
										"id": 1354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1351,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "12109:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 1401,
												"src": "12105:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1350,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "12105:3:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1353,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nameLocation": "12131:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 1401,
												"src": "12123:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12123:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12104:40:3"
									},
									"scope": 2002,
									"src": "11758:947:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1456,
										"nodeType": "Block",
										"src": "13205:424:3",
										"statements": [
											{
												"assignments": [
													1416,
													1418
												],
												"declarations": [
													{
														"constant": false,
														"id": 1416,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "13221:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 1456,
														"src": "13216:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1415,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "13216:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1418,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13243:6:3",
														"nodeType": "VariableDeclaration",
														"scope": 1456,
														"src": "13230:19:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1417,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "13230:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1432,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1426,
																			"name": "IHederaTokenService",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2709,
																			"src": "13369:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IHederaTokenService_$2709_$",
																				"typeString": "type(contract IHederaTokenService)"
																			}
																		},
																		"id": 1427,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "13389:22:3",
																		"memberName": "createNonFungibleToken",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2308,
																		"src": "13369:42:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_payable$_t_struct$_HederaToken_$2074_memory_ptr_$returns$_t_int64_$_t_address_$",
																			"typeString": "function IHederaTokenService.createNonFungibleToken(struct IHederaTokenService.HederaToken memory) payable returns (int64,address)"
																		}
																	},
																	"id": 1428,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "13412:8:3",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "13369:51:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1429,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1405,
																	"src": "13438:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_HederaToken_$2074_memory_ptr",
																		"typeString": "struct IHederaTokenService.HederaToken memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_struct$_HederaToken_$2074_memory_ptr",
																		"typeString": "struct IHederaTokenService.HederaToken memory"
																	}
																],
																"expression": {
																	"id": 1424,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "13329:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1425,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "13333:18:3",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "13329:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13329:128:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1419,
																"name": "precompileAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 893,
																"src": "13253:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1420,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "13271:4:3",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "13253:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1423,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"expression": {
																	"id": 1421,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "13296:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1422,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "13300:5:3",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "13296:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "13253:62:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13253:214:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13215:252:3"
											},
											{
												"expression": {
													"id": 1454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 1433,
																"name": "responseCode",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1411,
																"src": "13478:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															{
																"id": 1434,
																"name": "tokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1413,
																"src": "13492:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"id": 1435,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "13477:28:3",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_int256_$_t_address_$",
															"typeString": "tuple(int256,address)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"condition": {
															"id": 1436,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1416,
															"src": "13508:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"components": [
																{
																	"expression": {
																		"id": 1446,
																		"name": "HederaResponseCodes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 880,
																		"src": "13582:19:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_HederaResponseCodes_$880_$",
																			"typeString": "type(contract HederaResponseCodes)"
																		}
																	},
																	"id": 1447,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "13602:7:3",
																	"memberName": "UNKNOWN",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 429,
																	"src": "13582:27:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int32",
																		"typeString": "int32"
																	}
																},
																{
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1450,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13619:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1449,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "13611:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1448,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "13611:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1451,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "13611:10:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"id": 1452,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "13581:41:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_int32_$_t_address_$",
																"typeString": "tuple(int32,address)"
															}
														},
														"id": 1453,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "13508:114:3",
														"trueExpression": {
															"arguments": [
																{
																	"id": 1439,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1418,
																	"src": "13541:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"components": [
																		{
																			"id": 1441,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "13550:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_int32_$",
																				"typeString": "type(int32)"
																			},
																			"typeName": {
																				"id": 1440,
																				"name": "int32",
																				"nodeType": "ElementaryTypeName",
																				"src": "13550:5:3",
																				"typeDescriptions": {}
																			}
																		},
																		{
																			"id": 1443,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "13557:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1442,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "13557:7:3",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"id": 1444,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "13549:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_type$_t_int32_$_$_t_type$_t_address_$_$",
																		"typeString": "tuple(type(int32),type(address))"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_type$_t_int32_$_$_t_type$_t_address_$_$",
																		"typeString": "tuple(type(int32),type(address))"
																	}
																],
																"expression": {
																	"id": 1437,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "13530:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1438,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "13534:6:3",
																"memberName": "decode",
																"nodeType": "MemberAccess",
																"src": "13530:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1445,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13530:36:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_int32_$_t_address_payable_$",
																"typeString": "tuple(int32,address payable)"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_int32_$_t_address_$",
															"typeString": "tuple(int32,address)"
														}
													},
													"src": "13477:145:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1455,
												"nodeType": "ExpressionStatement",
												"src": "13477:145:3"
											}
										]
									},
									"documentation": {
										"id": 1402,
										"nodeType": "StructuredDocumentation",
										"src": "12711:289:3",
										"text": "Creates an Non Fungible Unique Token with the specified properties\n @param token the basic properties of the token being created\n @return responseCode The response code for the status of the request. SUCCESS is 22.\n @return tokenAddress the created token's address"
									},
									"id": 1457,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1408,
													"name": "token",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1405,
													"src": "13137:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_HederaToken_$2074_memory_ptr",
														"typeString": "struct IHederaTokenService.HederaToken memory"
													}
												}
											],
											"id": 1409,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1407,
												"name": "nonEmptyExpiry",
												"nameLocations": [
													"13122:14:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 945,
												"src": "13122:14:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "13122:21:3"
										}
									],
									"name": "createNonFungibleToken",
									"nameLocation": "13014:22:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1405,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "13085:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "13046:44:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_HederaToken_$2074_memory_ptr",
													"typeString": "struct IHederaTokenService.HederaToken"
												},
												"typeName": {
													"id": 1404,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1403,
														"name": "IHederaTokenService.HederaToken",
														"nameLocations": [
															"13046:19:3",
															"13066:11:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2074,
														"src": "13046:31:3"
													},
													"referencedDeclaration": 2074,
													"src": "13046:31:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_HederaToken_$2074_storage_ptr",
														"typeString": "struct IHederaTokenService.HederaToken"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13036:60:3"
									},
									"returnParameters": {
										"id": 1414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1411,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "13165:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "13161:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1410,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "13161:3:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1413,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nameLocation": "13187:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "13179:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1412,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13179:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13160:40:3"
									},
									"scope": 2002,
									"src": "13005:624:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1522,
										"nodeType": "Block",
										"src": "14397:536:3",
										"statements": [
											{
												"assignments": [
													1480,
													1482
												],
												"declarations": [
													{
														"constant": false,
														"id": 1480,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "14413:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 1522,
														"src": "14408:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1479,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "14408:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1482,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "14435:6:3",
														"nodeType": "VariableDeclaration",
														"scope": 1522,
														"src": "14422:19:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1481,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "14422:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1498,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1490,
																			"name": "IHederaTokenService",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2709,
																			"src": "14561:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IHederaTokenService_$2709_$",
																				"typeString": "type(contract IHederaTokenService)"
																			}
																		},
																		"id": 1491,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "14602:36:3",
																		"memberName": "createNonFungibleTokenWithCustomFees",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2327,
																		"src": "14561:77:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_payable$_t_struct$_HederaToken_$2074_memory_ptr_$_t_array$_t_struct$_FixedFee_$2148_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_RoyaltyFee_$2174_memory_ptr_$dyn_memory_ptr_$returns$_t_int64_$_t_address_$",
																			"typeString": "function IHederaTokenService.createNonFungibleTokenWithCustomFees(struct IHederaTokenService.HederaToken memory,struct IHederaTokenService.FixedFee memory[] memory,struct IHederaTokenService.RoyaltyFee memory[] memory) payable returns (int64,address)"
																		}
																	},
																	"id": 1492,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "14660:8:3",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "14561:107:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1493,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1461,
																	"src": "14686:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_HederaToken_$2074_memory_ptr",
																		"typeString": "struct IHederaTokenService.HederaToken memory"
																	}
																},
																{
																	"id": 1494,
																	"name": "fixedFees",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1465,
																	"src": "14709:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_FixedFee_$2148_memory_ptr_$dyn_memory_ptr",
																		"typeString": "struct IHederaTokenService.FixedFee memory[] memory"
																	}
																},
																{
																	"id": 1495,
																	"name": "royaltyFees",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1469,
																	"src": "14736:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_RoyaltyFee_$2174_memory_ptr_$dyn_memory_ptr",
																		"typeString": "struct IHederaTokenService.RoyaltyFee memory[] memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_struct$_HederaToken_$2074_memory_ptr",
																		"typeString": "struct IHederaTokenService.HederaToken memory"
																	},
																	{
																		"typeIdentifier": "t_array$_t_struct$_FixedFee_$2148_memory_ptr_$dyn_memory_ptr",
																		"typeString": "struct IHederaTokenService.FixedFee memory[] memory"
																	},
																	{
																		"typeIdentifier": "t_array$_t_struct$_RoyaltyFee_$2174_memory_ptr_$dyn_memory_ptr",
																		"typeString": "struct IHederaTokenService.RoyaltyFee memory[] memory"
																	}
																],
																"expression": {
																	"id": 1488,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "14521:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1489,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "14525:18:3",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "14521:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1496,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14521:240:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1483,
																"name": "precompileAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 893,
																"src": "14445:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "14463:4:3",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "14445:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1487,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"expression": {
																	"id": 1485,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "14488:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1486,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "14492:5:3",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "14488:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "14445:62:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14445:326:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14407:364:3"
											},
											{
												"expression": {
													"id": 1520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 1499,
																"name": "responseCode",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1475,
																"src": "14782:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															{
																"id": 1500,
																"name": "tokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1477,
																"src": "14796:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"id": 1501,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "14781:28:3",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_int256_$_t_address_$",
															"typeString": "tuple(int256,address)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"condition": {
															"id": 1502,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1480,
															"src": "14812:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"components": [
																{
																	"expression": {
																		"id": 1512,
																		"name": "HederaResponseCodes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 880,
																		"src": "14886:19:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_HederaResponseCodes_$880_$",
																			"typeString": "type(contract HederaResponseCodes)"
																		}
																	},
																	"id": 1513,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "14906:7:3",
																	"memberName": "UNKNOWN",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 429,
																	"src": "14886:27:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int32",
																		"typeString": "int32"
																	}
																},
																{
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1516,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14923:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1515,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "14915:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1514,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "14915:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1517,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14915:10:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"id": 1518,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "14885:41:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_int32_$_t_address_$",
																"typeString": "tuple(int32,address)"
															}
														},
														"id": 1519,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "14812:114:3",
														"trueExpression": {
															"arguments": [
																{
																	"id": 1505,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1482,
																	"src": "14845:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"components": [
																		{
																			"id": 1507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "14854:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_int32_$",
																				"typeString": "type(int32)"
																			},
																			"typeName": {
																				"id": 1506,
																				"name": "int32",
																				"nodeType": "ElementaryTypeName",
																				"src": "14854:5:3",
																				"typeDescriptions": {}
																			}
																		},
																		{
																			"id": 1509,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "14861:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1508,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "14861:7:3",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"id": 1510,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "14853:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_type$_t_int32_$_$_t_type$_t_address_$_$",
																		"typeString": "tuple(type(int32),type(address))"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_type$_t_int32_$_$_t_type$_t_address_$_$",
																		"typeString": "tuple(type(int32),type(address))"
																	}
																],
																"expression": {
																	"id": 1503,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "14834:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1504,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "14838:6:3",
																"memberName": "decode",
																"nodeType": "MemberAccess",
																"src": "14834:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1511,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14834:36:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_int32_$_t_address_payable_$",
																"typeString": "tuple(int32,address payable)"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_int32_$_t_address_$",
															"typeString": "tuple(int32,address)"
														}
													},
													"src": "14781:145:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1521,
												"nodeType": "ExpressionStatement",
												"src": "14781:145:3"
											}
										]
									},
									"documentation": {
										"id": 1458,
										"nodeType": "StructuredDocumentation",
										"src": "13635:425:3",
										"text": "Creates an Non Fungible Unique Token with the specified properties\n @param token the basic properties of the token being created\n @param fixedFees list of fixed fees to apply to the token\n @param royaltyFees list of royalty fees to apply to the token\n @return responseCode The response code for the status of the request. SUCCESS is 22.\n @return tokenAddress the created token's address"
									},
									"id": 1523,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1472,
													"name": "token",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1461,
													"src": "14329:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_HederaToken_$2074_memory_ptr",
														"typeString": "struct IHederaTokenService.HederaToken memory"
													}
												}
											],
											"id": 1473,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1471,
												"name": "nonEmptyExpiry",
												"nameLocations": [
													"14314:14:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 945,
												"src": "14314:14:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "14314:21:3"
										}
									],
									"name": "createNonFungibleTokenWithCustomFees",
									"nameLocation": "14074:36:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1461,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "14159:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1523,
												"src": "14120:44:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_HederaToken_$2074_memory_ptr",
													"typeString": "struct IHederaTokenService.HederaToken"
												},
												"typeName": {
													"id": 1460,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1459,
														"name": "IHederaTokenService.HederaToken",
														"nameLocations": [
															"14120:19:3",
															"14140:11:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2074,
														"src": "14120:31:3"
													},
													"referencedDeclaration": 2074,
													"src": "14120:31:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_HederaToken_$2074_storage_ptr",
														"typeString": "struct IHederaTokenService.HederaToken"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1465,
												"mutability": "mutable",
												"name": "fixedFees",
												"nameLocation": "14212:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 1523,
												"src": "14174:47:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_FixedFee_$2148_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IHederaTokenService.FixedFee[]"
												},
												"typeName": {
													"baseType": {
														"id": 1463,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1462,
															"name": "IHederaTokenService.FixedFee",
															"nameLocations": [
																"14174:19:3",
																"14194:8:3"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 2148,
															"src": "14174:28:3"
														},
														"referencedDeclaration": 2148,
														"src": "14174:28:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FixedFee_$2148_storage_ptr",
															"typeString": "struct IHederaTokenService.FixedFee"
														}
													},
													"id": 1464,
													"nodeType": "ArrayTypeName",
													"src": "14174:30:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_FixedFee_$2148_storage_$dyn_storage_ptr",
														"typeString": "struct IHederaTokenService.FixedFee[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1469,
												"mutability": "mutable",
												"name": "royaltyFees",
												"nameLocation": "14271:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 1523,
												"src": "14231:51:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_RoyaltyFee_$2174_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IHederaTokenService.RoyaltyFee[]"
												},
												"typeName": {
													"baseType": {
														"id": 1467,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1466,
															"name": "IHederaTokenService.RoyaltyFee",
															"nameLocations": [
																"14231:19:3",
																"14251:10:3"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 2174,
															"src": "14231:30:3"
														},
														"referencedDeclaration": 2174,
														"src": "14231:30:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoyaltyFee_$2174_storage_ptr",
															"typeString": "struct IHederaTokenService.RoyaltyFee"
														}
													},
													"id": 1468,
													"nodeType": "ArrayTypeName",
													"src": "14231:32:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_RoyaltyFee_$2174_storage_$dyn_storage_ptr",
														"typeString": "struct IHederaTokenService.RoyaltyFee[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14110:178:3"
									},
									"returnParameters": {
										"id": 1478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1475,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "14357:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 1523,
												"src": "14353:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1474,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "14353:3:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1477,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nameLocation": "14379:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 1523,
												"src": "14371:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14371:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14352:40:3"
									},
									"scope": 2002,
									"src": "14065:868:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1566,
										"nodeType": "Block",
										"src": "15564:379:3",
										"statements": [
											{
												"assignments": [
													1536,
													1538
												],
												"declarations": [
													{
														"constant": false,
														"id": 1536,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "15580:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 1566,
														"src": "15575:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1535,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "15575:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1538,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "15602:6:3",
														"nodeType": "VariableDeclaration",
														"scope": 1566,
														"src": "15589:19:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1537,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "15589:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1551,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1543,
																			"name": "IHederaTokenService",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2709,
																			"src": "15688:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IHederaTokenService_$2709_$",
																				"typeString": "type(contract IHederaTokenService)"
																			}
																		},
																		"id": 1544,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "15708:7:3",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2398,
																		"src": "15688:27:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_int64_$",
																			"typeString": "function IHederaTokenService.approve(address,address,uint256) returns (int64)"
																		}
																	},
																	"id": 1545,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "15716:8:3",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "15688:36:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1546,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1526,
																	"src": "15742:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1547,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1528,
																	"src": "15765:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1548,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1530,
																	"src": "15790:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1541,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "15648:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "15652:18:3",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "15648:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1549,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15648:162:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1539,
															"name": "precompileAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 893,
															"src": "15612:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1540,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "15630:4:3",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "15612:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15612:208:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15574:246:3"
											},
											{
												"expression": {
													"id": 1564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1552,
														"name": "responseCode",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1533,
														"src": "15830:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"condition": {
															"id": 1553,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1536,
															"src": "15845:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"expression": {
																"id": 1561,
																"name": "HederaResponseCodes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 880,
																"src": "15909:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_HederaResponseCodes_$880_$",
																	"typeString": "type(contract HederaResponseCodes)"
																}
															},
															"id": 1562,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "15929:7:3",
															"memberName": "UNKNOWN",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 429,
															"src": "15909:27:3",
															"typeDescriptions": {
																"typeIdentifier": "t_int32",
																"typeString": "int32"
															}
														},
														"id": 1563,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "15845:91:3",
														"trueExpression": {
															"arguments": [
																{
																	"id": 1556,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1538,
																	"src": "15878:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"components": [
																		{
																			"id": 1558,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "15887:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_int32_$",
																				"typeString": "type(int32)"
																			},
																			"typeName": {
																				"id": 1557,
																				"name": "int32",
																				"nodeType": "ElementaryTypeName",
																				"src": "15887:5:3",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"id": 1559,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "15886:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_int32_$",
																		"typeString": "type(int32)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_type$_t_int32_$",
																		"typeString": "type(int32)"
																	}
																],
																"expression": {
																	"id": 1554,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "15867:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1555,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "15871:6:3",
																"memberName": "decode",
																"nodeType": "MemberAccess",
																"src": "15867:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1560,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15867:27:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int32",
																"typeString": "int32"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_int32",
															"typeString": "int32"
														}
													},
													"src": "15830:106:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 1565,
												"nodeType": "ExpressionStatement",
												"src": "15830:106:3"
											}
										]
									},
									"documentation": {
										"id": 1524,
										"nodeType": "StructuredDocumentation",
										"src": "14939:489:3",
										"text": "Allows spender to withdraw from your account multiple times, up to the value amount. If this function is called\n again it overwrites the current allowance with value.\n Only Applicable to Fungible Tokens\n @param token The hedera token address to approve\n @param spender the account authorized to spend\n @param amount the amount of tokens authorized to spend.\n @return responseCode The response code for the status of the request. SUCCESS is 22."
									},
									"id": 1567,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "15442:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1526,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "15467:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1567,
												"src": "15459:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15459:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1528,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "15490:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1567,
												"src": "15482:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1527,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15482:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1530,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "15515:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1567,
												"src": "15507:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1529,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15507:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15449:78:3"
									},
									"returnParameters": {
										"id": 1534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1533,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "15550:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 1567,
												"src": "15546:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1532,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "15546:3:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15545:18:3"
									},
									"scope": 2002,
									"src": "15433:510:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1618,
										"nodeType": "Block",
										"src": "16493:404:3",
										"statements": [
											{
												"assignments": [
													1582,
													1584
												],
												"declarations": [
													{
														"constant": false,
														"id": 1582,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "16509:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 1618,
														"src": "16504:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1581,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "16504:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1584,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "16531:6:3",
														"nodeType": "VariableDeclaration",
														"scope": 1618,
														"src": "16518:19:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1583,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "16518:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1597,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1589,
																			"name": "IHederaTokenService",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2709,
																			"src": "16617:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IHederaTokenService_$2709_$",
																				"typeString": "type(contract IHederaTokenService)"
																			}
																		},
																		"id": 1590,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "16637:9:3",
																		"memberName": "allowance",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2412,
																		"src": "16617:29:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_address_$returns$_t_int64_$_t_uint256_$",
																			"typeString": "function IHederaTokenService.allowance(address,address,address) returns (int64,uint256)"
																		}
																	},
																	"id": 1591,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "16647:8:3",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "16617:38:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1592,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1570,
																	"src": "16673:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1593,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1572,
																	"src": "16696:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1594,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1574,
																	"src": "16719:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1587,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "16577:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1588,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "16581:18:3",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "16577:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1595,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16577:163:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1585,
															"name": "precompileAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 893,
															"src": "16541:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1586,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "16559:4:3",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "16541:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16541:209:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16503:247:3"
											},
											{
												"expression": {
													"id": 1616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 1598,
																"name": "responseCode",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1577,
																"src": "16761:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															{
																"id": 1599,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1579,
																"src": "16775:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1600,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "16760:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_int256_$_t_uint256_$",
															"typeString": "tuple(int256,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"condition": {
															"id": 1601,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1582,
															"src": "16785:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"components": [
																{
																	"expression": {
																		"id": 1611,
																		"name": "HederaResponseCodes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 880,
																		"src": "16859:19:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_HederaResponseCodes_$880_$",
																			"typeString": "type(contract HederaResponseCodes)"
																		}
																	},
																	"id": 1612,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "16879:7:3",
																	"memberName": "UNKNOWN",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 429,
																	"src": "16859:27:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int32",
																		"typeString": "int32"
																	}
																},
																{
																	"hexValue": "30",
																	"id": 1613,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16888:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"id": 1614,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "16858:32:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_int32_$_t_rational_0_by_1_$",
																"typeString": "tuple(int32,int_const 0)"
															}
														},
														"id": 1615,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "16785:105:3",
														"trueExpression": {
															"arguments": [
																{
																	"id": 1604,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1584,
																	"src": "16818:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"components": [
																		{
																			"id": 1606,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "16827:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_int32_$",
																				"typeString": "type(int32)"
																			},
																			"typeName": {
																				"id": 1605,
																				"name": "int32",
																				"nodeType": "ElementaryTypeName",
																				"src": "16827:5:3",
																				"typeDescriptions": {}
																			}
																		},
																		{
																			"id": 1608,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "16834:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 1607,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "16834:7:3",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"id": 1609,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "16826:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_type$_t_int32_$_$_t_type$_t_uint256_$_$",
																		"typeString": "tuple(type(int32),type(uint256))"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_type$_t_int32_$_$_t_type$_t_uint256_$_$",
																		"typeString": "tuple(type(int32),type(uint256))"
																	}
																],
																"expression": {
																	"id": 1602,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "16807:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1603,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "16811:6:3",
																"memberName": "decode",
																"nodeType": "MemberAccess",
																"src": "16807:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1610,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16807:36:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_int32_$_t_uint256_$",
																"typeString": "tuple(int32,uint256)"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_int32_$_t_uint256_$",
															"typeString": "tuple(int32,uint256)"
														}
													},
													"src": "16760:130:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1617,
												"nodeType": "ExpressionStatement",
												"src": "16760:130:3"
											}
										]
									},
									"documentation": {
										"id": 1568,
										"nodeType": "StructuredDocumentation",
										"src": "15949:391:3",
										"text": "Returns the amount which spender is still allowed to withdraw from owner.\n Only Applicable to Fungible Tokens\n @param token The Hedera token address to check the allowance of\n @param owner the owner of the tokens to be spent\n @param spender the spender of the tokens\n @return responseCode The response code for the status of the request. SUCCESS is 22."
									},
									"id": 1619,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "16354:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1570,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "16381:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1619,
												"src": "16373:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1569,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16373:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1572,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "16404:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1619,
												"src": "16396:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1571,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16396:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1574,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "16427:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1619,
												"src": "16419:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1573,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16419:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16363:77:3"
									},
									"returnParameters": {
										"id": 1580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1577,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "16463:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 1619,
												"src": "16459:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1576,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "16459:3:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1579,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "16485:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1619,
												"src": "16477:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1578,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16477:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16458:34:3"
									},
									"scope": 2002,
									"src": "16345:552:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1662,
										"nodeType": "Block",
										"src": "17503:389:3",
										"statements": [
											{
												"assignments": [
													1632,
													1634
												],
												"declarations": [
													{
														"constant": false,
														"id": 1632,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "17519:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 1662,
														"src": "17514:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1631,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "17514:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1634,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "17541:6:3",
														"nodeType": "VariableDeclaration",
														"scope": 1662,
														"src": "17528:19:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1633,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "17528:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1647,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1639,
																			"name": "IHederaTokenService",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2709,
																			"src": "17627:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IHederaTokenService_$2709_$",
																				"typeString": "type(contract IHederaTokenService)"
																			}
																		},
																		"id": 1640,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "17647:10:3",
																		"memberName": "approveNFT",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2424,
																		"src": "17627:30:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_int64_$returns$_t_int64_$",
																			"typeString": "function IHederaTokenService.approveNFT(address,address,int64) returns (int64)"
																		}
																	},
																	"id": 1641,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "17658:8:3",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "17627:39:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1642,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1622,
																	"src": "17684:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1643,
																	"name": "approved",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1624,
																	"src": "17707:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1644,
																	"name": "serialNumber",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1626,
																	"src": "17733:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1637,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "17587:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1638,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "17591:18:3",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "17587:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1645,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17587:172:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1635,
															"name": "precompileAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 893,
															"src": "17551:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1636,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17569:4:3",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "17551:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17551:218:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17513:256:3"
											},
											{
												"expression": {
													"id": 1660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1648,
														"name": "responseCode",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1629,
														"src": "17779:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"condition": {
															"id": 1649,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1632,
															"src": "17794:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"expression": {
																"id": 1657,
																"name": "HederaResponseCodes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 880,
																"src": "17858:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_HederaResponseCodes_$880_$",
																	"typeString": "type(contract HederaResponseCodes)"
																}
															},
															"id": 1658,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "17878:7:3",
															"memberName": "UNKNOWN",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 429,
															"src": "17858:27:3",
															"typeDescriptions": {
																"typeIdentifier": "t_int32",
																"typeString": "int32"
															}
														},
														"id": 1659,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "17794:91:3",
														"trueExpression": {
															"arguments": [
																{
																	"id": 1652,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1634,
																	"src": "17827:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"components": [
																		{
																			"id": 1654,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "17836:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_int32_$",
																				"typeString": "type(int32)"
																			},
																			"typeName": {
																				"id": 1653,
																				"name": "int32",
																				"nodeType": "ElementaryTypeName",
																				"src": "17836:5:3",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"id": 1655,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "17835:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_int32_$",
																		"typeString": "type(int32)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_type$_t_int32_$",
																		"typeString": "type(int32)"
																	}
																],
																"expression": {
																	"id": 1650,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "17816:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1651,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "17820:6:3",
																"memberName": "decode",
																"nodeType": "MemberAccess",
																"src": "17816:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1656,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17816:27:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int32",
																"typeString": "int32"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_int32",
															"typeString": "int32"
														}
													},
													"src": "17779:106:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 1661,
												"nodeType": "ExpressionStatement",
												"src": "17779:106:3"
											}
										]
									},
									"documentation": {
										"id": 1620,
										"nodeType": "StructuredDocumentation",
										"src": "16903:454:3",
										"text": "Allow or reaffirm the approved address to transfer an NFT the approved address does not own.\n Only Applicable to NFT Tokens\n @param token The Hedera NFT token address to approve\n @param approved The new approved NFT controller.  To revoke approvals pass in the zero address.\n @param serialNumber The NFT serial number  to approve\n @return responseCode The response code for the status of the request. SUCCESS is 22."
									},
									"id": 1663,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveNFT",
									"nameLocation": "17371:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1622,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "17399:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1663,
												"src": "17391:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1621,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17391:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1624,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "17422:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1663,
												"src": "17414:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1623,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17414:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1626,
												"mutability": "mutable",
												"name": "serialNumber",
												"nameLocation": "17448:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 1663,
												"src": "17440:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17440:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17381:85:3"
									},
									"returnParameters": {
										"id": 1630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1629,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "17489:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 1663,
												"src": "17485:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1628,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "17485:3:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17484:18:3"
									},
									"scope": 2002,
									"src": "17362:530:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1714,
										"nodeType": "Block",
										"src": "18447:399:3",
										"statements": [
											{
												"assignments": [
													1676,
													1678
												],
												"declarations": [
													{
														"constant": false,
														"id": 1676,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "18463:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 1714,
														"src": "18458:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1675,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "18458:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1678,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "18485:6:3",
														"nodeType": "VariableDeclaration",
														"scope": 1714,
														"src": "18472:19:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1677,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "18472:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1690,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1683,
																			"name": "IHederaTokenService",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2709,
																			"src": "18571:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IHederaTokenService_$2709_$",
																				"typeString": "type(contract IHederaTokenService)"
																			}
																		},
																		"id": 1684,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "18591:11:3",
																		"memberName": "getApproved",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2436,
																		"src": "18571:31:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_int64_$returns$_t_int64_$_t_address_$",
																			"typeString": "function IHederaTokenService.getApproved(address,int64) returns (int64,address)"
																		}
																	},
																	"id": 1685,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "18603:8:3",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "18571:40:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1686,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1666,
																	"src": "18629:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1687,
																	"name": "serialNumber",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1668,
																	"src": "18652:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1681,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "18531:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1682,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "18535:18:3",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "18531:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1688,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18531:147:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1679,
															"name": "precompileAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 893,
															"src": "18495:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1680,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "18513:4:3",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "18495:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18495:193:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18457:231:3"
											},
											{
												"expression": {
													"id": 1712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 1691,
																"name": "responseCode",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1671,
																"src": "18699:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															{
																"id": 1692,
																"name": "approved",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1673,
																"src": "18713:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"id": 1693,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "18698:24:3",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_int256_$_t_address_$",
															"typeString": "tuple(int256,address)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"condition": {
															"id": 1694,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1676,
															"src": "18725:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"components": [
																{
																	"expression": {
																		"id": 1704,
																		"name": "HederaResponseCodes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 880,
																		"src": "18799:19:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_HederaResponseCodes_$880_$",
																			"typeString": "type(contract HederaResponseCodes)"
																		}
																	},
																	"id": 1705,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "18819:7:3",
																	"memberName": "UNKNOWN",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 429,
																	"src": "18799:27:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int32",
																		"typeString": "int32"
																	}
																},
																{
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1708,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "18836:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1707,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "18828:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1706,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "18828:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1709,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "18828:10:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"id": 1710,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "18798:41:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_int32_$_t_address_$",
																"typeString": "tuple(int32,address)"
															}
														},
														"id": 1711,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "18725:114:3",
														"trueExpression": {
															"arguments": [
																{
																	"id": 1697,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1678,
																	"src": "18758:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"components": [
																		{
																			"id": 1699,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "18767:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_int32_$",
																				"typeString": "type(int32)"
																			},
																			"typeName": {
																				"id": 1698,
																				"name": "int32",
																				"nodeType": "ElementaryTypeName",
																				"src": "18767:5:3",
																				"typeDescriptions": {}
																			}
																		},
																		{
																			"id": 1701,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "18774:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1700,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "18774:7:3",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"id": 1702,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "18766:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_type$_t_int32_$_$_t_type$_t_address_$_$",
																		"typeString": "tuple(type(int32),type(address))"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_type$_t_int32_$_$_t_type$_t_address_$_$",
																		"typeString": "tuple(type(int32),type(address))"
																	}
																],
																"expression": {
																	"id": 1695,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "18747:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1696,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "18751:6:3",
																"memberName": "decode",
																"nodeType": "MemberAccess",
																"src": "18747:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1703,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18747:36:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_int32_$_t_address_payable_$",
																"typeString": "tuple(int32,address payable)"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_int32_$_t_address_$",
															"typeString": "tuple(int32,address)"
														}
													},
													"src": "18698:141:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1713,
												"nodeType": "ExpressionStatement",
												"src": "18698:141:3"
											}
										]
									},
									"documentation": {
										"id": 1664,
										"nodeType": "StructuredDocumentation",
										"src": "17898:410:3",
										"text": "Get the approved address for a single NFT\n Only Applicable to NFT Tokens\n @param token The Hedera NFT token address to check approval\n @param serialNumber The NFT to find the approved address for\n @return responseCode The response code for the status of the request. SUCCESS is 22.\n @return approved The approved address for this NFT, or the zero address if there is none"
									},
									"id": 1715,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "18322:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1666,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "18351:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1715,
												"src": "18343:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18343:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1668,
												"mutability": "mutable",
												"name": "serialNumber",
												"nameLocation": "18374:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 1715,
												"src": "18366:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1667,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18366:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18333:59:3"
									},
									"returnParameters": {
										"id": 1674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1671,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "18415:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 1715,
												"src": "18411:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1670,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "18411:3:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1673,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "18437:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1715,
												"src": "18429:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1672,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18429:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18410:36:3"
									},
									"scope": 2002,
									"src": "18313:533:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1758,
										"nodeType": "Block",
										"src": "19418:392:3",
										"statements": [
											{
												"assignments": [
													1728,
													1730
												],
												"declarations": [
													{
														"constant": false,
														"id": 1728,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "19434:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 1758,
														"src": "19429:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1727,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "19429:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1730,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "19456:6:3",
														"nodeType": "VariableDeclaration",
														"scope": 1758,
														"src": "19443:19:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1729,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "19443:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1743,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1735,
																			"name": "IHederaTokenService",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2709,
																			"src": "19542:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IHederaTokenService_$2709_$",
																				"typeString": "type(contract IHederaTokenService)"
																			}
																		},
																		"id": 1736,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "19562:17:3",
																		"memberName": "setApprovalForAll",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2448,
																		"src": "19542:37:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_bool_$returns$_t_int64_$",
																			"typeString": "function IHederaTokenService.setApprovalForAll(address,address,bool) returns (int64)"
																		}
																	},
																	"id": 1737,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "19580:8:3",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "19542:46:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1738,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1718,
																	"src": "19606:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1739,
																	"name": "operator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1720,
																	"src": "19629:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1740,
																	"name": "approved",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1722,
																	"src": "19655:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"expression": {
																	"id": 1733,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "19502:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1734,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "19506:18:3",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "19502:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1741,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19502:175:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1731,
															"name": "precompileAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 893,
															"src": "19466:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1732,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "19484:4:3",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "19466:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19466:221:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19428:259:3"
											},
											{
												"expression": {
													"id": 1756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1744,
														"name": "responseCode",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1725,
														"src": "19697:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"condition": {
															"id": 1745,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1728,
															"src": "19712:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"expression": {
																"id": 1753,
																"name": "HederaResponseCodes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 880,
																"src": "19776:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_HederaResponseCodes_$880_$",
																	"typeString": "type(contract HederaResponseCodes)"
																}
															},
															"id": 1754,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "19796:7:3",
															"memberName": "UNKNOWN",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 429,
															"src": "19776:27:3",
															"typeDescriptions": {
																"typeIdentifier": "t_int32",
																"typeString": "int32"
															}
														},
														"id": 1755,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "19712:91:3",
														"trueExpression": {
															"arguments": [
																{
																	"id": 1748,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1730,
																	"src": "19745:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"components": [
																		{
																			"id": 1750,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "19754:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_int32_$",
																				"typeString": "type(int32)"
																			},
																			"typeName": {
																				"id": 1749,
																				"name": "int32",
																				"nodeType": "ElementaryTypeName",
																				"src": "19754:5:3",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"id": 1751,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "19753:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_int32_$",
																		"typeString": "type(int32)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_type$_t_int32_$",
																		"typeString": "type(int32)"
																	}
																],
																"expression": {
																	"id": 1746,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "19734:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1747,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "19738:6:3",
																"memberName": "decode",
																"nodeType": "MemberAccess",
																"src": "19734:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1752,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19734:27:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int32",
																"typeString": "int32"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_int32",
															"typeString": "int32"
														}
													},
													"src": "19697:106:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 1757,
												"nodeType": "ExpressionStatement",
												"src": "19697:106:3"
											}
										]
									},
									"documentation": {
										"id": 1716,
										"nodeType": "StructuredDocumentation",
										"src": "18852:420:3",
										"text": "Enable or disable approval for a third party (\"operator\") to manage\n  all of `msg.sender`'s assets\n @param token The Hedera NFT token address to approve\n @param operator Address to add to the set of authorized operators\n @param approved True if the operator is approved, false to revoke approval\n @return responseCode The response code for the status of the request. SUCCESS is 22."
									},
									"id": 1759,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "19286:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1718,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "19321:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1759,
												"src": "19313:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1717,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19313:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1720,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "19344:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1759,
												"src": "19336:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1719,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19336:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1722,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "19367:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1759,
												"src": "19362:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1721,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "19362:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19303:78:3"
									},
									"returnParameters": {
										"id": 1726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1725,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "19404:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 1759,
												"src": "19400:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1724,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "19400:3:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19399:18:3"
									},
									"scope": 2002,
									"src": "19277:533:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1810,
										"nodeType": "Block",
										"src": "20455:415:3",
										"statements": [
											{
												"assignments": [
													1774,
													1776
												],
												"declarations": [
													{
														"constant": false,
														"id": 1774,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "20471:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 1810,
														"src": "20466:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1773,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "20466:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1776,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "20493:6:3",
														"nodeType": "VariableDeclaration",
														"scope": 1810,
														"src": "20480:19:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1775,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "20480:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1789,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1781,
																			"name": "IHederaTokenService",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2709,
																			"src": "20579:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IHederaTokenService_$2709_$",
																				"typeString": "type(contract IHederaTokenService)"
																			}
																		},
																		"id": 1782,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "20599:16:3",
																		"memberName": "isApprovedForAll",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2462,
																		"src": "20579:36:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_address_$returns$_t_int64_$_t_bool_$",
																			"typeString": "function IHederaTokenService.isApprovedForAll(address,address,address) returns (int64,bool)"
																		}
																	},
																	"id": 1783,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "20616:8:3",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "20579:45:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1784,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1762,
																	"src": "20642:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1785,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1764,
																	"src": "20665:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1786,
																	"name": "operator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1766,
																	"src": "20688:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1779,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "20539:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1780,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "20543:18:3",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "20539:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1787,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20539:171:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1777,
															"name": "precompileAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 893,
															"src": "20503:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1778,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "20521:4:3",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "20503:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20503:217:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20465:255:3"
											},
											{
												"expression": {
													"id": 1808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 1790,
																"name": "responseCode",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1769,
																"src": "20731:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															{
																"id": 1791,
																"name": "approved",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1771,
																"src": "20745:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1792,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "20730:24:3",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_int256_$_t_bool_$",
															"typeString": "tuple(int256,bool)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"condition": {
															"id": 1793,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1774,
															"src": "20757:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"components": [
																{
																	"expression": {
																		"id": 1803,
																		"name": "HederaResponseCodes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 880,
																		"src": "20828:19:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_HederaResponseCodes_$880_$",
																			"typeString": "type(contract HederaResponseCodes)"
																		}
																	},
																	"id": 1804,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "20848:7:3",
																	"memberName": "UNKNOWN",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 429,
																	"src": "20828:27:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int32",
																		"typeString": "int32"
																	}
																},
																{
																	"hexValue": "66616c7365",
																	"id": 1805,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20857:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																}
															],
															"id": 1806,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "20827:36:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_int32_$_t_bool_$",
																"typeString": "tuple(int32,bool)"
															}
														},
														"id": 1807,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "20757:106:3",
														"trueExpression": {
															"arguments": [
																{
																	"id": 1796,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1776,
																	"src": "20790:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"components": [
																		{
																			"id": 1798,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "20799:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_int32_$",
																				"typeString": "type(int32)"
																			},
																			"typeName": {
																				"id": 1797,
																				"name": "int32",
																				"nodeType": "ElementaryTypeName",
																				"src": "20799:5:3",
																				"typeDescriptions": {}
																			}
																		},
																		{
																			"id": 1800,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "20806:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bool_$",
																				"typeString": "type(bool)"
																			},
																			"typeName": {
																				"id": 1799,
																				"name": "bool",
																				"nodeType": "ElementaryTypeName",
																				"src": "20806:4:3",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"id": 1801,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "20798:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_type$_t_int32_$_$_t_type$_t_bool_$_$",
																		"typeString": "tuple(type(int32),type(bool))"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_type$_t_int32_$_$_t_type$_t_bool_$_$",
																		"typeString": "tuple(type(int32),type(bool))"
																	}
																],
																"expression": {
																	"id": 1794,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "20779:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1795,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "20783:6:3",
																"memberName": "decode",
																"nodeType": "MemberAccess",
																"src": "20779:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1802,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20779:33:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_int32_$_t_bool_$",
																"typeString": "tuple(int32,bool)"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_int32_$_t_bool_$",
															"typeString": "tuple(int32,bool)"
														}
													},
													"src": "20730:133:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1809,
												"nodeType": "ExpressionStatement",
												"src": "20730:133:3"
											}
										]
									},
									"documentation": {
										"id": 1760,
										"nodeType": "StructuredDocumentation",
										"src": "19816:479:3",
										"text": "Query if an address is an authorized operator for another address\n Only Applicable to NFT Tokens\n @param token The Hedera NFT token address to approve\n @param owner The address that owns the NFTs\n @param operator The address that acts on behalf of the owner\n @return responseCode The response code for the status of the request. SUCCESS is 22.\n @return approved True if `operator` is an approved operator for `owner`, false otherwise"
									},
									"id": 1811,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "20309:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1762,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "20343:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1811,
												"src": "20335:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1761,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20335:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1764,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "20366:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1811,
												"src": "20358:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1763,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20358:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1766,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "20389:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1811,
												"src": "20381:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1765,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20381:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20325:78:3"
									},
									"returnParameters": {
										"id": 1772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1769,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "20426:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 1811,
												"src": "20422:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1768,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "20422:3:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1771,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "20445:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1811,
												"src": "20440:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1770,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "20440:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20421:33:3"
									},
									"scope": 2002,
									"src": "20300:570:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1856,
										"nodeType": "Block",
										"src": "21357:390:3",
										"statements": [
											{
												"assignments": [
													1826,
													1828
												],
												"declarations": [
													{
														"constant": false,
														"id": 1826,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "21373:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 1856,
														"src": "21368:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1825,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "21368:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1828,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "21395:6:3",
														"nodeType": "VariableDeclaration",
														"scope": 1856,
														"src": "21382:19:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1827,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "21382:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1841,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1833,
																			"name": "IHederaTokenService",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2709,
																			"src": "21481:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IHederaTokenService_$2709_$",
																				"typeString": "type(contract IHederaTokenService)"
																			}
																		},
																		"id": 1834,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "21501:14:3",
																		"memberName": "transferTokens",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2341,
																		"src": "21481:34:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_int64_$dyn_memory_ptr_$returns$_t_int64_$",
																			"typeString": "function IHederaTokenService.transferTokens(address,address[] memory,int64[] memory) returns (int64)"
																		}
																	},
																	"id": 1835,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "21516:8:3",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "21481:43:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1836,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1814,
																	"src": "21542:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1837,
																	"name": "accountIds",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1817,
																	"src": "21565:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																{
																	"id": 1838,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1820,
																	"src": "21593:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_int64_$dyn_memory_ptr",
																		"typeString": "int64[] memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	},
																	{
																		"typeIdentifier": "t_array$_t_int64_$dyn_memory_ptr",
																		"typeString": "int64[] memory"
																	}
																],
																"expression": {
																	"id": 1831,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "21441:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1832,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "21445:18:3",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "21441:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1839,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21441:173:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1829,
															"name": "precompileAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 893,
															"src": "21405:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1830,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "21423:4:3",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "21405:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21405:219:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21367:257:3"
											},
											{
												"expression": {
													"id": 1854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1842,
														"name": "responseCode",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1823,
														"src": "21634:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"condition": {
															"id": 1843,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1826,
															"src": "21649:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"expression": {
																"id": 1851,
																"name": "HederaResponseCodes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 880,
																"src": "21713:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_HederaResponseCodes_$880_$",
																	"typeString": "type(contract HederaResponseCodes)"
																}
															},
															"id": 1852,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "21733:7:3",
															"memberName": "UNKNOWN",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 429,
															"src": "21713:27:3",
															"typeDescriptions": {
																"typeIdentifier": "t_int32",
																"typeString": "int32"
															}
														},
														"id": 1853,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "21649:91:3",
														"trueExpression": {
															"arguments": [
																{
																	"id": 1846,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1828,
																	"src": "21682:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"components": [
																		{
																			"id": 1848,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "21691:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_int32_$",
																				"typeString": "type(int32)"
																			},
																			"typeName": {
																				"id": 1847,
																				"name": "int32",
																				"nodeType": "ElementaryTypeName",
																				"src": "21691:5:3",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"id": 1849,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "21690:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_int32_$",
																		"typeString": "type(int32)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_type$_t_int32_$",
																		"typeString": "type(int32)"
																	}
																],
																"expression": {
																	"id": 1844,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "21671:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1845,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "21675:6:3",
																"memberName": "decode",
																"nodeType": "MemberAccess",
																"src": "21671:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1850,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21671:27:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int32",
																"typeString": "int32"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_int32",
															"typeString": "int32"
														}
													},
													"src": "21634:106:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 1855,
												"nodeType": "ExpressionStatement",
												"src": "21634:106:3"
											}
										]
									},
									"documentation": {
										"id": 1812,
										"nodeType": "StructuredDocumentation",
										"src": "20962:232:3",
										"text": "Initiates a Fungible Token Transfer\n @param token The ID of the token as a solidity address\n @param accountIds account to do a transfer to/from\n @param amounts The amount from the accountId at the same index"
									},
									"id": 1857,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferTokens",
									"nameLocation": "21208:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1814,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "21240:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1857,
												"src": "21232:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21232:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1817,
												"mutability": "mutable",
												"name": "accountIds",
												"nameLocation": "21272:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 1857,
												"src": "21255:27:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1815,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "21255:7:3",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1816,
													"nodeType": "ArrayTypeName",
													"src": "21255:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1820,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "21307:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1857,
												"src": "21292:22:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_int64_$dyn_memory_ptr",
													"typeString": "int64[]"
												},
												"typeName": {
													"baseType": {
														"id": 1818,
														"name": "int64",
														"nodeType": "ElementaryTypeName",
														"src": "21292:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_int64",
															"typeString": "int64"
														}
													},
													"id": 1819,
													"nodeType": "ArrayTypeName",
													"src": "21292:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_int64_$dyn_storage_ptr",
														"typeString": "int64[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21222:98:3"
									},
									"returnParameters": {
										"id": 1824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1823,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "21343:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 1857,
												"src": "21339:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1822,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "21339:3:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21338:18:3"
									},
									"scope": 2002,
									"src": "21199:548:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1906,
										"nodeType": "Block",
										"src": "22270:415:3",
										"statements": [
											{
												"assignments": [
													1875,
													1877
												],
												"declarations": [
													{
														"constant": false,
														"id": 1875,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "22286:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 1906,
														"src": "22281:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1874,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "22281:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1877,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "22308:6:3",
														"nodeType": "VariableDeclaration",
														"scope": 1906,
														"src": "22295:19:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1876,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "22295:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1891,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1882,
																			"name": "IHederaTokenService",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2709,
																			"src": "22394:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IHederaTokenService_$2709_$",
																				"typeString": "type(contract IHederaTokenService)"
																			}
																		},
																		"id": 1883,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "22414:12:3",
																		"memberName": "transferNFTs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2358,
																		"src": "22394:32:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_int64_$dyn_memory_ptr_$returns$_t_int64_$",
																			"typeString": "function IHederaTokenService.transferNFTs(address,address[] memory,address[] memory,int64[] memory) returns (int64)"
																		}
																	},
																	"id": 1884,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "22427:8:3",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "22394:41:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1885,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1860,
																	"src": "22453:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1886,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1863,
																	"src": "22476:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																{
																	"id": 1887,
																	"name": "receiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1866,
																	"src": "22500:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																{
																	"id": 1888,
																	"name": "serialNumber",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1869,
																	"src": "22526:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_int64_$dyn_memory_ptr",
																		"typeString": "int64[] memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	},
																	{
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	},
																	{
																		"typeIdentifier": "t_array$_t_int64_$dyn_memory_ptr",
																		"typeString": "int64[] memory"
																	}
																],
																"expression": {
																	"id": 1880,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "22354:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1881,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "22358:18:3",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "22354:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1889,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22354:198:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1878,
															"name": "precompileAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 893,
															"src": "22318:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1879,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "22336:4:3",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "22318:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1890,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22318:244:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "22280:282:3"
											},
											{
												"expression": {
													"id": 1904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1892,
														"name": "responseCode",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1872,
														"src": "22572:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"condition": {
															"id": 1893,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1875,
															"src": "22587:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"expression": {
																"id": 1901,
																"name": "HederaResponseCodes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 880,
																"src": "22651:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_HederaResponseCodes_$880_$",
																	"typeString": "type(contract HederaResponseCodes)"
																}
															},
															"id": 1902,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "22671:7:3",
															"memberName": "UNKNOWN",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 429,
															"src": "22651:27:3",
															"typeDescriptions": {
																"typeIdentifier": "t_int32",
																"typeString": "int32"
															}
														},
														"id": 1903,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "22587:91:3",
														"trueExpression": {
															"arguments": [
																{
																	"id": 1896,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1877,
																	"src": "22620:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"components": [
																		{
																			"id": 1898,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "22629:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_int32_$",
																				"typeString": "type(int32)"
																			},
																			"typeName": {
																				"id": 1897,
																				"name": "int32",
																				"nodeType": "ElementaryTypeName",
																				"src": "22629:5:3",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"id": 1899,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "22628:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_int32_$",
																		"typeString": "type(int32)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_type$_t_int32_$",
																		"typeString": "type(int32)"
																	}
																],
																"expression": {
																	"id": 1894,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "22609:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1895,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "22613:6:3",
																"memberName": "decode",
																"nodeType": "MemberAccess",
																"src": "22609:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1900,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22609:27:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int32",
																"typeString": "int32"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_int32",
															"typeString": "int32"
														}
													},
													"src": "22572:106:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 1905,
												"nodeType": "ExpressionStatement",
												"src": "22572:106:3"
											}
										]
									},
									"documentation": {
										"id": 1858,
										"nodeType": "StructuredDocumentation",
										"src": "21753:320:3",
										"text": "Initiates a Non-Fungable Token Transfer\n @param token The ID of the token as a solidity address\n @param sender the sender of an nft\n @param receiver the receiver of the nft sent by the same index at sender\n @param serialNumber the serial number of the nft sent by the same index at sender"
									},
									"id": 1907,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferNFTs",
									"nameLocation": "22087:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1860,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "22117:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1907,
												"src": "22109:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1859,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22109:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1863,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "22149:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1907,
												"src": "22132:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1861,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "22132:7:3",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1862,
													"nodeType": "ArrayTypeName",
													"src": "22132:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1866,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "22182:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1907,
												"src": "22165:25:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1864,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "22165:7:3",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1865,
													"nodeType": "ArrayTypeName",
													"src": "22165:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1869,
												"mutability": "mutable",
												"name": "serialNumber",
												"nameLocation": "22215:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 1907,
												"src": "22200:27:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_int64_$dyn_memory_ptr",
													"typeString": "int64[]"
												},
												"typeName": {
													"baseType": {
														"id": 1867,
														"name": "int64",
														"nodeType": "ElementaryTypeName",
														"src": "22200:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_int64",
															"typeString": "int64"
														}
													},
													"id": 1868,
													"nodeType": "ArrayTypeName",
													"src": "22200:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_int64_$dyn_storage_ptr",
														"typeString": "int64[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22099:134:3"
									},
									"returnParameters": {
										"id": 1873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1872,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "22256:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 1907,
												"src": "22252:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1871,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "22252:3:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22251:18:3"
									},
									"scope": 2002,
									"src": "22078:607:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1953,
										"nodeType": "Block",
										"src": "23395:410:3",
										"statements": [
											{
												"assignments": [
													1922,
													1924
												],
												"declarations": [
													{
														"constant": false,
														"id": 1922,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "23411:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 1953,
														"src": "23406:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1921,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "23406:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1924,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "23433:6:3",
														"nodeType": "VariableDeclaration",
														"scope": 1953,
														"src": "23420:19:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1923,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "23420:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1938,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1929,
																			"name": "IHederaTokenService",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2709,
																			"src": "23519:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IHederaTokenService_$2709_$",
																				"typeString": "type(contract IHederaTokenService)"
																			}
																		},
																		"id": 1930,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "23539:13:3",
																		"memberName": "transferToken",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2372,
																		"src": "23519:33:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_address_$_t_int64_$returns$_t_int64_$",
																			"typeString": "function IHederaTokenService.transferToken(address,address,address,int64) returns (int64)"
																		}
																	},
																	"id": 1931,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "23553:8:3",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "23519:42:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1932,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1910,
																	"src": "23579:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1933,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1912,
																	"src": "23602:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1934,
																	"name": "receiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1914,
																	"src": "23626:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1935,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1916,
																	"src": "23652:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int64",
																		"typeString": "int64"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_int64",
																		"typeString": "int64"
																	}
																],
																"expression": {
																	"id": 1927,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "23479:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1928,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "23483:18:3",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "23479:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1936,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23479:193:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1925,
															"name": "precompileAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 893,
															"src": "23443:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1926,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "23461:4:3",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "23443:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1937,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23443:239:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "23405:277:3"
											},
											{
												"expression": {
													"id": 1951,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1939,
														"name": "responseCode",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1919,
														"src": "23692:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"condition": {
															"id": 1940,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1922,
															"src": "23707:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"expression": {
																"id": 1948,
																"name": "HederaResponseCodes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 880,
																"src": "23771:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_HederaResponseCodes_$880_$",
																	"typeString": "type(contract HederaResponseCodes)"
																}
															},
															"id": 1949,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "23791:7:3",
															"memberName": "UNKNOWN",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 429,
															"src": "23771:27:3",
															"typeDescriptions": {
																"typeIdentifier": "t_int32",
																"typeString": "int32"
															}
														},
														"id": 1950,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "23707:91:3",
														"trueExpression": {
															"arguments": [
																{
																	"id": 1943,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1924,
																	"src": "23740:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"components": [
																		{
																			"id": 1945,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "23749:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_int32_$",
																				"typeString": "type(int32)"
																			},
																			"typeName": {
																				"id": 1944,
																				"name": "int32",
																				"nodeType": "ElementaryTypeName",
																				"src": "23749:5:3",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"id": 1946,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "23748:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_int32_$",
																		"typeString": "type(int32)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_type$_t_int32_$",
																		"typeString": "type(int32)"
																	}
																],
																"expression": {
																	"id": 1941,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "23729:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1942,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "23733:6:3",
																"memberName": "decode",
																"nodeType": "MemberAccess",
																"src": "23729:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1947,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23729:27:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int32",
																"typeString": "int32"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_int32",
															"typeString": "int32"
														}
													},
													"src": "23692:106:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 1952,
												"nodeType": "ExpressionStatement",
												"src": "23692:106:3"
											}
										]
									},
									"documentation": {
										"id": 1908,
										"nodeType": "StructuredDocumentation",
										"src": "22691:539:3",
										"text": "Transfers tokens where the calling account/contract is implicitly the first entry in the token transfer list,\n where the amount is the value needed to zero balance the transfers. Regular signing rules apply for sending\n (positive amount) or receiving (negative amount)\n @param token The token to transfer to/from\n @param sender The sender for the transaction\n @param receiver The receiver of the transaction\n @param amount Non-negative value to send. a negative value will result in a failure."
									},
									"id": 1954,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferToken",
									"nameLocation": "23244:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1910,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "23275:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1954,
												"src": "23267:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1909,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23267:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1912,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "23298:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1954,
												"src": "23290:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1911,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23290:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1914,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "23322:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1954,
												"src": "23314:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1913,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23314:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1916,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "23346:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1954,
												"src": "23340:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 1915,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "23340:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23257:101:3"
									},
									"returnParameters": {
										"id": 1920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1919,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "23381:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 1954,
												"src": "23377:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1918,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "23377:3:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23376:18:3"
									},
									"scope": 2002,
									"src": "23235:570:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2000,
										"nodeType": "Block",
										"src": "24496:414:3",
										"statements": [
											{
												"assignments": [
													1969,
													1971
												],
												"declarations": [
													{
														"constant": false,
														"id": 1969,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "24512:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 2000,
														"src": "24507:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1968,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "24507:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1971,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "24534:6:3",
														"nodeType": "VariableDeclaration",
														"scope": 2000,
														"src": "24521:19:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1970,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "24521:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1985,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1976,
																			"name": "IHederaTokenService",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2709,
																			"src": "24620:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IHederaTokenService_$2709_$",
																				"typeString": "type(contract IHederaTokenService)"
																			}
																		},
																		"id": 1977,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "24640:11:3",
																		"memberName": "transferNFT",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2386,
																		"src": "24620:31:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_address_$_t_int64_$returns$_t_int64_$",
																			"typeString": "function IHederaTokenService.transferNFT(address,address,address,int64) returns (int64)"
																		}
																	},
																	"id": 1978,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "24652:8:3",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "24620:40:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1979,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1957,
																	"src": "24678:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1980,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1959,
																	"src": "24701:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1981,
																	"name": "receiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1961,
																	"src": "24725:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1982,
																	"name": "serialNumber",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1963,
																	"src": "24751:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int64",
																		"typeString": "int64"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_int64",
																		"typeString": "int64"
																	}
																],
																"expression": {
																	"id": 1974,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "24580:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1975,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "24584:18:3",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "24580:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1983,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "24580:197:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1972,
															"name": "precompileAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 893,
															"src": "24544:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1973,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "24562:4:3",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "24544:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1984,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24544:243:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "24506:281:3"
											},
											{
												"expression": {
													"id": 1998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1986,
														"name": "responseCode",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1966,
														"src": "24797:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"condition": {
															"id": 1987,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1969,
															"src": "24812:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"expression": {
																"id": 1995,
																"name": "HederaResponseCodes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 880,
																"src": "24876:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_HederaResponseCodes_$880_$",
																	"typeString": "type(contract HederaResponseCodes)"
																}
															},
															"id": 1996,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "24896:7:3",
															"memberName": "UNKNOWN",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 429,
															"src": "24876:27:3",
															"typeDescriptions": {
																"typeIdentifier": "t_int32",
																"typeString": "int32"
															}
														},
														"id": 1997,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "24812:91:3",
														"trueExpression": {
															"arguments": [
																{
																	"id": 1990,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1971,
																	"src": "24845:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"components": [
																		{
																			"id": 1992,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "24854:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_int32_$",
																				"typeString": "type(int32)"
																			},
																			"typeName": {
																				"id": 1991,
																				"name": "int32",
																				"nodeType": "ElementaryTypeName",
																				"src": "24854:5:3",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"id": 1993,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "24853:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_int32_$",
																		"typeString": "type(int32)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_type$_t_int32_$",
																		"typeString": "type(int32)"
																	}
																],
																"expression": {
																	"id": 1988,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "24834:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1989,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "24838:6:3",
																"memberName": "decode",
																"nodeType": "MemberAccess",
																"src": "24834:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1994,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "24834:27:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int32",
																"typeString": "int32"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_int32",
															"typeString": "int32"
														}
													},
													"src": "24797:106:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 1999,
												"nodeType": "ExpressionStatement",
												"src": "24797:106:3"
											}
										]
									},
									"documentation": {
										"id": 1955,
										"nodeType": "StructuredDocumentation",
										"src": "23811:516:3",
										"text": "Transfers tokens where the calling account/contract is implicitly the first entry in the token transfer list,\n where the amount is the value needed to zero balance the transfers. Regular signing rules apply for sending\n (positive amount) or receiving (negative amount)\n @param token The token to transfer to/from\n @param sender The sender for the transaction\n @param receiver The receiver of the transaction\n @param serialNumber The serial number of the NFT to transfer."
									},
									"id": 2001,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferNFT",
									"nameLocation": "24341:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1964,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1957,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "24370:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 2001,
												"src": "24362:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1956,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24362:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1959,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "24393:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 2001,
												"src": "24385:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1958,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24385:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1961,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "24417:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 2001,
												"src": "24409:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1960,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24409:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1963,
												"mutability": "mutable",
												"name": "serialNumber",
												"nameLocation": "24441:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 2001,
												"src": "24435:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 1962,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "24435:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24352:107:3"
									},
									"returnParameters": {
										"id": 1967,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1966,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "24482:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 2001,
												"src": "24478:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1965,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "24478:3:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24477:18:3"
									},
									"scope": 2002,
									"src": "24332:578:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2003,
							"src": "178:24734:3",
							"usedErrors": []
						}
					],
					"src": "39:24874:3"
				},
				"id": 3
			},
			"hbar/SmartContracts/Auction2/hts-precompile/IHederaTokenService.sol": {
				"ast": {
					"absolutePath": "hbar/SmartContracts/Auction2/hts-precompile/IHederaTokenService.sol",
					"exportedSymbols": {
						"IHederaTokenService": [
							2709
						]
					},
					"id": 2710,
					"license": "Apache-2.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2004,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".9",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "39:31:4"
						},
						{
							"id": 2005,
							"literals": [
								"experimental",
								"ABIEncoderV2"
							],
							"nodeType": "PragmaDirective",
							"src": "71:33:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IHederaTokenService",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2709,
							"linearizedBaseContracts": [
								2709
							],
							"name": "IHederaTokenService",
							"nameLocation": "116:19:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "IHederaTokenService.AccountAmount",
									"id": 2010,
									"members": [
										{
											"constant": false,
											"id": 2007,
											"mutability": "mutable",
											"name": "accountID",
											"nameLocation": "1196:9:4",
											"nodeType": "VariableDeclaration",
											"scope": 2010,
											"src": "1188:17:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2006,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1188:7:4",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2009,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "1357:6:4",
											"nodeType": "VariableDeclaration",
											"scope": 2010,
											"src": "1351:12:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int64",
												"typeString": "int64"
											},
											"typeName": {
												"id": 2008,
												"name": "int64",
												"nodeType": "ElementaryTypeName",
												"src": "1351:5:4",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AccountAmount",
									"nameLocation": "1069:13:4",
									"nodeType": "StructDefinition",
									"scope": 2709,
									"src": "1062:308:4",
									"visibility": "public"
								},
								{
									"canonicalName": "IHederaTokenService.NftTransfer",
									"id": 2017,
									"members": [
										{
											"constant": false,
											"id": 2012,
											"mutability": "mutable",
											"name": "senderAccountID",
											"nameLocation": "1755:15:4",
											"nodeType": "VariableDeclaration",
											"scope": 2017,
											"src": "1747:23:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2011,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1747:7:4",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2014,
											"mutability": "mutable",
											"name": "receiverAccountID",
											"nameLocation": "1837:17:4",
											"nodeType": "VariableDeclaration",
											"scope": 2017,
											"src": "1829:25:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2013,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1829:7:4",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2016,
											"mutability": "mutable",
											"name": "serialNumber",
											"nameLocation": "1911:12:4",
											"nodeType": "VariableDeclaration",
											"scope": 2017,
											"src": "1905:18:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int64",
												"typeString": "int64"
											},
											"typeName": {
												"id": 2015,
												"name": "int64",
												"nodeType": "ElementaryTypeName",
												"src": "1905:5:4",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "NftTransfer",
									"nameLocation": "1679:11:4",
									"nodeType": "StructDefinition",
									"scope": 2709,
									"src": "1672:258:4",
									"visibility": "public"
								},
								{
									"canonicalName": "IHederaTokenService.TokenTransferList",
									"id": 2028,
									"members": [
										{
											"constant": false,
											"id": 2019,
											"mutability": "mutable",
											"name": "token",
											"nameLocation": "2032:5:4",
											"nodeType": "VariableDeclaration",
											"scope": 2028,
											"src": "2024:13:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2018,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2024:7:4",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2023,
											"mutability": "mutable",
											"name": "transfers",
											"nameLocation": "2206:9:4",
											"nodeType": "VariableDeclaration",
											"scope": 2028,
											"src": "2190:25:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_AccountAmount_$2010_storage_$dyn_storage_ptr",
												"typeString": "struct IHederaTokenService.AccountAmount[]"
											},
											"typeName": {
												"baseType": {
													"id": 2021,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2020,
														"name": "AccountAmount",
														"nameLocations": [
															"2190:13:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2010,
														"src": "2190:13:4"
													},
													"referencedDeclaration": 2010,
													"src": "2190:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AccountAmount_$2010_storage_ptr",
														"typeString": "struct IHederaTokenService.AccountAmount"
													}
												},
												"id": 2022,
												"nodeType": "ArrayTypeName",
												"src": "2190:15:4",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_AccountAmount_$2010_storage_$dyn_storage_ptr",
													"typeString": "struct IHederaTokenService.AccountAmount[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2027,
											"mutability": "mutable",
											"name": "nftTransfers",
											"nameLocation": "2431:12:4",
											"nodeType": "VariableDeclaration",
											"scope": 2028,
											"src": "2417:26:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_NftTransfer_$2017_storage_$dyn_storage_ptr",
												"typeString": "struct IHederaTokenService.NftTransfer[]"
											},
											"typeName": {
												"baseType": {
													"id": 2025,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2024,
														"name": "NftTransfer",
														"nameLocations": [
															"2417:11:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2017,
														"src": "2417:11:4"
													},
													"referencedDeclaration": 2017,
													"src": "2417:11:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_NftTransfer_$2017_storage_ptr",
														"typeString": "struct IHederaTokenService.NftTransfer"
													}
												},
												"id": 2026,
												"nodeType": "ArrayTypeName",
												"src": "2417:13:4",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_NftTransfer_$2017_storage_$dyn_storage_ptr",
													"typeString": "struct IHederaTokenService.NftTransfer[]"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenTransferList",
									"nameLocation": "1943:17:4",
									"nodeType": "StructDefinition",
									"scope": 2709,
									"src": "1936:514:4",
									"visibility": "public"
								},
								{
									"canonicalName": "IHederaTokenService.Expiry",
									"id": 2035,
									"members": [
										{
											"constant": false,
											"id": 2030,
											"mutability": "mutable",
											"name": "second",
											"nameLocation": "2768:6:4",
											"nodeType": "VariableDeclaration",
											"scope": 2035,
											"src": "2761:13:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 2029,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "2761:6:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2032,
											"mutability": "mutable",
											"name": "autoRenewAccount",
											"nameLocation": "2962:16:4",
											"nodeType": "VariableDeclaration",
											"scope": 2035,
											"src": "2954:24:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2031,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2954:7:4",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2034,
											"mutability": "mutable",
											"name": "autoRenewPeriod",
											"nameLocation": "3097:15:4",
											"nodeType": "VariableDeclaration",
											"scope": 2035,
											"src": "3090:22:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 2033,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "3090:6:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Expiry",
									"nameLocation": "2551:6:4",
									"nodeType": "StructDefinition",
									"scope": 2709,
									"src": "2544:575:4",
									"visibility": "public"
								},
								{
									"canonicalName": "IHederaTokenService.KeyValue",
									"id": 2046,
									"members": [
										{
											"constant": false,
											"id": 2037,
											"mutability": "mutable",
											"name": "inheritAccountKey",
											"nameLocation": "4119:17:4",
											"nodeType": "VariableDeclaration",
											"scope": 2046,
											"src": "4114:22:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2036,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "4114:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2039,
											"mutability": "mutable",
											"name": "contractId",
											"nameLocation": "4240:10:4",
											"nodeType": "VariableDeclaration",
											"scope": 2046,
											"src": "4232:18:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2038,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4232:7:4",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2041,
											"mutability": "mutable",
											"name": "ed25519",
											"nameLocation": "4303:7:4",
											"nodeType": "VariableDeclaration",
											"scope": 2046,
											"src": "4297:13:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 2040,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "4297:5:4",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2043,
											"mutability": "mutable",
											"name": "ECDSA_secp256k1",
											"nameLocation": "4383:15:4",
											"nodeType": "VariableDeclaration",
											"scope": 2046,
											"src": "4377:21:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 2042,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "4377:5:4",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2045,
											"mutability": "mutable",
											"name": "delegatableContractId",
											"nameLocation": "4953:21:4",
											"nodeType": "VariableDeclaration",
											"scope": 2046,
											"src": "4945:29:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2044,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4945:7:4",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "KeyValue",
									"nameLocation": "3994:8:4",
									"nodeType": "StructDefinition",
									"scope": 2709,
									"src": "3987:994:4",
									"visibility": "public"
								},
								{
									"canonicalName": "IHederaTokenService.TokenKey",
									"id": 2052,
									"members": [
										{
											"constant": false,
											"id": 2048,
											"mutability": "mutable",
											"name": "keyType",
											"nameLocation": "5489:7:4",
											"nodeType": "VariableDeclaration",
											"scope": 2052,
											"src": "5484:12:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2047,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "5484:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2051,
											"mutability": "mutable",
											"name": "key",
											"nameLocation": "5570:3:4",
											"nodeType": "VariableDeclaration",
											"scope": 2052,
											"src": "5561:12:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_KeyValue_$2046_storage_ptr",
												"typeString": "struct IHederaTokenService.KeyValue"
											},
											"typeName": {
												"id": 2050,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 2049,
													"name": "KeyValue",
													"nameLocations": [
														"5561:8:4"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 2046,
													"src": "5561:8:4"
												},
												"referencedDeclaration": 2046,
												"src": "5561:8:4",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_KeyValue_$2046_storage_ptr",
													"typeString": "struct IHederaTokenService.KeyValue"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenKey",
									"nameLocation": "5082:8:4",
									"nodeType": "StructDefinition",
									"scope": 2709,
									"src": "5075:505:4",
									"visibility": "public"
								},
								{
									"canonicalName": "IHederaTokenService.HederaToken",
									"id": 2074,
									"members": [
										{
											"constant": false,
											"id": 2054,
											"mutability": "mutable",
											"name": "name",
											"nameLocation": "6007:4:4",
											"nodeType": "VariableDeclaration",
											"scope": 2074,
											"src": "6000:11:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 2053,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "6000:6:4",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2056,
											"mutability": "mutable",
											"name": "symbol",
											"nameLocation": "6218:6:4",
											"nodeType": "VariableDeclaration",
											"scope": 2074,
											"src": "6211:13:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 2055,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "6211:6:4",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2058,
											"mutability": "mutable",
											"name": "treasury",
											"nameLocation": "6485:8:4",
											"nodeType": "VariableDeclaration",
											"scope": 2074,
											"src": "6477:16:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2057,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "6477:7:4",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2060,
											"mutability": "mutable",
											"name": "memo",
											"nameLocation": "6588:4:4",
											"nodeType": "VariableDeclaration",
											"scope": 2074,
											"src": "6581:11:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 2059,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "6581:6:4",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2062,
											"mutability": "mutable",
											"name": "tokenSupplyType",
											"nameLocation": "6692:15:4",
											"nodeType": "VariableDeclaration",
											"scope": 2074,
											"src": "6687:20:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2061,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "6687:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2064,
											"mutability": "mutable",
											"name": "maxSupply",
											"nameLocation": "7037:9:4",
											"nodeType": "VariableDeclaration",
											"scope": 2074,
											"src": "7030:16:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 2063,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "7030:6:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2066,
											"mutability": "mutable",
											"name": "freezeDefault",
											"nameLocation": "7243:13:4",
											"nodeType": "VariableDeclaration",
											"scope": 2074,
											"src": "7238:18:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2065,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "7238:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2070,
											"mutability": "mutable",
											"name": "tokenKeys",
											"nameLocation": "7322:9:4",
											"nodeType": "VariableDeclaration",
											"scope": 2074,
											"src": "7311:20:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_TokenKey_$2052_storage_$dyn_storage_ptr",
												"typeString": "struct IHederaTokenService.TokenKey[]"
											},
											"typeName": {
												"baseType": {
													"id": 2068,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2067,
														"name": "TokenKey",
														"nameLocations": [
															"7311:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2052,
														"src": "7311:8:4"
													},
													"referencedDeclaration": 2052,
													"src": "7311:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenKey_$2052_storage_ptr",
														"typeString": "struct IHederaTokenService.TokenKey"
													}
												},
												"id": 2069,
												"nodeType": "ArrayTypeName",
												"src": "7311:10:4",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_TokenKey_$2052_storage_$dyn_storage_ptr",
													"typeString": "struct IHederaTokenService.TokenKey[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2073,
											"mutability": "mutable",
											"name": "expiry",
											"nameLocation": "7440:6:4",
											"nodeType": "VariableDeclaration",
											"scope": 2074,
											"src": "7433:13:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Expiry_$2035_storage_ptr",
												"typeString": "struct IHederaTokenService.Expiry"
											},
											"typeName": {
												"id": 2072,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 2071,
													"name": "Expiry",
													"nameLocations": [
														"7433:6:4"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 2035,
													"src": "7433:6:4"
												},
												"referencedDeclaration": 2035,
												"src": "7433:6:4",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Expiry_$2035_storage_ptr",
													"typeString": "struct IHederaTokenService.Expiry"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "HederaToken",
									"nameLocation": "5786:11:4",
									"nodeType": "StructDefinition",
									"scope": 2709,
									"src": "5779:1674:4",
									"visibility": "public"
								},
								{
									"canonicalName": "IHederaTokenService.TokenInfo",
									"id": 2109,
									"members": [
										{
											"constant": false,
											"id": 2078,
											"mutability": "mutable",
											"name": "hedera",
											"nameLocation": "7617:6:4",
											"nodeType": "VariableDeclaration",
											"scope": 2109,
											"src": "7605:18:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_HederaToken_$2074_storage_ptr",
												"typeString": "struct IHederaTokenService.HederaToken"
											},
											"typeName": {
												"id": 2077,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 2076,
													"name": "HederaToken",
													"nameLocations": [
														"7605:11:4"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 2074,
													"src": "7605:11:4"
												},
												"referencedDeclaration": 2074,
												"src": "7605:11:4",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_HederaToken_$2074_storage_ptr",
													"typeString": "struct IHederaTokenService.HederaToken"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2083,
											"mutability": "mutable",
											"name": "fixedFees",
											"nameLocation": "7710:9:4",
											"nodeType": "VariableDeclaration",
											"scope": 2109,
											"src": "7699:20:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_FixedFee_$2148_storage_$dyn_storage_ptr",
												"typeString": "struct IHederaTokenService.FixedFee[]"
											},
											"typeName": {
												"baseType": {
													"id": 2081,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2080,
														"name": "FixedFee",
														"nameLocations": [
															"7699:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2148,
														"src": "7699:8:4"
													},
													"referencedDeclaration": 2148,
													"src": "7699:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedFee_$2148_storage_ptr",
														"typeString": "struct IHederaTokenService.FixedFee"
													}
												},
												"id": 2082,
												"nodeType": "ArrayTypeName",
												"src": "7699:10:4",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_FixedFee_$2148_storage_$dyn_storage_ptr",
													"typeString": "struct IHederaTokenService.FixedFee[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2088,
											"mutability": "mutable",
											"name": "fractionalFees",
											"nameLocation": "7816:14:4",
											"nodeType": "VariableDeclaration",
											"scope": 2109,
											"src": "7800:30:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_FractionalFee_$2161_storage_$dyn_storage_ptr",
												"typeString": "struct IHederaTokenService.FractionalFee[]"
											},
											"typeName": {
												"baseType": {
													"id": 2086,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2085,
														"name": "FractionalFee",
														"nameLocations": [
															"7800:13:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2161,
														"src": "7800:13:4"
													},
													"referencedDeclaration": 2161,
													"src": "7800:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FractionalFee_$2161_storage_ptr",
														"typeString": "struct IHederaTokenService.FractionalFee"
													}
												},
												"id": 2087,
												"nodeType": "ArrayTypeName",
												"src": "7800:15:4",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_FractionalFee_$2161_storage_$dyn_storage_ptr",
													"typeString": "struct IHederaTokenService.FractionalFee[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2093,
											"mutability": "mutable",
											"name": "royaltyFees",
											"nameLocation": "7921:11:4",
											"nodeType": "VariableDeclaration",
											"scope": 2109,
											"src": "7908:24:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_RoyaltyFee_$2174_storage_$dyn_storage_ptr",
												"typeString": "struct IHederaTokenService.RoyaltyFee[]"
											},
											"typeName": {
												"baseType": {
													"id": 2091,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2090,
														"name": "RoyaltyFee",
														"nameLocations": [
															"7908:10:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2174,
														"src": "7908:10:4"
													},
													"referencedDeclaration": 2174,
													"src": "7908:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RoyaltyFee_$2174_storage_ptr",
														"typeString": "struct IHederaTokenService.RoyaltyFee"
													}
												},
												"id": 2092,
												"nodeType": "ArrayTypeName",
												"src": "7908:12:4",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_RoyaltyFee_$2174_storage_$dyn_storage_ptr",
													"typeString": "struct IHederaTokenService.RoyaltyFee[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2096,
											"mutability": "mutable",
											"name": "defaultKycStatus",
											"nameLocation": "8055:16:4",
											"nodeType": "VariableDeclaration",
											"scope": 2109,
											"src": "8050:21:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2095,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "8050:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2099,
											"mutability": "mutable",
											"name": "deleted",
											"nameLocation": "8145:7:4",
											"nodeType": "VariableDeclaration",
											"scope": 2109,
											"src": "8140:12:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2098,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "8140:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2102,
											"mutability": "mutable",
											"name": "ledgerId",
											"nameLocation": "8211:8:4",
											"nodeType": "VariableDeclaration",
											"scope": 2109,
											"src": "8204:15:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 2101,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "8204:6:4",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2105,
											"mutability": "mutable",
											"name": "pauseStatus",
											"nameLocation": "8302:11:4",
											"nodeType": "VariableDeclaration",
											"scope": 2109,
											"src": "8297:16:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2104,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "8297:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2108,
											"mutability": "mutable",
											"name": "totalSupply",
											"nameLocation": "8414:11:4",
											"nodeType": "VariableDeclaration",
											"scope": 2109,
											"src": "8407:18:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 2107,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "8407:6:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenInfo",
									"nameLocation": "7555:9:4",
									"nodeType": "StructDefinition",
									"scope": 2709,
									"src": "7548:884:4",
									"visibility": "public"
								},
								{
									"canonicalName": "IHederaTokenService.FungibleTokenInfo",
									"id": 2117,
									"members": [
										{
											"constant": false,
											"id": 2113,
											"mutability": "mutable",
											"name": "tokenInfo",
											"nameLocation": "8582:9:4",
											"nodeType": "VariableDeclaration",
											"scope": 2117,
											"src": "8572:19:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_TokenInfo_$2109_storage_ptr",
												"typeString": "struct IHederaTokenService.TokenInfo"
											},
											"typeName": {
												"id": 2112,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 2111,
													"name": "TokenInfo",
													"nameLocations": [
														"8572:9:4"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 2109,
													"src": "8572:9:4"
												},
												"referencedDeclaration": 2109,
												"src": "8572:9:4",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenInfo_$2109_storage_ptr",
													"typeString": "struct IHederaTokenService.TokenInfo"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2116,
											"mutability": "mutable",
											"name": "decimals",
											"nameLocation": "8674:8:4",
											"nodeType": "VariableDeclaration",
											"scope": 2117,
											"src": "8667:15:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 2115,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "8667:6:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "FungibleTokenInfo",
									"nameLocation": "8503:17:4",
									"nodeType": "StructDefinition",
									"scope": 2709,
									"src": "8496:193:4",
									"visibility": "public"
								},
								{
									"canonicalName": "IHederaTokenService.NonFungibleTokenInfo",
									"id": 2137,
									"members": [
										{
											"constant": false,
											"id": 2121,
											"mutability": "mutable",
											"name": "tokenInfo",
											"nameLocation": "8846:9:4",
											"nodeType": "VariableDeclaration",
											"scope": 2137,
											"src": "8836:19:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_TokenInfo_$2109_storage_ptr",
												"typeString": "struct IHederaTokenService.TokenInfo"
											},
											"typeName": {
												"id": 2120,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 2119,
													"name": "TokenInfo",
													"nameLocations": [
														"8836:9:4"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 2109,
													"src": "8836:9:4"
												},
												"referencedDeclaration": 2109,
												"src": "8836:9:4",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenInfo_$2109_storage_ptr",
													"typeString": "struct IHederaTokenService.TokenInfo"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2124,
											"mutability": "mutable",
											"name": "serialNumber",
											"nameLocation": "8913:12:4",
											"nodeType": "VariableDeclaration",
											"scope": 2137,
											"src": "8907:18:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int64",
												"typeString": "int64"
											},
											"typeName": {
												"id": 2123,
												"name": "int64",
												"nodeType": "ElementaryTypeName",
												"src": "8907:5:4",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2127,
											"mutability": "mutable",
											"name": "ownerId",
											"nameLocation": "9018:7:4",
											"nodeType": "VariableDeclaration",
											"scope": 2137,
											"src": "9010:15:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2126,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "9010:7:4",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2130,
											"mutability": "mutable",
											"name": "creationTime",
											"nameLocation": "9103:12:4",
											"nodeType": "VariableDeclaration",
											"scope": 2137,
											"src": "9097:18:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int32",
												"typeString": "int32"
											},
											"typeName": {
												"id": 2129,
												"name": "int32",
												"nodeType": "ElementaryTypeName",
												"src": "9097:5:4",
												"typeDescriptions": {
													"typeIdentifier": "t_int32",
													"typeString": "int32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2133,
											"mutability": "mutable",
											"name": "metadata",
											"nameLocation": "9175:8:4",
											"nodeType": "VariableDeclaration",
											"scope": 2137,
											"src": "9169:14:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 2132,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "9169:5:4",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2136,
											"mutability": "mutable",
											"name": "spenderId",
											"nameLocation": "9306:9:4",
											"nodeType": "VariableDeclaration",
											"scope": 2137,
											"src": "9298:17:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2135,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "9298:7:4",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "NonFungibleTokenInfo",
									"nameLocation": "8764:20:4",
									"nodeType": "StructDefinition",
									"scope": 2709,
									"src": "8757:565:4",
									"visibility": "public"
								},
								{
									"canonicalName": "IHederaTokenService.FixedFee",
									"id": 2148,
									"members": [
										{
											"constant": false,
											"id": 2139,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "9683:6:4",
											"nodeType": "VariableDeclaration",
											"scope": 2148,
											"src": "9676:13:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 2138,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "9676:6:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2141,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "9788:7:4",
											"nodeType": "VariableDeclaration",
											"scope": 2148,
											"src": "9780:15:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2140,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "9780:7:4",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2143,
											"mutability": "mutable",
											"name": "useHbarsForPayment",
											"nameLocation": "9877:18:4",
											"nodeType": "VariableDeclaration",
											"scope": 2148,
											"src": "9872:23:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2142,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "9872:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2145,
											"mutability": "mutable",
											"name": "useCurrentTokenForPayment",
											"nameLocation": "10006:25:4",
											"nodeType": "VariableDeclaration",
											"scope": 2148,
											"src": "10001:30:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2144,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "10001:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2147,
											"mutability": "mutable",
											"name": "feeCollector",
											"nameLocation": "10142:12:4",
											"nodeType": "VariableDeclaration",
											"scope": 2148,
											"src": "10134:20:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2146,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "10134:7:4",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "FixedFee",
									"nameLocation": "9656:8:4",
									"nodeType": "StructDefinition",
									"scope": 2709,
									"src": "9649:512:4",
									"visibility": "public"
								},
								{
									"canonicalName": "IHederaTokenService.FractionalFee",
									"id": 2161,
									"members": [
										{
											"constant": false,
											"id": 2150,
											"mutability": "mutable",
											"name": "numerator",
											"nameLocation": "10614:9:4",
											"nodeType": "VariableDeclaration",
											"scope": 2161,
											"src": "10607:16:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 2149,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "10607:6:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2152,
											"mutability": "mutable",
											"name": "denominator",
											"nameLocation": "10755:11:4",
											"nodeType": "VariableDeclaration",
											"scope": 2161,
											"src": "10748:18:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 2151,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "10748:6:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2154,
											"mutability": "mutable",
											"name": "minimumAmount",
											"nameLocation": "10824:13:4",
											"nodeType": "VariableDeclaration",
											"scope": 2161,
											"src": "10817:20:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 2153,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "10817:6:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2156,
											"mutability": "mutable",
											"name": "maximumAmount",
											"nameLocation": "10921:13:4",
											"nodeType": "VariableDeclaration",
											"scope": 2161,
											"src": "10914:20:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 2155,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "10914:6:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2158,
											"mutability": "mutable",
											"name": "netOfTransfers",
											"nameLocation": "10949:14:4",
											"nodeType": "VariableDeclaration",
											"scope": 2161,
											"src": "10944:19:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2157,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "10944:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2160,
											"mutability": "mutable",
											"name": "feeCollector",
											"nameLocation": "11074:12:4",
											"nodeType": "VariableDeclaration",
											"scope": 2161,
											"src": "11066:20:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2159,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "11066:7:4",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "FractionalFee",
									"nameLocation": "10471:13:4",
									"nodeType": "StructDefinition",
									"scope": 2709,
									"src": "10464:629:4",
									"visibility": "public"
								},
								{
									"canonicalName": "IHederaTokenService.RoyaltyFee",
									"id": 2174,
									"members": [
										{
											"constant": false,
											"id": 2163,
											"mutability": "mutable",
											"name": "numerator",
											"nameLocation": "11724:9:4",
											"nodeType": "VariableDeclaration",
											"scope": 2174,
											"src": "11717:16:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 2162,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "11717:6:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2165,
											"mutability": "mutable",
											"name": "denominator",
											"nameLocation": "11848:11:4",
											"nodeType": "VariableDeclaration",
											"scope": 2174,
											"src": "11841:18:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 2164,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "11841:6:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2167,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "12236:6:4",
											"nodeType": "VariableDeclaration",
											"scope": 2174,
											"src": "12229:13:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 2166,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "12229:6:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2169,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "12260:7:4",
											"nodeType": "VariableDeclaration",
											"scope": 2174,
											"src": "12252:15:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2168,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "12252:7:4",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2171,
											"mutability": "mutable",
											"name": "useHbarsForPayment",
											"nameLocation": "12282:18:4",
											"nodeType": "VariableDeclaration",
											"scope": 2174,
											"src": "12277:23:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2170,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "12277:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2173,
											"mutability": "mutable",
											"name": "feeCollector",
											"nameLocation": "12411:12:4",
											"nodeType": "VariableDeclaration",
											"scope": 2174,
											"src": "12403:20:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2172,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "12403:7:4",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoyaltyFee",
									"nameLocation": "11601:10:4",
									"nodeType": "StructDefinition",
									"scope": 2709,
									"src": "11594:836:4",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 2175,
										"nodeType": "StructuredDocumentation",
										"src": "12522:181:4",
										"text": "Initiates a Token Transfer\n @param tokenTransfers the list of transfers to do\n @return responseCode The response code for the status of the request. SUCCESS is 22."
									},
									"functionSelector": "189a554c",
									"id": 2184,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "cryptoTransfer",
									"nameLocation": "12717:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2179,
												"mutability": "mutable",
												"name": "tokenTransfers",
												"nameLocation": "12759:14:4",
												"nodeType": "VariableDeclaration",
												"scope": 2184,
												"src": "12732:41:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_TokenTransferList_$2028_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IHederaTokenService.TokenTransferList[]"
												},
												"typeName": {
													"baseType": {
														"id": 2177,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 2176,
															"name": "TokenTransferList",
															"nameLocations": [
																"12732:17:4"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 2028,
															"src": "12732:17:4"
														},
														"referencedDeclaration": 2028,
														"src": "12732:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenTransferList_$2028_storage_ptr",
															"typeString": "struct IHederaTokenService.TokenTransferList"
														}
													},
													"id": 2178,
													"nodeType": "ArrayTypeName",
													"src": "12732:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_TokenTransferList_$2028_storage_$dyn_storage_ptr",
														"typeString": "struct IHederaTokenService.TokenTransferList[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12731:43:4"
									},
									"returnParameters": {
										"id": 2183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2182,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "12815:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 2184,
												"src": "12809:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 2181,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "12809:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12808:20:4"
									},
									"scope": 2709,
									"src": "12708:121:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2185,
										"nodeType": "StructuredDocumentation",
										"src": "12835:984:4",
										"text": "Mints an amount of the token to the defined treasury account\n @param token The token for which to mint tokens. If token does not exist, transaction results in\n              INVALID_TOKEN_ID\n @param amount Applicable to tokens of type FUNGIBLE_COMMON. The amount to mint to the Treasury Account.\n               Amount must be a positive non-zero number represented in the lowest denomination of the\n               token. The new supply must be lower than 2^63.\n @param metadata Applicable to tokens of type NON_FUNGIBLE_UNIQUE. A list of metadata that are being created.\n                 Maximum allowed size of each metadata is 100 bytes\n @return responseCode The response code for the status of the request. SUCCESS is 22.\n @return newTotalSupply The new supply of tokens. For NFTs it is the total count of NFTs\n @return serialNumbers If the token is an NFT the newly generate serial numbers, othersise empty."
									},
									"functionSelector": "278e0b88",
									"id": 2202,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mintToken",
									"nameLocation": "13833:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2187,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "13860:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 2202,
												"src": "13852:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2186,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13852:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2189,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "13882:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 2202,
												"src": "13875:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 2188,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "13875:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2192,
												"mutability": "mutable",
												"name": "metadata",
												"nameLocation": "13913:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 2202,
												"src": "13898:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
													"typeString": "bytes[]"
												},
												"typeName": {
													"baseType": {
														"id": 2190,
														"name": "bytes",
														"nodeType": "ElementaryTypeName",
														"src": "13898:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage_ptr",
															"typeString": "bytes"
														}
													},
													"id": 2191,
													"nodeType": "ArrayTypeName",
													"src": "13898:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
														"typeString": "bytes[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13842:85:4"
									},
									"returnParameters": {
										"id": 2201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2195,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "13981:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 2202,
												"src": "13975:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 2194,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "13975:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2197,
												"mutability": "mutable",
												"name": "newTotalSupply",
												"nameLocation": "14014:14:4",
												"nodeType": "VariableDeclaration",
												"scope": 2202,
												"src": "14007:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 2196,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "14007:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2200,
												"mutability": "mutable",
												"name": "serialNumbers",
												"nameLocation": "14057:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 2202,
												"src": "14042:28:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_int64_$dyn_memory_ptr",
													"typeString": "int64[]"
												},
												"typeName": {
													"baseType": {
														"id": 2198,
														"name": "int64",
														"nodeType": "ElementaryTypeName",
														"src": "14042:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_int64",
															"typeString": "int64"
														}
													},
													"id": 2199,
													"nodeType": "ArrayTypeName",
													"src": "14042:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_int64_$dyn_storage_ptr",
														"typeString": "int64[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13961:119:4"
									},
									"scope": 2709,
									"src": "13824:257:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2203,
										"nodeType": "StructuredDocumentation",
										"src": "14087:834:4",
										"text": "Burns an amount of the token from the defined treasury account\n @param token The token for which to burn tokens. If token does not exist, transaction results in\n              INVALID_TOKEN_ID\n @param amount  Applicable to tokens of type FUNGIBLE_COMMON. The amount to burn from the Treasury Account.\n                Amount must be a positive non-zero number, not bigger than the token balance of the treasury\n                account (0; balance], represented in the lowest denomination.\n @param serialNumbers Applicable to tokens of type NON_FUNGIBLE_UNIQUE. The list of serial numbers to be burned.\n @return responseCode The response code for the status of the request. SUCCESS is 22.\n @return newTotalSupply The new supply of tokens. For NFTs it is the total count of NFTs"
									},
									"functionSelector": "acb9cff9",
									"id": 2217,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burnToken",
									"nameLocation": "14935:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2205,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "14962:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 2217,
												"src": "14954:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14954:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2207,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "14984:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 2217,
												"src": "14977:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 2206,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "14977:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2210,
												"mutability": "mutable",
												"name": "serialNumbers",
												"nameLocation": "15015:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 2217,
												"src": "15000:28:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_int64_$dyn_memory_ptr",
													"typeString": "int64[]"
												},
												"typeName": {
													"baseType": {
														"id": 2208,
														"name": "int64",
														"nodeType": "ElementaryTypeName",
														"src": "15000:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_int64",
															"typeString": "int64"
														}
													},
													"id": 2209,
													"nodeType": "ArrayTypeName",
													"src": "15000:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_int64_$dyn_storage_ptr",
														"typeString": "int64[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14944:90:4"
									},
									"returnParameters": {
										"id": 2216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2213,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "15059:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 2217,
												"src": "15053:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 2212,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "15053:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2215,
												"mutability": "mutable",
												"name": "newTotalSupply",
												"nameLocation": "15080:14:4",
												"nodeType": "VariableDeclaration",
												"scope": 2217,
												"src": "15073:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 2214,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "15073:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15052:43:4"
									},
									"scope": 2709,
									"src": "14926:170:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2218,
										"nodeType": "StructuredDocumentation",
										"src": "15102:1515:4",
										"text": "Associates the provided account with the provided tokens. Must be signed by the provided\n  Account's key or called from the accounts contract key\n  If the provided account is not found, the transaction will resolve to INVALID_ACCOUNT_ID.\n  If the provided account has been deleted, the transaction will resolve to ACCOUNT_DELETED.\n  If any of the provided tokens is not found, the transaction will resolve to INVALID_TOKEN_REF.\n  If any of the provided tokens has been deleted, the transaction will resolve to TOKEN_WAS_DELETED.\n  If an association between the provided account and any of the tokens already exists, the\n  transaction will resolve to TOKEN_ALREADY_ASSOCIATED_TO_ACCOUNT.\n  If the provided account's associations count exceed the constraint of maximum token associations\n    per account, the transaction will resolve to TOKENS_PER_ACCOUNT_LIMIT_EXCEEDED.\n  On success, associations between the provided account and tokens are made and the account is\n    ready to interact with the tokens.\n @param account The account to be associated with the provided tokens\n @param tokens The tokens to be associated with the provided account. In the case of NON_FUNGIBLE_UNIQUE\n               Type, once an account is associated, it can hold any number of NFTs (serial numbers) of that\n               token type\n @return responseCode The response code for the status of the request. SUCCESS is 22."
									},
									"functionSelector": "2e63879b",
									"id": 2228,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "associateTokens",
									"nameLocation": "16631:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2220,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "16655:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 2228,
												"src": "16647:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16647:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2223,
												"mutability": "mutable",
												"name": "tokens",
												"nameLocation": "16681:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 2228,
												"src": "16664:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2221,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "16664:7:4",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2222,
													"nodeType": "ArrayTypeName",
													"src": "16664:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16646:42:4"
									},
									"returnParameters": {
										"id": 2227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2226,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "16729:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 2228,
												"src": "16723:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 2225,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "16723:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16722:20:4"
									},
									"scope": 2709,
									"src": "16622:121:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2229,
										"nodeType": "StructuredDocumentation",
										"src": "16749:257:4",
										"text": "Single-token variant of associateTokens. Will be mapped to a single entry array call of associateTokens\n @param account The account to be associated with the provided token\n @param token The token to be associated with the provided account"
									},
									"functionSelector": "49146bde",
									"id": 2238,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "associateToken",
									"nameLocation": "17020:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2231,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "17043:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 2238,
												"src": "17035:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17035:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2233,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "17060:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 2238,
												"src": "17052:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17052:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17034:32:4"
									},
									"returnParameters": {
										"id": 2237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2236,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "17107:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 2238,
												"src": "17101:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 2235,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "17101:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17100:20:4"
									},
									"scope": 2709,
									"src": "17011:110:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2239,
										"nodeType": "StructuredDocumentation",
										"src": "17127:1533:4",
										"text": "Dissociates the provided account with the provided tokens. Must be signed by the provided\n Account's key.\n If the provided account is not found, the transaction will resolve to INVALID_ACCOUNT_ID.\n If the provided account has been deleted, the transaction will resolve to ACCOUNT_DELETED.\n If any of the provided tokens is not found, the transaction will resolve to INVALID_TOKEN_REF.\n If any of the provided tokens has been deleted, the transaction will resolve to TOKEN_WAS_DELETED.\n If an association between the provided account and any of the tokens does not exist, the\n transaction will resolve to TOKEN_NOT_ASSOCIATED_TO_ACCOUNT.\n If a token has not been deleted and has not expired, and the user has a nonzero balance, the\n transaction will resolve to TRANSACTION_REQUIRES_ZERO_TOKEN_BALANCES.\n If a <b>fungible token</b> has expired, the user can disassociate even if their token balance is\n not zero.\n If a <b>non fungible token</b> has expired, the user can <b>not</b> disassociate if their token\n balance is not zero. The transaction will resolve to TRANSACTION_REQUIRED_ZERO_TOKEN_BALANCES.\n On success, associations between the provided account and tokens are removed.\n @param account The account to be dissociated from the provided tokens\n @param tokens The tokens to be dissociated from the provided account.\n @return responseCode The response code for the status of the request. SUCCESS is 22."
									},
									"functionSelector": "78b63918",
									"id": 2249,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "dissociateTokens",
									"nameLocation": "18674:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2241,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "18699:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 2249,
												"src": "18691:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18691:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2244,
												"mutability": "mutable",
												"name": "tokens",
												"nameLocation": "18725:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 2249,
												"src": "18708:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2242,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "18708:7:4",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2243,
													"nodeType": "ArrayTypeName",
													"src": "18708:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18690:42:4"
									},
									"returnParameters": {
										"id": 2248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2247,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "18773:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 2249,
												"src": "18767:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 2246,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "18767:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18766:20:4"
									},
									"scope": 2709,
									"src": "18665:122:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2250,
										"nodeType": "StructuredDocumentation",
										"src": "18793:259:4",
										"text": "Single-token variant of dissociateTokens. Will be mapped to a single entry array call of dissociateTokens\n @param account The account to be associated with the provided token\n @param token The token to be associated with the provided account"
									},
									"functionSelector": "099794e8",
									"id": 2259,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "dissociateToken",
									"nameLocation": "19066:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2252,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "19090:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 2259,
												"src": "19082:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19082:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2254,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "19107:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 2259,
												"src": "19099:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19099:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19081:32:4"
									},
									"returnParameters": {
										"id": 2258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2257,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "19154:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 2259,
												"src": "19148:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 2256,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "19148:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19147:20:4"
									},
									"scope": 2709,
									"src": "19057:111:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2260,
										"nodeType": "StructuredDocumentation",
										"src": "19174:564:4",
										"text": "Creates a Fungible Token with the specified properties\n @param token the basic properties of the token being created\n @param initialTotalSupply Specifies the initial supply of tokens to be put in circulation. The\n initial supply is sent to the Treasury Account. The supply is in the lowest denomination possible.\n @param decimals the number of decimal places a token is divisible by\n @return responseCode The response code for the status of the request. SUCCESS is 22.\n @return tokenAddress the created token's address"
									},
									"functionSelector": "7812a04b",
									"id": 2274,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createFungibleToken",
									"nameLocation": "19752:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2263,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "19800:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 2274,
												"src": "19781:24:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_HederaToken_$2074_memory_ptr",
													"typeString": "struct IHederaTokenService.HederaToken"
												},
												"typeName": {
													"id": 2262,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2261,
														"name": "HederaToken",
														"nameLocations": [
															"19781:11:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2074,
														"src": "19781:11:4"
													},
													"referencedDeclaration": 2074,
													"src": "19781:11:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_HederaToken_$2074_storage_ptr",
														"typeString": "struct IHederaTokenService.HederaToken"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2265,
												"mutability": "mutable",
												"name": "initialTotalSupply",
												"nameLocation": "19820:18:4",
												"nodeType": "VariableDeclaration",
												"scope": 2274,
												"src": "19815:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2264,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "19815:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2267,
												"mutability": "mutable",
												"name": "decimals",
												"nameLocation": "19853:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 2274,
												"src": "19848:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2266,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "19848:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19771:96:4"
									},
									"returnParameters": {
										"id": 2273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2270,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "19900:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 2274,
												"src": "19894:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 2269,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "19894:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2272,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nameLocation": "19922:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 2274,
												"src": "19914:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19914:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19893:42:4"
									},
									"scope": 2709,
									"src": "19743:193:4",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2275,
										"nodeType": "StructuredDocumentation",
										"src": "19942:707:4",
										"text": "Creates a Fungible Token with the specified properties\n @param token the basic properties of the token being created\n @param initialTotalSupply Specifies the initial supply of tokens to be put in circulation. The\n initial supply is sent to the Treasury Account. The supply is in the lowest denomination possible.\n @param decimals the number of decimal places a token is divisible by.\n @param fixedFees list of fixed fees to apply to the token\n @param fractionalFees list of fractional fees to apply to the token\n @return responseCode The response code for the status of the request. SUCCESS is 22.\n @return tokenAddress the created token's address"
									},
									"functionSelector": "4c381ae7",
									"id": 2297,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createFungibleTokenWithCustomFees",
									"nameLocation": "20663:33:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2278,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "20725:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 2297,
												"src": "20706:24:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_HederaToken_$2074_memory_ptr",
													"typeString": "struct IHederaTokenService.HederaToken"
												},
												"typeName": {
													"id": 2277,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2276,
														"name": "HederaToken",
														"nameLocations": [
															"20706:11:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2074,
														"src": "20706:11:4"
													},
													"referencedDeclaration": 2074,
													"src": "20706:11:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_HederaToken_$2074_storage_ptr",
														"typeString": "struct IHederaTokenService.HederaToken"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2280,
												"mutability": "mutable",
												"name": "initialTotalSupply",
												"nameLocation": "20745:18:4",
												"nodeType": "VariableDeclaration",
												"scope": 2297,
												"src": "20740:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2279,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "20740:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2282,
												"mutability": "mutable",
												"name": "decimals",
												"nameLocation": "20778:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 2297,
												"src": "20773:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2281,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "20773:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2286,
												"mutability": "mutable",
												"name": "fixedFees",
												"nameLocation": "20814:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 2297,
												"src": "20796:27:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_FixedFee_$2148_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IHederaTokenService.FixedFee[]"
												},
												"typeName": {
													"baseType": {
														"id": 2284,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 2283,
															"name": "FixedFee",
															"nameLocations": [
																"20796:8:4"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 2148,
															"src": "20796:8:4"
														},
														"referencedDeclaration": 2148,
														"src": "20796:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FixedFee_$2148_storage_ptr",
															"typeString": "struct IHederaTokenService.FixedFee"
														}
													},
													"id": 2285,
													"nodeType": "ArrayTypeName",
													"src": "20796:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_FixedFee_$2148_storage_$dyn_storage_ptr",
														"typeString": "struct IHederaTokenService.FixedFee[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2290,
												"mutability": "mutable",
												"name": "fractionalFees",
												"nameLocation": "20856:14:4",
												"nodeType": "VariableDeclaration",
												"scope": 2297,
												"src": "20833:37:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_FractionalFee_$2161_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IHederaTokenService.FractionalFee[]"
												},
												"typeName": {
													"baseType": {
														"id": 2288,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 2287,
															"name": "FractionalFee",
															"nameLocations": [
																"20833:13:4"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 2161,
															"src": "20833:13:4"
														},
														"referencedDeclaration": 2161,
														"src": "20833:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FractionalFee_$2161_storage_ptr",
															"typeString": "struct IHederaTokenService.FractionalFee"
														}
													},
													"id": 2289,
													"nodeType": "ArrayTypeName",
													"src": "20833:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_FractionalFee_$2161_storage_$dyn_storage_ptr",
														"typeString": "struct IHederaTokenService.FractionalFee[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20696:180:4"
									},
									"returnParameters": {
										"id": 2296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2293,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "20909:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 2297,
												"src": "20903:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 2292,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "20903:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2295,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nameLocation": "20931:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 2297,
												"src": "20923:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20923:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20902:42:4"
									},
									"scope": 2709,
									"src": "20654:291:4",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2298,
										"nodeType": "StructuredDocumentation",
										"src": "20951:289:4",
										"text": "Creates an Non Fungible Unique Token with the specified properties\n @param token the basic properties of the token being created\n @return responseCode The response code for the status of the request. SUCCESS is 22.\n @return tokenAddress the created token's address"
									},
									"functionSelector": "9dc711e0",
									"id": 2308,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createNonFungibleToken",
									"nameLocation": "21254:22:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2301,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "21296:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 2308,
												"src": "21277:24:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_HederaToken_$2074_memory_ptr",
													"typeString": "struct IHederaTokenService.HederaToken"
												},
												"typeName": {
													"id": 2300,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2299,
														"name": "HederaToken",
														"nameLocations": [
															"21277:11:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2074,
														"src": "21277:11:4"
													},
													"referencedDeclaration": 2074,
													"src": "21277:11:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_HederaToken_$2074_storage_ptr",
														"typeString": "struct IHederaTokenService.HederaToken"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21276:26:4"
									},
									"returnParameters": {
										"id": 2307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2304,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "21359:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 2308,
												"src": "21353:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 2303,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "21353:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2306,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nameLocation": "21381:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 2308,
												"src": "21373:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21373:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21352:42:4"
									},
									"scope": 2709,
									"src": "21245:150:4",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2309,
										"nodeType": "StructuredDocumentation",
										"src": "21401:425:4",
										"text": "Creates an Non Fungible Unique Token with the specified properties\n @param token the basic properties of the token being created\n @param fixedFees list of fixed fees to apply to the token\n @param royaltyFees list of royalty fees to apply to the token\n @return responseCode The response code for the status of the request. SUCCESS is 22.\n @return tokenAddress the created token's address"
									},
									"functionSelector": "5bc7c0e6",
									"id": 2327,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createNonFungibleTokenWithCustomFees",
									"nameLocation": "21840:36:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2312,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "21905:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 2327,
												"src": "21886:24:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_HederaToken_$2074_memory_ptr",
													"typeString": "struct IHederaTokenService.HederaToken"
												},
												"typeName": {
													"id": 2311,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2310,
														"name": "HederaToken",
														"nameLocations": [
															"21886:11:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2074,
														"src": "21886:11:4"
													},
													"referencedDeclaration": 2074,
													"src": "21886:11:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_HederaToken_$2074_storage_ptr",
														"typeString": "struct IHederaTokenService.HederaToken"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2316,
												"mutability": "mutable",
												"name": "fixedFees",
												"nameLocation": "21938:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 2327,
												"src": "21920:27:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_FixedFee_$2148_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IHederaTokenService.FixedFee[]"
												},
												"typeName": {
													"baseType": {
														"id": 2314,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 2313,
															"name": "FixedFee",
															"nameLocations": [
																"21920:8:4"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 2148,
															"src": "21920:8:4"
														},
														"referencedDeclaration": 2148,
														"src": "21920:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FixedFee_$2148_storage_ptr",
															"typeString": "struct IHederaTokenService.FixedFee"
														}
													},
													"id": 2315,
													"nodeType": "ArrayTypeName",
													"src": "21920:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_FixedFee_$2148_storage_$dyn_storage_ptr",
														"typeString": "struct IHederaTokenService.FixedFee[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2320,
												"mutability": "mutable",
												"name": "royaltyFees",
												"nameLocation": "21977:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 2327,
												"src": "21957:31:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_RoyaltyFee_$2174_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IHederaTokenService.RoyaltyFee[]"
												},
												"typeName": {
													"baseType": {
														"id": 2318,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 2317,
															"name": "RoyaltyFee",
															"nameLocations": [
																"21957:10:4"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 2174,
															"src": "21957:10:4"
														},
														"referencedDeclaration": 2174,
														"src": "21957:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoyaltyFee_$2174_storage_ptr",
															"typeString": "struct IHederaTokenService.RoyaltyFee"
														}
													},
													"id": 2319,
													"nodeType": "ArrayTypeName",
													"src": "21957:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_RoyaltyFee_$2174_storage_$dyn_storage_ptr",
														"typeString": "struct IHederaTokenService.RoyaltyFee[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21876:118:4"
									},
									"returnParameters": {
										"id": 2326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2323,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "22027:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 2327,
												"src": "22021:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 2322,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "22021:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2325,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nameLocation": "22049:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 2327,
												"src": "22041:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22041:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22020:42:4"
									},
									"scope": 2709,
									"src": "21831:232:4",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2328,
										"nodeType": "StructuredDocumentation",
										"src": "22155:230:4",
										"text": "Initiates a Fungible Token Transfer\n @param token The ID of the token as a solidity address\n @param accountId account to do a transfer to/from\n @param amount The amount from the accountId at the same index"
									},
									"functionSelector": "82bba493",
									"id": 2341,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferTokens",
									"nameLocation": "22399:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2330,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "22431:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 2341,
												"src": "22423:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22423:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2333,
												"mutability": "mutable",
												"name": "accountId",
												"nameLocation": "22463:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 2341,
												"src": "22446:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2331,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "22446:7:4",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2332,
													"nodeType": "ArrayTypeName",
													"src": "22446:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2336,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "22497:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 2341,
												"src": "22482:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_int64_$dyn_memory_ptr",
													"typeString": "int64[]"
												},
												"typeName": {
													"baseType": {
														"id": 2334,
														"name": "int64",
														"nodeType": "ElementaryTypeName",
														"src": "22482:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_int64",
															"typeString": "int64"
														}
													},
													"id": 2335,
													"nodeType": "ArrayTypeName",
													"src": "22482:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_int64_$dyn_storage_ptr",
														"typeString": "int64[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22413:96:4"
									},
									"returnParameters": {
										"id": 2340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2339,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "22534:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 2341,
												"src": "22528:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 2338,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "22528:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22527:20:4"
									},
									"scope": 2709,
									"src": "22390:158:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2342,
										"nodeType": "StructuredDocumentation",
										"src": "22554:320:4",
										"text": "Initiates a Non-Fungable Token Transfer\n @param token The ID of the token as a solidity address\n @param sender the sender of an nft\n @param receiver the receiver of the nft sent by the same index at sender\n @param serialNumber the serial number of the nft sent by the same index at sender"
									},
									"functionSelector": "2c4ba191",
									"id": 2358,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferNFTs",
									"nameLocation": "22888:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2344,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "22918:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 2358,
												"src": "22910:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22910:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2347,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "22950:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 2358,
												"src": "22933:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2345,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "22933:7:4",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2346,
													"nodeType": "ArrayTypeName",
													"src": "22933:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2350,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "22983:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 2358,
												"src": "22966:25:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2348,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "22966:7:4",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2349,
													"nodeType": "ArrayTypeName",
													"src": "22966:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2353,
												"mutability": "mutable",
												"name": "serialNumber",
												"nameLocation": "23016:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 2358,
												"src": "23001:27:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_int64_$dyn_memory_ptr",
													"typeString": "int64[]"
												},
												"typeName": {
													"baseType": {
														"id": 2351,
														"name": "int64",
														"nodeType": "ElementaryTypeName",
														"src": "23001:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_int64",
															"typeString": "int64"
														}
													},
													"id": 2352,
													"nodeType": "ArrayTypeName",
													"src": "23001:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_int64_$dyn_storage_ptr",
														"typeString": "int64[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22900:134:4"
									},
									"returnParameters": {
										"id": 2357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2356,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "23059:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 2358,
												"src": "23053:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 2355,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "23053:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23052:20:4"
									},
									"scope": 2709,
									"src": "22879:194:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2359,
										"nodeType": "StructuredDocumentation",
										"src": "23079:540:4",
										"text": "Transfers tokens where the calling account/contract is implicitly the first entry in the token transfer list,\n where the amount is the value needed to zero balance the transfers. Regular signing rules apply for sending\n (positive amount) or receiving (negative amount)\n @param token The token to transfer to/from\n @param sender The sender for the transaction\n @param recipient The receiver of the transaction\n @param amount Non-negative value to send. a negative value will result in a failure."
									},
									"functionSelector": "eca36917",
									"id": 2372,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferToken",
									"nameLocation": "23633:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2361,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "23664:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 2372,
												"src": "23656:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2360,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23656:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2363,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "23687:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 2372,
												"src": "23679:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2362,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23679:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2365,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "23711:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 2372,
												"src": "23703:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2364,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23703:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2367,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "23736:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 2372,
												"src": "23730:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 2366,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "23730:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23646:102:4"
									},
									"returnParameters": {
										"id": 2371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2370,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "23773:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 2372,
												"src": "23767:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 2369,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "23767:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23766:20:4"
									},
									"scope": 2709,
									"src": "23624:163:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2373,
										"nodeType": "StructuredDocumentation",
										"src": "23793:517:4",
										"text": "Transfers tokens where the calling account/contract is implicitly the first entry in the token transfer list,\n where the amount is the value needed to zero balance the transfers. Regular signing rules apply for sending\n (positive amount) or receiving (negative amount)\n @param token The token to transfer to/from\n @param sender The sender for the transaction\n @param recipient The receiver of the transaction\n @param serialNumber The serial number of the NFT to transfer."
									},
									"functionSelector": "5cfc9011",
									"id": 2386,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferNFT",
									"nameLocation": "24324:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2375,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "24353:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 2386,
												"src": "24345:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24345:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2377,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "24376:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 2386,
												"src": "24368:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2376,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24368:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2379,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "24400:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 2386,
												"src": "24392:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2378,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24392:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2381,
												"mutability": "mutable",
												"name": "serialNumber",
												"nameLocation": "24425:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 2386,
												"src": "24419:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 2380,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "24419:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24335:108:4"
									},
									"returnParameters": {
										"id": 2385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2384,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "24468:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 2386,
												"src": "24462:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 2383,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "24462:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24461:20:4"
									},
									"scope": 2709,
									"src": "24315:167:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2387,
										"nodeType": "StructuredDocumentation",
										"src": "24488:497:4",
										"text": "Allows spender to withdraw from your account multiple times, up to the value amount. If this function is called\n again it overwrites the current allowance with value.\n Only Applicable to Fungible Tokens\n @param token The hedera token address to approve\n @param spender the account address authorized to spend\n @param amount the amount of tokens authorized to spend.\n @return responseCode The response code for the status of the request. SUCCESS is 22."
									},
									"functionSelector": "e1f21c67",
									"id": 2398,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "24999:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2389,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "25024:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 2398,
												"src": "25016:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2388,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25016:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2391,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "25047:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 2398,
												"src": "25039:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2390,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25039:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2393,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "25072:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 2398,
												"src": "25064:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2392,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25064:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25006:78:4"
									},
									"returnParameters": {
										"id": 2397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2396,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "25109:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 2398,
												"src": "25103:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 2395,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "25103:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25102:20:4"
									},
									"scope": 2709,
									"src": "24990:133:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2399,
										"nodeType": "StructuredDocumentation",
										"src": "25129:483:4",
										"text": "Returns the amount which spender is still allowed to withdraw from owner.\n Only Applicable to Fungible Tokens\n @param token The Hedera token address to check the allowance of\n @param owner the owner of the tokens to be spent\n @param spender the spender of the tokens\n @return responseCode The response code for the status of the request. SUCCESS is 22.\n @return allowance The amount which spender is still allowed to withdraw from owner."
									},
									"functionSelector": "927da105",
									"id": 2412,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "25626:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2401,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "25653:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 2412,
												"src": "25645:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2400,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25645:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2403,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "25676:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 2412,
												"src": "25668:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2402,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25668:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2405,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "25699:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 2412,
												"src": "25691:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2404,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25691:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25635:77:4"
									},
									"returnParameters": {
										"id": 2411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2408,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "25737:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 2412,
												"src": "25731:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 2407,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "25731:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2410,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "25759:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 2412,
												"src": "25751:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2409,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25751:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25730:39:4"
									},
									"scope": 2709,
									"src": "25617:153:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2413,
										"nodeType": "StructuredDocumentation",
										"src": "25776:454:4",
										"text": "Allow or reaffirm the approved address to transfer an NFT the approved address does not own.\n Only Applicable to NFT Tokens\n @param token The Hedera NFT token address to approve\n @param approved The new approved NFT controller.  To revoke approvals pass in the zero address.\n @param serialNumber The NFT serial number  to approve\n @return responseCode The response code for the status of the request. SUCCESS is 22."
									},
									"functionSelector": "10585c46",
									"id": 2424,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveNFT",
									"nameLocation": "26244:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2415,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "26272:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 2424,
												"src": "26264:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2414,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26264:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2417,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "26295:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 2424,
												"src": "26287:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26287:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2419,
												"mutability": "mutable",
												"name": "serialNumber",
												"nameLocation": "26319:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 2424,
												"src": "26313:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 2418,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "26313:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26254:83:4"
									},
									"returnParameters": {
										"id": 2423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2422,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "26362:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 2424,
												"src": "26356:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 2421,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "26356:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26355:20:4"
									},
									"scope": 2709,
									"src": "26235:141:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2425,
										"nodeType": "StructuredDocumentation",
										"src": "26382:410:4",
										"text": "Get the approved address for a single NFT\n Only Applicable to NFT Tokens\n @param token The Hedera NFT token address to check approval\n @param serialNumber The NFT to find the approved address for\n @return responseCode The response code for the status of the request. SUCCESS is 22.\n @return approved The approved address for this NFT, or the zero address if there is none"
									},
									"functionSelector": "01b2194b",
									"id": 2436,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "26806:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2427,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "26826:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 2436,
												"src": "26818:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26818:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2429,
												"mutability": "mutable",
												"name": "serialNumber",
												"nameLocation": "26839:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 2436,
												"src": "26833:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 2428,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "26833:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26817:35:4"
									},
									"returnParameters": {
										"id": 2435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2432,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "26893:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 2436,
												"src": "26887:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 2431,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "26887:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2434,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "26915:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 2436,
												"src": "26907:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26907:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26886:38:4"
									},
									"scope": 2709,
									"src": "26797:128:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2437,
										"nodeType": "StructuredDocumentation",
										"src": "26931:420:4",
										"text": "Enable or disable approval for a third party (\"operator\") to manage\n  all of `msg.sender`'s assets\n @param token The Hedera NFT token address to approve\n @param operator Address to add to the set of authorized operators\n @param approved True if the operator is approved, false to revoke approval\n @return responseCode The response code for the status of the request. SUCCESS is 22."
									},
									"functionSelector": "367605ca",
									"id": 2448,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "27365:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2439,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "27400:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 2448,
												"src": "27392:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2438,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27392:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2441,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "27423:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 2448,
												"src": "27415:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2440,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27415:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2443,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "27446:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 2448,
												"src": "27441:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2442,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "27441:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27382:78:4"
									},
									"returnParameters": {
										"id": 2447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2446,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "27485:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 2448,
												"src": "27479:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 2445,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "27479:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27478:20:4"
									},
									"scope": 2709,
									"src": "27356:143:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2449,
										"nodeType": "StructuredDocumentation",
										"src": "27505:479:4",
										"text": "Query if an address is an authorized operator for another address\n Only Applicable to NFT Tokens\n @param token The Hedera NFT token address to approve\n @param owner The address that owns the NFTs\n @param operator The address that acts on behalf of the owner\n @return responseCode The response code for the status of the request. SUCCESS is 22.\n @return approved True if `operator` is an approved operator for `owner`, false otherwise"
									},
									"functionSelector": "f49f40db",
									"id": 2462,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "27998:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2451,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "28032:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 2462,
												"src": "28024:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28024:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2453,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "28055:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 2462,
												"src": "28047:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28047:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2455,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "28078:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 2462,
												"src": "28070:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28070:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28014:78:4"
									},
									"returnParameters": {
										"id": 2461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2458,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "28117:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 2462,
												"src": "28111:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 2457,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "28111:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2460,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "28136:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 2462,
												"src": "28131:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "28131:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28110:35:4"
									},
									"scope": 2709,
									"src": "27989:157:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2463,
										"nodeType": "StructuredDocumentation",
										"src": "28152:309:4",
										"text": "Query if token account is frozen\n @param token The token address to check\n @param account The account address associated with the token\n @return responseCode The response code for the status of the request. SUCCESS is 22.\n @return frozen True if `account` is frozen for `token`"
									},
									"functionSelector": "46de0fb1",
									"id": 2474,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isFrozen",
									"nameLocation": "28475:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2465,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "28492:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 2474,
												"src": "28484:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2464,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28484:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2467,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "28507:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 2474,
												"src": "28499:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2466,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28499:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28483:32:4"
									},
									"returnParameters": {
										"id": 2473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2470,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "28556:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 2474,
												"src": "28550:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 2469,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "28550:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2472,
												"mutability": "mutable",
												"name": "frozen",
												"nameLocation": "28575:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 2474,
												"src": "28570:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2471,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "28570:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28549:33:4"
									},
									"scope": 2709,
									"src": "28466:117:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2475,
										"nodeType": "StructuredDocumentation",
										"src": "28589:325:4",
										"text": "Query if token account has kyc granted\n @param token The token address to check\n @param account The account address associated with the token\n @return responseCode The response code for the status of the request. SUCCESS is 22.\n @return kycGranted True if `account` has kyc granted for `token`"
									},
									"functionSelector": "f2c31ff4",
									"id": 2486,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isKyc",
									"nameLocation": "28928:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2477,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "28942:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 2486,
												"src": "28934:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28934:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2479,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "28957:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 2486,
												"src": "28949:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28949:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28933:32:4"
									},
									"returnParameters": {
										"id": 2485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2482,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "29006:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 2486,
												"src": "29000:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 2481,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "29000:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2484,
												"mutability": "mutable",
												"name": "kycGranted",
												"nameLocation": "29025:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 2486,
												"src": "29020:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2483,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "29020:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28999:37:4"
									},
									"scope": 2709,
									"src": "28919:118:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2487,
										"nodeType": "StructuredDocumentation",
										"src": "29043:175:4",
										"text": "Operation to delete token\n @param token The token address to be deleted\n @return responseCode The response code for the status of the request. SUCCESS is 22."
									},
									"functionSelector": "f069f712",
									"id": 2494,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deleteToken",
									"nameLocation": "29232:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2489,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "29252:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 2494,
												"src": "29244:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2488,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29244:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29243:15:4"
									},
									"returnParameters": {
										"id": 2493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2492,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "29283:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 2494,
												"src": "29277:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 2491,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "29277:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29276:20:4"
									},
									"scope": 2709,
									"src": "29223:74:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2495,
										"nodeType": "StructuredDocumentation",
										"src": "29303:350:4",
										"text": "Query token custom fees\n @param token The token address to check\n @return responseCode The response code for the status of the request. SUCCESS is 22.\n @return fixedFees Set of fixed fees for `token`\n @return fractionalFees Set of fractional fees for `token`\n @return royaltyFees Set of royalty fees for `token`"
									},
									"functionSelector": "ae7611a0",
									"id": 2514,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenCustomFees",
									"nameLocation": "29667:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2497,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "29694:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 2514,
												"src": "29686:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2496,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29686:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29685:15:4"
									},
									"returnParameters": {
										"id": 2513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2500,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "29741:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 2514,
												"src": "29735:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 2499,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "29735:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2504,
												"mutability": "mutable",
												"name": "fixedFees",
												"nameLocation": "29773:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 2514,
												"src": "29755:27:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_FixedFee_$2148_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IHederaTokenService.FixedFee[]"
												},
												"typeName": {
													"baseType": {
														"id": 2502,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 2501,
															"name": "FixedFee",
															"nameLocations": [
																"29755:8:4"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 2148,
															"src": "29755:8:4"
														},
														"referencedDeclaration": 2148,
														"src": "29755:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FixedFee_$2148_storage_ptr",
															"typeString": "struct IHederaTokenService.FixedFee"
														}
													},
													"id": 2503,
													"nodeType": "ArrayTypeName",
													"src": "29755:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_FixedFee_$2148_storage_$dyn_storage_ptr",
														"typeString": "struct IHederaTokenService.FixedFee[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2508,
												"mutability": "mutable",
												"name": "fractionalFees",
												"nameLocation": "29807:14:4",
												"nodeType": "VariableDeclaration",
												"scope": 2514,
												"src": "29784:37:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_FractionalFee_$2161_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IHederaTokenService.FractionalFee[]"
												},
												"typeName": {
													"baseType": {
														"id": 2506,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 2505,
															"name": "FractionalFee",
															"nameLocations": [
																"29784:13:4"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 2161,
															"src": "29784:13:4"
														},
														"referencedDeclaration": 2161,
														"src": "29784:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FractionalFee_$2161_storage_ptr",
															"typeString": "struct IHederaTokenService.FractionalFee"
														}
													},
													"id": 2507,
													"nodeType": "ArrayTypeName",
													"src": "29784:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_FractionalFee_$2161_storage_$dyn_storage_ptr",
														"typeString": "struct IHederaTokenService.FractionalFee[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2512,
												"mutability": "mutable",
												"name": "royaltyFees",
												"nameLocation": "29843:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 2514,
												"src": "29823:31:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_RoyaltyFee_$2174_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IHederaTokenService.RoyaltyFee[]"
												},
												"typeName": {
													"baseType": {
														"id": 2510,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 2509,
															"name": "RoyaltyFee",
															"nameLocations": [
																"29823:10:4"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 2174,
															"src": "29823:10:4"
														},
														"referencedDeclaration": 2174,
														"src": "29823:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoyaltyFee_$2174_storage_ptr",
															"typeString": "struct IHederaTokenService.RoyaltyFee"
														}
													},
													"id": 2511,
													"nodeType": "ArrayTypeName",
													"src": "29823:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_RoyaltyFee_$2174_storage_$dyn_storage_ptr",
														"typeString": "struct IHederaTokenService.RoyaltyFee[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29734:121:4"
									},
									"scope": 2709,
									"src": "29658:198:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2515,
										"nodeType": "StructuredDocumentation",
										"src": "29862:263:4",
										"text": "Query token default freeze status\n @param token The token address to check\n @return responseCode The response code for the status of the request. SUCCESS is 22.\n @return defaultFreezeStatus True if `token` default freeze status is frozen."
									},
									"functionSelector": "a7daa18d",
									"id": 2524,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenDefaultFreezeStatus",
									"nameLocation": "30139:27:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2517,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "30175:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 2524,
												"src": "30167:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2516,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30167:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30166:15:4"
									},
									"returnParameters": {
										"id": 2523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2520,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "30222:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 2524,
												"src": "30216:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 2519,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "30216:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2522,
												"mutability": "mutable",
												"name": "defaultFreezeStatus",
												"nameLocation": "30241:19:4",
												"nodeType": "VariableDeclaration",
												"scope": 2524,
												"src": "30236:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2521,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "30236:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30215:46:4"
									},
									"scope": 2709,
									"src": "30130:132:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2525,
										"nodeType": "StructuredDocumentation",
										"src": "30272:285:4",
										"text": "Query token default kyc status\n @param token The token address to check\n @return responseCode The response code for the status of the request. SUCCESS is 22.\n @return defaultKycStatus True if `token` default kyc status is KycNotApplicable and false if Revoked."
									},
									"functionSelector": "335e04c1",
									"id": 2534,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenDefaultKycStatus",
									"nameLocation": "30571:24:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2527,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "30604:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 2534,
												"src": "30596:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30596:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30595:15:4"
									},
									"returnParameters": {
										"id": 2533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2530,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "30651:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 2534,
												"src": "30645:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 2529,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "30645:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2532,
												"mutability": "mutable",
												"name": "defaultKycStatus",
												"nameLocation": "30670:16:4",
												"nodeType": "VariableDeclaration",
												"scope": 2534,
												"src": "30665:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2531,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "30665:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30644:43:4"
									},
									"scope": 2709,
									"src": "30562:126:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2535,
										"nodeType": "StructuredDocumentation",
										"src": "30694:215:4",
										"text": "Query token expiry info\n @param token The token address to check\n @return responseCode The response code for the status of the request. SUCCESS is 22.\n @return expiry Expiry info for `token`"
									},
									"functionSelector": "d614cdb8",
									"id": 2545,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenExpiryInfo",
									"nameLocation": "30923:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2537,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "30950:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 2545,
												"src": "30942:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2536,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30942:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30941:15:4"
									},
									"returnParameters": {
										"id": 2544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2540,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "30997:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 2545,
												"src": "30991:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 2539,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "30991:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2543,
												"mutability": "mutable",
												"name": "expiry",
												"nameLocation": "31025:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 2545,
												"src": "31011:20:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Expiry_$2035_memory_ptr",
													"typeString": "struct IHederaTokenService.Expiry"
												},
												"typeName": {
													"id": 2542,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2541,
														"name": "Expiry",
														"nameLocations": [
															"31011:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2035,
														"src": "31011:6:4"
													},
													"referencedDeclaration": 2035,
													"src": "31011:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Expiry_$2035_storage_ptr",
														"typeString": "struct IHederaTokenService.Expiry"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30990:42:4"
									},
									"scope": 2709,
									"src": "30914:119:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2546,
										"nodeType": "StructuredDocumentation",
										"src": "31039:239:4",
										"text": "Query fungible token info\n @param token The token address to check\n @return responseCode The response code for the status of the request. SUCCESS is 22.\n @return fungibleTokenInfo FungibleTokenInfo info for `token`"
									},
									"functionSelector": "3f28a19b",
									"id": 2556,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getFungibleTokenInfo",
									"nameLocation": "31292:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2548,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "31321:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 2556,
												"src": "31313:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2547,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31313:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31312:15:4"
									},
									"returnParameters": {
										"id": 2555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2551,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "31368:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 2556,
												"src": "31362:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 2550,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "31362:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2554,
												"mutability": "mutable",
												"name": "fungibleTokenInfo",
												"nameLocation": "31407:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 2556,
												"src": "31382:42:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FungibleTokenInfo_$2117_memory_ptr",
													"typeString": "struct IHederaTokenService.FungibleTokenInfo"
												},
												"typeName": {
													"id": 2553,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2552,
														"name": "FungibleTokenInfo",
														"nameLocations": [
															"31382:17:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2117,
														"src": "31382:17:4"
													},
													"referencedDeclaration": 2117,
													"src": "31382:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FungibleTokenInfo_$2117_storage_ptr",
														"typeString": "struct IHederaTokenService.FungibleTokenInfo"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31361:64:4"
									},
									"scope": 2709,
									"src": "31283:143:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2557,
										"nodeType": "StructuredDocumentation",
										"src": "31432:214:4",
										"text": "Query token info\n @param token The token address to check\n @return responseCode The response code for the status of the request. SUCCESS is 22.\n @return tokenInfo TokenInfo info for `token`"
									},
									"functionSelector": "1f69565f",
									"id": 2567,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenInfo",
									"nameLocation": "31660:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2559,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "31681:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 2567,
												"src": "31673:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2558,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31673:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31672:15:4"
									},
									"returnParameters": {
										"id": 2566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2562,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "31728:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 2567,
												"src": "31722:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 2561,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "31722:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2565,
												"mutability": "mutable",
												"name": "tokenInfo",
												"nameLocation": "31759:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 2567,
												"src": "31742:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenInfo_$2109_memory_ptr",
													"typeString": "struct IHederaTokenService.TokenInfo"
												},
												"typeName": {
													"id": 2564,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2563,
														"name": "TokenInfo",
														"nameLocations": [
															"31742:9:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2109,
														"src": "31742:9:4"
													},
													"referencedDeclaration": 2109,
													"src": "31742:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenInfo_$2109_storage_ptr",
														"typeString": "struct IHederaTokenService.TokenInfo"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31721:48:4"
									},
									"scope": 2709,
									"src": "31651:119:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2568,
										"nodeType": "StructuredDocumentation",
										"src": "31776:284:4",
										"text": "Query token KeyValue\n @param token The token address to check\n @param keyType The keyType of the desired KeyValue\n @return responseCode The response code for the status of the request. SUCCESS is 22.\n @return key KeyValue info for key of type `keyType`"
									},
									"functionSelector": "3c4dd32e",
									"id": 2580,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenKey",
									"nameLocation": "32074:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2570,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "32094:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 2580,
												"src": "32086:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2569,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32086:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2572,
												"mutability": "mutable",
												"name": "keyType",
												"nameLocation": "32106:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 2580,
												"src": "32101:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2571,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "32101:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32085:29:4"
									},
									"returnParameters": {
										"id": 2579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2575,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "32155:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 2580,
												"src": "32149:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 2574,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "32149:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2578,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "32185:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 2580,
												"src": "32169:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_KeyValue_$2046_memory_ptr",
													"typeString": "struct IHederaTokenService.KeyValue"
												},
												"typeName": {
													"id": 2577,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2576,
														"name": "KeyValue",
														"nameLocations": [
															"32169:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2046,
														"src": "32169:8:4"
													},
													"referencedDeclaration": 2046,
													"src": "32169:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_KeyValue_$2046_storage_ptr",
														"typeString": "struct IHederaTokenService.KeyValue"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32148:41:4"
									},
									"scope": 2709,
									"src": "32065:125:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2581,
										"nodeType": "StructuredDocumentation",
										"src": "32196:322:4",
										"text": "Query non fungible token info\n @param token The token address to check\n @param serialNumber The NFT serialNumber to check\n @return responseCode The response code for the status of the request. SUCCESS is 22.\n @return nonFungibleTokenInfo NonFungibleTokenInfo info for `token` `serialNumber`"
									},
									"functionSelector": "287e1da8",
									"id": 2593,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getNonFungibleTokenInfo",
									"nameLocation": "32532:23:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2583,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "32564:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 2593,
												"src": "32556:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2582,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32556:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2585,
												"mutability": "mutable",
												"name": "serialNumber",
												"nameLocation": "32577:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 2593,
												"src": "32571:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 2584,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "32571:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32555:35:4"
									},
									"returnParameters": {
										"id": 2592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2588,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "32631:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 2593,
												"src": "32625:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 2587,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "32625:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2591,
												"mutability": "mutable",
												"name": "nonFungibleTokenInfo",
												"nameLocation": "32673:20:4",
												"nodeType": "VariableDeclaration",
												"scope": 2593,
												"src": "32645:48:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_NonFungibleTokenInfo_$2137_memory_ptr",
													"typeString": "struct IHederaTokenService.NonFungibleTokenInfo"
												},
												"typeName": {
													"id": 2590,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2589,
														"name": "NonFungibleTokenInfo",
														"nameLocations": [
															"32645:20:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2137,
														"src": "32645:20:4"
													},
													"referencedDeclaration": 2137,
													"src": "32645:20:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_NonFungibleTokenInfo_$2137_storage_ptr",
														"typeString": "struct IHederaTokenService.NonFungibleTokenInfo"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32624:70:4"
									},
									"scope": 2709,
									"src": "32523:172:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2594,
										"nodeType": "StructuredDocumentation",
										"src": "32701:225:4",
										"text": "Operation to freeze token account\n @param token The token address\n @param account The account address to be frozen\n @return responseCode The response code for the status of the request. SUCCESS is 22."
									},
									"functionSelector": "5b8f8584",
									"id": 2603,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "freezeToken",
									"nameLocation": "32940:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2596,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "32960:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 2603,
												"src": "32952:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2595,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32952:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2598,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "32975:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 2603,
												"src": "32967:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2597,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32967:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32951:32:4"
									},
									"returnParameters": {
										"id": 2602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2601,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "33024:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 2603,
												"src": "33018:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 2600,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "33018:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33017:20:4"
									},
									"scope": 2709,
									"src": "32931:107:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2604,
										"nodeType": "StructuredDocumentation",
										"src": "33044:229:4",
										"text": "Operation to unfreeze token account\n @param token The token address\n @param account The account address to be unfrozen\n @return responseCode The response code for the status of the request. SUCCESS is 22."
									},
									"functionSelector": "52f91387",
									"id": 2613,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "unfreezeToken",
									"nameLocation": "33287:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2606,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "33309:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 2613,
												"src": "33301:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33301:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2608,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "33324:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 2613,
												"src": "33316:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2607,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33316:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33300:32:4"
									},
									"returnParameters": {
										"id": 2612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2611,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "33373:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 2613,
												"src": "33367:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 2610,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "33367:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33366:20:4"
									},
									"scope": 2709,
									"src": "33278:109:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2614,
										"nodeType": "StructuredDocumentation",
										"src": "33393:231:4",
										"text": "Operation to grant kyc to token account\n @param token The token address\n @param account The account address to grant kyc\n @return responseCode The response code for the status of the request. SUCCESS is 22."
									},
									"functionSelector": "8f8d7f99",
									"id": 2623,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantTokenKyc",
									"nameLocation": "33638:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2616,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "33660:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 2623,
												"src": "33652:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2615,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33652:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2618,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "33675:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 2623,
												"src": "33667:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2617,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33667:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33651:32:4"
									},
									"returnParameters": {
										"id": 2622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2621,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "33724:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 2623,
												"src": "33718:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 2620,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "33718:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33717:20:4"
									},
									"scope": 2709,
									"src": "33629:109:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2624,
										"nodeType": "StructuredDocumentation",
										"src": "33744:233:4",
										"text": "Operation to revoke kyc to token account\n @param token The token address\n @param account The account address to revoke kyc\n @return responseCode The response code for the status of the request. SUCCESS is 22."
									},
									"functionSelector": "af99c633",
									"id": 2633,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeTokenKyc",
									"nameLocation": "33991:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2626,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "34014:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 2633,
												"src": "34006:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2625,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34006:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2628,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "34029:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 2633,
												"src": "34021:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2627,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34021:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34005:32:4"
									},
									"returnParameters": {
										"id": 2632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2631,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "34078:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 2633,
												"src": "34072:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 2630,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "34072:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34071:20:4"
									},
									"scope": 2709,
									"src": "33982:110:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2634,
										"nodeType": "StructuredDocumentation",
										"src": "34098:173:4",
										"text": "Operation to pause token\n @param token The token address to be paused\n @return responseCode The response code for the status of the request. SUCCESS is 22."
									},
									"functionSelector": "7c41ad2c",
									"id": 2641,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "pauseToken",
									"nameLocation": "34285:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2636,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "34304:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 2641,
												"src": "34296:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34296:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34295:15:4"
									},
									"returnParameters": {
										"id": 2640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2639,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "34335:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 2641,
												"src": "34329:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 2638,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "34329:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34328:20:4"
									},
									"scope": 2709,
									"src": "34276:73:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2642,
										"nodeType": "StructuredDocumentation",
										"src": "34355:177:4",
										"text": "Operation to unpause token\n @param token The token address to be unpaused\n @return responseCode The response code for the status of the request. SUCCESS is 22."
									},
									"functionSelector": "3b3bff0f",
									"id": 2649,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "unpauseToken",
									"nameLocation": "34546:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2644,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "34567:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 2649,
												"src": "34559:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2643,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34559:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34558:15:4"
									},
									"returnParameters": {
										"id": 2648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2647,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "34598:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 2649,
												"src": "34592:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 2646,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "34592:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34591:20:4"
									},
									"scope": 2709,
									"src": "34537:75:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2650,
										"nodeType": "StructuredDocumentation",
										"src": "34618:290:4",
										"text": "Operation to wipe fungible tokens from account\n @param token The token address\n @param account The account address to revoke kyc\n @param amount The number of tokens to wipe\n @return responseCode The response code for the status of the request. SUCCESS is 22."
									},
									"functionSelector": "9790686d",
									"id": 2661,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "wipeTokenAccount",
									"nameLocation": "34922:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2652,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "34956:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 2661,
												"src": "34948:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2651,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34948:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2654,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "34979:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 2661,
												"src": "34971:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2653,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34971:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2656,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "35003:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 2661,
												"src": "34996:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2655,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "34996:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34938:77:4"
									},
									"returnParameters": {
										"id": 2660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2659,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "35040:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 2661,
												"src": "35034:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 2658,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "35034:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35033:20:4"
									},
									"scope": 2709,
									"src": "34913:141:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2662,
										"nodeType": "StructuredDocumentation",
										"src": "35060:309:4",
										"text": "Operation to wipe non fungible tokens from account\n @param token The token address\n @param account The account address to revoke kyc\n @param  serialNumbers The serial numbers of token to wipe\n @return responseCode The response code for the status of the request. SUCCESS is 22."
									},
									"functionSelector": "f7f38e26",
									"id": 2674,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "wipeTokenAccountNFT",
									"nameLocation": "35383:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2664,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "35420:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 2674,
												"src": "35412:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2663,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35412:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2666,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "35443:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 2674,
												"src": "35435:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35435:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2669,
												"mutability": "mutable",
												"name": "serialNumbers",
												"nameLocation": "35475:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 2674,
												"src": "35460:28:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_int64_$dyn_memory_ptr",
													"typeString": "int64[]"
												},
												"typeName": {
													"baseType": {
														"id": 2667,
														"name": "int64",
														"nodeType": "ElementaryTypeName",
														"src": "35460:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_int64",
															"typeString": "int64"
														}
													},
													"id": 2668,
													"nodeType": "ArrayTypeName",
													"src": "35460:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_int64_$dyn_storage_ptr",
														"typeString": "int64[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35402:92:4"
									},
									"returnParameters": {
										"id": 2673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2672,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "35519:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 2674,
												"src": "35513:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 2671,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "35513:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35512:20:4"
									},
									"scope": 2709,
									"src": "35374:159:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2675,
										"nodeType": "StructuredDocumentation",
										"src": "35539:234:4",
										"text": "Operation to update token info\n @param token The token address\n @param tokenInfo The hedera token info to update token with\n @return responseCode The response code for the status of the request. SUCCESS is 22."
									},
									"functionSelector": "2cccc36f",
									"id": 2685,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateTokenInfo",
									"nameLocation": "35787:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2677,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "35811:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 2685,
												"src": "35803:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35803:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2680,
												"mutability": "mutable",
												"name": "tokenInfo",
												"nameLocation": "35837:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 2685,
												"src": "35818:28:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_HederaToken_$2074_memory_ptr",
													"typeString": "struct IHederaTokenService.HederaToken"
												},
												"typeName": {
													"id": 2679,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2678,
														"name": "HederaToken",
														"nameLocations": [
															"35818:11:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2074,
														"src": "35818:11:4"
													},
													"referencedDeclaration": 2074,
													"src": "35818:11:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_HederaToken_$2074_storage_ptr",
														"typeString": "struct IHederaTokenService.HederaToken"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35802:45:4"
									},
									"returnParameters": {
										"id": 2684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2683,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "35888:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 2685,
												"src": "35882:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 2682,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "35882:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35881:20:4"
									},
									"scope": 2709,
									"src": "35778:124:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2686,
										"nodeType": "StructuredDocumentation",
										"src": "35908:228:4",
										"text": "Operation to update token expiry info\n @param token The token address\n @param expiryInfo The hedera token expiry info\n @return responseCode The response code for the status of the request. SUCCESS is 22."
									},
									"functionSelector": "593d6e82",
									"id": 2696,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateTokenExpiryInfo",
									"nameLocation": "36150:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2688,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "36180:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 2696,
												"src": "36172:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2687,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "36172:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2691,
												"mutability": "mutable",
												"name": "expiryInfo",
												"nameLocation": "36201:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 2696,
												"src": "36187:24:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Expiry_$2035_memory_ptr",
													"typeString": "struct IHederaTokenService.Expiry"
												},
												"typeName": {
													"id": 2690,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2689,
														"name": "Expiry",
														"nameLocations": [
															"36187:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2035,
														"src": "36187:6:4"
													},
													"referencedDeclaration": 2035,
													"src": "36187:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Expiry_$2035_storage_ptr",
														"typeString": "struct IHederaTokenService.Expiry"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36171:41:4"
									},
									"returnParameters": {
										"id": 2695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2694,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "36253:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 2696,
												"src": "36247:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 2693,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "36247:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36246:20:4"
									},
									"scope": 2709,
									"src": "36141:126:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2697,
										"nodeType": "StructuredDocumentation",
										"src": "36273:208:4",
										"text": "Operation to update token expiry info\n @param token The token address\n @param keys The token keys\n @return responseCode The response code for the status of the request. SUCCESS is 22."
									},
									"functionSelector": "6fc3cbaf",
									"id": 2708,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateTokenKeys",
									"nameLocation": "36495:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2699,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "36519:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 2708,
												"src": "36511:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "36511:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2703,
												"mutability": "mutable",
												"name": "keys",
												"nameLocation": "36544:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 2708,
												"src": "36526:22:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_TokenKey_$2052_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IHederaTokenService.TokenKey[]"
												},
												"typeName": {
													"baseType": {
														"id": 2701,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 2700,
															"name": "TokenKey",
															"nameLocations": [
																"36526:8:4"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 2052,
															"src": "36526:8:4"
														},
														"referencedDeclaration": 2052,
														"src": "36526:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenKey_$2052_storage_ptr",
															"typeString": "struct IHederaTokenService.TokenKey"
														}
													},
													"id": 2702,
													"nodeType": "ArrayTypeName",
													"src": "36526:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_TokenKey_$2052_storage_$dyn_storage_ptr",
														"typeString": "struct IHederaTokenService.TokenKey[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36510:39:4"
									},
									"returnParameters": {
										"id": 2707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2706,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "36590:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 2708,
												"src": "36584:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 2705,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "36584:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36583:20:4"
									},
									"scope": 2709,
									"src": "36486:118:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2710,
							"src": "106:36500:4",
							"usedErrors": []
						}
					],
					"src": "39:36568:4"
				},
				"id": 4
			},
			"hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol": {
				"ast": {
					"absolutePath": "hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol",
					"exportedSymbols": {
						"Bits": [
							3307
						],
						"HederaResponseCodes": [
							880
						],
						"HederaTokenService": [
							2002
						],
						"IHederaTokenService": [
							2709
						],
						"KeyHelper": [
							3283
						]
					},
					"id": 3308,
					"license": "Apache-2.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2711,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "39:31:5"
						},
						{
							"id": 2712,
							"literals": [
								"experimental",
								"ABIEncoderV2"
							],
							"nodeType": "PragmaDirective",
							"src": "71:33:5"
						},
						{
							"absolutePath": "hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol",
							"file": "./HederaTokenService.sol",
							"id": 2713,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3308,
							"sourceUnit": 2003,
							"src": "106:34:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "KeyHelper",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3283,
							"linearizedBaseContracts": [
								3283
							],
							"name": "KeyHelper",
							"nameLocation": "160:9:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 2716,
									"libraryName": {
										"id": 2714,
										"name": "Bits",
										"nameLocations": [
											"182:4:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3307,
										"src": "182:4:5"
									},
									"nodeType": "UsingForDirective",
									"src": "176:23:5",
									"typeName": {
										"id": 2715,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "191:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 2718,
									"mutability": "mutable",
									"name": "supplyContract",
									"nameLocation": "212:14:5",
									"nodeType": "VariableDeclaration",
									"scope": 3283,
									"src": "204:22:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2717,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "204:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2723,
									"mutability": "mutable",
									"name": "keyTypes",
									"nameLocation": "261:8:5",
									"nodeType": "VariableDeclaration",
									"scope": 3283,
									"src": "233:36:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_enum$_KeyType_$2731_$_t_uint256_$",
										"typeString": "mapping(enum KeyHelper.KeyType => uint256)"
									},
									"typeName": {
										"id": 2722,
										"keyType": {
											"id": 2720,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 2719,
												"name": "KeyType",
												"nameLocations": [
													"241:7:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2731,
												"src": "241:7:5"
											},
											"referencedDeclaration": 2731,
											"src": "241:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_KeyType_$2731",
												"typeString": "enum KeyHelper.KeyType"
											}
										},
										"nodeType": "Mapping",
										"src": "233:27:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_enum$_KeyType_$2731_$_t_uint256_$",
											"typeString": "mapping(enum KeyHelper.KeyType => uint256)"
										},
										"valueType": {
											"id": 2721,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "252:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "KeyHelper.KeyType",
									"id": 2731,
									"members": [
										{
											"id": 2724,
											"name": "ADMIN",
											"nameLocation": "299:5:5",
											"nodeType": "EnumValue",
											"src": "299:5:5"
										},
										{
											"id": 2725,
											"name": "KYC",
											"nameLocation": "314:3:5",
											"nodeType": "EnumValue",
											"src": "314:3:5"
										},
										{
											"id": 2726,
											"name": "FREEZE",
											"nameLocation": "327:6:5",
											"nodeType": "EnumValue",
											"src": "327:6:5"
										},
										{
											"id": 2727,
											"name": "WIPE",
											"nameLocation": "343:4:5",
											"nodeType": "EnumValue",
											"src": "343:4:5"
										},
										{
											"id": 2728,
											"name": "SUPPLY",
											"nameLocation": "357:6:5",
											"nodeType": "EnumValue",
											"src": "357:6:5"
										},
										{
											"id": 2729,
											"name": "FEE",
											"nameLocation": "373:3:5",
											"nodeType": "EnumValue",
											"src": "373:3:5"
										},
										{
											"id": 2730,
											"name": "PAUSE",
											"nameLocation": "386:5:5",
											"nodeType": "EnumValue",
											"src": "386:5:5"
										}
									],
									"name": "KeyType",
									"nameLocation": "281:7:5",
									"nodeType": "EnumDefinition",
									"src": "276:121:5"
								},
								{
									"canonicalName": "KeyHelper.KeyValueType",
									"id": 2737,
									"members": [
										{
											"id": 2732,
											"name": "INHERIT_ACCOUNT_KEY",
											"nameLocation": "430:19:5",
											"nodeType": "EnumValue",
											"src": "430:19:5"
										},
										{
											"id": 2733,
											"name": "CONTRACT_ID",
											"nameLocation": "459:11:5",
											"nodeType": "EnumValue",
											"src": "459:11:5"
										},
										{
											"id": 2734,
											"name": "ED25519",
											"nameLocation": "480:7:5",
											"nodeType": "EnumValue",
											"src": "480:7:5"
										},
										{
											"id": 2735,
											"name": "SECP256K1",
											"nameLocation": "497:9:5",
											"nodeType": "EnumValue",
											"src": "497:9:5"
										},
										{
											"id": 2736,
											"name": "DELEGETABLE_CONTRACT_ID",
											"nameLocation": "516:23:5",
											"nodeType": "EnumValue",
											"src": "516:23:5"
										}
									],
									"name": "KeyValueType",
									"nameLocation": "407:12:5",
									"nodeType": "EnumDefinition",
									"src": "402:143:5"
								},
								{
									"body": {
										"id": 2789,
										"nodeType": "Block",
										"src": "565:266:5",
										"statements": [
											{
												"expression": {
													"id": 2745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2740,
															"name": "keyTypes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2723,
															"src": "575:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_enum$_KeyType_$2731_$_t_uint256_$",
																"typeString": "mapping(enum KeyHelper.KeyType => uint256)"
															}
														},
														"id": 2743,
														"indexExpression": {
															"expression": {
																"id": 2741,
																"name": "KeyType",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2731,
																"src": "584:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_KeyType_$2731_$",
																	"typeString": "type(enum KeyHelper.KeyType)"
																}
															},
															"id": 2742,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "592:5:5",
															"memberName": "ADMIN",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2724,
															"src": "584:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_KeyType_$2731",
																"typeString": "enum KeyHelper.KeyType"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "575:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 2744,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "601:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "575:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2746,
												"nodeType": "ExpressionStatement",
												"src": "575:27:5"
											},
											{
												"expression": {
													"id": 2752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2747,
															"name": "keyTypes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2723,
															"src": "612:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_enum$_KeyType_$2731_$_t_uint256_$",
																"typeString": "mapping(enum KeyHelper.KeyType => uint256)"
															}
														},
														"id": 2750,
														"indexExpression": {
															"expression": {
																"id": 2748,
																"name": "KeyType",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2731,
																"src": "621:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_KeyType_$2731_$",
																	"typeString": "type(enum KeyHelper.KeyType)"
																}
															},
															"id": 2749,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "629:3:5",
															"memberName": "KYC",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2725,
															"src": "621:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_KeyType_$2731",
																"typeString": "enum KeyHelper.KeyType"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "612:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "32",
														"id": 2751,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "636:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "612:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2753,
												"nodeType": "ExpressionStatement",
												"src": "612:25:5"
											},
											{
												"expression": {
													"id": 2759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2754,
															"name": "keyTypes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2723,
															"src": "647:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_enum$_KeyType_$2731_$_t_uint256_$",
																"typeString": "mapping(enum KeyHelper.KeyType => uint256)"
															}
														},
														"id": 2757,
														"indexExpression": {
															"expression": {
																"id": 2755,
																"name": "KeyType",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2731,
																"src": "656:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_KeyType_$2731_$",
																	"typeString": "type(enum KeyHelper.KeyType)"
																}
															},
															"id": 2756,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "664:6:5",
															"memberName": "FREEZE",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2726,
															"src": "656:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_KeyType_$2731",
																"typeString": "enum KeyHelper.KeyType"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "647:24:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "34",
														"id": 2758,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "674:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_4_by_1",
															"typeString": "int_const 4"
														},
														"value": "4"
													},
													"src": "647:28:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2760,
												"nodeType": "ExpressionStatement",
												"src": "647:28:5"
											},
											{
												"expression": {
													"id": 2766,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2761,
															"name": "keyTypes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2723,
															"src": "685:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_enum$_KeyType_$2731_$_t_uint256_$",
																"typeString": "mapping(enum KeyHelper.KeyType => uint256)"
															}
														},
														"id": 2764,
														"indexExpression": {
															"expression": {
																"id": 2762,
																"name": "KeyType",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2731,
																"src": "694:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_KeyType_$2731_$",
																	"typeString": "type(enum KeyHelper.KeyType)"
																}
															},
															"id": 2763,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "702:4:5",
															"memberName": "WIPE",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2727,
															"src": "694:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_KeyType_$2731",
																"typeString": "enum KeyHelper.KeyType"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "685:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "38",
														"id": 2765,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "710:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_8_by_1",
															"typeString": "int_const 8"
														},
														"value": "8"
													},
													"src": "685:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2767,
												"nodeType": "ExpressionStatement",
												"src": "685:26:5"
											},
											{
												"expression": {
													"id": 2773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2768,
															"name": "keyTypes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2723,
															"src": "721:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_enum$_KeyType_$2731_$_t_uint256_$",
																"typeString": "mapping(enum KeyHelper.KeyType => uint256)"
															}
														},
														"id": 2771,
														"indexExpression": {
															"expression": {
																"id": 2769,
																"name": "KeyType",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2731,
																"src": "730:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_KeyType_$2731_$",
																	"typeString": "type(enum KeyHelper.KeyType)"
																}
															},
															"id": 2770,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "738:6:5",
															"memberName": "SUPPLY",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2728,
															"src": "730:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_KeyType_$2731",
																"typeString": "enum KeyHelper.KeyType"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "721:24:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3136",
														"id": 2772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "748:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_16_by_1",
															"typeString": "int_const 16"
														},
														"value": "16"
													},
													"src": "721:29:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2774,
												"nodeType": "ExpressionStatement",
												"src": "721:29:5"
											},
											{
												"expression": {
													"id": 2780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2775,
															"name": "keyTypes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2723,
															"src": "760:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_enum$_KeyType_$2731_$_t_uint256_$",
																"typeString": "mapping(enum KeyHelper.KeyType => uint256)"
															}
														},
														"id": 2778,
														"indexExpression": {
															"expression": {
																"id": 2776,
																"name": "KeyType",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2731,
																"src": "769:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_KeyType_$2731_$",
																	"typeString": "type(enum KeyHelper.KeyType)"
																}
															},
															"id": 2777,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "777:3:5",
															"memberName": "FEE",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2729,
															"src": "769:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_KeyType_$2731",
																"typeString": "enum KeyHelper.KeyType"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "760:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3332",
														"id": 2779,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "784:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"src": "760:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2781,
												"nodeType": "ExpressionStatement",
												"src": "760:26:5"
											},
											{
												"expression": {
													"id": 2787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2782,
															"name": "keyTypes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2723,
															"src": "796:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_enum$_KeyType_$2731_$_t_uint256_$",
																"typeString": "mapping(enum KeyHelper.KeyType => uint256)"
															}
														},
														"id": 2785,
														"indexExpression": {
															"expression": {
																"id": 2783,
																"name": "KeyType",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2731,
																"src": "805:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_KeyType_$2731_$",
																	"typeString": "type(enum KeyHelper.KeyType)"
																}
															},
															"id": 2784,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "813:5:5",
															"memberName": "PAUSE",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2730,
															"src": "805:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_KeyType_$2731",
																"typeString": "enum KeyHelper.KeyType"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "796:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3634",
														"id": 2786,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "822:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_64_by_1",
															"typeString": "int_const 64"
														},
														"value": "64"
													},
													"src": "796:28:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2788,
												"nodeType": "ExpressionStatement",
												"src": "796:28:5"
											}
										]
									},
									"id": 2790,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "562:2:5"
									},
									"returnParameters": {
										"id": 2739,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "565:0:5"
									},
									"scope": 3283,
									"src": "551:280:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2837,
										"nodeType": "Block",
										"src": "958:314:5",
										"statements": [
											{
												"expression": {
													"id": 2804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2797,
														"name": "keys",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2795,
														"src": "968:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_TokenKey_$2052_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct IHederaTokenService.TokenKey memory[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "32",
																"id": 2802,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1010:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																}
															],
															"id": 2801,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "975:34:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_TokenKey_$2052_memory_ptr_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (struct IHederaTokenService.TokenKey memory[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 2799,
																	"nodeType": "UserDefinedTypeName",
																	"pathNode": {
																		"id": 2798,
																		"name": "IHederaTokenService.TokenKey",
																		"nameLocations": [
																			"979:19:5",
																			"999:8:5"
																		],
																		"nodeType": "IdentifierPath",
																		"referencedDeclaration": 2052,
																		"src": "979:28:5"
																	},
																	"referencedDeclaration": 2052,
																	"src": "979:28:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenKey_$2052_storage_ptr",
																		"typeString": "struct IHederaTokenService.TokenKey"
																	}
																},
																"id": 2800,
																"nodeType": "ArrayTypeName",
																"src": "979:30:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_TokenKey_$2052_storage_$dyn_storage_ptr",
																	"typeString": "struct IHederaTokenService.TokenKey[]"
																}
															}
														},
														"id": 2803,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "975:37:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_TokenKey_$2052_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct IHederaTokenService.TokenKey memory[] memory"
														}
													},
													"src": "968:44:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_TokenKey_$2052_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct IHederaTokenService.TokenKey memory[] memory"
													}
												},
												"id": 2805,
												"nodeType": "ExpressionStatement",
												"src": "968:44:5"
											},
											{
												"expression": {
													"id": 2816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2806,
															"name": "keys",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2795,
															"src": "1022:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_TokenKey_$2052_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct IHederaTokenService.TokenKey memory[] memory"
															}
														},
														"id": 2808,
														"indexExpression": {
															"hexValue": "30",
															"id": 2807,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1027:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1022:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenKey_$2052_memory_ptr",
															"typeString": "struct IHederaTokenService.TokenKey memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 2810,
																	"name": "KeyType",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2731,
																	"src": "1045:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_KeyType_$2731_$",
																		"typeString": "type(enum KeyHelper.KeyType)"
																	}
																},
																"id": 2811,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1053:3:5",
																"memberName": "KYC",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2725,
																"src": "1045:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_KeyType_$2731",
																	"typeString": "enum KeyHelper.KeyType"
																}
															},
															{
																"expression": {
																	"id": 2812,
																	"name": "KeyValueType",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2737,
																	"src": "1058:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_KeyValueType_$2737_$",
																		"typeString": "type(enum KeyHelper.KeyValueType)"
																	}
																},
																"id": 2813,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1071:11:5",
																"memberName": "CONTRACT_ID",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2733,
																"src": "1058:24:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_KeyValueType_$2737",
																	"typeString": "enum KeyHelper.KeyValueType"
																}
															},
															{
																"hexValue": "",
																"id": 2814,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1084:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_KeyType_$2731",
																	"typeString": "enum KeyHelper.KeyType"
																},
																{
																	"typeIdentifier": "t_enum$_KeyValueType_$2737",
																	"typeString": "enum KeyHelper.KeyValueType"
																},
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"id": 2809,
															"name": "getSingleKey",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																2986,
																3014,
																3046
															],
															"referencedDeclaration": 2986,
															"src": "1032:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_enum$_KeyType_$2731_$_t_enum$_KeyValueType_$2737_$_t_bytes_memory_ptr_$returns$_t_struct$_TokenKey_$2052_memory_ptr_$",
																"typeString": "function (enum KeyHelper.KeyType,enum KeyHelper.KeyValueType,bytes memory) view returns (struct IHederaTokenService.TokenKey memory)"
															}
														},
														"id": 2815,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1032:55:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenKey_$2052_memory_ptr",
															"typeString": "struct IHederaTokenService.TokenKey memory"
														}
													},
													"src": "1022:65:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenKey_$2052_memory_ptr",
														"typeString": "struct IHederaTokenService.TokenKey memory"
													}
												},
												"id": 2817,
												"nodeType": "ExpressionStatement",
												"src": "1022:65:5"
											},
											{
												"expression": {
													"id": 2835,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2818,
															"name": "keys",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2795,
															"src": "1097:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_TokenKey_$2052_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct IHederaTokenService.TokenKey memory[] memory"
															}
														},
														"id": 2820,
														"indexExpression": {
															"hexValue": "31",
															"id": 2819,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1102:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1097:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenKey_$2052_memory_ptr",
															"typeString": "struct IHederaTokenService.TokenKey memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"expression": {
																			"id": 2824,
																			"name": "KeyType",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2731,
																			"src": "1166:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_KeyType_$2731_$",
																				"typeString": "type(enum KeyHelper.KeyType)"
																			}
																		},
																		"id": 2825,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "1174:6:5",
																		"memberName": "SUPPLY",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2728,
																		"src": "1166:14:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_KeyType_$2731",
																			"typeString": "enum KeyHelper.KeyType"
																		}
																	},
																	{
																		"expression": {
																			"id": 2826,
																			"name": "KeyType",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2731,
																			"src": "1182:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_KeyType_$2731_$",
																				"typeString": "type(enum KeyHelper.KeyType)"
																			}
																		},
																		"id": 2827,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "1190:5:5",
																		"memberName": "PAUSE",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2730,
																		"src": "1182:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_KeyType_$2731",
																			"typeString": "enum KeyHelper.KeyType"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_enum$_KeyType_$2731",
																			"typeString": "enum KeyHelper.KeyType"
																		},
																		{
																			"typeIdentifier": "t_enum$_KeyType_$2731",
																			"typeString": "enum KeyHelper.KeyType"
																		}
																	],
																	"id": 2823,
																	"name": "getDuplexKeyType",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3078,
																	"src": "1149:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_enum$_KeyType_$2731_$_t_enum$_KeyType_$2731_$returns$_t_uint256_$",
																		"typeString": "function (enum KeyHelper.KeyType,enum KeyHelper.KeyType) pure returns (uint256)"
																	}
																},
																"id": 2828,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1149:47:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"arguments": [
																	{
																		"expression": {
																			"id": 2830,
																			"name": "KeyValueType",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2737,
																			"src": "1226:12:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_KeyValueType_$2737_$",
																				"typeString": "type(enum KeyHelper.KeyValueType)"
																			}
																		},
																		"id": 2831,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "1239:11:5",
																		"memberName": "CONTRACT_ID",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2733,
																		"src": "1226:24:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_KeyValueType_$2737",
																			"typeString": "enum KeyHelper.KeyValueType"
																		}
																	},
																	{
																		"hexValue": "",
																		"id": 2832,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1252:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_enum$_KeyValueType_$2737",
																			"typeString": "enum KeyHelper.KeyValueType"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		}
																	],
																	"id": 2829,
																	"name": "getKeyValueType",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		3246,
																		3282
																	],
																	"referencedDeclaration": 3246,
																	"src": "1210:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_enum$_KeyValueType_$2737_$_t_bytes_memory_ptr_$returns$_t_struct$_KeyValue_$2046_memory_ptr_$",
																		"typeString": "function (enum KeyHelper.KeyValueType,bytes memory) view returns (struct IHederaTokenService.KeyValue memory)"
																	}
																},
																"id": 2833,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1210:45:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_KeyValue_$2046_memory_ptr",
																	"typeString": "struct IHederaTokenService.KeyValue memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_struct$_KeyValue_$2046_memory_ptr",
																	"typeString": "struct IHederaTokenService.KeyValue memory"
																}
															],
															"expression": {
																"id": 2821,
																"name": "IHederaTokenService",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2709,
																"src": "1107:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IHederaTokenService_$2709_$",
																	"typeString": "type(contract IHederaTokenService)"
																}
															},
															"id": 2822,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1127:8:5",
															"memberName": "TokenKey",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2052,
															"src": "1107:28:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_TokenKey_$2052_storage_ptr_$",
																"typeString": "type(struct IHederaTokenService.TokenKey storage pointer)"
															}
														},
														"id": 2834,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1107:158:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenKey_$2052_memory_ptr",
															"typeString": "struct IHederaTokenService.TokenKey memory"
														}
													},
													"src": "1097:168:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenKey_$2052_memory_ptr",
														"typeString": "struct IHederaTokenService.TokenKey memory"
													}
												},
												"id": 2836,
												"nodeType": "ExpressionStatement",
												"src": "1097:168:5"
											}
										]
									},
									"id": 2838,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getDefaultKeys",
									"nameLocation": "846:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2791,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "860:2:5"
									},
									"returnParameters": {
										"id": 2796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2795,
												"mutability": "mutable",
												"name": "keys",
												"nameLocation": "948:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 2838,
												"src": "910:42:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_TokenKey_$2052_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IHederaTokenService.TokenKey[]"
												},
												"typeName": {
													"baseType": {
														"id": 2793,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 2792,
															"name": "IHederaTokenService.TokenKey",
															"nameLocations": [
																"910:19:5",
																"930:8:5"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 2052,
															"src": "910:28:5"
														},
														"referencedDeclaration": 2052,
														"src": "910:28:5",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenKey_$2052_storage_ptr",
															"typeString": "struct IHederaTokenService.TokenKey"
														}
													},
													"id": 2794,
													"nodeType": "ArrayTypeName",
													"src": "910:30:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_TokenKey_$2052_storage_$dyn_storage_ptr",
														"typeString": "struct IHederaTokenService.TokenKey[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "909:44:5"
									},
									"scope": 3283,
									"src": "837:435:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2873,
										"nodeType": "Block",
										"src": "1436:197:5",
										"statements": [
											{
												"expression": {
													"id": 2857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2850,
														"name": "keys",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2848,
														"src": "1446:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_TokenKey_$2052_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct IHederaTokenService.TokenKey memory[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "31",
																"id": 2855,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1488:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																}
															],
															"id": 2854,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "1453:34:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_TokenKey_$2052_memory_ptr_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (struct IHederaTokenService.TokenKey memory[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 2852,
																	"nodeType": "UserDefinedTypeName",
																	"pathNode": {
																		"id": 2851,
																		"name": "IHederaTokenService.TokenKey",
																		"nameLocations": [
																			"1457:19:5",
																			"1477:8:5"
																		],
																		"nodeType": "IdentifierPath",
																		"referencedDeclaration": 2052,
																		"src": "1457:28:5"
																	},
																	"referencedDeclaration": 2052,
																	"src": "1457:28:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenKey_$2052_storage_ptr",
																		"typeString": "struct IHederaTokenService.TokenKey"
																	}
																},
																"id": 2853,
																"nodeType": "ArrayTypeName",
																"src": "1457:30:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_TokenKey_$2052_storage_$dyn_storage_ptr",
																	"typeString": "struct IHederaTokenService.TokenKey[]"
																}
															}
														},
														"id": 2856,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1453:37:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_TokenKey_$2052_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct IHederaTokenService.TokenKey memory[] memory"
														}
													},
													"src": "1446:44:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_TokenKey_$2052_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct IHederaTokenService.TokenKey memory[] memory"
													}
												},
												"id": 2858,
												"nodeType": "ExpressionStatement",
												"src": "1446:44:5"
											},
											{
												"expression": {
													"id": 2871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2859,
															"name": "keys",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2848,
															"src": "1500:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_TokenKey_$2052_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct IHederaTokenService.TokenKey memory[] memory"
															}
														},
														"id": 2861,
														"indexExpression": {
															"hexValue": "30",
															"id": 2860,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1505:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1500:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenKey_$2052_memory_ptr",
															"typeString": "struct IHederaTokenService.TokenKey memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2864,
																	"name": "getAllKeyTypes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3161,
																	"src": "1552:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
																		"typeString": "function () pure returns (uint256)"
																	}
																},
																"id": 2865,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1552:16:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"arguments": [
																	{
																		"id": 2867,
																		"name": "keyValueType",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2841,
																		"src": "1598:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_KeyValueType_$2737",
																			"typeString": "enum KeyHelper.KeyValueType"
																		}
																	},
																	{
																		"id": 2868,
																		"name": "key",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2843,
																		"src": "1612:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_enum$_KeyValueType_$2737",
																			"typeString": "enum KeyHelper.KeyValueType"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 2866,
																	"name": "getKeyValueType",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		3246,
																		3282
																	],
																	"referencedDeclaration": 3246,
																	"src": "1582:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_enum$_KeyValueType_$2737_$_t_bytes_memory_ptr_$returns$_t_struct$_KeyValue_$2046_memory_ptr_$",
																		"typeString": "function (enum KeyHelper.KeyValueType,bytes memory) view returns (struct IHederaTokenService.KeyValue memory)"
																	}
																},
																"id": 2869,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1582:34:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_KeyValue_$2046_memory_ptr",
																	"typeString": "struct IHederaTokenService.KeyValue memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_struct$_KeyValue_$2046_memory_ptr",
																	"typeString": "struct IHederaTokenService.KeyValue memory"
																}
															],
															"expression": {
																"id": 2862,
																"name": "IHederaTokenService",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2709,
																"src": "1510:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IHederaTokenService_$2709_$",
																	"typeString": "type(contract IHederaTokenService)"
																}
															},
															"id": 2863,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1530:8:5",
															"memberName": "TokenKey",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2052,
															"src": "1510:28:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_TokenKey_$2052_storage_ptr_$",
																"typeString": "type(struct IHederaTokenService.TokenKey storage pointer)"
															}
														},
														"id": 2870,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1510:116:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenKey_$2052_memory_ptr",
															"typeString": "struct IHederaTokenService.TokenKey memory"
														}
													},
													"src": "1500:126:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenKey_$2052_memory_ptr",
														"typeString": "struct IHederaTokenService.TokenKey memory"
													}
												},
												"id": 2872,
												"nodeType": "ExpressionStatement",
												"src": "1500:126:5"
											}
										]
									},
									"id": 2874,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAllTypeKeys",
									"nameLocation": "1287:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2841,
												"mutability": "mutable",
												"name": "keyValueType",
												"nameLocation": "1324:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 2874,
												"src": "1311:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_KeyValueType_$2737",
													"typeString": "enum KeyHelper.KeyValueType"
												},
												"typeName": {
													"id": 2840,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2839,
														"name": "KeyValueType",
														"nameLocations": [
															"1311:12:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2737,
														"src": "1311:12:5"
													},
													"referencedDeclaration": 2737,
													"src": "1311:12:5",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_KeyValueType_$2737",
														"typeString": "enum KeyHelper.KeyValueType"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2843,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "1359:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 2874,
												"src": "1346:16:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2842,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1346:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1301:67:5"
									},
									"returnParameters": {
										"id": 2849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2848,
												"mutability": "mutable",
												"name": "keys",
												"nameLocation": "1430:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 2874,
												"src": "1392:42:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_TokenKey_$2052_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IHederaTokenService.TokenKey[]"
												},
												"typeName": {
													"baseType": {
														"id": 2846,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 2845,
															"name": "IHederaTokenService.TokenKey",
															"nameLocations": [
																"1392:19:5",
																"1412:8:5"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 2052,
															"src": "1392:28:5"
														},
														"referencedDeclaration": 2052,
														"src": "1392:28:5",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenKey_$2052_storage_ptr",
															"typeString": "struct IHederaTokenService.TokenKey"
														}
													},
													"id": 2847,
													"nodeType": "ArrayTypeName",
													"src": "1392:30:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_TokenKey_$2052_storage_$dyn_storage_ptr",
														"typeString": "struct IHederaTokenService.TokenKey[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1391:44:5"
									},
									"scope": 3283,
									"src": "1278:355:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2913,
										"nodeType": "Block",
										"src": "1831:200:5",
										"statements": [
											{
												"expression": {
													"id": 2896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2889,
														"name": "keys",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2887,
														"src": "1841:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_TokenKey_$2052_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct IHederaTokenService.TokenKey memory[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "31",
																"id": 2894,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1883:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																}
															],
															"id": 2893,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "1848:34:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_TokenKey_$2052_memory_ptr_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (struct IHederaTokenService.TokenKey memory[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 2891,
																	"nodeType": "UserDefinedTypeName",
																	"pathNode": {
																		"id": 2890,
																		"name": "IHederaTokenService.TokenKey",
																		"nameLocations": [
																			"1852:19:5",
																			"1872:8:5"
																		],
																		"nodeType": "IdentifierPath",
																		"referencedDeclaration": 2052,
																		"src": "1852:28:5"
																	},
																	"referencedDeclaration": 2052,
																	"src": "1852:28:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenKey_$2052_storage_ptr",
																		"typeString": "struct IHederaTokenService.TokenKey"
																	}
																},
																"id": 2892,
																"nodeType": "ArrayTypeName",
																"src": "1852:30:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_TokenKey_$2052_storage_$dyn_storage_ptr",
																	"typeString": "struct IHederaTokenService.TokenKey[]"
																}
															}
														},
														"id": 2895,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1848:37:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_TokenKey_$2052_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct IHederaTokenService.TokenKey memory[] memory"
														}
													},
													"src": "1841:44:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_TokenKey_$2052_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct IHederaTokenService.TokenKey memory[] memory"
													}
												},
												"id": 2897,
												"nodeType": "ExpressionStatement",
												"src": "1841:44:5"
											},
											{
												"expression": {
													"id": 2911,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2898,
															"name": "keys",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2887,
															"src": "1895:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_TokenKey_$2052_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct IHederaTokenService.TokenKey memory[] memory"
															}
														},
														"id": 2900,
														"indexExpression": {
															"hexValue": "30",
															"id": 2899,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1900:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1895:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenKey_$2052_memory_ptr",
															"typeString": "struct IHederaTokenService.TokenKey memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 2904,
																		"name": "keyType",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2877,
																		"src": "1958:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_KeyType_$2731",
																			"typeString": "enum KeyHelper.KeyType"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_enum$_KeyType_$2731",
																			"typeString": "enum KeyHelper.KeyType"
																		}
																	],
																	"id": 2903,
																	"name": "getKeyType",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3174,
																	"src": "1947:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_enum$_KeyType_$2731_$returns$_t_uint256_$",
																		"typeString": "function (enum KeyHelper.KeyType) view returns (uint256)"
																	}
																},
																"id": 2905,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1947:19:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"arguments": [
																	{
																		"id": 2907,
																		"name": "keyValueType",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2880,
																		"src": "1996:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_KeyValueType_$2737",
																			"typeString": "enum KeyHelper.KeyValueType"
																		}
																	},
																	{
																		"id": 2908,
																		"name": "key",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2882,
																		"src": "2010:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_enum$_KeyValueType_$2737",
																			"typeString": "enum KeyHelper.KeyValueType"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 2906,
																	"name": "getKeyValueType",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		3246,
																		3282
																	],
																	"referencedDeclaration": 3246,
																	"src": "1980:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_enum$_KeyValueType_$2737_$_t_bytes_memory_ptr_$returns$_t_struct$_KeyValue_$2046_memory_ptr_$",
																		"typeString": "function (enum KeyHelper.KeyValueType,bytes memory) view returns (struct IHederaTokenService.KeyValue memory)"
																	}
																},
																"id": 2909,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1980:34:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_KeyValue_$2046_memory_ptr",
																	"typeString": "struct IHederaTokenService.KeyValue memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_struct$_KeyValue_$2046_memory_ptr",
																	"typeString": "struct IHederaTokenService.KeyValue memory"
																}
															],
															"expression": {
																"id": 2901,
																"name": "IHederaTokenService",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2709,
																"src": "1905:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IHederaTokenService_$2709_$",
																	"typeString": "type(contract IHederaTokenService)"
																}
															},
															"id": 2902,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1925:8:5",
															"memberName": "TokenKey",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2052,
															"src": "1905:28:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_TokenKey_$2052_storage_ptr_$",
																"typeString": "type(struct IHederaTokenService.TokenKey storage pointer)"
															}
														},
														"id": 2910,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1905:119:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenKey_$2052_memory_ptr",
															"typeString": "struct IHederaTokenService.TokenKey memory"
														}
													},
													"src": "1895:129:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenKey_$2052_memory_ptr",
														"typeString": "struct IHederaTokenService.TokenKey memory"
													}
												},
												"id": 2912,
												"nodeType": "ExpressionStatement",
												"src": "1895:129:5"
											}
										]
									},
									"id": 2914,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCustomSingleTypeKeys",
									"nameLocation": "1648:23:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2877,
												"mutability": "mutable",
												"name": "keyType",
												"nameLocation": "1689:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 2914,
												"src": "1681:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_KeyType_$2731",
													"typeString": "enum KeyHelper.KeyType"
												},
												"typeName": {
													"id": 2876,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2875,
														"name": "KeyType",
														"nameLocations": [
															"1681:7:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2731,
														"src": "1681:7:5"
													},
													"referencedDeclaration": 2731,
													"src": "1681:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_KeyType_$2731",
														"typeString": "enum KeyHelper.KeyType"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2880,
												"mutability": "mutable",
												"name": "keyValueType",
												"nameLocation": "1719:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 2914,
												"src": "1706:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_KeyValueType_$2737",
													"typeString": "enum KeyHelper.KeyValueType"
												},
												"typeName": {
													"id": 2879,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2878,
														"name": "KeyValueType",
														"nameLocations": [
															"1706:12:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2737,
														"src": "1706:12:5"
													},
													"referencedDeclaration": 2737,
													"src": "1706:12:5",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_KeyValueType_$2737",
														"typeString": "enum KeyHelper.KeyValueType"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2882,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "1754:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 2914,
												"src": "1741:16:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2881,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1741:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1671:92:5"
									},
									"returnParameters": {
										"id": 2888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2887,
												"mutability": "mutable",
												"name": "keys",
												"nameLocation": "1825:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 2914,
												"src": "1787:42:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_TokenKey_$2052_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IHederaTokenService.TokenKey[]"
												},
												"typeName": {
													"baseType": {
														"id": 2885,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 2884,
															"name": "IHederaTokenService.TokenKey",
															"nameLocations": [
																"1787:19:5",
																"1807:8:5"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 2052,
															"src": "1787:28:5"
														},
														"referencedDeclaration": 2052,
														"src": "1787:28:5",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenKey_$2052_storage_ptr",
															"typeString": "struct IHederaTokenService.TokenKey"
														}
													},
													"id": 2886,
													"nodeType": "ArrayTypeName",
													"src": "1787:30:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_TokenKey_$2052_storage_$dyn_storage_ptr",
														"typeString": "struct IHederaTokenService.TokenKey[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1786:44:5"
									},
									"scope": 3283,
									"src": "1639:392:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2957,
										"nodeType": "Block",
										"src": "2259:220:5",
										"statements": [
											{
												"expression": {
													"id": 2939,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2932,
														"name": "keys",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2930,
														"src": "2269:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_TokenKey_$2052_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct IHederaTokenService.TokenKey memory[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "31",
																"id": 2937,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2311:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																}
															],
															"id": 2936,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "2276:34:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_TokenKey_$2052_memory_ptr_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (struct IHederaTokenService.TokenKey memory[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 2934,
																	"nodeType": "UserDefinedTypeName",
																	"pathNode": {
																		"id": 2933,
																		"name": "IHederaTokenService.TokenKey",
																		"nameLocations": [
																			"2280:19:5",
																			"2300:8:5"
																		],
																		"nodeType": "IdentifierPath",
																		"referencedDeclaration": 2052,
																		"src": "2280:28:5"
																	},
																	"referencedDeclaration": 2052,
																	"src": "2280:28:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenKey_$2052_storage_ptr",
																		"typeString": "struct IHederaTokenService.TokenKey"
																	}
																},
																"id": 2935,
																"nodeType": "ArrayTypeName",
																"src": "2280:30:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_TokenKey_$2052_storage_$dyn_storage_ptr",
																	"typeString": "struct IHederaTokenService.TokenKey[]"
																}
															}
														},
														"id": 2938,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2276:37:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_TokenKey_$2052_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct IHederaTokenService.TokenKey memory[] memory"
														}
													},
													"src": "2269:44:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_TokenKey_$2052_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct IHederaTokenService.TokenKey memory[] memory"
													}
												},
												"id": 2940,
												"nodeType": "ExpressionStatement",
												"src": "2269:44:5"
											},
											{
												"expression": {
													"id": 2955,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2941,
															"name": "keys",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2930,
															"src": "2323:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_TokenKey_$2052_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct IHederaTokenService.TokenKey memory[] memory"
															}
														},
														"id": 2943,
														"indexExpression": {
															"hexValue": "30",
															"id": 2942,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2328:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2323:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenKey_$2052_memory_ptr",
															"typeString": "struct IHederaTokenService.TokenKey memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 2947,
																		"name": "firstType",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2917,
																		"src": "2392:9:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_KeyType_$2731",
																			"typeString": "enum KeyHelper.KeyType"
																		}
																	},
																	{
																		"id": 2948,
																		"name": "secondType",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2920,
																		"src": "2403:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_KeyType_$2731",
																			"typeString": "enum KeyHelper.KeyType"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_enum$_KeyType_$2731",
																			"typeString": "enum KeyHelper.KeyType"
																		},
																		{
																			"typeIdentifier": "t_enum$_KeyType_$2731",
																			"typeString": "enum KeyHelper.KeyType"
																		}
																	],
																	"id": 2946,
																	"name": "getDuplexKeyType",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3078,
																	"src": "2375:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_enum$_KeyType_$2731_$_t_enum$_KeyType_$2731_$returns$_t_uint256_$",
																		"typeString": "function (enum KeyHelper.KeyType,enum KeyHelper.KeyType) pure returns (uint256)"
																	}
																},
																"id": 2949,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2375:39:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"arguments": [
																	{
																		"id": 2951,
																		"name": "keyValueType",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2923,
																		"src": "2444:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_KeyValueType_$2737",
																			"typeString": "enum KeyHelper.KeyValueType"
																		}
																	},
																	{
																		"id": 2952,
																		"name": "key",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2925,
																		"src": "2458:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_enum$_KeyValueType_$2737",
																			"typeString": "enum KeyHelper.KeyValueType"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 2950,
																	"name": "getKeyValueType",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		3246,
																		3282
																	],
																	"referencedDeclaration": 3246,
																	"src": "2428:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_enum$_KeyValueType_$2737_$_t_bytes_memory_ptr_$returns$_t_struct$_KeyValue_$2046_memory_ptr_$",
																		"typeString": "function (enum KeyHelper.KeyValueType,bytes memory) view returns (struct IHederaTokenService.KeyValue memory)"
																	}
																},
																"id": 2953,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2428:34:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_KeyValue_$2046_memory_ptr",
																	"typeString": "struct IHederaTokenService.KeyValue memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_struct$_KeyValue_$2046_memory_ptr",
																	"typeString": "struct IHederaTokenService.KeyValue memory"
																}
															],
															"expression": {
																"id": 2944,
																"name": "IHederaTokenService",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2709,
																"src": "2333:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IHederaTokenService_$2709_$",
																	"typeString": "type(contract IHederaTokenService)"
																}
															},
															"id": 2945,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2353:8:5",
															"memberName": "TokenKey",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2052,
															"src": "2333:28:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_TokenKey_$2052_storage_ptr_$",
																"typeString": "type(struct IHederaTokenService.TokenKey storage pointer)"
															}
														},
														"id": 2954,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2333:139:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenKey_$2052_memory_ptr",
															"typeString": "struct IHederaTokenService.TokenKey memory"
														}
													},
													"src": "2323:149:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenKey_$2052_memory_ptr",
														"typeString": "struct IHederaTokenService.TokenKey memory"
													}
												},
												"id": 2956,
												"nodeType": "ExpressionStatement",
												"src": "2323:149:5"
											}
										]
									},
									"id": 2958,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCustomDuplexTypeKeys",
									"nameLocation": "2046:23:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2917,
												"mutability": "mutable",
												"name": "firstType",
												"nameLocation": "2087:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 2958,
												"src": "2079:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_KeyType_$2731",
													"typeString": "enum KeyHelper.KeyType"
												},
												"typeName": {
													"id": 2916,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2915,
														"name": "KeyType",
														"nameLocations": [
															"2079:7:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2731,
														"src": "2079:7:5"
													},
													"referencedDeclaration": 2731,
													"src": "2079:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_KeyType_$2731",
														"typeString": "enum KeyHelper.KeyType"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2920,
												"mutability": "mutable",
												"name": "secondType",
												"nameLocation": "2114:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 2958,
												"src": "2106:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_KeyType_$2731",
													"typeString": "enum KeyHelper.KeyType"
												},
												"typeName": {
													"id": 2919,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2918,
														"name": "KeyType",
														"nameLocations": [
															"2106:7:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2731,
														"src": "2106:7:5"
													},
													"referencedDeclaration": 2731,
													"src": "2106:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_KeyType_$2731",
														"typeString": "enum KeyHelper.KeyType"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2923,
												"mutability": "mutable",
												"name": "keyValueType",
												"nameLocation": "2147:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 2958,
												"src": "2134:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_KeyValueType_$2737",
													"typeString": "enum KeyHelper.KeyValueType"
												},
												"typeName": {
													"id": 2922,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2921,
														"name": "KeyValueType",
														"nameLocations": [
															"2134:12:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2737,
														"src": "2134:12:5"
													},
													"referencedDeclaration": 2737,
													"src": "2134:12:5",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_KeyValueType_$2737",
														"typeString": "enum KeyHelper.KeyValueType"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2925,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "2182:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 2958,
												"src": "2169:16:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2924,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2169:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2069:122:5"
									},
									"returnParameters": {
										"id": 2931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2930,
												"mutability": "mutable",
												"name": "keys",
												"nameLocation": "2253:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 2958,
												"src": "2215:42:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_TokenKey_$2052_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IHederaTokenService.TokenKey[]"
												},
												"typeName": {
													"baseType": {
														"id": 2928,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 2927,
															"name": "IHederaTokenService.TokenKey",
															"nameLocations": [
																"2215:19:5",
																"2235:8:5"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 2052,
															"src": "2215:28:5"
														},
														"referencedDeclaration": 2052,
														"src": "2215:28:5",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenKey_$2052_storage_ptr",
															"typeString": "struct IHederaTokenService.TokenKey"
														}
													},
													"id": 2929,
													"nodeType": "ArrayTypeName",
													"src": "2215:30:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_TokenKey_$2052_storage_$dyn_storage_ptr",
														"typeString": "struct IHederaTokenService.TokenKey[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2214:44:5"
									},
									"scope": 3283,
									"src": "2037:442:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2985,
										"nodeType": "Block",
										"src": "2668:147:5",
										"statements": [
											{
												"expression": {
													"id": 2983,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2972,
														"name": "tokenKey",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2970,
														"src": "2678:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenKey_$2052_memory_ptr",
															"typeString": "struct IHederaTokenService.TokenKey memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 2976,
																		"name": "keyType",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2961,
																		"src": "2742:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_KeyType_$2731",
																			"typeString": "enum KeyHelper.KeyType"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_enum$_KeyType_$2731",
																			"typeString": "enum KeyHelper.KeyType"
																		}
																	],
																	"id": 2975,
																	"name": "getKeyType",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3174,
																	"src": "2731:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_enum$_KeyType_$2731_$returns$_t_uint256_$",
																		"typeString": "function (enum KeyHelper.KeyType) view returns (uint256)"
																	}
																},
																"id": 2977,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2731:19:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"arguments": [
																	{
																		"id": 2979,
																		"name": "keyValueType",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2964,
																		"src": "2780:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_KeyValueType_$2737",
																			"typeString": "enum KeyHelper.KeyValueType"
																		}
																	},
																	{
																		"id": 2980,
																		"name": "key",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2966,
																		"src": "2794:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_enum$_KeyValueType_$2737",
																			"typeString": "enum KeyHelper.KeyValueType"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 2978,
																	"name": "getKeyValueType",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		3246,
																		3282
																	],
																	"referencedDeclaration": 3246,
																	"src": "2764:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_enum$_KeyValueType_$2737_$_t_bytes_memory_ptr_$returns$_t_struct$_KeyValue_$2046_memory_ptr_$",
																		"typeString": "function (enum KeyHelper.KeyValueType,bytes memory) view returns (struct IHederaTokenService.KeyValue memory)"
																	}
																},
																"id": 2981,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2764:34:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_KeyValue_$2046_memory_ptr",
																	"typeString": "struct IHederaTokenService.KeyValue memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_struct$_KeyValue_$2046_memory_ptr",
																	"typeString": "struct IHederaTokenService.KeyValue memory"
																}
															],
															"expression": {
																"id": 2973,
																"name": "IHederaTokenService",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2709,
																"src": "2689:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IHederaTokenService_$2709_$",
																	"typeString": "type(contract IHederaTokenService)"
																}
															},
															"id": 2974,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2709:8:5",
															"memberName": "TokenKey",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2052,
															"src": "2689:28:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_TokenKey_$2052_storage_ptr_$",
																"typeString": "type(struct IHederaTokenService.TokenKey storage pointer)"
															}
														},
														"id": 2982,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2689:119:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenKey_$2052_memory_ptr",
															"typeString": "struct IHederaTokenService.TokenKey memory"
														}
													},
													"src": "2678:130:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenKey_$2052_memory_ptr",
														"typeString": "struct IHederaTokenService.TokenKey memory"
													}
												},
												"id": 2984,
												"nodeType": "ExpressionStatement",
												"src": "2678:130:5"
											}
										]
									},
									"id": 2986,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getSingleKey",
									"nameLocation": "2494:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2967,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2961,
												"mutability": "mutable",
												"name": "keyType",
												"nameLocation": "2524:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 2986,
												"src": "2516:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_KeyType_$2731",
													"typeString": "enum KeyHelper.KeyType"
												},
												"typeName": {
													"id": 2960,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2959,
														"name": "KeyType",
														"nameLocations": [
															"2516:7:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2731,
														"src": "2516:7:5"
													},
													"referencedDeclaration": 2731,
													"src": "2516:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_KeyType_$2731",
														"typeString": "enum KeyHelper.KeyType"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2964,
												"mutability": "mutable",
												"name": "keyValueType",
												"nameLocation": "2554:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 2986,
												"src": "2541:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_KeyValueType_$2737",
													"typeString": "enum KeyHelper.KeyValueType"
												},
												"typeName": {
													"id": 2963,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2962,
														"name": "KeyValueType",
														"nameLocations": [
															"2541:12:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2737,
														"src": "2541:12:5"
													},
													"referencedDeclaration": 2737,
													"src": "2541:12:5",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_KeyValueType_$2737",
														"typeString": "enum KeyHelper.KeyValueType"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2966,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "2589:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 2986,
												"src": "2576:16:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2965,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2576:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2506:92:5"
									},
									"returnParameters": {
										"id": 2971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2970,
												"mutability": "mutable",
												"name": "tokenKey",
												"nameLocation": "2658:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 2986,
												"src": "2622:44:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenKey_$2052_memory_ptr",
													"typeString": "struct IHederaTokenService.TokenKey"
												},
												"typeName": {
													"id": 2969,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2968,
														"name": "IHederaTokenService.TokenKey",
														"nameLocations": [
															"2622:19:5",
															"2642:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2052,
														"src": "2622:28:5"
													},
													"referencedDeclaration": 2052,
													"src": "2622:28:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenKey_$2052_storage_ptr",
														"typeString": "struct IHederaTokenService.TokenKey"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2621:46:5"
									},
									"scope": 3283,
									"src": "2485:330:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3013,
										"nodeType": "Block",
										"src": "2999:147:5",
										"statements": [
											{
												"expression": {
													"id": 3011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3000,
														"name": "tokenKey",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2998,
														"src": "3009:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenKey_$2052_memory_ptr",
															"typeString": "struct IHederaTokenService.TokenKey memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 3004,
																		"name": "keyType",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2989,
																		"src": "3073:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_KeyType_$2731",
																			"typeString": "enum KeyHelper.KeyType"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_enum$_KeyType_$2731",
																			"typeString": "enum KeyHelper.KeyType"
																		}
																	],
																	"id": 3003,
																	"name": "getKeyType",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3174,
																	"src": "3062:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_enum$_KeyType_$2731_$returns$_t_uint256_$",
																		"typeString": "function (enum KeyHelper.KeyType) view returns (uint256)"
																	}
																},
																"id": 3005,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3062:19:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"arguments": [
																	{
																		"id": 3007,
																		"name": "keyValueType",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2992,
																		"src": "3111:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_KeyValueType_$2737",
																			"typeString": "enum KeyHelper.KeyValueType"
																		}
																	},
																	{
																		"id": 3008,
																		"name": "key",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2994,
																		"src": "3125:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_enum$_KeyValueType_$2737",
																			"typeString": "enum KeyHelper.KeyValueType"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 3006,
																	"name": "getKeyValueType",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		3246,
																		3282
																	],
																	"referencedDeclaration": 3282,
																	"src": "3095:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_enum$_KeyValueType_$2737_$_t_address_$returns$_t_struct$_KeyValue_$2046_memory_ptr_$",
																		"typeString": "function (enum KeyHelper.KeyValueType,address) pure returns (struct IHederaTokenService.KeyValue memory)"
																	}
																},
																"id": 3009,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3095:34:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_KeyValue_$2046_memory_ptr",
																	"typeString": "struct IHederaTokenService.KeyValue memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_struct$_KeyValue_$2046_memory_ptr",
																	"typeString": "struct IHederaTokenService.KeyValue memory"
																}
															],
															"expression": {
																"id": 3001,
																"name": "IHederaTokenService",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2709,
																"src": "3020:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IHederaTokenService_$2709_$",
																	"typeString": "type(contract IHederaTokenService)"
																}
															},
															"id": 3002,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3040:8:5",
															"memberName": "TokenKey",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2052,
															"src": "3020:28:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_TokenKey_$2052_storage_ptr_$",
																"typeString": "type(struct IHederaTokenService.TokenKey storage pointer)"
															}
														},
														"id": 3010,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3020:119:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenKey_$2052_memory_ptr",
															"typeString": "struct IHederaTokenService.TokenKey memory"
														}
													},
													"src": "3009:130:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenKey_$2052_memory_ptr",
														"typeString": "struct IHederaTokenService.TokenKey memory"
													}
												},
												"id": 3012,
												"nodeType": "ExpressionStatement",
												"src": "3009:130:5"
											}
										]
									},
									"id": 3014,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getSingleKey",
									"nameLocation": "2830:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2989,
												"mutability": "mutable",
												"name": "keyType",
												"nameLocation": "2860:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 3014,
												"src": "2852:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_KeyType_$2731",
													"typeString": "enum KeyHelper.KeyType"
												},
												"typeName": {
													"id": 2988,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2987,
														"name": "KeyType",
														"nameLocations": [
															"2852:7:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2731,
														"src": "2852:7:5"
													},
													"referencedDeclaration": 2731,
													"src": "2852:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_KeyType_$2731",
														"typeString": "enum KeyHelper.KeyType"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2992,
												"mutability": "mutable",
												"name": "keyValueType",
												"nameLocation": "2890:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 3014,
												"src": "2877:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_KeyValueType_$2737",
													"typeString": "enum KeyHelper.KeyValueType"
												},
												"typeName": {
													"id": 2991,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2990,
														"name": "KeyValueType",
														"nameLocations": [
															"2877:12:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2737,
														"src": "2877:12:5"
													},
													"referencedDeclaration": 2737,
													"src": "2877:12:5",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_KeyValueType_$2737",
														"typeString": "enum KeyHelper.KeyValueType"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2994,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "2920:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 3014,
												"src": "2912:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2993,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2912:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2842:87:5"
									},
									"returnParameters": {
										"id": 2999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2998,
												"mutability": "mutable",
												"name": "tokenKey",
												"nameLocation": "2989:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 3014,
												"src": "2953:44:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenKey_$2052_memory_ptr",
													"typeString": "struct IHederaTokenService.TokenKey"
												},
												"typeName": {
													"id": 2997,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2996,
														"name": "IHederaTokenService.TokenKey",
														"nameLocations": [
															"2953:19:5",
															"2973:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2052,
														"src": "2953:28:5"
													},
													"referencedDeclaration": 2052,
													"src": "2953:28:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenKey_$2052_storage_ptr",
														"typeString": "struct IHederaTokenService.TokenKey"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2952:46:5"
									},
									"scope": 3283,
									"src": "2821:325:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3045,
										"nodeType": "Block",
										"src": "3365:167:5",
										"statements": [
											{
												"expression": {
													"id": 3043,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3031,
														"name": "tokenKey",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3029,
														"src": "3375:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenKey_$2052_memory_ptr",
															"typeString": "struct IHederaTokenService.TokenKey memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 3035,
																		"name": "firstType",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3017,
																		"src": "3445:9:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_KeyType_$2731",
																			"typeString": "enum KeyHelper.KeyType"
																		}
																	},
																	{
																		"id": 3036,
																		"name": "secondType",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3020,
																		"src": "3456:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_KeyType_$2731",
																			"typeString": "enum KeyHelper.KeyType"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_enum$_KeyType_$2731",
																			"typeString": "enum KeyHelper.KeyType"
																		},
																		{
																			"typeIdentifier": "t_enum$_KeyType_$2731",
																			"typeString": "enum KeyHelper.KeyType"
																		}
																	],
																	"id": 3034,
																	"name": "getDuplexKeyType",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3078,
																	"src": "3428:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_enum$_KeyType_$2731_$_t_enum$_KeyType_$2731_$returns$_t_uint256_$",
																		"typeString": "function (enum KeyHelper.KeyType,enum KeyHelper.KeyType) pure returns (uint256)"
																	}
																},
																"id": 3037,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3428:39:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"arguments": [
																	{
																		"id": 3039,
																		"name": "keyValueType",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3023,
																		"src": "3497:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_KeyValueType_$2737",
																			"typeString": "enum KeyHelper.KeyValueType"
																		}
																	},
																	{
																		"id": 3040,
																		"name": "key",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3025,
																		"src": "3511:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_enum$_KeyValueType_$2737",
																			"typeString": "enum KeyHelper.KeyValueType"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 3038,
																	"name": "getKeyValueType",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		3246,
																		3282
																	],
																	"referencedDeclaration": 3246,
																	"src": "3481:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_enum$_KeyValueType_$2737_$_t_bytes_memory_ptr_$returns$_t_struct$_KeyValue_$2046_memory_ptr_$",
																		"typeString": "function (enum KeyHelper.KeyValueType,bytes memory) view returns (struct IHederaTokenService.KeyValue memory)"
																	}
																},
																"id": 3041,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3481:34:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_KeyValue_$2046_memory_ptr",
																	"typeString": "struct IHederaTokenService.KeyValue memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_struct$_KeyValue_$2046_memory_ptr",
																	"typeString": "struct IHederaTokenService.KeyValue memory"
																}
															],
															"expression": {
																"id": 3032,
																"name": "IHederaTokenService",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2709,
																"src": "3386:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IHederaTokenService_$2709_$",
																	"typeString": "type(contract IHederaTokenService)"
																}
															},
															"id": 3033,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3406:8:5",
															"memberName": "TokenKey",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2052,
															"src": "3386:28:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_TokenKey_$2052_storage_ptr_$",
																"typeString": "type(struct IHederaTokenService.TokenKey storage pointer)"
															}
														},
														"id": 3042,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3386:139:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenKey_$2052_memory_ptr",
															"typeString": "struct IHederaTokenService.TokenKey memory"
														}
													},
													"src": "3375:150:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenKey_$2052_memory_ptr",
														"typeString": "struct IHederaTokenService.TokenKey memory"
													}
												},
												"id": 3044,
												"nodeType": "ExpressionStatement",
												"src": "3375:150:5"
											}
										]
									},
									"id": 3046,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getSingleKey",
									"nameLocation": "3161:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3026,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3017,
												"mutability": "mutable",
												"name": "firstType",
												"nameLocation": "3191:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 3046,
												"src": "3183:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_KeyType_$2731",
													"typeString": "enum KeyHelper.KeyType"
												},
												"typeName": {
													"id": 3016,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3015,
														"name": "KeyType",
														"nameLocations": [
															"3183:7:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2731,
														"src": "3183:7:5"
													},
													"referencedDeclaration": 2731,
													"src": "3183:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_KeyType_$2731",
														"typeString": "enum KeyHelper.KeyType"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3020,
												"mutability": "mutable",
												"name": "secondType",
												"nameLocation": "3218:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 3046,
												"src": "3210:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_KeyType_$2731",
													"typeString": "enum KeyHelper.KeyType"
												},
												"typeName": {
													"id": 3019,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3018,
														"name": "KeyType",
														"nameLocations": [
															"3210:7:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2731,
														"src": "3210:7:5"
													},
													"referencedDeclaration": 2731,
													"src": "3210:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_KeyType_$2731",
														"typeString": "enum KeyHelper.KeyType"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3023,
												"mutability": "mutable",
												"name": "keyValueType",
												"nameLocation": "3251:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 3046,
												"src": "3238:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_KeyValueType_$2737",
													"typeString": "enum KeyHelper.KeyValueType"
												},
												"typeName": {
													"id": 3022,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3021,
														"name": "KeyValueType",
														"nameLocations": [
															"3238:12:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2737,
														"src": "3238:12:5"
													},
													"referencedDeclaration": 2737,
													"src": "3238:12:5",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_KeyValueType_$2737",
														"typeString": "enum KeyHelper.KeyValueType"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3025,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "3286:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 3046,
												"src": "3273:16:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3024,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3273:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3173:122:5"
									},
									"returnParameters": {
										"id": 3030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3029,
												"mutability": "mutable",
												"name": "tokenKey",
												"nameLocation": "3355:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 3046,
												"src": "3319:44:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenKey_$2052_memory_ptr",
													"typeString": "struct IHederaTokenService.TokenKey"
												},
												"typeName": {
													"id": 3028,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3027,
														"name": "IHederaTokenService.TokenKey",
														"nameLocations": [
															"3319:19:5",
															"3339:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2052,
														"src": "3319:28:5"
													},
													"referencedDeclaration": 2052,
													"src": "3319:28:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenKey_$2052_storage_ptr",
														"typeString": "struct IHederaTokenService.TokenKey"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3318:46:5"
									},
									"scope": 3283,
									"src": "3152:380:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3077,
										"nodeType": "Block",
										"src": "3665:112:5",
										"statements": [
											{
												"expression": {
													"id": 3065,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3057,
														"name": "keyType",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3055,
														"src": "3675:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 3062,
																		"name": "firstType",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3049,
																		"src": "3706:9:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_KeyType_$2731",
																			"typeString": "enum KeyHelper.KeyType"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_enum$_KeyType_$2731",
																			"typeString": "enum KeyHelper.KeyType"
																		}
																	],
																	"id": 3061,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3700:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	},
																	"typeName": {
																		"id": 3060,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "3700:5:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 3063,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3700:16:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															],
															"expression": {
																"id": 3058,
																"name": "keyType",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3055,
																"src": "3685:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3059,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3693:6:5",
															"memberName": "setBit",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3306,
															"src": "3685:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint8_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint8) pure returns (uint256)"
															}
														},
														"id": 3064,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3685:32:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3675:42:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3066,
												"nodeType": "ExpressionStatement",
												"src": "3675:42:5"
											},
											{
												"expression": {
													"id": 3075,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3067,
														"name": "keyType",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3055,
														"src": "3727:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 3072,
																		"name": "secondType",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3052,
																		"src": "3758:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_KeyType_$2731",
																			"typeString": "enum KeyHelper.KeyType"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_enum$_KeyType_$2731",
																			"typeString": "enum KeyHelper.KeyType"
																		}
																	],
																	"id": 3071,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3752:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	},
																	"typeName": {
																		"id": 3070,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "3752:5:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 3073,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3752:17:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															],
															"expression": {
																"id": 3068,
																"name": "keyType",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3055,
																"src": "3737:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3069,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3745:6:5",
															"memberName": "setBit",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3306,
															"src": "3737:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint8_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint8) pure returns (uint256)"
															}
														},
														"id": 3074,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3737:33:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3727:43:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3076,
												"nodeType": "ExpressionStatement",
												"src": "3727:43:5"
											}
										]
									},
									"id": 3078,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getDuplexKeyType",
									"nameLocation": "3547:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3053,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3049,
												"mutability": "mutable",
												"name": "firstType",
												"nameLocation": "3581:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 3078,
												"src": "3573:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_KeyType_$2731",
													"typeString": "enum KeyHelper.KeyType"
												},
												"typeName": {
													"id": 3048,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3047,
														"name": "KeyType",
														"nameLocations": [
															"3573:7:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2731,
														"src": "3573:7:5"
													},
													"referencedDeclaration": 2731,
													"src": "3573:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_KeyType_$2731",
														"typeString": "enum KeyHelper.KeyType"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3052,
												"mutability": "mutable",
												"name": "secondType",
												"nameLocation": "3608:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 3078,
												"src": "3600:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_KeyType_$2731",
													"typeString": "enum KeyHelper.KeyType"
												},
												"typeName": {
													"id": 3051,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3050,
														"name": "KeyType",
														"nameLocations": [
															"3600:7:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2731,
														"src": "3600:7:5"
													},
													"referencedDeclaration": 2731,
													"src": "3600:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_KeyType_$2731",
														"typeString": "enum KeyHelper.KeyType"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3563:61:5"
									},
									"returnParameters": {
										"id": 3056,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3055,
												"mutability": "mutable",
												"name": "keyType",
												"nameLocation": "3656:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 3078,
												"src": "3648:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3054,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3648:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3647:17:5"
									},
									"scope": 3283,
									"src": "3538:239:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3160,
										"nodeType": "Block",
										"src": "3849:396:5",
										"statements": [
											{
												"expression": {
													"id": 3092,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3083,
														"name": "keyType",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3081,
														"src": "3859:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"expression": {
																			"id": 3088,
																			"name": "KeyType",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2731,
																			"src": "3890:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_KeyType_$2731_$",
																				"typeString": "type(enum KeyHelper.KeyType)"
																			}
																		},
																		"id": 3089,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "3898:5:5",
																		"memberName": "ADMIN",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2724,
																		"src": "3890:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_KeyType_$2731",
																			"typeString": "enum KeyHelper.KeyType"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_enum$_KeyType_$2731",
																			"typeString": "enum KeyHelper.KeyType"
																		}
																	],
																	"id": 3087,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3884:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	},
																	"typeName": {
																		"id": 3086,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "3884:5:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 3090,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3884:20:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															],
															"expression": {
																"id": 3084,
																"name": "keyType",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3081,
																"src": "3869:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3085,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3877:6:5",
															"memberName": "setBit",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3306,
															"src": "3869:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint8_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint8) pure returns (uint256)"
															}
														},
														"id": 3091,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3869:36:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3859:46:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3093,
												"nodeType": "ExpressionStatement",
												"src": "3859:46:5"
											},
											{
												"expression": {
													"id": 3103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3094,
														"name": "keyType",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3081,
														"src": "3915:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"expression": {
																			"id": 3099,
																			"name": "KeyType",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2731,
																			"src": "3946:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_KeyType_$2731_$",
																				"typeString": "type(enum KeyHelper.KeyType)"
																			}
																		},
																		"id": 3100,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "3954:3:5",
																		"memberName": "KYC",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2725,
																		"src": "3946:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_KeyType_$2731",
																			"typeString": "enum KeyHelper.KeyType"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_enum$_KeyType_$2731",
																			"typeString": "enum KeyHelper.KeyType"
																		}
																	],
																	"id": 3098,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3940:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	},
																	"typeName": {
																		"id": 3097,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "3940:5:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 3101,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3940:18:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															],
															"expression": {
																"id": 3095,
																"name": "keyType",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3081,
																"src": "3925:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3096,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3933:6:5",
															"memberName": "setBit",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3306,
															"src": "3925:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint8_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint8) pure returns (uint256)"
															}
														},
														"id": 3102,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3925:34:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3915:44:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3104,
												"nodeType": "ExpressionStatement",
												"src": "3915:44:5"
											},
											{
												"expression": {
													"id": 3114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3105,
														"name": "keyType",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3081,
														"src": "3969:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"expression": {
																			"id": 3110,
																			"name": "KeyType",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2731,
																			"src": "4000:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_KeyType_$2731_$",
																				"typeString": "type(enum KeyHelper.KeyType)"
																			}
																		},
																		"id": 3111,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "4008:6:5",
																		"memberName": "FREEZE",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2726,
																		"src": "4000:14:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_KeyType_$2731",
																			"typeString": "enum KeyHelper.KeyType"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_enum$_KeyType_$2731",
																			"typeString": "enum KeyHelper.KeyType"
																		}
																	],
																	"id": 3109,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3994:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	},
																	"typeName": {
																		"id": 3108,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "3994:5:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 3112,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3994:21:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															],
															"expression": {
																"id": 3106,
																"name": "keyType",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3081,
																"src": "3979:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3107,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3987:6:5",
															"memberName": "setBit",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3306,
															"src": "3979:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint8_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint8) pure returns (uint256)"
															}
														},
														"id": 3113,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3979:37:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3969:47:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3115,
												"nodeType": "ExpressionStatement",
												"src": "3969:47:5"
											},
											{
												"expression": {
													"id": 3125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3116,
														"name": "keyType",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3081,
														"src": "4026:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"expression": {
																			"id": 3121,
																			"name": "KeyType",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2731,
																			"src": "4057:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_KeyType_$2731_$",
																				"typeString": "type(enum KeyHelper.KeyType)"
																			}
																		},
																		"id": 3122,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "4065:4:5",
																		"memberName": "WIPE",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2727,
																		"src": "4057:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_KeyType_$2731",
																			"typeString": "enum KeyHelper.KeyType"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_enum$_KeyType_$2731",
																			"typeString": "enum KeyHelper.KeyType"
																		}
																	],
																	"id": 3120,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4051:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	},
																	"typeName": {
																		"id": 3119,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "4051:5:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 3123,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4051:19:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															],
															"expression": {
																"id": 3117,
																"name": "keyType",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3081,
																"src": "4036:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4044:6:5",
															"memberName": "setBit",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3306,
															"src": "4036:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint8_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint8) pure returns (uint256)"
															}
														},
														"id": 3124,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4036:35:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4026:45:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3126,
												"nodeType": "ExpressionStatement",
												"src": "4026:45:5"
											},
											{
												"expression": {
													"id": 3136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3127,
														"name": "keyType",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3081,
														"src": "4081:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"expression": {
																			"id": 3132,
																			"name": "KeyType",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2731,
																			"src": "4112:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_KeyType_$2731_$",
																				"typeString": "type(enum KeyHelper.KeyType)"
																			}
																		},
																		"id": 3133,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "4120:6:5",
																		"memberName": "SUPPLY",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2728,
																		"src": "4112:14:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_KeyType_$2731",
																			"typeString": "enum KeyHelper.KeyType"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_enum$_KeyType_$2731",
																			"typeString": "enum KeyHelper.KeyType"
																		}
																	],
																	"id": 3131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4106:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	},
																	"typeName": {
																		"id": 3130,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "4106:5:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 3134,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4106:21:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															],
															"expression": {
																"id": 3128,
																"name": "keyType",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3081,
																"src": "4091:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3129,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4099:6:5",
															"memberName": "setBit",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3306,
															"src": "4091:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint8_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint8) pure returns (uint256)"
															}
														},
														"id": 3135,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4091:37:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4081:47:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3137,
												"nodeType": "ExpressionStatement",
												"src": "4081:47:5"
											},
											{
												"expression": {
													"id": 3147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3138,
														"name": "keyType",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3081,
														"src": "4138:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"expression": {
																			"id": 3143,
																			"name": "KeyType",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2731,
																			"src": "4169:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_KeyType_$2731_$",
																				"typeString": "type(enum KeyHelper.KeyType)"
																			}
																		},
																		"id": 3144,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "4177:3:5",
																		"memberName": "FEE",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2729,
																		"src": "4169:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_KeyType_$2731",
																			"typeString": "enum KeyHelper.KeyType"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_enum$_KeyType_$2731",
																			"typeString": "enum KeyHelper.KeyType"
																		}
																	],
																	"id": 3142,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4163:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	},
																	"typeName": {
																		"id": 3141,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "4163:5:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 3145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4163:18:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															],
															"expression": {
																"id": 3139,
																"name": "keyType",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3081,
																"src": "4148:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3140,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4156:6:5",
															"memberName": "setBit",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3306,
															"src": "4148:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint8_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint8) pure returns (uint256)"
															}
														},
														"id": 3146,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4148:34:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4138:44:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3148,
												"nodeType": "ExpressionStatement",
												"src": "4138:44:5"
											},
											{
												"expression": {
													"id": 3158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3149,
														"name": "keyType",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3081,
														"src": "4192:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"expression": {
																			"id": 3154,
																			"name": "KeyType",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2731,
																			"src": "4223:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_KeyType_$2731_$",
																				"typeString": "type(enum KeyHelper.KeyType)"
																			}
																		},
																		"id": 3155,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "4231:5:5",
																		"memberName": "PAUSE",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2730,
																		"src": "4223:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_KeyType_$2731",
																			"typeString": "enum KeyHelper.KeyType"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_enum$_KeyType_$2731",
																			"typeString": "enum KeyHelper.KeyType"
																		}
																	],
																	"id": 3153,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4217:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	},
																	"typeName": {
																		"id": 3152,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "4217:5:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 3156,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4217:20:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															],
															"expression": {
																"id": 3150,
																"name": "keyType",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3081,
																"src": "4202:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3151,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4210:6:5",
															"memberName": "setBit",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3306,
															"src": "4202:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint8_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint8) pure returns (uint256)"
															}
														},
														"id": 3157,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4202:36:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4192:46:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3159,
												"nodeType": "ExpressionStatement",
												"src": "4192:46:5"
											}
										]
									},
									"id": 3161,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAllKeyTypes",
									"nameLocation": "3792:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3079,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3806:2:5"
									},
									"returnParameters": {
										"id": 3082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3081,
												"mutability": "mutable",
												"name": "keyType",
												"nameLocation": "3840:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 3161,
												"src": "3832:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3080,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3832:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3831:17:5"
									},
									"scope": 3283,
									"src": "3783:462:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3173,
										"nodeType": "Block",
										"src": "4320:41:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 3169,
														"name": "keyTypes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2723,
														"src": "4337:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_enum$_KeyType_$2731_$_t_uint256_$",
															"typeString": "mapping(enum KeyHelper.KeyType => uint256)"
														}
													},
													"id": 3171,
													"indexExpression": {
														"id": 3170,
														"name": "keyType",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3164,
														"src": "4346:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_KeyType_$2731",
															"typeString": "enum KeyHelper.KeyType"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4337:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3168,
												"id": 3172,
												"nodeType": "Return",
												"src": "4330:24:5"
											}
										]
									},
									"id": 3174,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getKeyType",
									"nameLocation": "4260:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3164,
												"mutability": "mutable",
												"name": "keyType",
												"nameLocation": "4279:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 3174,
												"src": "4271:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_KeyType_$2731",
													"typeString": "enum KeyHelper.KeyType"
												},
												"typeName": {
													"id": 3163,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3162,
														"name": "KeyType",
														"nameLocations": [
															"4271:7:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2731,
														"src": "4271:7:5"
													},
													"referencedDeclaration": 2731,
													"src": "4271:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_KeyType_$2731",
														"typeString": "enum KeyHelper.KeyType"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4270:17:5"
									},
									"returnParameters": {
										"id": 3168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3167,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3174,
												"src": "4311:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3166,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4311:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4310:9:5"
									},
									"scope": 3283,
									"src": "4251:110:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3245,
										"nodeType": "Block",
										"src": "4528:577:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_KeyValueType_$2737",
														"typeString": "enum KeyHelper.KeyValueType"
													},
													"id": 3188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3185,
														"name": "keyValueType",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3177,
														"src": "4542:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_KeyValueType_$2737",
															"typeString": "enum KeyHelper.KeyValueType"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 3186,
															"name": "KeyValueType",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2737,
															"src": "4558:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_KeyValueType_$2737_$",
																"typeString": "type(enum KeyHelper.KeyValueType)"
															}
														},
														"id": 3187,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4571:19:5",
														"memberName": "INHERIT_ACCOUNT_KEY",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2732,
														"src": "4558:32:5",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_KeyValueType_$2737",
															"typeString": "enum KeyHelper.KeyValueType"
														}
													},
													"src": "4542:48:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_enum$_KeyValueType_$2737",
															"typeString": "enum KeyHelper.KeyValueType"
														},
														"id": 3199,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3196,
															"name": "keyValueType",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3177,
															"src": "4660:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_KeyValueType_$2737",
																"typeString": "enum KeyHelper.KeyValueType"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 3197,
																"name": "KeyValueType",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2737,
																"src": "4676:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_KeyValueType_$2737_$",
																	"typeString": "type(enum KeyHelper.KeyValueType)"
																}
															},
															"id": 3198,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "4689:11:5",
															"memberName": "CONTRACT_ID",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2733,
															"src": "4676:24:5",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_KeyValueType_$2737",
																"typeString": "enum KeyHelper.KeyValueType"
															}
														},
														"src": "4660:40:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_enum$_KeyValueType_$2737",
																"typeString": "enum KeyHelper.KeyValueType"
															},
															"id": 3210,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3207,
																"name": "keyValueType",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3177,
																"src": "4773:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_KeyValueType_$2737",
																	"typeString": "enum KeyHelper.KeyValueType"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 3208,
																	"name": "KeyValueType",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2737,
																	"src": "4789:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_KeyValueType_$2737_$",
																		"typeString": "type(enum KeyHelper.KeyValueType)"
																	}
																},
																"id": 3209,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4802:7:5",
																"memberName": "ED25519",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2734,
																"src": "4789:20:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_KeyValueType_$2737",
																	"typeString": "enum KeyHelper.KeyValueType"
																}
															},
															"src": "4773:36:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_enum$_KeyValueType_$2737",
																	"typeString": "enum KeyHelper.KeyValueType"
																},
																"id": 3221,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3218,
																	"name": "keyValueType",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3177,
																	"src": "4868:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_KeyValueType_$2737",
																		"typeString": "enum KeyHelper.KeyValueType"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 3219,
																		"name": "KeyValueType",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2737,
																		"src": "4884:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_KeyValueType_$2737_$",
																			"typeString": "type(enum KeyHelper.KeyValueType)"
																		}
																	},
																	"id": 3220,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "4897:9:5",
																	"memberName": "SECP256K1",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2735,
																	"src": "4884:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_KeyValueType_$2737",
																		"typeString": "enum KeyHelper.KeyValueType"
																	}
																},
																"src": "4868:38:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_enum$_KeyValueType_$2737",
																		"typeString": "enum KeyHelper.KeyValueType"
																	},
																	"id": 3232,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 3229,
																		"name": "keyValueType",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3177,
																		"src": "4973:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_KeyValueType_$2737",
																			"typeString": "enum KeyHelper.KeyValueType"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"expression": {
																			"id": 3230,
																			"name": "KeyValueType",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2737,
																			"src": "4989:12:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_KeyValueType_$2737_$",
																				"typeString": "type(enum KeyHelper.KeyValueType)"
																			}
																		},
																		"id": 3231,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "5002:23:5",
																		"memberName": "DELEGETABLE_CONTRACT_ID",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2736,
																		"src": "4989:36:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_KeyValueType_$2737",
																			"typeString": "enum KeyHelper.KeyValueType"
																		}
																	},
																	"src": "4973:52:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 3240,
																"nodeType": "IfStatement",
																"src": "4969:130:5",
																"trueBody": {
																	"id": 3239,
																	"nodeType": "Block",
																	"src": "5027:72:5",
																	"statements": [
																		{
																			"expression": {
																				"id": 3237,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"expression": {
																						"id": 3233,
																						"name": "keyValue",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3183,
																						"src": "5041:8:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_KeyValue_$2046_memory_ptr",
																							"typeString": "struct IHederaTokenService.KeyValue memory"
																						}
																					},
																					"id": 3235,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": true,
																					"memberLocation": "5050:21:5",
																					"memberName": "delegatableContractId",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2045,
																					"src": "5041:30:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"id": 3236,
																					"name": "supplyContract",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2718,
																					"src": "5074:14:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"src": "5041:47:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 3238,
																			"nodeType": "ExpressionStatement",
																			"src": "5041:47:5"
																		}
																	]
																}
															},
															"id": 3241,
															"nodeType": "IfStatement",
															"src": "4864:235:5",
															"trueBody": {
																"id": 3228,
																"nodeType": "Block",
																"src": "4908:55:5",
																"statements": [
																	{
																		"expression": {
																			"id": 3226,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"id": 3222,
																					"name": "keyValue",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3183,
																					"src": "4922:8:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_KeyValue_$2046_memory_ptr",
																						"typeString": "struct IHederaTokenService.KeyValue memory"
																					}
																				},
																				"id": 3224,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberLocation": "4931:15:5",
																				"memberName": "ECDSA_secp256k1",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2043,
																				"src": "4922:24:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 3225,
																				"name": "key",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3179,
																				"src": "4949:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"src": "4922:30:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 3227,
																		"nodeType": "ExpressionStatement",
																		"src": "4922:30:5"
																	}
																]
															}
														},
														"id": 3242,
														"nodeType": "IfStatement",
														"src": "4769:330:5",
														"trueBody": {
															"id": 3217,
															"nodeType": "Block",
															"src": "4811:47:5",
															"statements": [
																{
																	"expression": {
																		"id": 3215,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"expression": {
																				"id": 3211,
																				"name": "keyValue",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3183,
																				"src": "4825:8:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_KeyValue_$2046_memory_ptr",
																					"typeString": "struct IHederaTokenService.KeyValue memory"
																				}
																			},
																			"id": 3213,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"memberLocation": "4834:7:5",
																			"memberName": "ed25519",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2041,
																			"src": "4825:16:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"id": 3214,
																			"name": "key",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3179,
																			"src": "4844:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"src": "4825:22:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 3216,
																	"nodeType": "ExpressionStatement",
																	"src": "4825:22:5"
																}
															]
														}
													},
													"id": 3243,
													"nodeType": "IfStatement",
													"src": "4656:443:5",
													"trueBody": {
														"id": 3206,
														"nodeType": "Block",
														"src": "4702:61:5",
														"statements": [
															{
																"expression": {
																	"id": 3204,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"expression": {
																			"id": 3200,
																			"name": "keyValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3183,
																			"src": "4716:8:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_KeyValue_$2046_memory_ptr",
																				"typeString": "struct IHederaTokenService.KeyValue memory"
																			}
																		},
																		"id": 3202,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"memberLocation": "4725:10:5",
																		"memberName": "contractId",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2039,
																		"src": "4716:19:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"id": 3203,
																		"name": "supplyContract",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2718,
																		"src": "4738:14:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "4716:36:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 3205,
																"nodeType": "ExpressionStatement",
																"src": "4716:36:5"
															}
														]
													}
												},
												"id": 3244,
												"nodeType": "IfStatement",
												"src": "4538:561:5",
												"trueBody": {
													"id": 3195,
													"nodeType": "Block",
													"src": "4592:58:5",
													"statements": [
														{
															"expression": {
																"id": 3193,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 3189,
																		"name": "keyValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3183,
																		"src": "4606:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_KeyValue_$2046_memory_ptr",
																			"typeString": "struct IHederaTokenService.KeyValue memory"
																		}
																	},
																	"id": 3191,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "4615:17:5",
																	"memberName": "inheritAccountKey",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2037,
																	"src": "4606:26:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 3192,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4635:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "4606:33:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3194,
															"nodeType": "ExpressionStatement",
															"src": "4606:33:5"
														}
													]
												}
											}
										]
									},
									"id": 3246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getKeyValueType",
									"nameLocation": "4376:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3177,
												"mutability": "mutable",
												"name": "keyValueType",
												"nameLocation": "4414:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 3246,
												"src": "4401:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_KeyValueType_$2737",
													"typeString": "enum KeyHelper.KeyValueType"
												},
												"typeName": {
													"id": 3176,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3175,
														"name": "KeyValueType",
														"nameLocations": [
															"4401:12:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2737,
														"src": "4401:12:5"
													},
													"referencedDeclaration": 2737,
													"src": "4401:12:5",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_KeyValueType_$2737",
														"typeString": "enum KeyHelper.KeyValueType"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3179,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "4449:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 3246,
												"src": "4436:16:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3178,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4436:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4391:67:5"
									},
									"returnParameters": {
										"id": 3184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3183,
												"mutability": "mutable",
												"name": "keyValue",
												"nameLocation": "4518:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 3246,
												"src": "4482:44:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_KeyValue_$2046_memory_ptr",
													"typeString": "struct IHederaTokenService.KeyValue"
												},
												"typeName": {
													"id": 3182,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3181,
														"name": "IHederaTokenService.KeyValue",
														"nameLocations": [
															"4482:19:5",
															"4502:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2046,
														"src": "4482:28:5"
													},
													"referencedDeclaration": 2046,
													"src": "4482:28:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_KeyValue_$2046_storage_ptr",
														"typeString": "struct IHederaTokenService.KeyValue"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4481:46:5"
									},
									"scope": 3283,
									"src": "4367:738:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3281,
										"nodeType": "Block",
										"src": "5274:251:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_KeyValueType_$2737",
														"typeString": "enum KeyHelper.KeyValueType"
													},
													"id": 3260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3257,
														"name": "keyValueType",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3249,
														"src": "5288:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_KeyValueType_$2737",
															"typeString": "enum KeyHelper.KeyValueType"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 3258,
															"name": "KeyValueType",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2737,
															"src": "5304:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_KeyValueType_$2737_$",
																"typeString": "type(enum KeyHelper.KeyValueType)"
															}
														},
														"id": 3259,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5317:11:5",
														"memberName": "CONTRACT_ID",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2733,
														"src": "5304:24:5",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_KeyValueType_$2737",
															"typeString": "enum KeyHelper.KeyValueType"
														}
													},
													"src": "5288:40:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_enum$_KeyValueType_$2737",
															"typeString": "enum KeyHelper.KeyValueType"
														},
														"id": 3271,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3268,
															"name": "keyValueType",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3249,
															"src": "5397:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_KeyValueType_$2737",
																"typeString": "enum KeyHelper.KeyValueType"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 3269,
																"name": "KeyValueType",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2737,
																"src": "5413:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_KeyValueType_$2737_$",
																	"typeString": "type(enum KeyHelper.KeyValueType)"
																}
															},
															"id": 3270,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "5426:23:5",
															"memberName": "DELEGETABLE_CONTRACT_ID",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2736,
															"src": "5413:36:5",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_KeyValueType_$2737",
																"typeString": "enum KeyHelper.KeyValueType"
															}
														},
														"src": "5397:52:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 3279,
													"nodeType": "IfStatement",
													"src": "5393:126:5",
													"trueBody": {
														"id": 3278,
														"nodeType": "Block",
														"src": "5451:68:5",
														"statements": [
															{
																"expression": {
																	"id": 3276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"expression": {
																			"id": 3272,
																			"name": "keyValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3255,
																			"src": "5465:8:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_KeyValue_$2046_memory_ptr",
																				"typeString": "struct IHederaTokenService.KeyValue memory"
																			}
																		},
																		"id": 3274,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"memberLocation": "5474:21:5",
																		"memberName": "delegatableContractId",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2045,
																		"src": "5465:30:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"id": 3275,
																		"name": "keyAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3251,
																		"src": "5498:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "5465:43:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 3277,
																"nodeType": "ExpressionStatement",
																"src": "5465:43:5"
															}
														]
													}
												},
												"id": 3280,
												"nodeType": "IfStatement",
												"src": "5284:235:5",
												"trueBody": {
													"id": 3267,
													"nodeType": "Block",
													"src": "5330:57:5",
													"statements": [
														{
															"expression": {
																"id": 3265,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 3261,
																		"name": "keyValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3255,
																		"src": "5344:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_KeyValue_$2046_memory_ptr",
																			"typeString": "struct IHederaTokenService.KeyValue memory"
																		}
																	},
																	"id": 3263,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5353:10:5",
																	"memberName": "contractId",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2039,
																	"src": "5344:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 3264,
																	"name": "keyAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3251,
																	"src": "5366:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "5344:32:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 3266,
															"nodeType": "ExpressionStatement",
															"src": "5344:32:5"
														}
													]
												}
											}
										]
									},
									"id": 3282,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getKeyValueType",
									"nameLocation": "5120:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3249,
												"mutability": "mutable",
												"name": "keyValueType",
												"nameLocation": "5158:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 3282,
												"src": "5145:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_KeyValueType_$2737",
													"typeString": "enum KeyHelper.KeyValueType"
												},
												"typeName": {
													"id": 3248,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3247,
														"name": "KeyValueType",
														"nameLocations": [
															"5145:12:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2737,
														"src": "5145:12:5"
													},
													"referencedDeclaration": 2737,
													"src": "5145:12:5",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_KeyValueType_$2737",
														"typeString": "enum KeyHelper.KeyValueType"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3251,
												"mutability": "mutable",
												"name": "keyAddress",
												"nameLocation": "5188:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 3282,
												"src": "5180:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3250,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5180:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5135:69:5"
									},
									"returnParameters": {
										"id": 3256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3255,
												"mutability": "mutable",
												"name": "keyValue",
												"nameLocation": "5264:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 3282,
												"src": "5228:44:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_KeyValue_$2046_memory_ptr",
													"typeString": "struct IHederaTokenService.KeyValue"
												},
												"typeName": {
													"id": 3254,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3253,
														"name": "IHederaTokenService.KeyValue",
														"nameLocations": [
															"5228:19:5",
															"5248:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2046,
														"src": "5228:28:5"
													},
													"referencedDeclaration": 2046,
													"src": "5228:28:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_KeyValue_$2046_storage_ptr",
														"typeString": "struct IHederaTokenService.KeyValue"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5227:46:5"
									},
									"scope": 3283,
									"src": "5111:414:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3308,
							"src": "142:5385:5",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Bits",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 3307,
							"linearizedBaseContracts": [
								3307
							],
							"name": "Bits",
							"nameLocation": "5537:4:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 3289,
									"mutability": "constant",
									"name": "ONE",
									"nameLocation": "5574:3:5",
									"nodeType": "VariableDeclaration",
									"scope": 3307,
									"src": "5548:42:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3284,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "5548:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "31",
												"id": 3287,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "5588:1:5",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1_by_1",
													"typeString": "int_const 1"
												},
												"value": "1"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_1_by_1",
													"typeString": "int_const 1"
												}
											],
											"id": 3286,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "5580:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_uint256_$",
												"typeString": "type(uint256)"
											},
											"typeName": {
												"id": 3285,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5580:7:5",
												"typeDescriptions": {}
											}
										},
										"id": 3288,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "5580:10:5",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3305,
										"nodeType": "Block",
										"src": "5766:45:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3298,
														"name": "self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3291,
														"src": "5783:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "|",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3301,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3299,
																	"name": "ONE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3289,
																	"src": "5791:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<<",
																"rightExpression": {
																	"id": 3300,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3293,
																	"src": "5798:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "5791:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 3302,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5790:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5783:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3297,
												"id": 3304,
												"nodeType": "Return",
												"src": "5776:28:5"
											}
										]
									},
									"id": 3306,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setBit",
									"nameLocation": "5700:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3291,
												"mutability": "mutable",
												"name": "self",
												"nameLocation": "5715:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 3306,
												"src": "5707:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5707:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3293,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "5727:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 3306,
												"src": "5721:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3292,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5721:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5706:27:5"
									},
									"returnParameters": {
										"id": 3297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3296,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3306,
												"src": "5757:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5757:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5756:9:5"
									},
									"scope": 3307,
									"src": "5691:120:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3308,
							"src": "5529:284:5",
							"usedErrors": []
						}
					],
					"src": "39:5775:5"
				},
				"id": 5
			},
			"hbar/SmartContracts/Tests/MintAndTransfer3.sol": {
				"ast": {
					"absolutePath": "hbar/SmartContracts/Tests/MintAndTransfer3.sol",
					"exportedSymbols": {
						"Bits": [
							3307
						],
						"ExpiryHelper": [
							45
						],
						"FeeHelper": [
							361
						],
						"HederaResponseCodes": [
							880
						],
						"HederaTokenService": [
							2002
						],
						"IHederaTokenService": [
							2709
						],
						"KeyHelper": [
							3283
						],
						"NFTCreator": [
							3530
						]
					},
					"id": 3531,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3309,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:6"
						},
						{
							"absolutePath": "hbar/SmartContracts/Auction2/hts-precompile/HederaResponseCodes.sol",
							"file": "../Auction2/hts-precompile/HederaResponseCodes.sol",
							"id": 3310,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3531,
							"sourceUnit": 881,
							"src": "64:60:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "hbar/SmartContracts/Auction2/hts-precompile/IHederaTokenService.sol",
							"file": "../Auction2/hts-precompile/IHederaTokenService.sol",
							"id": 3311,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3531,
							"sourceUnit": 2710,
							"src": "126:60:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "hbar/SmartContracts/Auction2/hts-precompile/HederaTokenService.sol",
							"file": "../Auction2/hts-precompile/HederaTokenService.sol",
							"id": 3312,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3531,
							"sourceUnit": 2003,
							"src": "188:59:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "hbar/SmartContracts/Auction2/hts-precompile/KeyHelper.sol",
							"file": "../Auction2/hts-precompile/KeyHelper.sol",
							"id": 3313,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3531,
							"sourceUnit": 3308,
							"src": "249:50:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "hbar/SmartContracts/Auction2/hts-precompile/ExpiryHelper.sol",
							"file": "../Auction2/hts-precompile/ExpiryHelper.sol",
							"id": 3314,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3531,
							"sourceUnit": 46,
							"src": "301:53:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3315,
										"name": "ExpiryHelper",
										"nameLocations": [
											"381:12:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 45,
										"src": "381:12:6"
									},
									"id": 3316,
									"nodeType": "InheritanceSpecifier",
									"src": "381:12:6"
								},
								{
									"baseName": {
										"id": 3317,
										"name": "HederaTokenService",
										"nameLocations": [
											"395:18:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2002,
										"src": "395:18:6"
									},
									"id": 3318,
									"nodeType": "InheritanceSpecifier",
									"src": "395:18:6"
								}
							],
							"canonicalName": "NFTCreator",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3530,
							"linearizedBaseContracts": [
								3530,
								2002,
								880,
								45,
								361,
								3283
							],
							"name": "NFTCreator",
							"nameLocation": "367:10:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 3447,
										"nodeType": "Block",
										"src": "631:1057:6",
										"statements": [
											{
												"assignments": [
													3338
												],
												"declarations": [
													{
														"constant": false,
														"id": 3338,
														"mutability": "mutable",
														"name": "keys",
														"nameLocation": "693:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 3447,
														"src": "642:55:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_TokenKey_$2052_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct IHederaTokenService.TokenKey[]"
														},
														"typeName": {
															"baseType": {
																"id": 3336,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 3335,
																	"name": "IHederaTokenService.TokenKey",
																	"nameLocations": [
																		"642:19:6",
																		"662:8:6"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 2052,
																	"src": "642:28:6"
																},
																"referencedDeclaration": 2052,
																"src": "642:28:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenKey_$2052_storage_ptr",
																	"typeString": "struct IHederaTokenService.TokenKey"
																}
															},
															"id": 3337,
															"nodeType": "ArrayTypeName",
															"src": "642:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_TokenKey_$2052_storage_$dyn_storage_ptr",
																"typeString": "struct IHederaTokenService.TokenKey[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3345,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 3343,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "735:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 3342,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "700:34:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_TokenKey_$2052_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct IHederaTokenService.TokenKey memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 3340,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 3339,
																	"name": "IHederaTokenService.TokenKey",
																	"nameLocations": [
																		"704:19:6",
																		"724:8:6"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 2052,
																	"src": "704:28:6"
																},
																"referencedDeclaration": 2052,
																"src": "704:28:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenKey_$2052_storage_ptr",
																	"typeString": "struct IHederaTokenService.TokenKey"
																}
															},
															"id": 3341,
															"nodeType": "ArrayTypeName",
															"src": "704:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_TokenKey_$2052_storage_$dyn_storage_ptr",
																"typeString": "struct IHederaTokenService.TokenKey[]"
															}
														}
													},
													"id": 3344,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "700:37:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_TokenKey_$2052_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct IHederaTokenService.TokenKey memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "642:95:6"
											},
											{
												"expression": {
													"id": 3359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3346,
															"name": "keys",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3338,
															"src": "788:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_TokenKey_$2052_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct IHederaTokenService.TokenKey memory[] memory"
															}
														},
														"id": 3348,
														"indexExpression": {
															"hexValue": "30",
															"id": 3347,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "793:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "788:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenKey_$2052_memory_ptr",
															"typeString": "struct IHederaTokenService.TokenKey memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 3350,
																	"name": "KeyType",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2731,
																	"src": "825:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_KeyType_$2731_$",
																		"typeString": "type(enum KeyHelper.KeyType)"
																	}
																},
																"id": 3351,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "833:6:6",
																"memberName": "SUPPLY",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2728,
																"src": "825:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_KeyType_$2731",
																	"typeString": "enum KeyHelper.KeyType"
																}
															},
															{
																"expression": {
																	"id": 3352,
																	"name": "KeyValueType",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2737,
																	"src": "854:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_KeyValueType_$2737_$",
																		"typeString": "type(enum KeyHelper.KeyValueType)"
																	}
																},
																"id": 3353,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "867:11:6",
																"memberName": "CONTRACT_ID",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2733,
																"src": "854:24:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_KeyValueType_$2737",
																	"typeString": "enum KeyHelper.KeyValueType"
																}
															},
															{
																"arguments": [
																	{
																		"id": 3356,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "901:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_NFTCreator_$3530",
																			"typeString": "contract NFTCreator"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_NFTCreator_$3530",
																			"typeString": "contract NFTCreator"
																		}
																	],
																	"id": 3355,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "893:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 3354,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "893:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 3357,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "893:13:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_KeyType_$2731",
																	"typeString": "enum KeyHelper.KeyType"
																},
																{
																	"typeIdentifier": "t_enum$_KeyValueType_$2737",
																	"typeString": "enum KeyHelper.KeyValueType"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 3349,
															"name": "getSingleKey",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																2986,
																3014,
																3046
															],
															"referencedDeclaration": 3014,
															"src": "798:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_enum$_KeyType_$2731_$_t_enum$_KeyValueType_$2737_$_t_address_$returns$_t_struct$_TokenKey_$2052_memory_ptr_$",
																"typeString": "function (enum KeyHelper.KeyType,enum KeyHelper.KeyValueType,address) view returns (struct IHederaTokenService.TokenKey memory)"
															}
														},
														"id": 3358,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "798:119:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenKey_$2052_memory_ptr",
															"typeString": "struct IHederaTokenService.TokenKey memory"
														}
													},
													"src": "788:129:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenKey_$2052_memory_ptr",
														"typeString": "struct IHederaTokenService.TokenKey memory"
													}
												},
												"id": 3360,
												"nodeType": "ExpressionStatement",
												"src": "788:129:6"
											},
											{
												"assignments": [
													3365
												],
												"declarations": [
													{
														"constant": false,
														"id": 3365,
														"mutability": "mutable",
														"name": "token",
														"nameLocation": "969:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 3447,
														"src": "930:44:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_HederaToken_$2074_memory_ptr",
															"typeString": "struct IHederaTokenService.HederaToken"
														},
														"typeName": {
															"id": 3364,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 3363,
																"name": "IHederaTokenService.HederaToken",
																"nameLocations": [
																	"930:19:6",
																	"950:11:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2074,
																"src": "930:31:6"
															},
															"referencedDeclaration": 2074,
															"src": "930:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_HederaToken_$2074_storage_ptr",
																"typeString": "struct IHederaTokenService.HederaToken"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3366,
												"nodeType": "VariableDeclarationStatement",
												"src": "930:44:6"
											},
											{
												"expression": {
													"id": 3371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 3367,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3365,
															"src": "985:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_HederaToken_$2074_memory_ptr",
																"typeString": "struct IHederaTokenService.HederaToken memory"
															}
														},
														"id": 3369,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "991:4:6",
														"memberName": "name",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2054,
														"src": "985:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3370,
														"name": "name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3320,
														"src": "998:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "985:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"id": 3372,
												"nodeType": "ExpressionStatement",
												"src": "985:17:6"
											},
											{
												"expression": {
													"id": 3377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 3373,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3365,
															"src": "1013:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_HederaToken_$2074_memory_ptr",
																"typeString": "struct IHederaTokenService.HederaToken memory"
															}
														},
														"id": 3375,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1019:6:6",
														"memberName": "symbol",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2056,
														"src": "1013:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3376,
														"name": "symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3322,
														"src": "1028:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1013:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"id": 3378,
												"nodeType": "ExpressionStatement",
												"src": "1013:21:6"
											},
											{
												"expression": {
													"id": 3383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 3379,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3365,
															"src": "1045:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_HederaToken_$2074_memory_ptr",
																"typeString": "struct IHederaTokenService.HederaToken memory"
															}
														},
														"id": 3381,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1051:4:6",
														"memberName": "memo",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2060,
														"src": "1045:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3382,
														"name": "memo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3324,
														"src": "1058:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1045:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"id": 3384,
												"nodeType": "ExpressionStatement",
												"src": "1045:17:6"
											},
											{
												"expression": {
													"id": 3392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 3385,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3365,
															"src": "1073:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_HederaToken_$2074_memory_ptr",
																"typeString": "struct IHederaTokenService.HederaToken memory"
															}
														},
														"id": 3387,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1079:8:6",
														"memberName": "treasury",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2058,
														"src": "1073:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3390,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "1098:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_NFTCreator_$3530",
																	"typeString": "contract NFTCreator"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_NFTCreator_$3530",
																	"typeString": "contract NFTCreator"
																}
															],
															"id": 3389,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1090:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 3388,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1090:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 3391,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1090:13:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1073:30:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 3393,
												"nodeType": "ExpressionStatement",
												"src": "1073:30:6"
											},
											{
												"expression": {
													"id": 3398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 3394,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3365,
															"src": "1114:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_HederaToken_$2074_memory_ptr",
																"typeString": "struct IHederaTokenService.HederaToken memory"
															}
														},
														"id": 3396,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1120:15:6",
														"memberName": "tokenSupplyType",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2062,
														"src": "1114:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 3397,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1138:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1114:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3399,
												"nodeType": "ExpressionStatement",
												"src": "1114:28:6"
											},
											{
												"expression": {
													"id": 3404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 3400,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3365,
															"src": "1177:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_HederaToken_$2074_memory_ptr",
																"typeString": "struct IHederaTokenService.HederaToken memory"
															}
														},
														"id": 3402,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1183:9:6",
														"memberName": "maxSupply",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2064,
														"src": "1177:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3403,
														"name": "maxSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3326,
														"src": "1195:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "1177:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 3405,
												"nodeType": "ExpressionStatement",
												"src": "1177:27:6"
											},
											{
												"expression": {
													"id": 3410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 3406,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3365,
															"src": "1215:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_HederaToken_$2074_memory_ptr",
																"typeString": "struct IHederaTokenService.HederaToken memory"
															}
														},
														"id": 3408,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1221:9:6",
														"memberName": "tokenKeys",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2070,
														"src": "1215:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_TokenKey_$2052_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct IHederaTokenService.TokenKey memory[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3409,
														"name": "keys",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3338,
														"src": "1233:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_TokenKey_$2052_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct IHederaTokenService.TokenKey memory[] memory"
														}
													},
													"src": "1215:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_TokenKey_$2052_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct IHederaTokenService.TokenKey memory[] memory"
													}
												},
												"id": 3411,
												"nodeType": "ExpressionStatement",
												"src": "1215:22:6"
											},
											{
												"expression": {
													"id": 3416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 3412,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3365,
															"src": "1248:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_HederaToken_$2074_memory_ptr",
																"typeString": "struct IHederaTokenService.HederaToken memory"
															}
														},
														"id": 3414,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1254:13:6",
														"memberName": "freezeDefault",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2066,
														"src": "1248:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 3415,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1270:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1248:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3417,
												"nodeType": "ExpressionStatement",
												"src": "1248:27:6"
											},
											{
												"expression": {
													"id": 3428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 3418,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3365,
															"src": "1286:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_HederaToken_$2074_memory_ptr",
																"typeString": "struct IHederaTokenService.HederaToken memory"
															}
														},
														"id": 3420,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1292:6:6",
														"memberName": "expiry",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2073,
														"src": "1286:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Expiry_$2035_memory_ptr",
															"typeString": "struct IHederaTokenService.Expiry memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 3424,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "1331:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_NFTCreator_$3530",
																			"typeString": "contract NFTCreator"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_NFTCreator_$3530",
																			"typeString": "contract NFTCreator"
																		}
																	],
																	"id": 3423,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1323:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 3422,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1323:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 3425,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1323:13:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 3426,
																"name": "autoRenewPeriod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3328,
																"src": "1338:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															],
															"id": 3421,
															"name": "createAutoRenewExpiry",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "1301:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint32_$returns$_t_struct$_Expiry_$2035_memory_ptr_$",
																"typeString": "function (address,uint32) view returns (struct IHederaTokenService.Expiry memory)"
															}
														},
														"id": 3427,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1301:53:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Expiry_$2035_memory_ptr",
															"typeString": "struct IHederaTokenService.Expiry memory"
														}
													},
													"src": "1286:68:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Expiry_$2035_memory_ptr",
														"typeString": "struct IHederaTokenService.Expiry memory"
													}
												},
												"id": 3429,
												"nodeType": "ExpressionStatement",
												"src": "1286:68:6"
											},
											{
												"assignments": [
													3431,
													3433
												],
												"declarations": [
													{
														"constant": false,
														"id": 3431,
														"mutability": "mutable",
														"name": "responseCode",
														"nameLocation": "1415:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 3447,
														"src": "1411:16:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 3430,
															"name": "int",
															"nodeType": "ElementaryTypeName",
															"src": "1411:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 3433,
														"mutability": "mutable",
														"name": "createdToken",
														"nameLocation": "1437:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 3447,
														"src": "1429:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 3432,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1429:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3438,
												"initialValue": {
													"arguments": [
														{
															"id": 3436,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3365,
															"src": "1509:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_HederaToken_$2074_memory_ptr",
																"typeString": "struct IHederaTokenService.HederaToken memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_HederaToken_$2074_memory_ptr",
																"typeString": "struct IHederaTokenService.HederaToken memory"
															}
														],
														"expression": {
															"id": 3434,
															"name": "HederaTokenService",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2002,
															"src": "1453:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_HederaTokenService_$2002_$",
																"typeString": "type(contract HederaTokenService)"
															}
														},
														"id": 3435,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1486:22:6",
														"memberName": "createNonFungibleToken",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1457,
														"src": "1453:55:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_HederaToken_$2074_memory_ptr_$returns$_t_int256_$_t_address_$",
															"typeString": "function (struct IHederaTokenService.HederaToken memory) returns (int256,address)"
														}
													},
													"id": 3437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1453:62:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_int256_$_t_address_$",
														"typeString": "tuple(int256,address)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1410:105:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3439,
														"name": "responseCode",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3431,
														"src": "1532:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 3440,
															"name": "HederaResponseCodes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 880,
															"src": "1548:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_HederaResponseCodes_$880_$",
																"typeString": "type(contract HederaResponseCodes)"
															}
														},
														"id": 3441,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1568:7:6",
														"memberName": "SUCCESS",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 432,
														"src": "1548:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_int32",
															"typeString": "int32"
														}
													},
													"src": "1532:43:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3444,
												"nodeType": "IfStatement",
												"src": "1528:123:6",
												"trueBody": {
													"id": 3443,
													"nodeType": "Block",
													"src": "1577:74:6",
													"statements": []
												}
											},
											{
												"expression": {
													"id": 3445,
													"name": "createdToken",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3433,
													"src": "1668:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 3332,
												"id": 3446,
												"nodeType": "Return",
												"src": "1661:19:6"
											}
										]
									},
									"functionSelector": "a1a79cde",
									"id": 3448,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "createNft",
									"nameLocation": "430:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3320,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "464:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 3448,
												"src": "450:18:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3319,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "450:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3322,
												"mutability": "mutable",
												"name": "symbol",
												"nameLocation": "493:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 3448,
												"src": "479:20:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "479:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3324,
												"mutability": "mutable",
												"name": "memo",
												"nameLocation": "524:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 3448,
												"src": "510:18:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "510:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3326,
												"mutability": "mutable",
												"name": "maxSupply",
												"nameLocation": "546:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 3448,
												"src": "539:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 3325,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3328,
												"mutability": "mutable",
												"name": "autoRenewPeriod",
												"nameLocation": "573:15:6",
												"nodeType": "VariableDeclaration",
												"scope": 3448,
												"src": "566:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 3327,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "566:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "439:156:6"
									},
									"returnParameters": {
										"id": 3332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3331,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3448,
												"src": "622:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "622:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "621:9:6"
									},
									"scope": 3530,
									"src": "421:1267:6",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3484,
										"nodeType": "Block",
										"src": "1803:315:6",
										"statements": [
											{
												"assignments": [
													3459,
													null,
													3462
												],
												"declarations": [
													{
														"constant": false,
														"id": 3459,
														"mutability": "mutable",
														"name": "response",
														"nameLocation": "1819:8:6",
														"nodeType": "VariableDeclaration",
														"scope": 3484,
														"src": "1815:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 3458,
															"name": "int",
															"nodeType": "ElementaryTypeName",
															"src": "1815:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													},
													null,
													{
														"constant": false,
														"id": 3462,
														"mutability": "mutable",
														"name": "serial",
														"nameLocation": "1846:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 3484,
														"src": "1831:21:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_int64_$dyn_memory_ptr",
															"typeString": "int64[]"
														},
														"typeName": {
															"baseType": {
																"id": 3460,
																"name": "int64",
																"nodeType": "ElementaryTypeName",
																"src": "1831:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_int64",
																	"typeString": "int64"
																}
															},
															"id": 3461,
															"nodeType": "ArrayTypeName",
															"src": "1831:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_int64_$dyn_storage_ptr",
																"typeString": "int64[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3469,
												"initialValue": {
													"arguments": [
														{
															"id": 3465,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3450,
															"src": "1899:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "30",
															"id": 3466,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1919:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 3467,
															"name": "metadata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3453,
															"src": "1935:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
																"typeString": "bytes memory[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
																"typeString": "bytes memory[] memory"
															}
														],
														"expression": {
															"id": 3463,
															"name": "HederaTokenService",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2002,
															"src": "1856:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_HederaTokenService_$2002_$",
																"typeString": "type(contract HederaTokenService)"
															}
														},
														"id": 3464,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1875:9:6",
														"memberName": "mintToken",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1050,
														"src": "1856:28:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint64_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$returns$_t_int256_$_t_uint64_$_t_array$_t_int64_$dyn_memory_ptr_$",
															"typeString": "function (address,uint64,bytes memory[] memory) returns (int256,uint64,int64[] memory)"
														}
													},
													"id": 3468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1856:98:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_int256_$_t_uint64_$_t_array$_t_int64_$dyn_memory_ptr_$",
														"typeString": "tuple(int256,uint64,int64[] memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1814:140:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3470,
														"name": "response",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3459,
														"src": "1971:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 3471,
															"name": "HederaResponseCodes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 880,
															"src": "1983:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_HederaResponseCodes_$880_$",
																"typeString": "type(contract HederaResponseCodes)"
															}
														},
														"id": 3472,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2003:7:6",
														"memberName": "SUCCESS",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 432,
														"src": "1983:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_int32",
															"typeString": "int32"
														}
													},
													"src": "1971:39:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3479,
												"nodeType": "IfStatement",
												"src": "1967:115:6",
												"trueBody": {
													"id": 3478,
													"nodeType": "Block",
													"src": "2012:70:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"hexValue": "4661696c656420746f206d696e74206e6f6e2d66756e6769626c6520746f6b656e",
																		"id": 3475,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2034:35:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_ac0717d6bfbebcd19ba94ac3f67866c04f07fcffbe24763a234917dbad73feb4",
																			"typeString": "literal_string \"Failed to mint non-fungible token\""
																		},
																		"value": "Failed to mint non-fungible token"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_ac0717d6bfbebcd19ba94ac3f67866c04f07fcffbe24763a234917dbad73feb4",
																			"typeString": "literal_string \"Failed to mint non-fungible token\""
																		}
																	],
																	"id": 3474,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "2027:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 3476,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2027:43:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3477,
															"nodeType": "ExpressionStatement",
															"src": "2027:43:6"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 3480,
														"name": "serial",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3462,
														"src": "2101:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_int64_$dyn_memory_ptr",
															"typeString": "int64[] memory"
														}
													},
													"id": 3482,
													"indexExpression": {
														"hexValue": "30",
														"id": 3481,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2108:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2101:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"functionReturnParameters": 3457,
												"id": 3483,
												"nodeType": "Return",
												"src": "2094:16:6"
											}
										]
									},
									"functionSelector": "0a284cb6",
									"id": 3485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mintNft",
									"nameLocation": "1705:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3450,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1731:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 3485,
												"src": "1723:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3449,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1723:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3453,
												"mutability": "mutable",
												"name": "metadata",
												"nameLocation": "1762:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 3485,
												"src": "1747:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
													"typeString": "bytes[]"
												},
												"typeName": {
													"baseType": {
														"id": 3451,
														"name": "bytes",
														"nodeType": "ElementaryTypeName",
														"src": "1747:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage_ptr",
															"typeString": "bytes"
														}
													},
													"id": 3452,
													"nodeType": "ArrayTypeName",
													"src": "1747:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
														"typeString": "bytes[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1712:65:6"
									},
									"returnParameters": {
										"id": 3457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3456,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3485,
												"src": "1796:5:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 3455,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "1796:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1795:7:6"
									},
									"scope": 3530,
									"src": "1696:422:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3528,
										"nodeType": "Block",
										"src": "2251:387:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3499,
															"name": "receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3489,
															"src": "2296:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3500,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3487,
															"src": "2306:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 3496,
															"name": "HederaTokenService",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2002,
															"src": "2262:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_HederaTokenService_$2002_$",
																"typeString": "type(contract HederaTokenService)"
															}
														},
														"id": 3498,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2281:14:6",
														"memberName": "associateToken",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1185,
														"src": "2262:33:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$_t_int256_$",
															"typeString": "function (address,address) returns (int256)"
														}
													},
													"id": 3501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2262:50:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 3502,
												"nodeType": "ExpressionStatement",
												"src": "2262:50:6"
											},
											{
												"assignments": [
													3504
												],
												"declarations": [
													{
														"constant": false,
														"id": 3504,
														"mutability": "mutable",
														"name": "response",
														"nameLocation": "2327:8:6",
														"nodeType": "VariableDeclaration",
														"scope": 3528,
														"src": "2323:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 3503,
															"name": "int",
															"nodeType": "ElementaryTypeName",
															"src": "2323:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3515,
												"initialValue": {
													"arguments": [
														{
															"id": 3507,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3487,
															"src": "2383:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 3510,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2411:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NFTCreator_$3530",
																		"typeString": "contract NFTCreator"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NFTCreator_$3530",
																		"typeString": "contract NFTCreator"
																	}
																],
																"id": 3509,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2403:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3508,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2403:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 3511,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2403:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3512,
															"name": "receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3489,
															"src": "2431:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3513,
															"name": "serial",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3491,
															"src": "2454:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_int64",
																"typeString": "int64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_int64",
																"typeString": "int64"
															}
														],
														"expression": {
															"id": 3505,
															"name": "HederaTokenService",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2002,
															"src": "2338:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_HederaTokenService_$2002_$",
																"typeString": "type(contract HederaTokenService)"
															}
														},
														"id": 3506,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2357:11:6",
														"memberName": "transferNFT",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2001,
														"src": "2338:30:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_int64_$returns$_t_int256_$",
															"typeString": "function (address,address,address,int64) returns (int256)"
														}
													},
													"id": 3514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2338:133:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2323:148:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3516,
														"name": "response",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3504,
														"src": "2488:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 3517,
															"name": "HederaResponseCodes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 880,
															"src": "2500:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_HederaResponseCodes_$880_$",
																"typeString": "type(contract HederaResponseCodes)"
															}
														},
														"id": 3518,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2520:7:6",
														"memberName": "SUCCESS",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 432,
														"src": "2500:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_int32",
															"typeString": "int32"
														}
													},
													"src": "2488:39:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3525,
												"nodeType": "IfStatement",
												"src": "2484:119:6",
												"trueBody": {
													"id": 3524,
													"nodeType": "Block",
													"src": "2529:74:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"hexValue": "4661696c656420746f207472616e73666572206e6f6e2d66756e6769626c6520746f6b656e",
																		"id": 3521,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2551:39:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_1b4af10c92b76c4a3a958699c6b18d02400d3d3fb629c80d497d7a8c2883a272",
																			"typeString": "literal_string \"Failed to transfer non-fungible token\""
																		},
																		"value": "Failed to transfer non-fungible token"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_1b4af10c92b76c4a3a958699c6b18d02400d3d3fb629c80d497d7a8c2883a272",
																			"typeString": "literal_string \"Failed to transfer non-fungible token\""
																		}
																	],
																	"id": 3520,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "2544:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 3522,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2544:47:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3523,
															"nodeType": "ExpressionStatement",
															"src": "2544:47:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 3526,
													"name": "response",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3504,
													"src": "2622:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3495,
												"id": 3527,
												"nodeType": "Return",
												"src": "2615:15:6"
											}
										]
									},
									"functionSelector": "82b562aa",
									"id": 3529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferNft",
									"nameLocation": "2135:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3487,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2165:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 3529,
												"src": "2157:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2157:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3489,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "2189:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 3529,
												"src": "2181:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3488,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2181:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3491,
												"mutability": "mutable",
												"name": "serial",
												"nameLocation": "2214:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 3529,
												"src": "2208:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 3490,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "2208:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2146:81:6"
									},
									"returnParameters": {
										"id": 3495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3494,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3529,
												"src": "2246:3:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3493,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "2246:3:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2245:5:6"
									},
									"scope": 3530,
									"src": "2126:512:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3531,
							"src": "358:2283:6",
							"usedErrors": []
						}
					],
					"src": "37:2604:6"
				},
				"id": 6
			}
		}
	}
}
{
	"id": "290271cb57cee17ca517626667ce8cd4",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.9",
	"solcLongVersion": "0.8.9+commit.e5eed63a",
	"input": {
		"language": "Solidity",
		"sources": {
			"SmartContracts/Auction2/auction.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.9;\r\nimport {IHederaTokenService} from \"https://github.com/hashgraph/hedera-smart-contracts/contracts/hts-precompile/IHederaTokenService.sol\";\r\n\r\ninterface KarbonMoneta {\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) external;\r\n\r\n    function transferFrom(\r\n        address,\r\n        address,\r\n        uint256\r\n    ) external;\r\n}\r\n\r\ncontract EnglishAuction {\r\n    event Start();\r\n    event Bid(address indexed sender, uint256 amount);\r\n    event End(address[] winners, uint256[] amount);\r\n\r\n    KarbonMoneta public tokenToBeAttributed;\r\n    uint64 public auctionID;\r\n    address payable public seller;\r\n    uint256 public endAt;\r\n    bool public started;\r\n    bool public ended;\r\n\r\n    address[] public highestBidders;\r\n    uint256[] public highestBids;\r\n    mapping(address => uint256) public bids;\r\n\r\n    constructor(address _tokenAddress, uint64 _auctionNumber) {\r\n        tokenToBeAttributed = KarbonMoneta(_tokenAddress);\r\n        auctionID = _auctionNumber;\r\n\r\n        seller = payable(msg.sender);\r\n        highestBids = [0];\r\n    }\r\n\r\n    function start() external {\r\n        require(!started, \"started\");\r\n        require(msg.sender == seller, \"not seller\");\r\n\r\n        tokenToBeAttributed.transferFrom(msg.sender, address(this), 1);\r\n\r\n        started = true;\r\n        endAt = block.timestamp + 7 days;\r\n\r\n        emit Start();\r\n    }\r\n\r\n    function bid() external payable {\r\n        require(started, \"not started\");\r\n        require(block.timestamp < endAt, \"ended\");\r\n        bids[msg.sender] += msg.value;\r\n\r\n        emit Bid(msg.sender, msg.value);\r\n    }\r\n\r\n    function end() external {\r\n        require(started, \"not started\");\r\n        require(block.timestamp >= endAt, \"not ended\");\r\n        require(!ended, \"ended\");\r\n\r\n        ended = true;\r\n        //calculate the total bidded amount\r\n        uint256 totalBiddedAmount = 0;\r\n        for (uint64 i = 0; i < highestBidders.length; i++) {\r\n            totalBiddedAmount += bids[highestBidders[i]];\r\n        }\r\n        if (highestBidders.length != 0) {\r\n            for (uint64 i = 0; i < highestBidders.length; i++) {\r\n                tokenToBeAttributed.safeTransferFrom(\r\n                    address(this),\r\n                    highestBidders[i],\r\n                    1 / totalBiddedAmount\r\n                );\r\n            }\r\n        }\r\n\r\n        emit End(highestBidders, highestBids);\r\n    }\r\n}\r\n"
			},
			"https://github.com/hashgraph/hedera-smart-contracts/contracts/hts-precompile/IHederaTokenService.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity >=0.4.9 <0.9.0;\npragma experimental ABIEncoderV2;\n\ninterface IHederaTokenService {\n\n    /// Transfers cryptocurrency among two or more accounts by making the desired adjustments to their\n    /// balances. Each transfer list can specify up to 10 adjustments. Each negative amount is withdrawn\n    /// from the corresponding account (a sender), and each positive one is added to the corresponding\n    /// account (a receiver). The amounts list must sum to zero. Each amount is a number of tinybars\n    /// (there are 100,000,000 tinybars in one hbar).  If any sender account fails to have sufficient\n    /// hbars, then the entire transaction fails, and none of those transfers occur, though the\n    /// transaction fee is still charged. This transaction must be signed by the keys for all the sending\n    /// accounts, and for any receiving accounts that have receiverSigRequired == true. The signatures\n    /// are in the same order as the accounts, skipping those accounts that don't need a signature.\n    /// @custom:version 0.3.0 previous version did not include isApproval\n    struct AccountAmount {\n        // The Account ID, as a solidity address, that sends/receives cryptocurrency or tokens\n        address accountID;\n\n        // The amount of  the lowest denomination of the given token that\n        // the account sends(negative) or receives(positive)\n        int64 amount;\n\n        // If true then the transfer is expected to be an approved allowance and the\n        // accountID is expected to be the owner. The default is false (omitted).\n        bool isApproval;\n    }\n\n    /// A sender account, a receiver account, and the serial number of an NFT of a Token with\n    /// NON_FUNGIBLE_UNIQUE type. When minting NFTs the sender will be the default AccountID instance\n    /// (0.0.0 aka 0x0) and when burning NFTs, the receiver will be the default AccountID instance.\n    /// @custom:version 0.3.0 previous version did not include isApproval\n    struct NftTransfer {\n        // The solidity address of the sender\n        address senderAccountID;\n\n        // The solidity address of the receiver\n        address receiverAccountID;\n\n        // The serial number of the NFT\n        int64 serialNumber;\n\n        // If true then the transfer is expected to be an approved allowance and the\n        // accountID is expected to be the owner. The default is false (omitted).\n        bool isApproval;\n    }\n\n    struct TokenTransferList {\n        // The ID of the token as a solidity address\n        address token;\n\n        // Applicable to tokens of type FUNGIBLE_COMMON. Multiple list of AccountAmounts, each of which\n        // has an account and amount.\n        AccountAmount[] transfers;\n\n        // Applicable to tokens of type NON_FUNGIBLE_UNIQUE. Multiple list of NftTransfers, each of\n        // which has a sender and receiver account, including the serial number of the NFT\n        NftTransfer[] nftTransfers;\n    }\n\n    struct TransferList {\n        // Multiple list of AccountAmounts, each of which has an account and amount.\n        // Used to transfer hbars between the accounts in the list.\n        AccountAmount[] transfers;\n    }\n\n    /// Expiry properties of a Hedera token - second, autoRenewAccount, autoRenewPeriod\n    struct Expiry {\n        // The epoch second at which the token should expire; if an auto-renew account and period are\n        // specified, this is coerced to the current epoch second plus the autoRenewPeriod\n        uint32 second;\n\n        // ID of an account which will be automatically charged to renew the token's expiration, at\n        // autoRenewPeriod interval, expressed as a solidity address\n        address autoRenewAccount;\n\n        // The interval at which the auto-renew account will be charged to extend the token's expiry\n        uint32 autoRenewPeriod;\n    }\n\n    /// A Key can be a public key from either the Ed25519 or ECDSA(secp256k1) signature schemes, where\n    /// in the ECDSA(secp256k1) case we require the 33-byte compressed form of the public key. We call\n    /// these public keys <b>primitive keys</b>.\n    /// A Key can also be the ID of a smart contract instance, which is then authorized to perform any\n    /// precompiled contract action that requires this key to sign.\n    /// Note that when a Key is a smart contract ID, it <i>doesn't</i> mean the contract with that ID\n    /// will actually create a cryptographic signature. It only means that when the contract calls a\n    /// precompiled contract, the resulting \"child transaction\" will be authorized to perform any action\n    /// controlled by the Key.\n    /// Exactly one of the possible values should be populated in order for the Key to be valid.\n    struct KeyValue {\n\n        // if set to true, the key of the calling Hedera account will be inherited as the token key\n        bool inheritAccountKey;\n\n        // smart contract instance that is authorized as if it had signed with a key\n        address contractId;\n\n        // Ed25519 public key bytes\n        bytes ed25519;\n\n        // Compressed ECDSA(secp256k1) public key bytes\n        bytes ECDSA_secp256k1;\n\n        // A smart contract that, if the recipient of the active message frame, should be treated\n        // as having signed. (Note this does not mean the <i>code being executed in the frame</i>\n        // will belong to the given contract, since it could be running another contract's code via\n        // <tt>delegatecall</tt>. So setting this key is a more permissive version of setting the\n        // contractID key, which also requires the code in the active message frame belong to the\n        // the contract with the given id.)\n        address delegatableContractId;\n    }\n\n    /// A list of token key types the key should be applied to and the value of the key\n    struct TokenKey {\n\n        // bit field representing the key type. Keys of all types that have corresponding bits set to 1\n        // will be created for the token.\n        // 0th bit: adminKey\n        // 1st bit: kycKey\n        // 2nd bit: freezeKey\n        // 3rd bit: wipeKey\n        // 4th bit: supplyKey\n        // 5th bit: feeScheduleKey\n        // 6th bit: pauseKey\n        // 7th bit: ignored\n        uint keyType;\n\n        // the value that will be set to the key type\n        KeyValue key;\n    }\n\n    /// Basic properties of a Hedera Token - name, symbol, memo, tokenSupplyType, maxSupply,\n    /// treasury, freezeDefault. These properties are related both to Fungible and NFT token types.\n    struct HederaToken {\n        // The publicly visible name of the token. The token name is specified as a Unicode string.\n        // Its UTF-8 encoding cannot exceed 100 bytes, and cannot contain the 0 byte (NUL).\n        string name;\n\n        // The publicly visible token symbol. The token symbol is specified as a Unicode string.\n        // Its UTF-8 encoding cannot exceed 100 bytes, and cannot contain the 0 byte (NUL).\n        string symbol;\n\n        // The ID of the account which will act as a treasury for the token as a solidity address.\n        // This account will receive the specified initial supply or the newly minted NFTs in\n        // the case for NON_FUNGIBLE_UNIQUE Type\n        address treasury;\n\n        // The memo associated with the token (UTF-8 encoding max 100 bytes)\n        string memo;\n\n        // IWA compatibility. Specified the token supply type. Defaults to INFINITE\n        bool tokenSupplyType;\n\n        // IWA Compatibility. Depends on TokenSupplyType. For tokens of type FUNGIBLE_COMMON - the\n        // maximum number of tokens that can be in circulation. For tokens of type NON_FUNGIBLE_UNIQUE -\n        // the maximum number of NFTs (serial numbers) that can be minted. This field can never be changed!\n        int64 maxSupply;\n\n        // The default Freeze status (frozen or unfrozen) of Hedera accounts relative to this token. If\n        // true, an account must be unfrozen before it can receive the token\n        bool freezeDefault;\n\n        // list of keys to set to the token\n        TokenKey[] tokenKeys;\n\n        // expiry properties of a Hedera token - second, autoRenewAccount, autoRenewPeriod\n        Expiry expiry;\n    }\n\n    /// Additional post creation fungible and non fungible properties of a Hedera Token.\n    struct TokenInfo {\n        /// Basic properties of a Hedera Token\n        HederaToken token;\n\n        /// The number of tokens (fungible) or serials (non-fungible) of the token\n        uint64 totalSupply;\n\n        /// Specifies whether the token is deleted or not\n        bool deleted;\n\n        /// Specifies whether the token kyc was defaulted with KycNotApplicable (true) or Revoked (false)\n        bool defaultKycStatus;\n\n        /// Specifies whether the token is currently paused or not\n        bool pauseStatus;\n\n        /// The fixed fees collected when transferring the token\n        FixedFee[] fixedFees;\n\n        /// The fractional fees collected when transferring the token\n        FractionalFee[] fractionalFees;\n\n        /// The royalty fees collected when transferring the token\n        RoyaltyFee[] royaltyFees;\n\n        /// The ID of the network ledger\n        string ledgerId;\n    }\n\n    /// Additional fungible properties of a Hedera Token.\n    struct FungibleTokenInfo {\n        /// The shared hedera token info\n        TokenInfo tokenInfo;\n\n        /// The number of decimal places a token is divisible by\n        uint32 decimals;\n    }\n\n    /// Additional non fungible properties of a Hedera Token.\n    struct NonFungibleTokenInfo {\n        /// The shared hedera token info\n        TokenInfo tokenInfo;\n\n        /// The serial number of the nft\n        int64 serialNumber;\n\n        /// The account id specifying the owner of the non fungible token\n        address ownerId;\n\n        /// The epoch second at which the token was created.\n        int64 creationTime;\n\n        /// The unique metadata of the NFT\n        bytes metadata;\n\n        /// The account id specifying an account that has been granted spending permissions on this nft\n        address spenderId;\n    }\n\n    /// A fixed number of units (hbar or token) to assess as a fee during a transfer of\n    /// units of the token to which this fixed fee is attached. The denomination of\n    /// the fee depends on the values of tokenId, useHbarsForPayment and\n    /// useCurrentTokenForPayment. Exactly one of the values should be set.\n    struct FixedFee {\n\n        uint32 amount;\n\n        // Specifies ID of token that should be used for fixed fee denomination\n        address tokenId;\n\n        // Specifies this fixed fee should be denominated in Hbar\n        bool useHbarsForPayment;\n\n        // Specifies this fixed fee should be denominated in the Token currently being created\n        bool useCurrentTokenForPayment;\n\n        // The ID of the account to receive the custom fee, expressed as a solidity address\n        address feeCollector;\n    }\n\n    /// A fraction of the transferred units of a token to assess as a fee. The amount assessed will never\n    /// be less than the given minimumAmount, and never greater than the given maximumAmount.  The\n    /// denomination is always units of the token to which this fractional fee is attached.\n    struct FractionalFee {\n        // A rational number's numerator, used to set the amount of a value transfer to collect as a custom fee\n        uint32 numerator;\n\n        // A rational number's denominator, used to set the amount of a value transfer to collect as a custom fee\n        uint32 denominator;\n\n        // The minimum amount to assess\n        uint32 minimumAmount;\n\n        // The maximum amount to assess (zero implies no maximum)\n        uint32 maximumAmount;\n        bool netOfTransfers;\n\n        // The ID of the account to receive the custom fee, expressed as a solidity address\n        address feeCollector;\n    }\n\n    /// A fee to assess during a transfer that changes ownership of an NFT. Defines the fraction of\n    /// the fungible value exchanged for an NFT that the ledger should collect as a royalty. (\"Fungible\n    /// value\" includes both ℏ and units of fungible HTS tokens.) When the NFT sender does not receive\n    /// any fungible value, the ledger will assess the fallback fee, if present, to the new NFT owner.\n    /// Royalty fees can only be added to tokens of type type NON_FUNGIBLE_UNIQUE.\n    struct RoyaltyFee {\n        // A fraction's numerator of fungible value exchanged for an NFT to collect as royalty\n        uint32 numerator;\n\n        // A fraction's denominator of fungible value exchanged for an NFT to collect as royalty\n        uint32 denominator;\n\n        // If present, the fee to assess to the NFT receiver when no fungible value\n        // is exchanged with the sender. Consists of:\n        // amount: the amount to charge for the fee\n        // tokenId: Specifies ID of token that should be used for fixed fee denomination\n        // useHbarsForPayment: Specifies this fee should be denominated in Hbar\n        uint32 amount;\n        address tokenId;\n        bool useHbarsForPayment;\n\n        // The ID of the account to receive the custom fee, expressed as a solidity address\n        address feeCollector;\n    }\n\n    /**********************\n     * Direct HTS Calls   *\n     **********************/\n\n    /// Performs transfers among combinations of tokens and hbars\n    /// @param transferList the list of hbar transfers to do\n    /// @param tokenTransfers the list of token transfers to do\n    /// @custom:version 0.3.0 the signature of the previous version was cryptoTransfer(TokenTransferList[] memory tokenTransfers)\n    function cryptoTransfer(TransferList memory transferList, TokenTransferList[] memory tokenTransfers)\n        external\n        returns (int64 responseCode);\n\n    /// Mints an amount of the token to the defined treasury account\n    /// @param token The token for which to mint tokens. If token does not exist, transaction results in\n    ///              INVALID_TOKEN_ID\n    /// @param amount Applicable to tokens of type FUNGIBLE_COMMON. The amount to mint to the Treasury Account.\n    ///               Amount must be a positive non-zero number represented in the lowest denomination of the\n    ///               token. The new supply must be lower than 2^63.\n    /// @param metadata Applicable to tokens of type NON_FUNGIBLE_UNIQUE. A list of metadata that are being created.\n    ///                 Maximum allowed size of each metadata is 100 bytes\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    /// @return newTotalSupply The new supply of tokens. For NFTs it is the total count of NFTs\n    /// @return serialNumbers If the token is an NFT the newly generate serial numbers, othersise empty.\n    function mintToken(\n        address token,\n        uint64 amount,\n        bytes[] memory metadata\n    )\n        external\n        returns (\n            int64 responseCode,\n            uint64 newTotalSupply,\n            int64[] memory serialNumbers\n        );\n\n    /// Burns an amount of the token from the defined treasury account\n    /// @param token The token for which to burn tokens. If token does not exist, transaction results in\n    ///              INVALID_TOKEN_ID\n    /// @param amount  Applicable to tokens of type FUNGIBLE_COMMON. The amount to burn from the Treasury Account.\n    ///                Amount must be a positive non-zero number, not bigger than the token balance of the treasury\n    ///                account (0; balance], represented in the lowest denomination.\n    /// @param serialNumbers Applicable to tokens of type NON_FUNGIBLE_UNIQUE. The list of serial numbers to be burned.\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    /// @return newTotalSupply The new supply of tokens. For NFTs it is the total count of NFTs\n    function burnToken(\n        address token,\n        uint64 amount,\n        int64[] memory serialNumbers\n    ) external returns (int64 responseCode, uint64 newTotalSupply);\n\n    ///  Associates the provided account with the provided tokens. Must be signed by the provided\n    ///  Account's key or called from the accounts contract key\n    ///  If the provided account is not found, the transaction will resolve to INVALID_ACCOUNT_ID.\n    ///  If the provided account has been deleted, the transaction will resolve to ACCOUNT_DELETED.\n    ///  If any of the provided tokens is not found, the transaction will resolve to INVALID_TOKEN_REF.\n    ///  If any of the provided tokens has been deleted, the transaction will resolve to TOKEN_WAS_DELETED.\n    ///  If an association between the provided account and any of the tokens already exists, the\n    ///  transaction will resolve to TOKEN_ALREADY_ASSOCIATED_TO_ACCOUNT.\n    ///  If the provided account's associations count exceed the constraint of maximum token associations\n    ///    per account, the transaction will resolve to TOKENS_PER_ACCOUNT_LIMIT_EXCEEDED.\n    ///  On success, associations between the provided account and tokens are made and the account is\n    ///    ready to interact with the tokens.\n    /// @param account The account to be associated with the provided tokens\n    /// @param tokens The tokens to be associated with the provided account. In the case of NON_FUNGIBLE_UNIQUE\n    ///               Type, once an account is associated, it can hold any number of NFTs (serial numbers) of that\n    ///               token type\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    function associateTokens(address account, address[] memory tokens)\n        external\n        returns (int64 responseCode);\n\n    /// Single-token variant of associateTokens. Will be mapped to a single entry array call of associateTokens\n    /// @param account The account to be associated with the provided token\n    /// @param token The token to be associated with the provided account\n    function associateToken(address account, address token)\n        external\n        returns (int64 responseCode);\n\n    /// Dissociates the provided account with the provided tokens. Must be signed by the provided\n    /// Account's key.\n    /// If the provided account is not found, the transaction will resolve to INVALID_ACCOUNT_ID.\n    /// If the provided account has been deleted, the transaction will resolve to ACCOUNT_DELETED.\n    /// If any of the provided tokens is not found, the transaction will resolve to INVALID_TOKEN_REF.\n    /// If any of the provided tokens has been deleted, the transaction will resolve to TOKEN_WAS_DELETED.\n    /// If an association between the provided account and any of the tokens does not exist, the\n    /// transaction will resolve to TOKEN_NOT_ASSOCIATED_TO_ACCOUNT.\n    /// If a token has not been deleted and has not expired, and the user has a nonzero balance, the\n    /// transaction will resolve to TRANSACTION_REQUIRES_ZERO_TOKEN_BALANCES.\n    /// If a <b>fungible token</b> has expired, the user can disassociate even if their token balance is\n    /// not zero.\n    /// If a <b>non fungible token</b> has expired, the user can <b>not</b> disassociate if their token\n    /// balance is not zero. The transaction will resolve to TRANSACTION_REQUIRED_ZERO_TOKEN_BALANCES.\n    /// On success, associations between the provided account and tokens are removed.\n    /// @param account The account to be dissociated from the provided tokens\n    /// @param tokens The tokens to be dissociated from the provided account.\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    function dissociateTokens(address account, address[] memory tokens)\n        external\n        returns (int64 responseCode);\n\n    /// Single-token variant of dissociateTokens. Will be mapped to a single entry array call of dissociateTokens\n    /// @param account The account to be associated with the provided token\n    /// @param token The token to be associated with the provided account\n    function dissociateToken(address account, address token)\n        external\n        returns (int64 responseCode);\n\n    /// Creates a Fungible Token with the specified properties\n    /// @param token the basic properties of the token being created\n    /// @param initialTotalSupply Specifies the initial supply of tokens to be put in circulation. The\n    /// initial supply is sent to the Treasury Account. The supply is in the lowest denomination possible.\n    /// @param decimals the number of decimal places a token is divisible by\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    /// @return tokenAddress the created token's address\n    function createFungibleToken(\n        HederaToken memory token,\n        uint64 initialTotalSupply,\n        uint32 decimals\n    ) external payable returns (int64 responseCode, address tokenAddress);\n\n    /// Creates a Fungible Token with the specified properties\n    /// @param token the basic properties of the token being created\n    /// @param initialTotalSupply Specifies the initial supply of tokens to be put in circulation. The\n    /// initial supply is sent to the Treasury Account. The supply is in the lowest denomination possible.\n    /// @param decimals the number of decimal places a token is divisible by.\n    /// @param fixedFees list of fixed fees to apply to the token\n    /// @param fractionalFees list of fractional fees to apply to the token\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    /// @return tokenAddress the created token's address\n    function createFungibleTokenWithCustomFees(\n        HederaToken memory token,\n        uint64 initialTotalSupply,\n        uint32 decimals,\n        FixedFee[] memory fixedFees,\n        FractionalFee[] memory fractionalFees\n    ) external payable returns (int64 responseCode, address tokenAddress);\n\n    /// Creates an Non Fungible Unique Token with the specified properties\n    /// @param token the basic properties of the token being created\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    /// @return tokenAddress the created token's address\n    function createNonFungibleToken(HederaToken memory token)\n        external\n        payable\n        returns (int64 responseCode, address tokenAddress);\n\n    /// Creates an Non Fungible Unique Token with the specified properties\n    /// @param token the basic properties of the token being created\n    /// @param fixedFees list of fixed fees to apply to the token\n    /// @param royaltyFees list of royalty fees to apply to the token\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    /// @return tokenAddress the created token's address\n    function createNonFungibleTokenWithCustomFees(\n        HederaToken memory token,\n        FixedFee[] memory fixedFees,\n        RoyaltyFee[] memory royaltyFees\n    ) external payable returns (int64 responseCode, address tokenAddress);\n\n    /**********************\n     * ABIV1 calls        *\n     **********************/\n\n    /// Initiates a Fungible Token Transfer\n    /// @param token The ID of the token as a solidity address\n    /// @param accountId account to do a transfer to/from\n    /// @param amount The amount from the accountId at the same index\n    function transferTokens(\n        address token,\n        address[] memory accountId,\n        int64[] memory amount\n    ) external returns (int64 responseCode);\n\n    /// Initiates a Non-Fungable Token Transfer\n    /// @param token The ID of the token as a solidity address\n    /// @param sender the sender of an nft\n    /// @param receiver the receiver of the nft sent by the same index at sender\n    /// @param serialNumber the serial number of the nft sent by the same index at sender\n    function transferNFTs(\n        address token,\n        address[] memory sender,\n        address[] memory receiver,\n        int64[] memory serialNumber\n    ) external returns (int64 responseCode);\n\n    /// Transfers tokens where the calling account/contract is implicitly the first entry in the token transfer list,\n    /// where the amount is the value needed to zero balance the transfers. Regular signing rules apply for sending\n    /// (positive amount) or receiving (negative amount)\n    /// @param token The token to transfer to/from\n    /// @param sender The sender for the transaction\n    /// @param recipient The receiver of the transaction\n    /// @param amount Non-negative value to send. a negative value will result in a failure.\n    function transferToken(\n        address token,\n        address sender,\n        address recipient,\n        int64 amount\n    ) external returns (int64 responseCode);\n\n    /// Transfers tokens where the calling account/contract is implicitly the first entry in the token transfer list,\n    /// where the amount is the value needed to zero balance the transfers. Regular signing rules apply for sending\n    /// (positive amount) or receiving (negative amount)\n    /// @param token The token to transfer to/from\n    /// @param sender The sender for the transaction\n    /// @param recipient The receiver of the transaction\n    /// @param serialNumber The serial number of the NFT to transfer.\n    function transferNFT(\n        address token,\n        address sender,\n        address recipient,\n        int64 serialNumber\n    ) external returns (int64 responseCode);\n\n    /// Allows spender to withdraw from your account multiple times, up to the value amount. If this function is called\n    /// again it overwrites the current allowance with value.\n    /// Only Applicable to Fungible Tokens\n    /// @param token The hedera token address to approve\n    /// @param spender the account address authorized to spend\n    /// @param amount the amount of tokens authorized to spend.\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    function approve(\n        address token,\n        address spender,\n        uint256 amount\n    ) external returns (int64 responseCode);\n\n    /// Transfers `amount` tokens from `from` to `to` using the\n    //  allowance mechanism. `amount` is then deducted from the caller's allowance.\n    /// Only applicable to fungible tokens\n    /// @param token The address of the fungible Hedera token to transfer\n    /// @param from The account address of the owner of the token, on the behalf of which to transfer `amount` tokens\n    /// @param to The account address of the receiver of the `amount` tokens\n    /// @param amount The amount of tokens to transfer from `from` to `to`\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    function transferFrom(address token, address from, address to, uint256 amount) external returns (int64 responseCode);\n\n    /// Returns the amount which spender is still allowed to withdraw from owner.\n    /// Only Applicable to Fungible Tokens\n    /// @param token The Hedera token address to check the allowance of\n    /// @param owner the owner of the tokens to be spent\n    /// @param spender the spender of the tokens\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    /// @return allowance The amount which spender is still allowed to withdraw from owner.\n    function allowance(\n        address token,\n        address owner,\n        address spender\n    ) external returns (int64 responseCode, uint256 allowance);\n\n    /// Allow or reaffirm the approved address to transfer an NFT the approved address does not own.\n    /// Only Applicable to NFT Tokens\n    /// @param token The Hedera NFT token address to approve\n    /// @param approved The new approved NFT controller.  To revoke approvals pass in the zero address.\n    /// @param serialNumber The NFT serial number  to approve\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    function approveNFT(\n        address token,\n        address approved,\n        uint256 serialNumber\n    ) external returns (int64 responseCode);\n\n    /// Transfers `serialNumber` of `token` from `from` to `to` using the allowance mechanism.\n    /// Only applicable to NFT tokens\n    /// @param token The address of the non-fungible Hedera token to transfer\n    /// @param from The account address of the owner of `serialNumber` of `token`\n    /// @param to The account address of the receiver of `serialNumber`\n    /// @param serialNumber The NFT serial number to transfer\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    function transferFromNFT(address token, address from, address to, uint256 serialNumber) external returns (int64 responseCode);\n\n    /// Get the approved address for a single NFT\n    /// Only Applicable to NFT Tokens\n    /// @param token The Hedera NFT token address to check approval\n    /// @param serialNumber The NFT to find the approved address for\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    /// @return approved The approved address for this NFT, or the zero address if there is none\n    function getApproved(address token, uint256 serialNumber)\n        external\n        returns (int64 responseCode, address approved);\n\n    /// Enable or disable approval for a third party (\"operator\") to manage\n    ///  all of `msg.sender`'s assets\n    /// @param token The Hedera NFT token address to approve\n    /// @param operator Address to add to the set of authorized operators\n    /// @param approved True if the operator is approved, false to revoke approval\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    function setApprovalForAll(\n        address token,\n        address operator,\n        bool approved\n    ) external returns (int64 responseCode);\n\n    /// Query if an address is an authorized operator for another address\n    /// Only Applicable to NFT Tokens\n    /// @param token The Hedera NFT token address to approve\n    /// @param owner The address that owns the NFTs\n    /// @param operator The address that acts on behalf of the owner\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    /// @return approved True if `operator` is an approved operator for `owner`, false otherwise\n    function isApprovedForAll(\n        address token,\n        address owner,\n        address operator\n    ) external returns (int64 responseCode, bool approved);\n\n    /// Query if token account is frozen\n    /// @param token The token address to check\n    /// @param account The account address associated with the token\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    /// @return frozen True if `account` is frozen for `token`\n    function isFrozen(address token, address account)\n        external\n        returns (int64 responseCode, bool frozen);\n\n    /// Query if token account has kyc granted\n    /// @param token The token address to check\n    /// @param account The account address associated with the token\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    /// @return kycGranted True if `account` has kyc granted for `token`\n    function isKyc(address token, address account)\n        external\n        returns (int64 responseCode, bool kycGranted);\n\n    /// Operation to delete token\n    /// @param token The token address to be deleted\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    function deleteToken(address token) external returns (int64 responseCode);\n\n    /// Query token custom fees\n    /// @param token The token address to check\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    /// @return fixedFees Set of fixed fees for `token`\n    /// @return fractionalFees Set of fractional fees for `token`\n    /// @return royaltyFees Set of royalty fees for `token`\n    function getTokenCustomFees(address token)\n        external\n        returns (int64 responseCode, FixedFee[] memory fixedFees, FractionalFee[] memory fractionalFees, RoyaltyFee[] memory royaltyFees);\n\n    /// Query token default freeze status\n    /// @param token The token address to check\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    /// @return defaultFreezeStatus True if `token` default freeze status is frozen.\n    function getTokenDefaultFreezeStatus(address token)\n        external\n        returns (int64 responseCode, bool defaultFreezeStatus);\n    \n    /// Query token default kyc status\n    /// @param token The token address to check\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    /// @return defaultKycStatus True if `token` default kyc status is KycNotApplicable and false if Revoked.\n    function getTokenDefaultKycStatus(address token)\n        external\n        returns (int64 responseCode, bool defaultKycStatus);\n\n    /// Query token expiry info\n    /// @param token The token address to check\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    /// @return expiry Expiry info for `token`\n    function getTokenExpiryInfo(address token)\n        external\n        returns (int64 responseCode, Expiry memory expiry);\n\n    /// Query fungible token info\n    /// @param token The token address to check\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    /// @return fungibleTokenInfo FungibleTokenInfo info for `token`\n    function getFungibleTokenInfo(address token)\n        external\n        returns (int64 responseCode, FungibleTokenInfo memory fungibleTokenInfo);\n\n    /// Query token info\n    /// @param token The token address to check\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    /// @return tokenInfo TokenInfo info for `token`\n    function getTokenInfo(address token)\n        external\n        returns (int64 responseCode, TokenInfo memory tokenInfo);\n\n    /// Query token KeyValue\n    /// @param token The token address to check\n    /// @param keyType The keyType of the desired KeyValue\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    /// @return key KeyValue info for key of type `keyType`\n    function getTokenKey(address token, uint keyType)\n        external\n        returns (int64 responseCode, KeyValue memory key);\n\n    /// Query non fungible token info\n    /// @param token The token address to check\n    /// @param serialNumber The NFT serialNumber to check\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    /// @return nonFungibleTokenInfo NonFungibleTokenInfo info for `token` `serialNumber`\n    function getNonFungibleTokenInfo(address token, int64 serialNumber)\n        external\n        returns (int64 responseCode, NonFungibleTokenInfo memory nonFungibleTokenInfo);\n\n    /// Operation to freeze token account\n    /// @param token The token address\n    /// @param account The account address to be frozen\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    function freezeToken(address token, address account)\n        external\n        returns (int64 responseCode);\n\n    /// Operation to unfreeze token account\n    /// @param token The token address\n    /// @param account The account address to be unfrozen\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    function unfreezeToken(address token, address account)\n        external\n        returns (int64 responseCode);\n\n    /// Operation to grant kyc to token account\n    /// @param token The token address\n    /// @param account The account address to grant kyc\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    function grantTokenKyc(address token, address account)\n        external\n        returns (int64 responseCode);\n\n    /// Operation to revoke kyc to token account\n    /// @param token The token address\n    /// @param account The account address to revoke kyc\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    function revokeTokenKyc(address token, address account)\n        external\n        returns (int64 responseCode);\n\n    /// Operation to pause token\n    /// @param token The token address to be paused\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    function pauseToken(address token) external returns (int64 responseCode);\n\n    /// Operation to unpause token\n    /// @param token The token address to be unpaused\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    function unpauseToken(address token) external returns (int64 responseCode);\n\n    /// Operation to wipe fungible tokens from account\n    /// @param token The token address\n    /// @param account The account address to revoke kyc\n    /// @param amount The number of tokens to wipe\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    function wipeTokenAccount(\n        address token,\n        address account,\n        uint32 amount\n    ) external returns (int64 responseCode);\n\n    /// Operation to wipe non fungible tokens from account\n    /// @param token The token address\n    /// @param account The account address to revoke kyc\n    /// @param  serialNumbers The serial numbers of token to wipe\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    function wipeTokenAccountNFT(\n        address token,\n        address account,\n        int64[] memory serialNumbers\n    ) external returns (int64 responseCode);\n\n    /// Operation to update token info\n    /// @param token The token address\n    /// @param tokenInfo The hedera token info to update token with\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    function updateTokenInfo(address token, HederaToken memory tokenInfo)\n        external\n        returns (int64 responseCode);\n\n    /// Operation to update token expiry info\n    /// @param token The token address\n    /// @param expiryInfo The hedera token expiry info\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    function updateTokenExpiryInfo(address token, Expiry memory expiryInfo)\n        external\n        returns (int64 responseCode);\n\n    /// Operation to update token expiry info\n    /// @param token The token address\n    /// @param keys The token keys\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    function updateTokenKeys(address token, TokenKey[] memory keys)\n        external\n        returns (int64 responseCode);\n\n    /// Query if valid token found for the given address\n    /// @param token The token address\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.    \n    /// @return isToken True if valid token found for the given address     \n    function isToken(address token) \n        external returns \n        (int64 responseCode, bool isToken);\n\n    /// Query to return the token type for a given address\n    /// @param token The token address\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.    \n    /// @return tokenType the token type. 0 is FUNGIBLE_COMMON, 1 is NON_FUNGIBLE_UNIQUE, -1 is UNRECOGNIZED   \n    function getTokenType(address token)\n        external returns \n        (int64 responseCode, int32 tokenType);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"SmartContracts/Auction2/auction.sol": {
				"EnglishAuction": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tokenAddress",
									"type": "address"
								},
								{
									"internalType": "uint64",
									"name": "_auctionNumber",
									"type": "uint64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Bid",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address[]",
									"name": "winners",
									"type": "address[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "amount",
									"type": "uint256[]"
								}
							],
							"name": "End",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "Start",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "auctionID",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "",
									"type": "uint64"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "bid",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "bids",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "end",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "endAt",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ended",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "highestBidders",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "highestBids",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "seller",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "start",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "started",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenToBeAttributed",
							"outputs": [
								{
									"internalType": "contract KarbonMoneta",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"SmartContracts/Auction2/auction.sol\":447:2482  contract EnglishAuction {... */\n  mstore(0x40, 0x80)\n    /* \"SmartContracts/Auction2/auction.sol\":921:1153  constructor(address _tokenAddress, uint64 _auctionNumber) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"SmartContracts/Auction2/auction.sol\":1025:1038  _tokenAddress */\n  dup2\n    /* \"SmartContracts/Auction2/auction.sol\":990:1009  tokenToBeAttributed */\n  0x00\n  dup1\n    /* \"SmartContracts/Auction2/auction.sol\":990:1039  tokenToBeAttributed = KarbonMoneta(_tokenAddress) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"SmartContracts/Auction2/auction.sol\":1062:1076  _auctionNumber */\n  dup1\n    /* \"SmartContracts/Auction2/auction.sol\":1050:1059  auctionID */\n  0x00\n  0x14\n    /* \"SmartContracts/Auction2/auction.sol\":1050:1076  auctionID = _auctionNumber */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"SmartContracts/Auction2/auction.sol\":1106:1116  msg.sender */\n  caller\n    /* \"SmartContracts/Auction2/auction.sol\":1089:1095  seller */\n  0x01\n  0x00\n    /* \"SmartContracts/Auction2/auction.sol\":1089:1117  seller = payable(msg.sender) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"SmartContracts/Auction2/auction.sol\":1128:1145  highestBids = [0] */\n  mload(0x40)\n  dup1\n  0x20\n  add\n  0x40\n  mstore\n  dup1\n    /* \"SmartContracts/Auction2/auction.sol\":1143:1144  0 */\n  0x00\n    /* \"SmartContracts/Auction2/auction.sol\":1128:1145  highestBids = [0] */\n  0xff\n  and\n  dup2\n  mstore\n  pop\n    /* \"SmartContracts/Auction2/auction.sol\":1128:1139  highestBids */\n  0x05\n    /* \"SmartContracts/Auction2/auction.sol\":1128:1145  highestBids = [0] */\n  swap1\n  0x01\n  tag_6\n  swap3\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"SmartContracts/Auction2/auction.sol\":921:1153  constructor(address _tokenAddress, uint64 _auctionNumber) {... */\n  pop\n  pop\n    /* \"SmartContracts/Auction2/auction.sol\":447:2482  contract EnglishAuction {... */\n  jump(tag_8)\ntag_7:\n  dup3\n  dup1\n  sload\n  dup3\n  dup3\n  sstore\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  dup2\n  add\n  swap3\n  dup3\n  iszero\n  tag_9\n  jumpi\n  swap2\n  0x20\n  mul\n  dup3\n  add\ntag_10:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_11\n  jumpi\n  dup3\n  mload\n  dup3\n  swap1\n  0xff\n  and\n  swap1\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_10)\ntag_11:\ntag_9:\n  pop\n  swap1\n  pop\n  tag_12\n  swap2\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  pop\n  swap1\n  jump\t// out\ntag_13:\ntag_14:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_15\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_14)\ntag_15:\n  pop\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_17:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_19:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_20:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_32\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_19\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_21:\n    /* \"#utility.yul\":641:665   */\n  tag_34\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_20\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_35\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_35:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_22:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_37\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_21\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:946   */\ntag_23:\n    /* \"#utility.yul\":881:888   */\n  0x00\n    /* \"#utility.yul\":921:939   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":914:919   */\n  dup3\n    /* \"#utility.yul\":910:940   */\n  and\n    /* \"#utility.yul\":899:940   */\n  swap1\n  pop\n    /* \"#utility.yul\":845:946   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":952:1072   */\ntag_24:\n    /* \"#utility.yul\":1024:1047   */\n  tag_40\n    /* \"#utility.yul\":1041:1046   */\n  dup2\n    /* \"#utility.yul\":1024:1047   */\n  tag_23\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1017:1022   */\n  dup2\n    /* \"#utility.yul\":1014:1048   */\n  eq\n    /* \"#utility.yul\":1004:1066   */\n  tag_41\n  jumpi\n    /* \"#utility.yul\":1062:1063   */\n  0x00\n    /* \"#utility.yul\":1059:1060   */\n  dup1\n    /* \"#utility.yul\":1052:1064   */\n  revert\n    /* \"#utility.yul\":1004:1066   */\ntag_41:\n    /* \"#utility.yul\":952:1072   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1078:1219   */\ntag_25:\n    /* \"#utility.yul\":1134:1139   */\n  0x00\n    /* \"#utility.yul\":1165:1171   */\n  dup2\n    /* \"#utility.yul\":1159:1172   */\n  mload\n    /* \"#utility.yul\":1150:1172   */\n  swap1\n  pop\n    /* \"#utility.yul\":1181:1213   */\n  tag_43\n    /* \"#utility.yul\":1207:1212   */\n  dup2\n    /* \"#utility.yul\":1181:1213   */\n  tag_24\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1078:1219   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1225:1730   */\ntag_3:\n    /* \"#utility.yul\":1303:1309   */\n  0x00\n    /* \"#utility.yul\":1311:1317   */\n  dup1\n    /* \"#utility.yul\":1360:1362   */\n  0x40\n    /* \"#utility.yul\":1348:1357   */\n  dup4\n    /* \"#utility.yul\":1339:1346   */\n  dup6\n    /* \"#utility.yul\":1335:1358   */\n  sub\n    /* \"#utility.yul\":1331:1363   */\n  slt\n    /* \"#utility.yul\":1328:1447   */\n  iszero\n  tag_45\n  jumpi\n    /* \"#utility.yul\":1366:1445   */\n  tag_46\n  tag_17\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":1328:1447   */\ntag_45:\n    /* \"#utility.yul\":1486:1487   */\n  0x00\n    /* \"#utility.yul\":1511:1575   */\n  tag_47\n    /* \"#utility.yul\":1567:1574   */\n  dup6\n    /* \"#utility.yul\":1558:1564   */\n  dup3\n    /* \"#utility.yul\":1547:1556   */\n  dup7\n    /* \"#utility.yul\":1543:1565   */\n  add\n    /* \"#utility.yul\":1511:1575   */\n  tag_22\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":1501:1575   */\n  swap3\n  pop\n    /* \"#utility.yul\":1457:1585   */\n  pop\n    /* \"#utility.yul\":1624:1626   */\n  0x20\n    /* \"#utility.yul\":1650:1713   */\n  tag_48\n    /* \"#utility.yul\":1705:1712   */\n  dup6\n    /* \"#utility.yul\":1696:1702   */\n  dup3\n    /* \"#utility.yul\":1685:1694   */\n  dup7\n    /* \"#utility.yul\":1681:1703   */\n  add\n    /* \"#utility.yul\":1650:1713   */\n  tag_25\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":1640:1713   */\n  swap2\n  pop\n    /* \"#utility.yul\":1595:1723   */\n  pop\n    /* \"#utility.yul\":1225:1730   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"SmartContracts/Auction2/auction.sol\":447:2482  contract EnglishAuction {... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"SmartContracts/Auction2/auction.sol\":447:2482  contract EnglishAuction {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x62ea82db\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x62ea82db\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x77484aae\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x7c6c5720\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x7cc3ae8c\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xbe9a6555\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xefbe1c1c\n      eq\n      tag_13\n      jumpi\n      jump(tag_1)\n    tag_14:\n      dup1\n      0x08551a53\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x111cb258\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x12fa6feb\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x1998aeef\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x1f2698ab\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x2d07091f\n      eq\n      tag_7\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"SmartContracts/Auction2/auction.sol\":685:714  address payable public seller */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      pop\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SmartContracts/Auction2/auction.sol\":838:866  uint256[] public highestBids */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      pop\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      tag_24\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SmartContracts/Auction2/auction.sol\":774:791  bool public ended */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      pop\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SmartContracts/Auction2/auction.sol\":1466:1684  function bid() external payable {... */\n    tag_5:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      stop\n        /* \"SmartContracts/Auction2/auction.sol\":748:767  bool public started */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      pop\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SmartContracts/Auction2/auction.sol\":655:678  uint64 public auctionID */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      pop\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SmartContracts/Auction2/auction.sol\":873:912  mapping(address => uint256) public bids */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_43\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      pop\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SmartContracts/Auction2/auction.sol\":800:831  address[] public highestBidders */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      pop\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SmartContracts/Auction2/auction.sol\":609:648  KarbonMoneta public tokenToBeAttributed */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_55\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_55:\n      pop\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SmartContracts/Auction2/auction.sol\":721:741  uint256 public endAt */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_60\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_60:\n      pop\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SmartContracts/Auction2/auction.sol\":1161:1458  function start() external {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_64\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_64:\n      pop\n      tag_65\n      tag_66\n      jump\t// in\n    tag_65:\n      stop\n        /* \"SmartContracts/Auction2/auction.sol\":1692:2479  function end() external {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_67\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_67:\n      pop\n      tag_68\n      tag_69\n      jump\t// in\n    tag_68:\n      stop\n        /* \"SmartContracts/Auction2/auction.sol\":685:714  address payable public seller */\n    tag_17:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"SmartContracts/Auction2/auction.sol\":838:866  uint256[] public highestBids */\n    tag_24:\n      0x05\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_70\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_70:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"SmartContracts/Auction2/auction.sol\":774:791  bool public ended */\n    tag_29:\n      0x03\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"SmartContracts/Auction2/auction.sol\":1466:1684  function bid() external payable {... */\n    tag_33:\n        /* \"SmartContracts/Auction2/auction.sol\":1517:1524  started */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"SmartContracts/Auction2/auction.sol\":1509:1540  require(started, \"not started\") */\n      tag_73\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_74\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_73:\n        /* \"SmartContracts/Auction2/auction.sol\":1577:1582  endAt */\n      sload(0x02)\n        /* \"SmartContracts/Auction2/auction.sol\":1559:1574  block.timestamp */\n      timestamp\n        /* \"SmartContracts/Auction2/auction.sol\":1559:1582  block.timestamp < endAt */\n      lt\n        /* \"SmartContracts/Auction2/auction.sol\":1551:1592  require(block.timestamp < endAt, \"ended\") */\n      tag_76\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_77\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_76:\n        /* \"SmartContracts/Auction2/auction.sol\":1623:1632  msg.value */\n      callvalue\n        /* \"SmartContracts/Auction2/auction.sol\":1603:1607  bids */\n      0x06\n        /* \"SmartContracts/Auction2/auction.sol\":1603:1619  bids[msg.sender] */\n      0x00\n        /* \"SmartContracts/Auction2/auction.sol\":1608:1618  msg.sender */\n      caller\n        /* \"SmartContracts/Auction2/auction.sol\":1603:1619  bids[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"SmartContracts/Auction2/auction.sol\":1603:1632  bids[msg.sender] += msg.value */\n      dup3\n      dup3\n      sload\n      tag_79\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"SmartContracts/Auction2/auction.sol\":1654:1664  msg.sender */\n      caller\n        /* \"SmartContracts/Auction2/auction.sol\":1650:1676  Bid(msg.sender, msg.value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe684a55f31b79eca403df938249029212a5925ec6be8012e099b45bc1019e5d2\n        /* \"SmartContracts/Auction2/auction.sol\":1666:1675  msg.value */\n      callvalue\n        /* \"SmartContracts/Auction2/auction.sol\":1650:1676  Bid(msg.sender, msg.value) */\n      mload(0x40)\n      tag_81\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"SmartContracts/Auction2/auction.sol\":1466:1684  function bid() external payable {... */\n      jump\t// out\n        /* \"SmartContracts/Auction2/auction.sol\":748:767  bool public started */\n    tag_36:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"SmartContracts/Auction2/auction.sol\":655:678  uint64 public auctionID */\n    tag_40:\n      0x00\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"SmartContracts/Auction2/auction.sol\":873:912  mapping(address => uint256) public bids */\n    tag_47:\n      mstore(0x20, 0x06)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"SmartContracts/Auction2/auction.sol\":800:831  address[] public highestBidders */\n    tag_52:\n      0x04\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_82\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_82:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"SmartContracts/Auction2/auction.sol\":609:648  KarbonMoneta public tokenToBeAttributed */\n    tag_57:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"SmartContracts/Auction2/auction.sol\":721:741  uint256 public endAt */\n    tag_62:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"SmartContracts/Auction2/auction.sol\":1161:1458  function start() external {... */\n    tag_66:\n        /* \"SmartContracts/Auction2/auction.sol\":1207:1214  started */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"SmartContracts/Auction2/auction.sol\":1206:1214  !started */\n      iszero\n        /* \"SmartContracts/Auction2/auction.sol\":1198:1226  require(!started, \"started\") */\n      tag_85\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_86\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_85:\n        /* \"SmartContracts/Auction2/auction.sol\":1259:1265  seller */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"SmartContracts/Auction2/auction.sol\":1245:1265  msg.sender == seller */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"SmartContracts/Auction2/auction.sol\":1245:1255  msg.sender */\n      caller\n        /* \"SmartContracts/Auction2/auction.sol\":1245:1265  msg.sender == seller */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"SmartContracts/Auction2/auction.sol\":1237:1280  require(msg.sender == seller, \"not seller\") */\n      tag_88\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_89\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_88:\n        /* \"SmartContracts/Auction2/auction.sol\":1293:1312  tokenToBeAttributed */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"SmartContracts/Auction2/auction.sol\":1293:1325  tokenToBeAttributed.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"SmartContracts/Auction2/auction.sol\":1326:1336  msg.sender */\n      caller\n        /* \"SmartContracts/Auction2/auction.sol\":1346:1350  this */\n      address\n        /* \"SmartContracts/Auction2/auction.sol\":1353:1354  1 */\n      0x01\n        /* \"SmartContracts/Auction2/auction.sol\":1293:1355  tokenToBeAttributed.transferFrom(msg.sender, address(this), 1) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_91\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_93\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_93:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_95\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_95:\n      pop\n      pop\n      pop\n      pop\n        /* \"SmartContracts/Auction2/auction.sol\":1378:1382  true */\n      0x01\n        /* \"SmartContracts/Auction2/auction.sol\":1368:1375  started */\n      0x03\n      0x00\n        /* \"SmartContracts/Auction2/auction.sol\":1368:1382  started = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"SmartContracts/Auction2/auction.sol\":1419:1425  7 days */\n      0x093a80\n        /* \"SmartContracts/Auction2/auction.sol\":1401:1416  block.timestamp */\n      timestamp\n        /* \"SmartContracts/Auction2/auction.sol\":1401:1425  block.timestamp + 7 days */\n      tag_96\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_96:\n        /* \"SmartContracts/Auction2/auction.sol\":1393:1398  endAt */\n      0x02\n        /* \"SmartContracts/Auction2/auction.sol\":1393:1425  endAt = block.timestamp + 7 days */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"SmartContracts/Auction2/auction.sol\":1443:1450  Start() */\n      0x1b55ba3aa851a46be3b365aee5b5c140edd620d578922f3e8466d2cbd96f954b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"SmartContracts/Auction2/auction.sol\":1161:1458  function start() external {... */\n      jump\t// out\n        /* \"SmartContracts/Auction2/auction.sol\":1692:2479  function end() external {... */\n    tag_69:\n        /* \"SmartContracts/Auction2/auction.sol\":1735:1742  started */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"SmartContracts/Auction2/auction.sol\":1727:1758  require(started, \"not started\") */\n      tag_98\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_99\n      swap1\n      tag_75\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_98:\n        /* \"SmartContracts/Auction2/auction.sol\":1796:1801  endAt */\n      sload(0x02)\n        /* \"SmartContracts/Auction2/auction.sol\":1777:1792  block.timestamp */\n      timestamp\n        /* \"SmartContracts/Auction2/auction.sol\":1777:1801  block.timestamp >= endAt */\n      lt\n      iszero\n        /* \"SmartContracts/Auction2/auction.sol\":1769:1815  require(block.timestamp >= endAt, \"not ended\") */\n      tag_100\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_101\n      swap1\n      tag_102\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_100:\n        /* \"SmartContracts/Auction2/auction.sol\":1835:1840  ended */\n      0x03\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"SmartContracts/Auction2/auction.sol\":1834:1840  !ended */\n      iszero\n        /* \"SmartContracts/Auction2/auction.sol\":1826:1850  require(!ended, \"ended\") */\n      tag_103\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_104\n      swap1\n      tag_78\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_103:\n        /* \"SmartContracts/Auction2/auction.sol\":1871:1875  true */\n      0x01\n        /* \"SmartContracts/Auction2/auction.sol\":1863:1868  ended */\n      0x03\n      0x01\n        /* \"SmartContracts/Auction2/auction.sol\":1863:1875  ended = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"SmartContracts/Auction2/auction.sol\":1931:1956  uint256 totalBiddedAmount */\n      0x00\n        /* \"SmartContracts/Auction2/auction.sol\":1976:1984  uint64 i */\n      dup1\n        /* \"SmartContracts/Auction2/auction.sol\":1971:2093  for (uint64 i = 0; i < highestBidders.length; i++) {... */\n    tag_105:\n        /* \"SmartContracts/Auction2/auction.sol\":1994:2008  highestBidders */\n      0x04\n        /* \"SmartContracts/Auction2/auction.sol\":1994:2015  highestBidders.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"SmartContracts/Auction2/auction.sol\":1990:1991  i */\n      dup2\n        /* \"SmartContracts/Auction2/auction.sol\":1990:2015  i < highestBidders.length */\n      0xffffffffffffffff\n      and\n      lt\n        /* \"SmartContracts/Auction2/auction.sol\":1971:2093  for (uint64 i = 0; i < highestBidders.length; i++) {... */\n      iszero\n      tag_106\n      jumpi\n        /* \"SmartContracts/Auction2/auction.sol\":2058:2062  bids */\n      0x06\n        /* \"SmartContracts/Auction2/auction.sol\":2058:2081  bids[highestBidders[i]] */\n      0x00\n        /* \"SmartContracts/Auction2/auction.sol\":2063:2077  highestBidders */\n      0x04\n        /* \"SmartContracts/Auction2/auction.sol\":2078:2079  i */\n      dup4\n        /* \"SmartContracts/Auction2/auction.sol\":2063:2080  highestBidders[i] */\n      0xffffffffffffffff\n      and\n      dup2\n      sload\n      dup2\n      lt\n      tag_108\n      jumpi\n      tag_109\n      tag_110\n      jump\t// in\n    tag_109:\n    tag_108:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"SmartContracts/Auction2/auction.sol\":2058:2081  bids[highestBidders[i]] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"SmartContracts/Auction2/auction.sol\":2037:2081  totalBiddedAmount += bids[highestBidders[i]] */\n      dup3\n      tag_112\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_112:\n      swap2\n      pop\n        /* \"SmartContracts/Auction2/auction.sol\":2017:2020  i++ */\n      dup1\n      dup1\n      tag_113\n      swap1\n      tag_114\n      jump\t// in\n    tag_113:\n      swap2\n      pop\n      pop\n        /* \"SmartContracts/Auction2/auction.sol\":1971:2093  for (uint64 i = 0; i < highestBidders.length; i++) {... */\n      jump(tag_105)\n    tag_106:\n      pop\n        /* \"SmartContracts/Auction2/auction.sol\":2132:2133  0 */\n      0x00\n        /* \"SmartContracts/Auction2/auction.sol\":2107:2121  highestBidders */\n      0x04\n        /* \"SmartContracts/Auction2/auction.sol\":2107:2128  highestBidders.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"SmartContracts/Auction2/auction.sol\":2107:2133  highestBidders.length != 0 */\n      eq\n        /* \"SmartContracts/Auction2/auction.sol\":2103:2422  if (highestBidders.length != 0) {... */\n      tag_115\n      jumpi\n        /* \"SmartContracts/Auction2/auction.sol\":2155:2163  uint64 i */\n      0x00\n        /* \"SmartContracts/Auction2/auction.sol\":2150:2411  for (uint64 i = 0; i < highestBidders.length; i++) {... */\n    tag_116:\n        /* \"SmartContracts/Auction2/auction.sol\":2173:2187  highestBidders */\n      0x04\n        /* \"SmartContracts/Auction2/auction.sol\":2173:2194  highestBidders.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"SmartContracts/Auction2/auction.sol\":2169:2170  i */\n      dup2\n        /* \"SmartContracts/Auction2/auction.sol\":2169:2194  i < highestBidders.length */\n      0xffffffffffffffff\n      and\n      lt\n        /* \"SmartContracts/Auction2/auction.sol\":2150:2411  for (uint64 i = 0; i < highestBidders.length; i++) {... */\n      iszero\n      tag_117\n      jumpi\n        /* \"SmartContracts/Auction2/auction.sol\":2220:2239  tokenToBeAttributed */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"SmartContracts/Auction2/auction.sol\":2220:2256  tokenToBeAttributed.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x42842e0e\n        /* \"SmartContracts/Auction2/auction.sol\":2287:2291  this */\n      address\n        /* \"SmartContracts/Auction2/auction.sol\":2315:2329  highestBidders */\n      0x04\n        /* \"SmartContracts/Auction2/auction.sol\":2330:2331  i */\n      dup5\n        /* \"SmartContracts/Auction2/auction.sol\":2315:2332  highestBidders[i] */\n      0xffffffffffffffff\n      and\n      dup2\n      sload\n      dup2\n      lt\n      tag_119\n      jumpi\n      tag_120\n      tag_110\n      jump\t// in\n    tag_120:\n    tag_119:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"SmartContracts/Auction2/auction.sol\":2359:2376  totalBiddedAmount */\n      dup6\n        /* \"SmartContracts/Auction2/auction.sol\":2355:2356  1 */\n      0x01\n        /* \"SmartContracts/Auction2/auction.sol\":2355:2376  1 / totalBiddedAmount */\n      tag_122\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_122:\n        /* \"SmartContracts/Auction2/auction.sol\":2220:2395  tokenToBeAttributed.safeTransferFrom(... */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_124\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_124:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_126\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_126:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_128\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_128:\n      pop\n      pop\n      pop\n      pop\n        /* \"SmartContracts/Auction2/auction.sol\":2196:2199  i++ */\n      dup1\n      dup1\n      tag_129\n      swap1\n      tag_114\n      jump\t// in\n    tag_129:\n      swap2\n      pop\n      pop\n        /* \"SmartContracts/Auction2/auction.sol\":2150:2411  for (uint64 i = 0; i < highestBidders.length; i++) {... */\n      jump(tag_116)\n    tag_117:\n      pop\n        /* \"SmartContracts/Auction2/auction.sol\":2103:2422  if (highestBidders.length != 0) {... */\n    tag_115:\n        /* \"SmartContracts/Auction2/auction.sol\":2439:2471  End(highestBidders, highestBids) */\n      0xd629db0ab1e7a966b4f646bcd3ce5ae4a0b2c91819e7ca456f3064c7af6b8233\n        /* \"SmartContracts/Auction2/auction.sol\":2443:2457  highestBidders */\n      0x04\n        /* \"SmartContracts/Auction2/auction.sol\":2459:2470  highestBids */\n      0x05\n        /* \"SmartContracts/Auction2/auction.sol\":2439:2471  End(highestBidders, highestBids) */\n      mload(0x40)\n      tag_130\n      swap3\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_130:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"SmartContracts/Auction2/auction.sol\":1716:2479  {... */\n      pop\n        /* \"SmartContracts/Auction2/auction.sol\":1692:2479  function end() external {... */\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_132:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:243   */\n    tag_133:\n        /* \"#utility.yul\":184:191   */\n      0x00\n        /* \"#utility.yul\":213:237   */\n      tag_195\n        /* \"#utility.yul\":231:236   */\n      dup3\n        /* \"#utility.yul\":213:237   */\n      tag_132\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":202:237   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:243   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":249:391   */\n    tag_134:\n        /* \"#utility.yul\":352:384   */\n      tag_197\n        /* \"#utility.yul\":378:383   */\n      dup2\n        /* \"#utility.yul\":352:384   */\n      tag_133\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":347:350   */\n      dup3\n        /* \"#utility.yul\":340:385   */\n      mstore\n        /* \"#utility.yul\":249:391   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":397:651   */\n    tag_19:\n        /* \"#utility.yul\":506:510   */\n      0x00\n        /* \"#utility.yul\":544:546   */\n      0x20\n        /* \"#utility.yul\":533:542   */\n      dup3\n        /* \"#utility.yul\":529:547   */\n      add\n        /* \"#utility.yul\":521:547   */\n      swap1\n      pop\n        /* \"#utility.yul\":557:644   */\n      tag_199\n        /* \"#utility.yul\":641:642   */\n      0x00\n        /* \"#utility.yul\":630:639   */\n      dup4\n        /* \"#utility.yul\":626:643   */\n      add\n        /* \"#utility.yul\":617:623   */\n      dup5\n        /* \"#utility.yul\":557:644   */\n      tag_134\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":397:651   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":738:855   */\n    tag_136:\n        /* \"#utility.yul\":847:848   */\n      0x00\n        /* \"#utility.yul\":844:845   */\n      dup1\n        /* \"#utility.yul\":837:849   */\n      revert\n        /* \"#utility.yul\":984:1061   */\n    tag_138:\n        /* \"#utility.yul\":1021:1028   */\n      0x00\n        /* \"#utility.yul\":1050:1055   */\n      dup2\n        /* \"#utility.yul\":1039:1055   */\n      swap1\n      pop\n        /* \"#utility.yul\":984:1061   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1067:1189   */\n    tag_139:\n        /* \"#utility.yul\":1140:1164   */\n      tag_205\n        /* \"#utility.yul\":1158:1163   */\n      dup2\n        /* \"#utility.yul\":1140:1164   */\n      tag_138\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":1133:1138   */\n      dup2\n        /* \"#utility.yul\":1130:1165   */\n      eq\n        /* \"#utility.yul\":1120:1183   */\n      tag_206\n      jumpi\n        /* \"#utility.yul\":1179:1180   */\n      0x00\n        /* \"#utility.yul\":1176:1177   */\n      dup1\n        /* \"#utility.yul\":1169:1181   */\n      revert\n        /* \"#utility.yul\":1120:1183   */\n    tag_206:\n        /* \"#utility.yul\":1067:1189   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1195:1334   */\n    tag_140:\n        /* \"#utility.yul\":1241:1246   */\n      0x00\n        /* \"#utility.yul\":1279:1285   */\n      dup2\n        /* \"#utility.yul\":1266:1286   */\n      calldataload\n        /* \"#utility.yul\":1257:1286   */\n      swap1\n      pop\n        /* \"#utility.yul\":1295:1328   */\n      tag_208\n        /* \"#utility.yul\":1322:1327   */\n      dup2\n        /* \"#utility.yul\":1295:1328   */\n      tag_139\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":1195:1334   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1340:1669   */\n    tag_23:\n        /* \"#utility.yul\":1399:1405   */\n      0x00\n        /* \"#utility.yul\":1448:1450   */\n      0x20\n        /* \"#utility.yul\":1436:1445   */\n      dup3\n        /* \"#utility.yul\":1427:1434   */\n      dup5\n        /* \"#utility.yul\":1423:1446   */\n      sub\n        /* \"#utility.yul\":1419:1451   */\n      slt\n        /* \"#utility.yul\":1416:1535   */\n      iszero\n      tag_210\n      jumpi\n        /* \"#utility.yul\":1454:1533   */\n      tag_211\n      tag_136\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":1416:1535   */\n    tag_210:\n        /* \"#utility.yul\":1574:1575   */\n      0x00\n        /* \"#utility.yul\":1599:1652   */\n      tag_212\n        /* \"#utility.yul\":1644:1651   */\n      dup5\n        /* \"#utility.yul\":1635:1641   */\n      dup3\n        /* \"#utility.yul\":1624:1633   */\n      dup6\n        /* \"#utility.yul\":1620:1642   */\n      add\n        /* \"#utility.yul\":1599:1652   */\n      tag_140\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":1589:1652   */\n      swap2\n      pop\n        /* \"#utility.yul\":1545:1662   */\n      pop\n        /* \"#utility.yul\":1340:1669   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1675:1793   */\n    tag_141:\n        /* \"#utility.yul\":1762:1786   */\n      tag_214\n        /* \"#utility.yul\":1780:1785   */\n      dup2\n        /* \"#utility.yul\":1762:1786   */\n      tag_138\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":1757:1760   */\n      dup3\n        /* \"#utility.yul\":1750:1787   */\n      mstore\n        /* \"#utility.yul\":1675:1793   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1799:2021   */\n    tag_26:\n        /* \"#utility.yul\":1892:1896   */\n      0x00\n        /* \"#utility.yul\":1930:1932   */\n      0x20\n        /* \"#utility.yul\":1919:1928   */\n      dup3\n        /* \"#utility.yul\":1915:1933   */\n      add\n        /* \"#utility.yul\":1907:1933   */\n      swap1\n      pop\n        /* \"#utility.yul\":1943:2014   */\n      tag_216\n        /* \"#utility.yul\":2011:2012   */\n      0x00\n        /* \"#utility.yul\":2000:2009   */\n      dup4\n        /* \"#utility.yul\":1996:2013   */\n      add\n        /* \"#utility.yul\":1987:1993   */\n      dup5\n        /* \"#utility.yul\":1943:2014   */\n      tag_141\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":1799:2021   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2027:2117   */\n    tag_142:\n        /* \"#utility.yul\":2061:2068   */\n      0x00\n        /* \"#utility.yul\":2104:2109   */\n      dup2\n        /* \"#utility.yul\":2097:2110   */\n      iszero\n        /* \"#utility.yul\":2090:2111   */\n      iszero\n        /* \"#utility.yul\":2079:2111   */\n      swap1\n      pop\n        /* \"#utility.yul\":2027:2117   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2123:2232   */\n    tag_143:\n        /* \"#utility.yul\":2204:2225   */\n      tag_219\n        /* \"#utility.yul\":2219:2224   */\n      dup2\n        /* \"#utility.yul\":2204:2225   */\n      tag_142\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":2199:2202   */\n      dup3\n        /* \"#utility.yul\":2192:2226   */\n      mstore\n        /* \"#utility.yul\":2123:2232   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2238:2448   */\n    tag_31:\n        /* \"#utility.yul\":2325:2329   */\n      0x00\n        /* \"#utility.yul\":2363:2365   */\n      0x20\n        /* \"#utility.yul\":2352:2361   */\n      dup3\n        /* \"#utility.yul\":2348:2366   */\n      add\n        /* \"#utility.yul\":2340:2366   */\n      swap1\n      pop\n        /* \"#utility.yul\":2376:2441   */\n      tag_221\n        /* \"#utility.yul\":2438:2439   */\n      0x00\n        /* \"#utility.yul\":2427:2436   */\n      dup4\n        /* \"#utility.yul\":2423:2440   */\n      add\n        /* \"#utility.yul\":2414:2420   */\n      dup5\n        /* \"#utility.yul\":2376:2441   */\n      tag_143\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":2238:2448   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2454:2555   */\n    tag_144:\n        /* \"#utility.yul\":2490:2497   */\n      0x00\n        /* \"#utility.yul\":2530:2548   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2523:2528   */\n      dup3\n        /* \"#utility.yul\":2519:2549   */\n      and\n        /* \"#utility.yul\":2508:2549   */\n      swap1\n      pop\n        /* \"#utility.yul\":2454:2555   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2561:2676   */\n    tag_145:\n        /* \"#utility.yul\":2646:2669   */\n      tag_224\n        /* \"#utility.yul\":2663:2668   */\n      dup2\n        /* \"#utility.yul\":2646:2669   */\n      tag_144\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":2641:2644   */\n      dup3\n        /* \"#utility.yul\":2634:2670   */\n      mstore\n        /* \"#utility.yul\":2561:2676   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2682:2900   */\n    tag_42:\n        /* \"#utility.yul\":2773:2777   */\n      0x00\n        /* \"#utility.yul\":2811:2813   */\n      0x20\n        /* \"#utility.yul\":2800:2809   */\n      dup3\n        /* \"#utility.yul\":2796:2814   */\n      add\n        /* \"#utility.yul\":2788:2814   */\n      swap1\n      pop\n        /* \"#utility.yul\":2824:2893   */\n      tag_226\n        /* \"#utility.yul\":2890:2891   */\n      0x00\n        /* \"#utility.yul\":2879:2888   */\n      dup4\n        /* \"#utility.yul\":2875:2892   */\n      add\n        /* \"#utility.yul\":2866:2872   */\n      dup5\n        /* \"#utility.yul\":2824:2893   */\n      tag_145\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":2682:2900   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2906:3002   */\n    tag_146:\n        /* \"#utility.yul\":2943:2950   */\n      0x00\n        /* \"#utility.yul\":2972:2996   */\n      tag_228\n        /* \"#utility.yul\":2990:2995   */\n      dup3\n        /* \"#utility.yul\":2972:2996   */\n      tag_132\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":2961:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2906:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3130   */\n    tag_147:\n        /* \"#utility.yul\":3081:3105   */\n      tag_230\n        /* \"#utility.yul\":3099:3104   */\n      dup2\n        /* \"#utility.yul\":3081:3105   */\n      tag_146\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":3074:3079   */\n      dup2\n        /* \"#utility.yul\":3071:3106   */\n      eq\n        /* \"#utility.yul\":3061:3124   */\n      tag_231\n      jumpi\n        /* \"#utility.yul\":3120:3121   */\n      0x00\n        /* \"#utility.yul\":3117:3118   */\n      dup1\n        /* \"#utility.yul\":3110:3122   */\n      revert\n        /* \"#utility.yul\":3061:3124   */\n    tag_231:\n        /* \"#utility.yul\":3008:3130   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3136:3275   */\n    tag_148:\n        /* \"#utility.yul\":3182:3187   */\n      0x00\n        /* \"#utility.yul\":3220:3226   */\n      dup2\n        /* \"#utility.yul\":3207:3227   */\n      calldataload\n        /* \"#utility.yul\":3198:3227   */\n      swap1\n      pop\n        /* \"#utility.yul\":3236:3269   */\n      tag_233\n        /* \"#utility.yul\":3263:3268   */\n      dup2\n        /* \"#utility.yul\":3236:3269   */\n      tag_147\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":3136:3275   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3281:3610   */\n    tag_46:\n        /* \"#utility.yul\":3340:3346   */\n      0x00\n        /* \"#utility.yul\":3389:3391   */\n      0x20\n        /* \"#utility.yul\":3377:3386   */\n      dup3\n        /* \"#utility.yul\":3368:3375   */\n      dup5\n        /* \"#utility.yul\":3364:3387   */\n      sub\n        /* \"#utility.yul\":3360:3392   */\n      slt\n        /* \"#utility.yul\":3357:3476   */\n      iszero\n      tag_235\n      jumpi\n        /* \"#utility.yul\":3395:3474   */\n      tag_236\n      tag_136\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":3357:3476   */\n    tag_235:\n        /* \"#utility.yul\":3515:3516   */\n      0x00\n        /* \"#utility.yul\":3540:3593   */\n      tag_237\n        /* \"#utility.yul\":3585:3592   */\n      dup5\n        /* \"#utility.yul\":3576:3582   */\n      dup3\n        /* \"#utility.yul\":3565:3574   */\n      dup6\n        /* \"#utility.yul\":3561:3583   */\n      add\n        /* \"#utility.yul\":3540:3593   */\n      tag_148\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":3530:3593   */\n      swap2\n      pop\n        /* \"#utility.yul\":3486:3603   */\n      pop\n        /* \"#utility.yul\":3281:3610   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3616:3734   */\n    tag_149:\n        /* \"#utility.yul\":3703:3727   */\n      tag_239\n        /* \"#utility.yul\":3721:3726   */\n      dup2\n        /* \"#utility.yul\":3703:3727   */\n      tag_146\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":3698:3701   */\n      dup3\n        /* \"#utility.yul\":3691:3728   */\n      mstore\n        /* \"#utility.yul\":3616:3734   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3740:3962   */\n    tag_54:\n        /* \"#utility.yul\":3833:3837   */\n      0x00\n        /* \"#utility.yul\":3871:3873   */\n      0x20\n        /* \"#utility.yul\":3860:3869   */\n      dup3\n        /* \"#utility.yul\":3856:3874   */\n      add\n        /* \"#utility.yul\":3848:3874   */\n      swap1\n      pop\n        /* \"#utility.yul\":3884:3955   */\n      tag_241\n        /* \"#utility.yul\":3952:3953   */\n      0x00\n        /* \"#utility.yul\":3941:3950   */\n      dup4\n        /* \"#utility.yul\":3937:3954   */\n      add\n        /* \"#utility.yul\":3928:3934   */\n      dup5\n        /* \"#utility.yul\":3884:3955   */\n      tag_149\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":3740:3962   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3968:4028   */\n    tag_150:\n        /* \"#utility.yul\":3996:3999   */\n      0x00\n        /* \"#utility.yul\":4017:4022   */\n      dup2\n        /* \"#utility.yul\":4010:4022   */\n      swap1\n      pop\n        /* \"#utility.yul\":3968:4028   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4034:4176   */\n    tag_151:\n        /* \"#utility.yul\":4084:4093   */\n      0x00\n        /* \"#utility.yul\":4117:4170   */\n      tag_244\n        /* \"#utility.yul\":4135:4169   */\n      tag_245\n        /* \"#utility.yul\":4144:4168   */\n      tag_246\n        /* \"#utility.yul\":4162:4167   */\n      dup5\n        /* \"#utility.yul\":4144:4168   */\n      tag_132\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":4135:4169   */\n      tag_150\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":4117:4170   */\n      tag_132\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":4104:4170   */\n      swap1\n      pop\n        /* \"#utility.yul\":4034:4176   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4182:4308   */\n    tag_152:\n        /* \"#utility.yul\":4232:4241   */\n      0x00\n        /* \"#utility.yul\":4265:4302   */\n      tag_248\n        /* \"#utility.yul\":4296:4301   */\n      dup3\n        /* \"#utility.yul\":4265:4302   */\n      tag_151\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":4252:4302   */\n      swap1\n      pop\n        /* \"#utility.yul\":4182:4308   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4314:4459   */\n    tag_153:\n        /* \"#utility.yul\":4383:4392   */\n      0x00\n        /* \"#utility.yul\":4416:4453   */\n      tag_250\n        /* \"#utility.yul\":4447:4452   */\n      dup3\n        /* \"#utility.yul\":4416:4453   */\n      tag_152\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":4403:4453   */\n      swap1\n      pop\n        /* \"#utility.yul\":4314:4459   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4465:4634   */\n    tag_154:\n        /* \"#utility.yul\":4571:4627   */\n      tag_252\n        /* \"#utility.yul\":4621:4626   */\n      dup2\n        /* \"#utility.yul\":4571:4627   */\n      tag_153\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":4566:4569   */\n      dup3\n        /* \"#utility.yul\":4559:4628   */\n      mstore\n        /* \"#utility.yul\":4465:4634   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4640:4900   */\n    tag_59:\n        /* \"#utility.yul\":4752:4756   */\n      0x00\n        /* \"#utility.yul\":4790:4792   */\n      0x20\n        /* \"#utility.yul\":4779:4788   */\n      dup3\n        /* \"#utility.yul\":4775:4793   */\n      add\n        /* \"#utility.yul\":4767:4793   */\n      swap1\n      pop\n        /* \"#utility.yul\":4803:4893   */\n      tag_254\n        /* \"#utility.yul\":4890:4891   */\n      0x00\n        /* \"#utility.yul\":4879:4888   */\n      dup4\n        /* \"#utility.yul\":4875:4892   */\n      add\n        /* \"#utility.yul\":4866:4872   */\n      dup5\n        /* \"#utility.yul\":4803:4893   */\n      tag_154\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":4640:4900   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4906:5075   */\n    tag_155:\n        /* \"#utility.yul\":4990:5001   */\n      0x00\n        /* \"#utility.yul\":5024:5030   */\n      dup3\n        /* \"#utility.yul\":5019:5022   */\n      dup3\n        /* \"#utility.yul\":5012:5031   */\n      mstore\n        /* \"#utility.yul\":5064:5068   */\n      0x20\n        /* \"#utility.yul\":5059:5062   */\n      dup3\n        /* \"#utility.yul\":5055:5069   */\n      add\n        /* \"#utility.yul\":5040:5069   */\n      swap1\n      pop\n        /* \"#utility.yul\":4906:5075   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5081:5242   */\n    tag_156:\n        /* \"#utility.yul\":5221:5234   */\n      0x6e6f742073746172746564000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5217:5218   */\n      0x00\n        /* \"#utility.yul\":5209:5215   */\n      dup3\n        /* \"#utility.yul\":5205:5219   */\n      add\n        /* \"#utility.yul\":5198:5235   */\n      mstore\n        /* \"#utility.yul\":5081:5242   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5248:5614   */\n    tag_157:\n        /* \"#utility.yul\":5390:5393   */\n      0x00\n        /* \"#utility.yul\":5411:5478   */\n      tag_258\n        /* \"#utility.yul\":5475:5477   */\n      0x0b\n        /* \"#utility.yul\":5470:5473   */\n      dup4\n        /* \"#utility.yul\":5411:5478   */\n      tag_155\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":5404:5478   */\n      swap2\n      pop\n        /* \"#utility.yul\":5487:5580   */\n      tag_259\n        /* \"#utility.yul\":5576:5579   */\n      dup3\n        /* \"#utility.yul\":5487:5580   */\n      tag_156\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":5605:5607   */\n      0x20\n        /* \"#utility.yul\":5600:5603   */\n      dup3\n        /* \"#utility.yul\":5596:5608   */\n      add\n        /* \"#utility.yul\":5589:5608   */\n      swap1\n      pop\n        /* \"#utility.yul\":5248:5614   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5620:6039   */\n    tag_75:\n        /* \"#utility.yul\":5786:5790   */\n      0x00\n        /* \"#utility.yul\":5824:5826   */\n      0x20\n        /* \"#utility.yul\":5813:5822   */\n      dup3\n        /* \"#utility.yul\":5809:5827   */\n      add\n        /* \"#utility.yul\":5801:5827   */\n      swap1\n      pop\n        /* \"#utility.yul\":5873:5882   */\n      dup2\n        /* \"#utility.yul\":5867:5871   */\n      dup2\n        /* \"#utility.yul\":5863:5883   */\n      sub\n        /* \"#utility.yul\":5859:5860   */\n      0x00\n        /* \"#utility.yul\":5848:5857   */\n      dup4\n        /* \"#utility.yul\":5844:5861   */\n      add\n        /* \"#utility.yul\":5837:5884   */\n      mstore\n        /* \"#utility.yul\":5901:6032   */\n      tag_261\n        /* \"#utility.yul\":6027:6031   */\n      dup2\n        /* \"#utility.yul\":5901:6032   */\n      tag_157\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":5893:6032   */\n      swap1\n      pop\n        /* \"#utility.yul\":5620:6039   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6045:6200   */\n    tag_158:\n        /* \"#utility.yul\":6185:6192   */\n      0x656e646564000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6181:6182   */\n      0x00\n        /* \"#utility.yul\":6173:6179   */\n      dup3\n        /* \"#utility.yul\":6169:6183   */\n      add\n        /* \"#utility.yul\":6162:6193   */\n      mstore\n        /* \"#utility.yul\":6045:6200   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6206:6571   */\n    tag_159:\n        /* \"#utility.yul\":6348:6351   */\n      0x00\n        /* \"#utility.yul\":6369:6435   */\n      tag_264\n        /* \"#utility.yul\":6433:6434   */\n      0x05\n        /* \"#utility.yul\":6428:6431   */\n      dup4\n        /* \"#utility.yul\":6369:6435   */\n      tag_155\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":6362:6435   */\n      swap2\n      pop\n        /* \"#utility.yul\":6444:6537   */\n      tag_265\n        /* \"#utility.yul\":6533:6536   */\n      dup3\n        /* \"#utility.yul\":6444:6537   */\n      tag_158\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":6562:6564   */\n      0x20\n        /* \"#utility.yul\":6557:6560   */\n      dup3\n        /* \"#utility.yul\":6553:6565   */\n      add\n        /* \"#utility.yul\":6546:6565   */\n      swap1\n      pop\n        /* \"#utility.yul\":6206:6571   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6577:6996   */\n    tag_78:\n        /* \"#utility.yul\":6743:6747   */\n      0x00\n        /* \"#utility.yul\":6781:6783   */\n      0x20\n        /* \"#utility.yul\":6770:6779   */\n      dup3\n        /* \"#utility.yul\":6766:6784   */\n      add\n        /* \"#utility.yul\":6758:6784   */\n      swap1\n      pop\n        /* \"#utility.yul\":6830:6839   */\n      dup2\n        /* \"#utility.yul\":6824:6828   */\n      dup2\n        /* \"#utility.yul\":6820:6840   */\n      sub\n        /* \"#utility.yul\":6816:6817   */\n      0x00\n        /* \"#utility.yul\":6805:6814   */\n      dup4\n        /* \"#utility.yul\":6801:6818   */\n      add\n        /* \"#utility.yul\":6794:6841   */\n      mstore\n        /* \"#utility.yul\":6858:6989   */\n      tag_267\n        /* \"#utility.yul\":6984:6988   */\n      dup2\n        /* \"#utility.yul\":6858:6989   */\n      tag_159\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":6850:6989   */\n      swap1\n      pop\n        /* \"#utility.yul\":6577:6996   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7002:7182   */\n    tag_160:\n        /* \"#utility.yul\":7050:7127   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7047:7048   */\n      0x00\n        /* \"#utility.yul\":7040:7128   */\n      mstore\n        /* \"#utility.yul\":7147:7151   */\n      0x11\n        /* \"#utility.yul\":7144:7145   */\n      0x04\n        /* \"#utility.yul\":7137:7152   */\n      mstore\n        /* \"#utility.yul\":7171:7175   */\n      0x24\n        /* \"#utility.yul\":7168:7169   */\n      0x00\n        /* \"#utility.yul\":7161:7176   */\n      revert\n        /* \"#utility.yul\":7188:7493   */\n    tag_80:\n        /* \"#utility.yul\":7228:7231   */\n      0x00\n        /* \"#utility.yul\":7247:7267   */\n      tag_270\n        /* \"#utility.yul\":7265:7266   */\n      dup3\n        /* \"#utility.yul\":7247:7267   */\n      tag_138\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":7242:7267   */\n      swap2\n      pop\n        /* \"#utility.yul\":7281:7301   */\n      tag_271\n        /* \"#utility.yul\":7299:7300   */\n      dup4\n        /* \"#utility.yul\":7281:7301   */\n      tag_138\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":7276:7301   */\n      swap3\n      pop\n        /* \"#utility.yul\":7435:7436   */\n      dup3\n        /* \"#utility.yul\":7367:7433   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":7363:7437   */\n      sub\n        /* \"#utility.yul\":7360:7361   */\n      dup3\n        /* \"#utility.yul\":7357:7438   */\n      gt\n        /* \"#utility.yul\":7354:7461   */\n      iszero\n      tag_272\n      jumpi\n        /* \"#utility.yul\":7441:7459   */\n      tag_273\n      tag_160\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":7354:7461   */\n    tag_272:\n        /* \"#utility.yul\":7485:7486   */\n      dup3\n        /* \"#utility.yul\":7482:7483   */\n      dup3\n        /* \"#utility.yul\":7478:7487   */\n      add\n        /* \"#utility.yul\":7471:7487   */\n      swap1\n      pop\n        /* \"#utility.yul\":7188:7493   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7499:7656   */\n    tag_161:\n        /* \"#utility.yul\":7639:7648   */\n      0x7374617274656400000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7635:7636   */\n      0x00\n        /* \"#utility.yul\":7627:7633   */\n      dup3\n        /* \"#utility.yul\":7623:7637   */\n      add\n        /* \"#utility.yul\":7616:7649   */\n      mstore\n        /* \"#utility.yul\":7499:7656   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7662:8027   */\n    tag_162:\n        /* \"#utility.yul\":7804:7807   */\n      0x00\n        /* \"#utility.yul\":7825:7891   */\n      tag_276\n        /* \"#utility.yul\":7889:7890   */\n      0x07\n        /* \"#utility.yul\":7884:7887   */\n      dup4\n        /* \"#utility.yul\":7825:7891   */\n      tag_155\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":7818:7891   */\n      swap2\n      pop\n        /* \"#utility.yul\":7900:7993   */\n      tag_277\n        /* \"#utility.yul\":7989:7992   */\n      dup3\n        /* \"#utility.yul\":7900:7993   */\n      tag_161\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":8018:8020   */\n      0x20\n        /* \"#utility.yul\":8013:8016   */\n      dup3\n        /* \"#utility.yul\":8009:8021   */\n      add\n        /* \"#utility.yul\":8002:8021   */\n      swap1\n      pop\n        /* \"#utility.yul\":7662:8027   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8033:8452   */\n    tag_87:\n        /* \"#utility.yul\":8199:8203   */\n      0x00\n        /* \"#utility.yul\":8237:8239   */\n      0x20\n        /* \"#utility.yul\":8226:8235   */\n      dup3\n        /* \"#utility.yul\":8222:8240   */\n      add\n        /* \"#utility.yul\":8214:8240   */\n      swap1\n      pop\n        /* \"#utility.yul\":8286:8295   */\n      dup2\n        /* \"#utility.yul\":8280:8284   */\n      dup2\n        /* \"#utility.yul\":8276:8296   */\n      sub\n        /* \"#utility.yul\":8272:8273   */\n      0x00\n        /* \"#utility.yul\":8261:8270   */\n      dup4\n        /* \"#utility.yul\":8257:8274   */\n      add\n        /* \"#utility.yul\":8250:8297   */\n      mstore\n        /* \"#utility.yul\":8314:8445   */\n      tag_279\n        /* \"#utility.yul\":8440:8444   */\n      dup2\n        /* \"#utility.yul\":8314:8445   */\n      tag_162\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":8306:8445   */\n      swap1\n      pop\n        /* \"#utility.yul\":8033:8452   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8458:8618   */\n    tag_163:\n        /* \"#utility.yul\":8598:8610   */\n      0x6e6f742073656c6c657200000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8594:8595   */\n      0x00\n        /* \"#utility.yul\":8586:8592   */\n      dup3\n        /* \"#utility.yul\":8582:8596   */\n      add\n        /* \"#utility.yul\":8575:8611   */\n      mstore\n        /* \"#utility.yul\":8458:8618   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8624:8990   */\n    tag_164:\n        /* \"#utility.yul\":8766:8769   */\n      0x00\n        /* \"#utility.yul\":8787:8854   */\n      tag_282\n        /* \"#utility.yul\":8851:8853   */\n      0x0a\n        /* \"#utility.yul\":8846:8849   */\n      dup4\n        /* \"#utility.yul\":8787:8854   */\n      tag_155\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":8780:8854   */\n      swap2\n      pop\n        /* \"#utility.yul\":8863:8956   */\n      tag_283\n        /* \"#utility.yul\":8952:8955   */\n      dup3\n        /* \"#utility.yul\":8863:8956   */\n      tag_163\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":8981:8983   */\n      0x20\n        /* \"#utility.yul\":8976:8979   */\n      dup3\n        /* \"#utility.yul\":8972:8984   */\n      add\n        /* \"#utility.yul\":8965:8984   */\n      swap1\n      pop\n        /* \"#utility.yul\":8624:8990   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8996:9415   */\n    tag_90:\n        /* \"#utility.yul\":9162:9166   */\n      0x00\n        /* \"#utility.yul\":9200:9202   */\n      0x20\n        /* \"#utility.yul\":9189:9198   */\n      dup3\n        /* \"#utility.yul\":9185:9203   */\n      add\n        /* \"#utility.yul\":9177:9203   */\n      swap1\n      pop\n        /* \"#utility.yul\":9249:9258   */\n      dup2\n        /* \"#utility.yul\":9243:9247   */\n      dup2\n        /* \"#utility.yul\":9239:9259   */\n      sub\n        /* \"#utility.yul\":9235:9236   */\n      0x00\n        /* \"#utility.yul\":9224:9233   */\n      dup4\n        /* \"#utility.yul\":9220:9237   */\n      add\n        /* \"#utility.yul\":9213:9260   */\n      mstore\n        /* \"#utility.yul\":9277:9408   */\n      tag_285\n        /* \"#utility.yul\":9403:9407   */\n      dup2\n        /* \"#utility.yul\":9277:9408   */\n      tag_164\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":9269:9408   */\n      swap1\n      pop\n        /* \"#utility.yul\":8996:9415   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9421:9506   */\n    tag_165:\n        /* \"#utility.yul\":9466:9473   */\n      0x00\n        /* \"#utility.yul\":9495:9500   */\n      dup2\n        /* \"#utility.yul\":9484:9500   */\n      swap1\n      pop\n        /* \"#utility.yul\":9421:9506   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9512:9670   */\n    tag_166:\n        /* \"#utility.yul\":9570:9579   */\n      0x00\n        /* \"#utility.yul\":9603:9664   */\n      tag_288\n        /* \"#utility.yul\":9621:9663   */\n      tag_289\n        /* \"#utility.yul\":9630:9662   */\n      tag_290\n        /* \"#utility.yul\":9656:9661   */\n      dup5\n        /* \"#utility.yul\":9630:9662   */\n      tag_165\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":9621:9663   */\n      tag_150\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":9603:9664   */\n      tag_138\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":9590:9664   */\n      swap1\n      pop\n        /* \"#utility.yul\":9512:9670   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9676:9823   */\n    tag_167:\n        /* \"#utility.yul\":9771:9816   */\n      tag_292\n        /* \"#utility.yul\":9810:9815   */\n      dup2\n        /* \"#utility.yul\":9771:9816   */\n      tag_166\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":9766:9769   */\n      dup3\n        /* \"#utility.yul\":9759:9817   */\n      mstore\n        /* \"#utility.yul\":9676:9823   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9829:10287   */\n    tag_92:\n        /* \"#utility.yul\":9986:9990   */\n      0x00\n        /* \"#utility.yul\":10024:10026   */\n      0x60\n        /* \"#utility.yul\":10013:10022   */\n      dup3\n        /* \"#utility.yul\":10009:10027   */\n      add\n        /* \"#utility.yul\":10001:10027   */\n      swap1\n      pop\n        /* \"#utility.yul\":10037:10108   */\n      tag_294\n        /* \"#utility.yul\":10105:10106   */\n      0x00\n        /* \"#utility.yul\":10094:10103   */\n      dup4\n        /* \"#utility.yul\":10090:10107   */\n      add\n        /* \"#utility.yul\":10081:10087   */\n      dup7\n        /* \"#utility.yul\":10037:10108   */\n      tag_149\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":10118:10190   */\n      tag_295\n        /* \"#utility.yul\":10186:10188   */\n      0x20\n        /* \"#utility.yul\":10175:10184   */\n      dup4\n        /* \"#utility.yul\":10171:10189   */\n      add\n        /* \"#utility.yul\":10162:10168   */\n      dup6\n        /* \"#utility.yul\":10118:10190   */\n      tag_149\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":10200:10280   */\n      tag_296\n        /* \"#utility.yul\":10276:10278   */\n      0x40\n        /* \"#utility.yul\":10265:10274   */\n      dup4\n        /* \"#utility.yul\":10261:10279   */\n      add\n        /* \"#utility.yul\":10252:10258   */\n      dup5\n        /* \"#utility.yul\":10200:10280   */\n      tag_167\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":9829:10287   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10293:10452   */\n    tag_168:\n        /* \"#utility.yul\":10433:10444   */\n      0x6e6f7420656e6465640000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10429:10430   */\n      0x00\n        /* \"#utility.yul\":10421:10427   */\n      dup3\n        /* \"#utility.yul\":10417:10431   */\n      add\n        /* \"#utility.yul\":10410:10445   */\n      mstore\n        /* \"#utility.yul\":10293:10452   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10458:10823   */\n    tag_169:\n        /* \"#utility.yul\":10600:10603   */\n      0x00\n        /* \"#utility.yul\":10621:10687   */\n      tag_299\n        /* \"#utility.yul\":10685:10686   */\n      0x09\n        /* \"#utility.yul\":10680:10683   */\n      dup4\n        /* \"#utility.yul\":10621:10687   */\n      tag_155\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":10614:10687   */\n      swap2\n      pop\n        /* \"#utility.yul\":10696:10789   */\n      tag_300\n        /* \"#utility.yul\":10785:10788   */\n      dup3\n        /* \"#utility.yul\":10696:10789   */\n      tag_168\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":10814:10816   */\n      0x20\n        /* \"#utility.yul\":10809:10812   */\n      dup3\n        /* \"#utility.yul\":10805:10817   */\n      add\n        /* \"#utility.yul\":10798:10817   */\n      swap1\n      pop\n        /* \"#utility.yul\":10458:10823   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10829:11248   */\n    tag_102:\n        /* \"#utility.yul\":10995:10999   */\n      0x00\n        /* \"#utility.yul\":11033:11035   */\n      0x20\n        /* \"#utility.yul\":11022:11031   */\n      dup3\n        /* \"#utility.yul\":11018:11036   */\n      add\n        /* \"#utility.yul\":11010:11036   */\n      swap1\n      pop\n        /* \"#utility.yul\":11082:11091   */\n      dup2\n        /* \"#utility.yul\":11076:11080   */\n      dup2\n        /* \"#utility.yul\":11072:11092   */\n      sub\n        /* \"#utility.yul\":11068:11069   */\n      0x00\n        /* \"#utility.yul\":11057:11066   */\n      dup4\n        /* \"#utility.yul\":11053:11070   */\n      add\n        /* \"#utility.yul\":11046:11093   */\n      mstore\n        /* \"#utility.yul\":11110:11241   */\n      tag_302\n        /* \"#utility.yul\":11236:11240   */\n      dup2\n        /* \"#utility.yul\":11110:11241   */\n      tag_169\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":11102:11241   */\n      swap1\n      pop\n        /* \"#utility.yul\":10829:11248   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11254:11434   */\n    tag_110:\n        /* \"#utility.yul\":11302:11379   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11299:11300   */\n      0x00\n        /* \"#utility.yul\":11292:11380   */\n      mstore\n        /* \"#utility.yul\":11399:11403   */\n      0x32\n        /* \"#utility.yul\":11396:11397   */\n      0x04\n        /* \"#utility.yul\":11389:11404   */\n      mstore\n        /* \"#utility.yul\":11423:11427   */\n      0x24\n        /* \"#utility.yul\":11420:11421   */\n      0x00\n        /* \"#utility.yul\":11413:11428   */\n      revert\n        /* \"#utility.yul\":11440:11623   */\n    tag_114:\n        /* \"#utility.yul\":11478:11481   */\n      0x00\n        /* \"#utility.yul\":11501:11524   */\n      tag_305\n        /* \"#utility.yul\":11518:11523   */\n      dup3\n        /* \"#utility.yul\":11501:11524   */\n      tag_144\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":11492:11524   */\n      swap2\n      pop\n        /* \"#utility.yul\":11546:11564   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11539:11544   */\n      dup3\n        /* \"#utility.yul\":11536:11565   */\n      eq\n        /* \"#utility.yul\":11533:11588   */\n      iszero\n      tag_306\n      jumpi\n        /* \"#utility.yul\":11568:11586   */\n      tag_307\n      tag_160\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":11533:11588   */\n    tag_306:\n        /* \"#utility.yul\":11615:11616   */\n      0x01\n        /* \"#utility.yul\":11608:11613   */\n      dup3\n        /* \"#utility.yul\":11604:11617   */\n      add\n        /* \"#utility.yul\":11597:11617   */\n      swap1\n      pop\n        /* \"#utility.yul\":11440:11623   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11629:11809   */\n    tag_170:\n        /* \"#utility.yul\":11677:11754   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11674:11675   */\n      0x00\n        /* \"#utility.yul\":11667:11755   */\n      mstore\n        /* \"#utility.yul\":11774:11778   */\n      0x12\n        /* \"#utility.yul\":11771:11772   */\n      0x04\n        /* \"#utility.yul\":11764:11779   */\n      mstore\n        /* \"#utility.yul\":11798:11802   */\n      0x24\n        /* \"#utility.yul\":11795:11796   */\n      0x00\n        /* \"#utility.yul\":11788:11803   */\n      revert\n        /* \"#utility.yul\":11815:12000   */\n    tag_123:\n        /* \"#utility.yul\":11855:11856   */\n      0x00\n        /* \"#utility.yul\":11872:11892   */\n      tag_310\n        /* \"#utility.yul\":11890:11891   */\n      dup3\n        /* \"#utility.yul\":11872:11892   */\n      tag_138\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":11867:11892   */\n      swap2\n      pop\n        /* \"#utility.yul\":11906:11926   */\n      tag_311\n        /* \"#utility.yul\":11924:11925   */\n      dup4\n        /* \"#utility.yul\":11906:11926   */\n      tag_138\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":11901:11926   */\n      swap3\n      pop\n        /* \"#utility.yul\":11945:11946   */\n      dup3\n        /* \"#utility.yul\":11935:11970   */\n      tag_312\n      jumpi\n        /* \"#utility.yul\":11950:11968   */\n      tag_313\n      tag_170\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":11935:11970   */\n    tag_312:\n        /* \"#utility.yul\":11992:11993   */\n      dup3\n        /* \"#utility.yul\":11989:11990   */\n      dup3\n        /* \"#utility.yul\":11985:11994   */\n      div\n        /* \"#utility.yul\":11980:11994   */\n      swap1\n      pop\n        /* \"#utility.yul\":11815:12000   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12006:12448   */\n    tag_125:\n        /* \"#utility.yul\":12155:12159   */\n      0x00\n        /* \"#utility.yul\":12193:12195   */\n      0x60\n        /* \"#utility.yul\":12182:12191   */\n      dup3\n        /* \"#utility.yul\":12178:12196   */\n      add\n        /* \"#utility.yul\":12170:12196   */\n      swap1\n      pop\n        /* \"#utility.yul\":12206:12277   */\n      tag_315\n        /* \"#utility.yul\":12274:12275   */\n      0x00\n        /* \"#utility.yul\":12263:12272   */\n      dup4\n        /* \"#utility.yul\":12259:12276   */\n      add\n        /* \"#utility.yul\":12250:12256   */\n      dup7\n        /* \"#utility.yul\":12206:12277   */\n      tag_149\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":12287:12359   */\n      tag_316\n        /* \"#utility.yul\":12355:12357   */\n      0x20\n        /* \"#utility.yul\":12344:12353   */\n      dup4\n        /* \"#utility.yul\":12340:12358   */\n      add\n        /* \"#utility.yul\":12331:12337   */\n      dup6\n        /* \"#utility.yul\":12287:12359   */\n      tag_149\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":12369:12441   */\n      tag_317\n        /* \"#utility.yul\":12437:12439   */\n      0x40\n        /* \"#utility.yul\":12426:12435   */\n      dup4\n        /* \"#utility.yul\":12422:12440   */\n      add\n        /* \"#utility.yul\":12413:12419   */\n      dup5\n        /* \"#utility.yul\":12369:12441   */\n      tag_141\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":12006:12448   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12454:12565   */\n    tag_171:\n        /* \"#utility.yul\":12518:12524   */\n      0x00\n        /* \"#utility.yul\":12552:12557   */\n      dup2\n        /* \"#utility.yul\":12546:12558   */\n      sload\n        /* \"#utility.yul\":12536:12558   */\n      swap1\n      pop\n        /* \"#utility.yul\":12454:12565   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12571:12755   */\n    tag_172:\n        /* \"#utility.yul\":12670:12681   */\n      0x00\n        /* \"#utility.yul\":12704:12710   */\n      dup3\n        /* \"#utility.yul\":12699:12702   */\n      dup3\n        /* \"#utility.yul\":12692:12711   */\n      mstore\n        /* \"#utility.yul\":12744:12748   */\n      0x20\n        /* \"#utility.yul\":12739:12742   */\n      dup3\n        /* \"#utility.yul\":12735:12749   */\n      add\n        /* \"#utility.yul\":12720:12749   */\n      swap1\n      pop\n        /* \"#utility.yul\":12571:12755   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12761:12917   */\n    tag_173:\n        /* \"#utility.yul\":12825:12829   */\n      0x00\n        /* \"#utility.yul\":12848:12851   */\n      dup2\n        /* \"#utility.yul\":12840:12851   */\n      swap1\n      pop\n        /* \"#utility.yul\":12871:12874   */\n      dup2\n        /* \"#utility.yul\":12868:12869   */\n      0x00\n        /* \"#utility.yul\":12861:12875   */\n      mstore\n        /* \"#utility.yul\":12905:12909   */\n      0x20\n        /* \"#utility.yul\":12902:12903   */\n      0x00\n        /* \"#utility.yul\":12892:12910   */\n      keccak256\n        /* \"#utility.yul\":12884:12910   */\n      swap1\n      pop\n        /* \"#utility.yul\":12761:12917   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12923:13031   */\n    tag_174:\n        /* \"#utility.yul\":13000:13024   */\n      tag_322\n        /* \"#utility.yul\":13018:13023   */\n      dup2\n        /* \"#utility.yul\":13000:13024   */\n      tag_146\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":12995:12998   */\n      dup3\n        /* \"#utility.yul\":12988:13025   */\n      mstore\n        /* \"#utility.yul\":12923:13031   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13037:13216   */\n    tag_175:\n        /* \"#utility.yul\":13106:13116   */\n      0x00\n        /* \"#utility.yul\":13127:13173   */\n      tag_324\n        /* \"#utility.yul\":13169:13172   */\n      dup4\n        /* \"#utility.yul\":13161:13167   */\n      dup4\n        /* \"#utility.yul\":13127:13173   */\n      tag_174\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":13205:13209   */\n      0x20\n        /* \"#utility.yul\":13200:13203   */\n      dup4\n        /* \"#utility.yul\":13196:13210   */\n      add\n        /* \"#utility.yul\":13182:13210   */\n      swap1\n      pop\n        /* \"#utility.yul\":13037:13216   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13222:13324   */\n    tag_176:\n        /* \"#utility.yul\":13264:13272   */\n      0x00\n        /* \"#utility.yul\":13311:13316   */\n      dup2\n        /* \"#utility.yul\":13308:13309   */\n      0x00\n        /* \"#utility.yul\":13304:13317   */\n      shr\n        /* \"#utility.yul\":13283:13317   */\n      swap1\n      pop\n        /* \"#utility.yul\":13222:13324   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13330:13469   */\n    tag_177:\n        /* \"#utility.yul\":13380:13387   */\n      0x00\n        /* \"#utility.yul\":13420:13462   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":13413:13418   */\n      dup3\n        /* \"#utility.yul\":13409:13463   */\n      and\n        /* \"#utility.yul\":13398:13463   */\n      swap1\n      pop\n        /* \"#utility.yul\":13330:13469   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13475:13641   */\n    tag_178:\n        /* \"#utility.yul\":13544:13549   */\n      0x00\n        /* \"#utility.yul\":13569:13635   */\n      tag_328\n        /* \"#utility.yul\":13600:13634   */\n      tag_329\n        /* \"#utility.yul\":13623:13633   */\n      dup4\n        /* \"#utility.yul\":13600:13634   */\n      tag_176\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":13569:13635   */\n      tag_177\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":13560:13635   */\n      swap1\n      pop\n        /* \"#utility.yul\":13475:13641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13647:13791   */\n    tag_179:\n        /* \"#utility.yul\":13702:13707   */\n      0x00\n        /* \"#utility.yul\":13727:13784   */\n      tag_331\n        /* \"#utility.yul\":13778:13782   */\n      dup3\n        /* \"#utility.yul\":13772:13783   */\n      sload\n        /* \"#utility.yul\":13727:13784   */\n      tag_178\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":13718:13784   */\n      swap1\n      pop\n        /* \"#utility.yul\":13647:13791   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13797:13907   */\n    tag_180:\n        /* \"#utility.yul\":13864:13868   */\n      0x00\n        /* \"#utility.yul\":13896:13900   */\n      0x01\n        /* \"#utility.yul\":13891:13894   */\n      dup3\n        /* \"#utility.yul\":13887:13901   */\n      add\n        /* \"#utility.yul\":13879:13901   */\n      swap1\n      pop\n        /* \"#utility.yul\":13797:13907   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13943:14694   */\n    tag_181:\n        /* \"#utility.yul\":14059:14062   */\n      0x00\n        /* \"#utility.yul\":14088:14139   */\n      tag_334\n        /* \"#utility.yul\":14133:14138   */\n      dup3\n        /* \"#utility.yul\":14088:14139   */\n      tag_171\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":14155:14241   */\n      tag_335\n        /* \"#utility.yul\":14234:14240   */\n      dup2\n        /* \"#utility.yul\":14229:14232   */\n      dup6\n        /* \"#utility.yul\":14155:14241   */\n      tag_172\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":14148:14241   */\n      swap4\n      pop\n        /* \"#utility.yul\":14265:14318   */\n      tag_336\n        /* \"#utility.yul\":14312:14317   */\n      dup4\n        /* \"#utility.yul\":14265:14318   */\n      tag_173\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":14341:14348   */\n      dup1\n        /* \"#utility.yul\":14372:14373   */\n      0x00\n        /* \"#utility.yul\":14357:14669   */\n    tag_337:\n        /* \"#utility.yul\":14382:14388   */\n      dup4\n        /* \"#utility.yul\":14379:14380   */\n      dup2\n        /* \"#utility.yul\":14376:14389   */\n      lt\n        /* \"#utility.yul\":14357:14669   */\n      iszero\n      tag_339\n      jumpi\n        /* \"#utility.yul\":14452:14496   */\n      tag_340\n        /* \"#utility.yul\":14489:14495   */\n      dup3\n        /* \"#utility.yul\":14452:14496   */\n      tag_179\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":14516:14579   */\n      tag_341\n        /* \"#utility.yul\":14575:14578   */\n      dup9\n        /* \"#utility.yul\":14560:14573   */\n      dup3\n        /* \"#utility.yul\":14516:14579   */\n      tag_175\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":14509:14579   */\n      swap8\n      pop\n        /* \"#utility.yul\":14602:14659   */\n      tag_342\n        /* \"#utility.yul\":14652:14658   */\n      dup4\n        /* \"#utility.yul\":14602:14659   */\n      tag_180\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":14592:14659   */\n      swap3\n      pop\n        /* \"#utility.yul\":14417:14669   */\n      pop\n        /* \"#utility.yul\":14404:14405   */\n      0x01\n        /* \"#utility.yul\":14401:14402   */\n      dup2\n        /* \"#utility.yul\":14397:14406   */\n      add\n        /* \"#utility.yul\":14392:14406   */\n      swap1\n      pop\n        /* \"#utility.yul\":14357:14669   */\n      jump(tag_337)\n    tag_339:\n        /* \"#utility.yul\":14361:14375   */\n      pop\n        /* \"#utility.yul\":14685:14688   */\n      dup6\n        /* \"#utility.yul\":14678:14688   */\n      swap4\n      pop\n        /* \"#utility.yul\":14064:14694   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":13943:14694   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14700:14811   */\n    tag_182:\n        /* \"#utility.yul\":14764:14770   */\n      0x00\n        /* \"#utility.yul\":14798:14803   */\n      dup2\n        /* \"#utility.yul\":14792:14804   */\n      sload\n        /* \"#utility.yul\":14782:14804   */\n      swap1\n      pop\n        /* \"#utility.yul\":14700:14811   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14817:15001   */\n    tag_183:\n        /* \"#utility.yul\":14916:14927   */\n      0x00\n        /* \"#utility.yul\":14950:14956   */\n      dup3\n        /* \"#utility.yul\":14945:14948   */\n      dup3\n        /* \"#utility.yul\":14938:14957   */\n      mstore\n        /* \"#utility.yul\":14990:14994   */\n      0x20\n        /* \"#utility.yul\":14985:14988   */\n      dup3\n        /* \"#utility.yul\":14981:14995   */\n      add\n        /* \"#utility.yul\":14966:14995   */\n      swap1\n      pop\n        /* \"#utility.yul\":14817:15001   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15007:15163   */\n    tag_184:\n        /* \"#utility.yul\":15071:15075   */\n      0x00\n        /* \"#utility.yul\":15094:15097   */\n      dup2\n        /* \"#utility.yul\":15086:15097   */\n      swap1\n      pop\n        /* \"#utility.yul\":15117:15120   */\n      dup2\n        /* \"#utility.yul\":15114:15115   */\n      0x00\n        /* \"#utility.yul\":15107:15121   */\n      mstore\n        /* \"#utility.yul\":15151:15155   */\n      0x20\n        /* \"#utility.yul\":15148:15149   */\n      0x00\n        /* \"#utility.yul\":15138:15156   */\n      keccak256\n        /* \"#utility.yul\":15130:15156   */\n      swap1\n      pop\n        /* \"#utility.yul\":15007:15163   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15169:15277   */\n    tag_185:\n        /* \"#utility.yul\":15246:15270   */\n      tag_347\n        /* \"#utility.yul\":15264:15269   */\n      dup2\n        /* \"#utility.yul\":15246:15270   */\n      tag_138\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":15241:15244   */\n      dup3\n        /* \"#utility.yul\":15234:15271   */\n      mstore\n        /* \"#utility.yul\":15169:15277   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15283:15462   */\n    tag_186:\n        /* \"#utility.yul\":15352:15362   */\n      0x00\n        /* \"#utility.yul\":15373:15419   */\n      tag_349\n        /* \"#utility.yul\":15415:15418   */\n      dup4\n        /* \"#utility.yul\":15407:15413   */\n      dup4\n        /* \"#utility.yul\":15373:15419   */\n      tag_185\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":15451:15455   */\n      0x20\n        /* \"#utility.yul\":15446:15449   */\n      dup4\n        /* \"#utility.yul\":15442:15456   */\n      add\n        /* \"#utility.yul\":15428:15456   */\n      swap1\n      pop\n        /* \"#utility.yul\":15283:15462   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15468:15558   */\n    tag_187:\n        /* \"#utility.yul\":15518:15525   */\n      0x00\n        /* \"#utility.yul\":15547:15552   */\n      dup2\n        /* \"#utility.yul\":15536:15552   */\n      swap1\n      pop\n        /* \"#utility.yul\":15468:15558   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15564:15730   */\n    tag_188:\n        /* \"#utility.yul\":15633:15638   */\n      0x00\n        /* \"#utility.yul\":15658:15724   */\n      tag_352\n        /* \"#utility.yul\":15689:15723   */\n      tag_353\n        /* \"#utility.yul\":15712:15722   */\n      dup4\n        /* \"#utility.yul\":15689:15723   */\n      tag_176\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":15658:15724   */\n      tag_187\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":15649:15724   */\n      swap1\n      pop\n        /* \"#utility.yul\":15564:15730   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15736:15880   */\n    tag_189:\n        /* \"#utility.yul\":15791:15796   */\n      0x00\n        /* \"#utility.yul\":15816:15873   */\n      tag_355\n        /* \"#utility.yul\":15867:15871   */\n      dup3\n        /* \"#utility.yul\":15861:15872   */\n      sload\n        /* \"#utility.yul\":15816:15873   */\n      tag_188\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":15807:15873   */\n      swap1\n      pop\n        /* \"#utility.yul\":15736:15880   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15886:15996   */\n    tag_190:\n        /* \"#utility.yul\":15953:15957   */\n      0x00\n        /* \"#utility.yul\":15985:15989   */\n      0x01\n        /* \"#utility.yul\":15980:15983   */\n      dup3\n        /* \"#utility.yul\":15976:15990   */\n      add\n        /* \"#utility.yul\":15968:15990   */\n      swap1\n      pop\n        /* \"#utility.yul\":15886:15996   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16032:16783   */\n    tag_191:\n        /* \"#utility.yul\":16148:16151   */\n      0x00\n        /* \"#utility.yul\":16177:16228   */\n      tag_358\n        /* \"#utility.yul\":16222:16227   */\n      dup3\n        /* \"#utility.yul\":16177:16228   */\n      tag_182\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":16244:16330   */\n      tag_359\n        /* \"#utility.yul\":16323:16329   */\n      dup2\n        /* \"#utility.yul\":16318:16321   */\n      dup6\n        /* \"#utility.yul\":16244:16330   */\n      tag_183\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":16237:16330   */\n      swap4\n      pop\n        /* \"#utility.yul\":16354:16407   */\n      tag_360\n        /* \"#utility.yul\":16401:16406   */\n      dup4\n        /* \"#utility.yul\":16354:16407   */\n      tag_184\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":16430:16437   */\n      dup1\n        /* \"#utility.yul\":16461:16462   */\n      0x00\n        /* \"#utility.yul\":16446:16758   */\n    tag_361:\n        /* \"#utility.yul\":16471:16477   */\n      dup4\n        /* \"#utility.yul\":16468:16469   */\n      dup2\n        /* \"#utility.yul\":16465:16478   */\n      lt\n        /* \"#utility.yul\":16446:16758   */\n      iszero\n      tag_363\n      jumpi\n        /* \"#utility.yul\":16541:16585   */\n      tag_364\n        /* \"#utility.yul\":16578:16584   */\n      dup3\n        /* \"#utility.yul\":16541:16585   */\n      tag_189\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":16605:16668   */\n      tag_365\n        /* \"#utility.yul\":16664:16667   */\n      dup9\n        /* \"#utility.yul\":16649:16662   */\n      dup3\n        /* \"#utility.yul\":16605:16668   */\n      tag_186\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":16598:16668   */\n      swap8\n      pop\n        /* \"#utility.yul\":16691:16748   */\n      tag_366\n        /* \"#utility.yul\":16741:16747   */\n      dup4\n        /* \"#utility.yul\":16691:16748   */\n      tag_190\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":16681:16748   */\n      swap3\n      pop\n        /* \"#utility.yul\":16506:16758   */\n      pop\n        /* \"#utility.yul\":16493:16494   */\n      0x01\n        /* \"#utility.yul\":16490:16491   */\n      dup2\n        /* \"#utility.yul\":16486:16495   */\n      add\n        /* \"#utility.yul\":16481:16495   */\n      swap1\n      pop\n        /* \"#utility.yul\":16446:16758   */\n      jump(tag_361)\n    tag_363:\n        /* \"#utility.yul\":16450:16464   */\n      pop\n        /* \"#utility.yul\":16774:16777   */\n      dup6\n        /* \"#utility.yul\":16767:16777   */\n      swap4\n      pop\n        /* \"#utility.yul\":16153:16783   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":16032:16783   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16789:17411   */\n    tag_131:\n        /* \"#utility.yul\":17004:17008   */\n      0x00\n        /* \"#utility.yul\":17042:17044   */\n      0x40\n        /* \"#utility.yul\":17031:17040   */\n      dup3\n        /* \"#utility.yul\":17027:17045   */\n      add\n        /* \"#utility.yul\":17019:17045   */\n      swap1\n      pop\n        /* \"#utility.yul\":17091:17100   */\n      dup2\n        /* \"#utility.yul\":17085:17089   */\n      dup2\n        /* \"#utility.yul\":17081:17101   */\n      sub\n        /* \"#utility.yul\":17077:17078   */\n      0x00\n        /* \"#utility.yul\":17066:17075   */\n      dup4\n        /* \"#utility.yul\":17062:17079   */\n      add\n        /* \"#utility.yul\":17055:17102   */\n      mstore\n        /* \"#utility.yul\":17119:17224   */\n      tag_368\n        /* \"#utility.yul\":17219:17223   */\n      dup2\n        /* \"#utility.yul\":17210:17216   */\n      dup6\n        /* \"#utility.yul\":17119:17224   */\n      tag_181\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":17111:17224   */\n      swap1\n      pop\n        /* \"#utility.yul\":17271:17280   */\n      dup2\n        /* \"#utility.yul\":17265:17269   */\n      dup2\n        /* \"#utility.yul\":17261:17281   */\n      sub\n        /* \"#utility.yul\":17256:17258   */\n      0x20\n        /* \"#utility.yul\":17245:17254   */\n      dup4\n        /* \"#utility.yul\":17241:17259   */\n      add\n        /* \"#utility.yul\":17234:17282   */\n      mstore\n        /* \"#utility.yul\":17299:17404   */\n      tag_369\n        /* \"#utility.yul\":17399:17403   */\n      dup2\n        /* \"#utility.yul\":17390:17396   */\n      dup5\n        /* \"#utility.yul\":17299:17404   */\n      tag_191\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":17291:17404   */\n      swap1\n      pop\n        /* \"#utility.yul\":16789:17411   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220e1df5de8d4bf4c273e334c990f3fe47ccab516c1da336bbf641dfbac79e439e864736f6c63430008090033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_92": {
									"entryPoint": null,
									"id": 92,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 472,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint64_fromMemory": {
									"entryPoint": 541,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint64_fromMemory": {
									"entryPoint": 564,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 426,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 394,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint64": {
									"entryPoint": 495,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 389,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 446,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint64": {
									"entryPoint": 515,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1733:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:2",
														"type": ""
													}
												],
												"src": "7:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:2",
														"type": ""
													}
												],
												"src": "334:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:2",
														"type": ""
													}
												],
												"src": "466:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:2"
															},
															"nodeType": "YulIf",
															"src": "621:63:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:2",
														"type": ""
													}
												],
												"src": "568:122:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:2"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:2",
														"type": ""
													}
												],
												"src": "696:143:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "889:57:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "899:41:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "914:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "921:18:2",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "910:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "910:30:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "899:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint64",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "871:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "881:7:2",
														"type": ""
													}
												],
												"src": "845:101:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "994:78:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1050:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1059:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1062:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1052:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1052:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1052:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1017:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1041:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint64",
																					"nodeType": "YulIdentifier",
																					"src": "1024:16:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1024:23:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1014:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1014:34:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1007:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1007:42:2"
															},
															"nodeType": "YulIf",
															"src": "1004:62:2"
														}
													]
												},
												"name": "validator_revert_t_uint64",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "987:5:2",
														"type": ""
													}
												],
												"src": "952:120:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1140:79:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1150:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1165:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1159:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1159:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1150:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1207:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint64",
																	"nodeType": "YulIdentifier",
																	"src": "1181:25:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1181:32:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1181:32:2"
														}
													]
												},
												"name": "abi_decode_t_uint64_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1118:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1126:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1134:5:2",
														"type": ""
													}
												],
												"src": "1078:141:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1318:412:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1364:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1366:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1366:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1366:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1339:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1348:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1335:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1335:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1360:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1331:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1331:32:2"
															},
															"nodeType": "YulIf",
															"src": "1328:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "1457:128:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1472:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1486:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1476:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1501:74:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1547:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1558:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1543:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1543:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1567:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1511:31:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1511:64:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1501:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1595:128:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1610:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1624:2:2",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1614:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1640:73:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1685:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1696:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1681:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1681:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1705:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint64_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1650:30:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1650:63:2"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1640:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint64_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1280:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1291:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1303:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1311:6:2",
														"type": ""
													}
												],
												"src": "1225:505:2"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function validator_revert_t_uint64(value) {\n        if iszero(eq(value, cleanup_t_uint64(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint64_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint64(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint64_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint64_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506040516200157838038062001578833981810160405281019062000037919062000234565b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600060146101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040518060200160405280600060ff168152506005906001620001069291906200010f565b5050506200027b565b82805482825590600052602060002090810192821562000153579160200282015b8281111562000152578251829060ff1690559160200191906001019062000130565b5b50905062000162919062000166565b5090565b5b808211156200018157600081600090555060010162000167565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001b7826200018a565b9050919050565b620001c981620001aa565b8114620001d557600080fd5b50565b600081519050620001e981620001be565b92915050565b600067ffffffffffffffff82169050919050565b6200020e81620001ef565b81146200021a57600080fd5b50565b6000815190506200022e8162000203565b92915050565b600080604083850312156200024e576200024d62000185565b5b60006200025e85828601620001d8565b925050602062000271858286016200021d565b9150509250929050565b6112ed806200028b6000396000f3fe6080604052600436106100a75760003560e01c806362ea82db1161006457806362ea82db1461019f57806377484aae146101dc5780637c6c5720146102195780637cc3ae8c14610244578063be9a65551461026f578063efbe1c1c14610286576100a7565b806308551a53146100ac578063111cb258146100d757806312fa6feb146101145780631998aeef1461013f5780631f2698ab146101495780632d07091f14610174575b600080fd5b3480156100b857600080fd5b506100c161029d565b6040516100ce9190610a10565b60405180910390f35b3480156100e357600080fd5b506100fe60048036038101906100f99190610a66565b6102c3565b60405161010b9190610aa2565b60405180910390f35b34801561012057600080fd5b506101296102e7565b6040516101369190610ad8565b60405180910390f35b6101476102fa565b005b34801561015557600080fd5b5061015e610433565b60405161016b9190610ad8565b60405180910390f35b34801561018057600080fd5b50610189610446565b6040516101969190610b16565b60405180910390f35b3480156101ab57600080fd5b506101c660048036038101906101c19190610b6f565b610460565b6040516101d39190610aa2565b60405180910390f35b3480156101e857600080fd5b5061020360048036038101906101fe9190610a66565b610478565b6040516102109190610bab565b60405180910390f35b34801561022557600080fd5b5061022e6104b7565b60405161023b9190610c25565b60405180910390f35b34801561025057600080fd5b506102596104db565b6040516102669190610aa2565b60405180910390f35b34801561027b57600080fd5b506102846104e1565b005b34801561029257600080fd5b5061029b6106af565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600581815481106102d357600080fd5b906000526020600020016000915090505481565b600360019054906101000a900460ff1681565b600360009054906101000a900460ff16610349576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034090610c9d565b60405180910390fd5b600254421061038d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038490610d09565b60405180910390fd5b34600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546103dc9190610d58565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167fe684a55f31b79eca403df938249029212a5925ec6be8012e099b45bc1019e5d2346040516104299190610aa2565b60405180910390a2565b600360009054906101000a900460ff1681565b600060149054906101000a900467ffffffffffffffff1681565b60066020528060005260406000206000915090505481565b6004818154811061048857600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025481565b600360009054906101000a900460ff1615610531576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052890610dfa565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b890610e66565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd333060016040518463ffffffff1660e01b815260040161061f93929190610ec1565b600060405180830381600087803b15801561063957600080fd5b505af115801561064d573d6000803e3d6000fd5b505050506001600360006101000a81548160ff02191690831515021790555062093a804261067b9190610d58565b6002819055507f1b55ba3aa851a46be3b365aee5b5c140edd620d578922f3e8466d2cbd96f954b60405160405180910390a1565b600360009054906101000a900460ff166106fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f590610c9d565b60405180910390fd5b600254421015610743576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073a90610f44565b60405180910390fd5b600360019054906101000a900460ff1615610793576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078a90610d09565b60405180910390fd5b6001600360016101000a81548160ff0219169083151502179055506000805b6004805490508167ffffffffffffffff161015610871576006600060048367ffffffffffffffff16815481106107eb576107ea610f64565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548261085c9190610d58565b9150808061086990610f93565b9150506107b2565b506000600480549050146109915760005b6004805490508167ffffffffffffffff16101561098f5760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342842e0e3060048467ffffffffffffffff16815481106108f4576108f3610f64565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1685600161092c9190610ff3565b6040518463ffffffff1660e01b815260040161094a93929190611024565b600060405180830381600087803b15801561096457600080fd5b505af1158015610978573d6000803e3d6000fd5b50505050808061098790610f93565b915050610882565b505b7fd629db0ab1e7a966b4f646bcd3ce5ae4a0b2c91819e7ca456f3064c7af6b8233600460056040516109c4929190611280565b60405180910390a150565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006109fa826109cf565b9050919050565b610a0a816109ef565b82525050565b6000602082019050610a256000830184610a01565b92915050565b600080fd5b6000819050919050565b610a4381610a30565b8114610a4e57600080fd5b50565b600081359050610a6081610a3a565b92915050565b600060208284031215610a7c57610a7b610a2b565b5b6000610a8a84828501610a51565b91505092915050565b610a9c81610a30565b82525050565b6000602082019050610ab76000830184610a93565b92915050565b60008115159050919050565b610ad281610abd565b82525050565b6000602082019050610aed6000830184610ac9565b92915050565b600067ffffffffffffffff82169050919050565b610b1081610af3565b82525050565b6000602082019050610b2b6000830184610b07565b92915050565b6000610b3c826109cf565b9050919050565b610b4c81610b31565b8114610b5757600080fd5b50565b600081359050610b6981610b43565b92915050565b600060208284031215610b8557610b84610a2b565b5b6000610b9384828501610b5a565b91505092915050565b610ba581610b31565b82525050565b6000602082019050610bc06000830184610b9c565b92915050565b6000819050919050565b6000610beb610be6610be1846109cf565b610bc6565b6109cf565b9050919050565b6000610bfd82610bd0565b9050919050565b6000610c0f82610bf2565b9050919050565b610c1f81610c04565b82525050565b6000602082019050610c3a6000830184610c16565b92915050565b600082825260208201905092915050565b7f6e6f742073746172746564000000000000000000000000000000000000000000600082015250565b6000610c87600b83610c40565b9150610c9282610c51565b602082019050919050565b60006020820190508181036000830152610cb681610c7a565b9050919050565b7f656e646564000000000000000000000000000000000000000000000000000000600082015250565b6000610cf3600583610c40565b9150610cfe82610cbd565b602082019050919050565b60006020820190508181036000830152610d2281610ce6565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d6382610a30565b9150610d6e83610a30565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610da357610da2610d29565b5b828201905092915050565b7f7374617274656400000000000000000000000000000000000000000000000000600082015250565b6000610de4600783610c40565b9150610def82610dae565b602082019050919050565b60006020820190508181036000830152610e1381610dd7565b9050919050565b7f6e6f742073656c6c657200000000000000000000000000000000000000000000600082015250565b6000610e50600a83610c40565b9150610e5b82610e1a565b602082019050919050565b60006020820190508181036000830152610e7f81610e43565b9050919050565b6000819050919050565b6000610eab610ea6610ea184610e86565b610bc6565b610a30565b9050919050565b610ebb81610e90565b82525050565b6000606082019050610ed66000830186610b9c565b610ee36020830185610b9c565b610ef06040830184610eb2565b949350505050565b7f6e6f7420656e6465640000000000000000000000000000000000000000000000600082015250565b6000610f2e600983610c40565b9150610f3982610ef8565b602082019050919050565b60006020820190508181036000830152610f5d81610f21565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610f9e82610af3565b915067ffffffffffffffff821415610fb957610fb8610d29565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610ffe82610a30565b915061100983610a30565b92508261101957611018610fc4565b5b828204905092915050565b60006060820190506110396000830186610b9c565b6110466020830185610b9c565b6110536040830184610a93565b949350505050565b600081549050919050565b600082825260208201905092915050565b60008190508160005260206000209050919050565b61109581610b31565b82525050565b60006110a7838361108c565b60208301905092915050565b60008160001c9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006110f36110ee836110b3565b6110c0565b9050919050565b600061110682546110e0565b9050919050565b6000600182019050919050565b60006111258261105b565b61112f8185611066565b935061113a83611077565b8060005b838110156111725761114f826110fa565b611159888261109b565b97506111648361110d565b92505060018101905061113e565b5085935050505092915050565b600081549050919050565b600082825260208201905092915050565b60008190508160005260206000209050919050565b6111b981610a30565b82525050565b60006111cb83836111b0565b60208301905092915050565b6000819050919050565b60006111f46111ef836110b3565b6111d7565b9050919050565b600061120782546111e1565b9050919050565b6000600182019050919050565b60006112268261117f565b611230818561118a565b935061123b8361119b565b8060005b8381101561127357611250826111fb565b61125a88826111bf565b97506112658361120e565b92505060018101905061123f565b5085935050505092915050565b6000604082019050818103600083015261129a818561111a565b905081810360208301526112ae818461121b565b9050939250505056fea2646970667358221220e1df5de8d4bf4c273e334c990f3fe47ccab516c1da336bbf641dfbac79e439e864736f6c63430008090033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1578 CODESIZE SUB DUP1 PUSH3 0x1578 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x234 JUMP JUMPDEST DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH1 0xFF AND DUP2 MSTORE POP PUSH1 0x5 SWAP1 PUSH1 0x1 PUSH3 0x106 SWAP3 SWAP2 SWAP1 PUSH3 0x10F JUMP JUMPDEST POP POP POP PUSH3 0x27B JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH3 0x153 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x152 JUMPI DUP3 MLOAD DUP3 SWAP1 PUSH1 0xFF AND SWAP1 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x130 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x162 SWAP2 SWAP1 PUSH3 0x166 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x181 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x167 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1B7 DUP3 PUSH3 0x18A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1C9 DUP2 PUSH3 0x1AA JUMP JUMPDEST DUP2 EQ PUSH3 0x1D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1E9 DUP2 PUSH3 0x1BE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x20E DUP2 PUSH3 0x1EF JUMP JUMPDEST DUP2 EQ PUSH3 0x21A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x22E DUP2 PUSH3 0x203 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x24E JUMPI PUSH3 0x24D PUSH3 0x185 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x25E DUP6 DUP3 DUP7 ADD PUSH3 0x1D8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x271 DUP6 DUP3 DUP7 ADD PUSH3 0x21D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x12ED DUP1 PUSH3 0x28B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA7 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x62EA82DB GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x62EA82DB EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0x77484AAE EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0x7C6C5720 EQ PUSH2 0x219 JUMPI DUP1 PUSH4 0x7CC3AE8C EQ PUSH2 0x244 JUMPI DUP1 PUSH4 0xBE9A6555 EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0xEFBE1C1C EQ PUSH2 0x286 JUMPI PUSH2 0xA7 JUMP JUMPDEST DUP1 PUSH4 0x8551A53 EQ PUSH2 0xAC JUMPI DUP1 PUSH4 0x111CB258 EQ PUSH2 0xD7 JUMPI DUP1 PUSH4 0x12FA6FEB EQ PUSH2 0x114 JUMPI DUP1 PUSH4 0x1998AEEF EQ PUSH2 0x13F JUMPI DUP1 PUSH4 0x1F2698AB EQ PUSH2 0x149 JUMPI DUP1 PUSH4 0x2D07091F EQ PUSH2 0x174 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC1 PUSH2 0x29D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCE SWAP2 SWAP1 PUSH2 0xA10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF9 SWAP2 SWAP1 PUSH2 0xA66 JUMP JUMPDEST PUSH2 0x2C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10B SWAP2 SWAP1 PUSH2 0xAA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x129 PUSH2 0x2E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x136 SWAP2 SWAP1 PUSH2 0xAD8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x147 PUSH2 0x2FA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x155 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15E PUSH2 0x433 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16B SWAP2 SWAP1 PUSH2 0xAD8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x180 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x189 PUSH2 0x446 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x196 SWAP2 SWAP1 PUSH2 0xB16 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C1 SWAP2 SWAP1 PUSH2 0xB6F JUMP JUMPDEST PUSH2 0x460 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D3 SWAP2 SWAP1 PUSH2 0xAA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x203 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FE SWAP2 SWAP1 PUSH2 0xA66 JUMP JUMPDEST PUSH2 0x478 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x210 SWAP2 SWAP1 PUSH2 0xBAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x225 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22E PUSH2 0x4B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23B SWAP2 SWAP1 PUSH2 0xC25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x250 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x259 PUSH2 0x4DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x266 SWAP2 SWAP1 PUSH2 0xAA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x284 PUSH2 0x4E1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x292 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29B PUSH2 0x6AF JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x349 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x340 SWAP1 PUSH2 0xC9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD TIMESTAMP LT PUSH2 0x38D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x384 SWAP1 PUSH2 0xD09 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3DC SWAP2 SWAP1 PUSH2 0xD58 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE684A55F31B79ECA403DF938249029212A5925EC6BE8012E099B45BC1019E5D2 CALLVALUE PUSH1 0x40 MLOAD PUSH2 0x429 SWAP2 SWAP1 PUSH2 0xAA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x488 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x531 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x528 SWAP1 PUSH2 0xDFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5C1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B8 SWAP1 PUSH2 0xE66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS PUSH1 0x1 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x61F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xEC1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x639 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x64D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH3 0x93A80 TIMESTAMP PUSH2 0x67B SWAP2 SWAP1 PUSH2 0xD58 JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH32 0x1B55BA3AA851A46BE3B365AEE5B5C140EDD620D578922F3E8466D2CBD96F954B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x6FE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F5 SWAP1 PUSH2 0xC9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD TIMESTAMP LT ISZERO PUSH2 0x743 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x73A SWAP1 PUSH2 0xF44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x793 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x78A SWAP1 PUSH2 0xD09 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x4 DUP1 SLOAD SWAP1 POP DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0x871 JUMPI PUSH1 0x6 PUSH1 0x0 PUSH1 0x4 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 SLOAD DUP2 LT PUSH2 0x7EB JUMPI PUSH2 0x7EA PUSH2 0xF64 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 PUSH2 0x85C SWAP2 SWAP1 PUSH2 0xD58 JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH2 0x869 SWAP1 PUSH2 0xF93 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x7B2 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x4 DUP1 SLOAD SWAP1 POP EQ PUSH2 0x991 JUMPI PUSH1 0x0 JUMPDEST PUSH1 0x4 DUP1 SLOAD SWAP1 POP DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0x98F JUMPI PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42842E0E ADDRESS PUSH1 0x4 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 SLOAD DUP2 LT PUSH2 0x8F4 JUMPI PUSH2 0x8F3 PUSH2 0xF64 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x1 PUSH2 0x92C SWAP2 SWAP1 PUSH2 0xFF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x94A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1024 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x964 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x978 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 DUP1 PUSH2 0x987 SWAP1 PUSH2 0xF93 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x882 JUMP JUMPDEST POP JUMPDEST PUSH32 0xD629DB0AB1E7A966B4F646BCD3CE5AE4A0B2C91819E7CA456F3064C7AF6B8233 PUSH1 0x4 PUSH1 0x5 PUSH1 0x40 MLOAD PUSH2 0x9C4 SWAP3 SWAP2 SWAP1 PUSH2 0x1280 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9FA DUP3 PUSH2 0x9CF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA0A DUP2 PUSH2 0x9EF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA25 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA01 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA43 DUP2 PUSH2 0xA30 JUMP JUMPDEST DUP2 EQ PUSH2 0xA4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA60 DUP2 PUSH2 0xA3A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA7C JUMPI PUSH2 0xA7B PUSH2 0xA2B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA8A DUP5 DUP3 DUP6 ADD PUSH2 0xA51 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA9C DUP2 PUSH2 0xA30 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAB7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA93 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAD2 DUP2 PUSH2 0xABD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAED PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xAC9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB10 DUP2 PUSH2 0xAF3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB2B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB07 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB3C DUP3 PUSH2 0x9CF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB4C DUP2 PUSH2 0xB31 JUMP JUMPDEST DUP2 EQ PUSH2 0xB57 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB69 DUP2 PUSH2 0xB43 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB85 JUMPI PUSH2 0xB84 PUSH2 0xA2B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB93 DUP5 DUP3 DUP6 ADD PUSH2 0xB5A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBA5 DUP2 PUSH2 0xB31 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBC0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB9C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBEB PUSH2 0xBE6 PUSH2 0xBE1 DUP5 PUSH2 0x9CF JUMP JUMPDEST PUSH2 0xBC6 JUMP JUMPDEST PUSH2 0x9CF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBFD DUP3 PUSH2 0xBD0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC0F DUP3 PUSH2 0xBF2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC1F DUP2 PUSH2 0xC04 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC3A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC16 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6E6F742073746172746564000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC87 PUSH1 0xB DUP4 PUSH2 0xC40 JUMP JUMPDEST SWAP2 POP PUSH2 0xC92 DUP3 PUSH2 0xC51 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xCB6 DUP2 PUSH2 0xC7A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x656E646564000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCF3 PUSH1 0x5 DUP4 PUSH2 0xC40 JUMP JUMPDEST SWAP2 POP PUSH2 0xCFE DUP3 PUSH2 0xCBD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD22 DUP2 PUSH2 0xCE6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD63 DUP3 PUSH2 0xA30 JUMP JUMPDEST SWAP2 POP PUSH2 0xD6E DUP4 PUSH2 0xA30 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xDA3 JUMPI PUSH2 0xDA2 PUSH2 0xD29 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x7374617274656400000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDE4 PUSH1 0x7 DUP4 PUSH2 0xC40 JUMP JUMPDEST SWAP2 POP PUSH2 0xDEF DUP3 PUSH2 0xDAE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE13 DUP2 PUSH2 0xDD7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6E6F742073656C6C657200000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE50 PUSH1 0xA DUP4 PUSH2 0xC40 JUMP JUMPDEST SWAP2 POP PUSH2 0xE5B DUP3 PUSH2 0xE1A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE7F DUP2 PUSH2 0xE43 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEAB PUSH2 0xEA6 PUSH2 0xEA1 DUP5 PUSH2 0xE86 JUMP JUMPDEST PUSH2 0xBC6 JUMP JUMPDEST PUSH2 0xA30 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEBB DUP2 PUSH2 0xE90 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xED6 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xB9C JUMP JUMPDEST PUSH2 0xEE3 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xB9C JUMP JUMPDEST PUSH2 0xEF0 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xEB2 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x6E6F7420656E6465640000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF2E PUSH1 0x9 DUP4 PUSH2 0xC40 JUMP JUMPDEST SWAP2 POP PUSH2 0xF39 DUP3 PUSH2 0xEF8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF5D DUP2 PUSH2 0xF21 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xF9E DUP3 PUSH2 0xAF3 JUMP JUMPDEST SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0xFB9 JUMPI PUSH2 0xFB8 PUSH2 0xD29 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xFFE DUP3 PUSH2 0xA30 JUMP JUMPDEST SWAP2 POP PUSH2 0x1009 DUP4 PUSH2 0xA30 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1019 JUMPI PUSH2 0x1018 PUSH2 0xFC4 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1039 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xB9C JUMP JUMPDEST PUSH2 0x1046 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xB9C JUMP JUMPDEST PUSH2 0x1053 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xA93 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1095 DUP2 PUSH2 0xB31 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10A7 DUP4 DUP4 PUSH2 0x108C JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10F3 PUSH2 0x10EE DUP4 PUSH2 0x10B3 JUMP JUMPDEST PUSH2 0x10C0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1106 DUP3 SLOAD PUSH2 0x10E0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1125 DUP3 PUSH2 0x105B JUMP JUMPDEST PUSH2 0x112F DUP2 DUP6 PUSH2 0x1066 JUMP JUMPDEST SWAP4 POP PUSH2 0x113A DUP4 PUSH2 0x1077 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1172 JUMPI PUSH2 0x114F DUP3 PUSH2 0x10FA JUMP JUMPDEST PUSH2 0x1159 DUP9 DUP3 PUSH2 0x109B JUMP JUMPDEST SWAP8 POP PUSH2 0x1164 DUP4 PUSH2 0x110D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x113E JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11B9 DUP2 PUSH2 0xA30 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11CB DUP4 DUP4 PUSH2 0x11B0 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11F4 PUSH2 0x11EF DUP4 PUSH2 0x10B3 JUMP JUMPDEST PUSH2 0x11D7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1207 DUP3 SLOAD PUSH2 0x11E1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1226 DUP3 PUSH2 0x117F JUMP JUMPDEST PUSH2 0x1230 DUP2 DUP6 PUSH2 0x118A JUMP JUMPDEST SWAP4 POP PUSH2 0x123B DUP4 PUSH2 0x119B JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1273 JUMPI PUSH2 0x1250 DUP3 PUSH2 0x11FB JUMP JUMPDEST PUSH2 0x125A DUP9 DUP3 PUSH2 0x11BF JUMP JUMPDEST SWAP8 POP PUSH2 0x1265 DUP4 PUSH2 0x120E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x123F JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x129A DUP2 DUP6 PUSH2 0x111A JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x12AE DUP2 DUP5 PUSH2 0x121B JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 0xDF 0x5D 0xE8 0xD4 0xBF 0x4C 0x27 RETURNDATACOPY CALLER 0x4C SWAP10 0xF EXTCODEHASH 0xE4 PUSH29 0xCAB516C1DA336BBF641DFBAC79E439E864736F6C634300080900330000 ",
							"sourceMap": "447:2035:0:-:0;;;921:232;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1025:13;990:19;;:49;;;;;;;;;;;;;;;;;;1062:14;1050:9;;:26;;;;;;;;;;;;;;;;;;1106:10;1089:6;;:28;;;;;;;;;;;;;;;;;;1128:17;;;;;;;;1143:1;1128:17;;;;;:11;:17;;;;;;;:::i;:::-;;921:232;;447:2035;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;88:117:2:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:101::-;881:7;921:18;914:5;910:30;899:41;;845:101;;;:::o;952:120::-;1024:23;1041:5;1024:23;:::i;:::-;1017:5;1014:34;1004:62;;1062:1;1059;1052:12;1004:62;952:120;:::o;1078:141::-;1134:5;1165:6;1159:13;1150:22;;1181:32;1207:5;1181:32;:::i;:::-;1078:141;;;;:::o;1225:505::-;1303:6;1311;1360:2;1348:9;1339:7;1335:23;1331:32;1328:119;;;1366:79;;:::i;:::-;1328:119;1486:1;1511:64;1567:7;1558:6;1547:9;1543:22;1511:64;:::i;:::-;1501:74;;1457:128;1624:2;1650:63;1705:7;1696:6;1685:9;1681:22;1650:63;:::i;:::-;1640:73;;1595:128;1225:505;;;;;:::o;447:2035:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@auctionID_43": {
									"entryPoint": 1094,
									"id": 43,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@bid_168": {
									"entryPoint": 762,
									"id": 168,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@bids_61": {
									"entryPoint": 1120,
									"id": 61,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@endAt_47": {
									"entryPoint": 1243,
									"id": 47,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@end_259": {
									"entryPoint": 1711,
									"id": 259,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@ended_51": {
									"entryPoint": 743,
									"id": 51,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@highestBidders_54": {
									"entryPoint": 1144,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@highestBids_57": {
									"entryPoint": 707,
									"id": 57,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@seller_45": {
									"entryPoint": 669,
									"id": 45,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@start_136": {
									"entryPoint": 1249,
									"id": 136,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@started_49": {
									"entryPoint": 1075,
									"id": 49,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokenToBeAttributed_41": {
									"entryPoint": 1207,
									"id": 41,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 2906,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2641,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2927,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2662,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_address_to_t_address": {
									"entryPoint": 4251,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_uint256_to_t_uint256": {
									"entryPoint": 4543,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_payable_to_t_address_payable_fromStack": {
									"entryPoint": 2561,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 4236,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2972,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_address_$dyn_storage_to_t_array$_t_address_$dyn_memory_ptr_fromStack": {
									"entryPoint": 4378,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_array$_t_uint256_$dyn_storage_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 4635,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 2761,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_KarbonMoneta_$22_to_t_address_fromStack": {
									"entryPoint": 3094,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_1_by_1_to_t_uint256_fromStack": {
									"entryPoint": 3762,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_bdd2b11e12b62ec1dcb7f0672fc8eae42b5d96c951242139ad2dbc8a2569e4eb_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3543,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e77010d1cd84746d4d55bc64a3553056b308493098e3085151b4455976f44694_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3194,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e77c4a3978235c31fbb1be138ac60a8db876003712c1b04acc56e7b9ab046577_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3651,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_eda95f959a2930889a9a5ac20593327fae0cbcf35fa43e612c4ff964430edb38_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3302,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_fe213338447dee258dda5d3a02d31ea70e15ad015964487270bd940bd1a17ab4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3873,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 4528,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2707,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint64_to_t_uint64_fromStack": {
									"entryPoint": 2823,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2987,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed": {
									"entryPoint": 2576,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_rational_1_by_1__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3777,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4132,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_address_$dyn_storage_t_array$_t_uint256_$dyn_storage__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 4736,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 2776,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_KarbonMoneta_$22__to_t_address__fromStack_reversed": {
									"entryPoint": 3109,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bdd2b11e12b62ec1dcb7f0672fc8eae42b5d96c951242139ad2dbc8a2569e4eb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3578,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e77010d1cd84746d4d55bc64a3553056b308493098e3085151b4455976f44694__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3229,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e77c4a3978235c31fbb1be138ac60a8db876003712c1b04acc56e7b9ab046577__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3686,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_eda95f959a2930889a9a5ac20593327fae0cbcf35fa43e612c4ff964430edb38__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3337,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fe213338447dee258dda5d3a02d31ea70e15ad015964487270bd940bd1a17ab4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3908,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2722,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed": {
									"entryPoint": 2838,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_address_$dyn_storage": {
									"entryPoint": 4215,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_uint256_$dyn_storage": {
									"entryPoint": 4507,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_address_$dyn_storage": {
									"entryPoint": 4187,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_uint256_$dyn_storage": {
									"entryPoint": 4479,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_address_$dyn_storage": {
									"entryPoint": 4365,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_uint256_$dyn_storage": {
									"entryPoint": 4622,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack": {
									"entryPoint": 4198,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 4490,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3136,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3416,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 4083,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_from_storage_t_address": {
									"entryPoint": 4288,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_from_storage_t_uint256": {
									"entryPoint": 4567,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2865,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 2543,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2749,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_1_by_1": {
									"entryPoint": 3718,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2511,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2608,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint64": {
									"entryPoint": 2803,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_KarbonMoneta_$22_to_t_address": {
									"entryPoint": 3076,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_1_by_1_to_t_uint256": {
									"entryPoint": 3728,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 3058,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 3024,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_from_storage_value_offset_0t_address": {
									"entryPoint": 4320,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_from_storage_value_offset_0t_uint256": {
									"entryPoint": 4577,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 3014,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint64": {
									"entryPoint": 3987,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3369,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 4036,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 3940,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"read_from_storage_offset_0_t_address": {
									"entryPoint": 4346,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"read_from_storage_offset_0_t_uint256": {
									"entryPoint": 4603,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2603,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_right_0_unsigned": {
									"entryPoint": 4275,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_bdd2b11e12b62ec1dcb7f0672fc8eae42b5d96c951242139ad2dbc8a2569e4eb": {
									"entryPoint": 3502,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e77010d1cd84746d4d55bc64a3553056b308493098e3085151b4455976f44694": {
									"entryPoint": 3153,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e77c4a3978235c31fbb1be138ac60a8db876003712c1b04acc56e7b9ab046577": {
									"entryPoint": 3610,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_eda95f959a2930889a9a5ac20593327fae0cbcf35fa43e612c4ff964430edb38": {
									"entryPoint": 3261,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_fe213338447dee258dda5d3a02d31ea70e15ad015964487270bd940bd1a17ab4": {
									"entryPoint": 3832,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2883,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2618,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:17414:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "84:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "73:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:2",
														"type": ""
													}
												],
												"src": "7:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "192:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "202:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "231:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "213:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "213:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "202:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "174:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "184:7:2",
														"type": ""
													}
												],
												"src": "139:104:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "330:61:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "347:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "378:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address_payable",
																			"nodeType": "YulIdentifier",
																			"src": "352:25:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "352:32:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "340:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "340:45:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "340:45:2"
														}
													]
												},
												"name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "318:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "325:3:2",
														"type": ""
													}
												],
												"src": "249:142:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:140:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "533:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "544:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "529:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "529:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "521:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "617:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "630:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "641:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "626:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "626:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "557:59:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "557:87:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "557:87:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "483:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "495:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "506:4:2",
														"type": ""
													}
												],
												"src": "397:254:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "697:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "707:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "723:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "717:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "717:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "707:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "690:6:2",
														"type": ""
													}
												],
												"src": "657:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "827:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "844:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "847:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "837:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "837:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "837:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "738:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "950:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "967:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "970:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "960:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "960:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "960:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "861:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1029:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1039:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1050:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1039:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1011:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1021:7:2",
														"type": ""
													}
												],
												"src": "984:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1110:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1167:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1176:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1179:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1169:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1169:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1169:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1133:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1158:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1140:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1140:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1130:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1130:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1123:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1123:43:2"
															},
															"nodeType": "YulIf",
															"src": "1120:63:2"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1103:5:2",
														"type": ""
													}
												],
												"src": "1067:122:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1247:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1257:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1279:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1266:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1266:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1257:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1322:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1295:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1295:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1295:33:2"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1225:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1233:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1241:5:2",
														"type": ""
													}
												],
												"src": "1195:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1406:263:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1452:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1454:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1454:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1454:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1427:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1436:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1423:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1423:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1448:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1419:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1419:32:2"
															},
															"nodeType": "YulIf",
															"src": "1416:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "1545:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1560:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1574:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1564:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1589:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1624:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1635:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1620:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1620:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1644:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1599:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1599:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1589:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1376:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1387:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1399:6:2",
														"type": ""
													}
												],
												"src": "1340:329:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1740:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1757:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1780:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1762:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1762:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1750:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1750:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1750:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1728:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1735:3:2",
														"type": ""
													}
												],
												"src": "1675:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1897:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1907:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1919:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1930:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1915:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1915:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1907:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1987:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2000:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2011:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1996:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1996:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1943:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1943:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1943:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1869:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1881:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1892:4:2",
														"type": ""
													}
												],
												"src": "1799:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2069:48:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2079:32:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2104:5:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2097:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2097:13:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2090:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2090:21:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2079:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2051:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2061:7:2",
														"type": ""
													}
												],
												"src": "2027:90:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2182:50:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2199:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2219:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "2204:14:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2204:21:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2192:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2192:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2192:34:2"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2170:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2177:3:2",
														"type": ""
													}
												],
												"src": "2123:109:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2330:118:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2340:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2352:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2363:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2348:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2348:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2340:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2414:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2427:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2438:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2423:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2423:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2376:37:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2376:65:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2376:65:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2302:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2314:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2325:4:2",
														"type": ""
													}
												],
												"src": "2238:210:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2498:57:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2508:41:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2523:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2530:18:2",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2519:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2519:30:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2508:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint64",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2480:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2490:7:2",
														"type": ""
													}
												],
												"src": "2454:101:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2624:52:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2641:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2663:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint64",
																			"nodeType": "YulIdentifier",
																			"src": "2646:16:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2646:23:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2634:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2634:36:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2634:36:2"
														}
													]
												},
												"name": "abi_encode_t_uint64_to_t_uint64_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2612:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2619:3:2",
														"type": ""
													}
												],
												"src": "2561:115:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2778:122:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2788:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2800:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2811:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2796:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2796:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2788:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2866:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2879:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2890:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2875:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2875:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint64_to_t_uint64_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2824:41:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2824:69:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2824:69:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2750:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2762:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2773:4:2",
														"type": ""
													}
												],
												"src": "2682:218:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2951:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2961:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2990:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2972:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2972:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2961:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2933:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2943:7:2",
														"type": ""
													}
												],
												"src": "2906:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3051:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3108:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3117:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3120:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3110:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3110:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3110:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3074:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3099:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "3081:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3081:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3071:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3071:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3064:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3064:43:2"
															},
															"nodeType": "YulIf",
															"src": "3061:63:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3044:5:2",
														"type": ""
													}
												],
												"src": "3008:122:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3188:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3198:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3220:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3207:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3207:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3198:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3263:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "3236:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3236:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3236:33:2"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3166:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3174:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3182:5:2",
														"type": ""
													}
												],
												"src": "3136:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3347:263:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3393:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3395:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3395:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3395:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3368:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3377:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3364:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3364:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3389:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3360:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3360:32:2"
															},
															"nodeType": "YulIf",
															"src": "3357:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "3486:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3501:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3515:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3505:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3530:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3565:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3576:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3561:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3561:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3585:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3540:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3540:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3530:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3317:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3328:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3340:6:2",
														"type": ""
													}
												],
												"src": "3281:329:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3681:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3698:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3721:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3703:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3703:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3691:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3691:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3691:37:2"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3669:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3676:3:2",
														"type": ""
													}
												],
												"src": "3616:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3838:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3848:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3860:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3871:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3856:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3856:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3848:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3928:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3941:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3952:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3937:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3937:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3884:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3884:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3884:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3810:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3822:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3833:4:2",
														"type": ""
													}
												],
												"src": "3740:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4000:28:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4010:12:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4017:5:2"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "4010:3:2"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3986:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "3996:3:2",
														"type": ""
													}
												],
												"src": "3968:60:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4094:82:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4104:66:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4162:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nodeType": "YulIdentifier",
																					"src": "4144:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4144:24:2"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "4135:8:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4135:34:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "4117:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4117:53:2"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "4104:9:2"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4074:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "4084:9:2",
														"type": ""
													}
												],
												"src": "4034:142:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4242:66:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4252:50:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4296:5:2"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "4265:30:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4265:37:2"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "4252:9:2"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4222:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "4232:9:2",
														"type": ""
													}
												],
												"src": "4182:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4393:66:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4403:50:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4447:5:2"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "4416:30:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4416:37:2"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "4403:9:2"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_KarbonMoneta_$22_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4373:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "4383:9:2",
														"type": ""
													}
												],
												"src": "4314:145:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4549:85:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4566:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4621:5:2"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_KarbonMoneta_$22_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4571:49:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4571:56:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4559:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4559:69:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4559:69:2"
														}
													]
												},
												"name": "abi_encode_t_contract$_KarbonMoneta_$22_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4537:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4544:3:2",
														"type": ""
													}
												],
												"src": "4465:169:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4757:143:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4767:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4779:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4790:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4775:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4775:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4767:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4866:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4879:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4890:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4875:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4875:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_KarbonMoneta_$22_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4803:62:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4803:90:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4803:90:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_KarbonMoneta_$22__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4729:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4741:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4752:4:2",
														"type": ""
													}
												],
												"src": "4640:260:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5002:73:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5019:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5024:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5012:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5012:19:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5012:19:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5040:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5059:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5064:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5055:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5055:14:2"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "5040:11:2"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4974:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4979:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "4990:11:2",
														"type": ""
													}
												],
												"src": "4906:169:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5187:55:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5209:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5217:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5205:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5205:14:2"
																	},
																	{
																		"hexValue": "6e6f742073746172746564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5221:13:2",
																		"type": "",
																		"value": "not started"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5198:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5198:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5198:37:2"
														}
													]
												},
												"name": "store_literal_in_memory_e77010d1cd84746d4d55bc64a3553056b308493098e3085151b4455976f44694",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5179:6:2",
														"type": ""
													}
												],
												"src": "5081:161:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5394:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5404:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5470:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5475:2:2",
																		"type": "",
																		"value": "11"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5411:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5411:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5404:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5576:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e77010d1cd84746d4d55bc64a3553056b308493098e3085151b4455976f44694",
																	"nodeType": "YulIdentifier",
																	"src": "5487:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5487:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5487:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5589:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5600:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5605:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5596:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5596:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5589:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e77010d1cd84746d4d55bc64a3553056b308493098e3085151b4455976f44694_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5382:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5390:3:2",
														"type": ""
													}
												],
												"src": "5248:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5791:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5801:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5813:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5824:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5809:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5809:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5801:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5848:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5859:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5844:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5844:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5867:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5873:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5863:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5863:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5837:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5837:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5837:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5893:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6027:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e77010d1cd84746d4d55bc64a3553056b308493098e3085151b4455976f44694_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5901:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5901:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5893:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e77010d1cd84746d4d55bc64a3553056b308493098e3085151b4455976f44694__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5771:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5786:4:2",
														"type": ""
													}
												],
												"src": "5620:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6151:49:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6173:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6181:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6169:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6169:14:2"
																	},
																	{
																		"hexValue": "656e646564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6185:7:2",
																		"type": "",
																		"value": "ended"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6162:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6162:31:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6162:31:2"
														}
													]
												},
												"name": "store_literal_in_memory_eda95f959a2930889a9a5ac20593327fae0cbcf35fa43e612c4ff964430edb38",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6143:6:2",
														"type": ""
													}
												],
												"src": "6045:155:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6352:219:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6362:73:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6428:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6433:1:2",
																		"type": "",
																		"value": "5"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6369:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6369:66:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6362:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6533:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_eda95f959a2930889a9a5ac20593327fae0cbcf35fa43e612c4ff964430edb38",
																	"nodeType": "YulIdentifier",
																	"src": "6444:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6444:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6444:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6546:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6557:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6562:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6553:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6553:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6546:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_eda95f959a2930889a9a5ac20593327fae0cbcf35fa43e612c4ff964430edb38_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6340:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6348:3:2",
														"type": ""
													}
												],
												"src": "6206:365:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6748:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6758:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6770:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6781:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6766:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6766:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6758:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6805:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6816:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6801:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6801:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6824:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6830:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6820:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6820:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6794:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6794:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6794:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6850:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6984:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_eda95f959a2930889a9a5ac20593327fae0cbcf35fa43e612c4ff964430edb38_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6858:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6858:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6850:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_eda95f959a2930889a9a5ac20593327fae0cbcf35fa43e612c4ff964430edb38__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6728:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6743:4:2",
														"type": ""
													}
												],
												"src": "6577:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7030:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7047:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7050:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7040:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7040:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7040:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7144:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7147:4:2",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7137:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7137:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7137:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7168:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7171:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7161:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7161:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7161:15:2"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "7002:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7232:261:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7242:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7265:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7247:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7247:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "7242:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7276:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7299:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7281:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7281:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "7276:1:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7439:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7441:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7441:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7441:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7360:1:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7367:66:2",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "7435:1:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7363:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7363:74:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7357:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7357:81:2"
															},
															"nodeType": "YulIf",
															"src": "7354:107:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7471:16:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7482:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7485:1:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7478:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7478:9:2"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "7471:3:2"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7219:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7222:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "7228:3:2",
														"type": ""
													}
												],
												"src": "7188:305:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7605:51:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7627:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7635:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7623:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7623:14:2"
																	},
																	{
																		"hexValue": "73746172746564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7639:9:2",
																		"type": "",
																		"value": "started"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7616:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7616:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7616:33:2"
														}
													]
												},
												"name": "store_literal_in_memory_bdd2b11e12b62ec1dcb7f0672fc8eae42b5d96c951242139ad2dbc8a2569e4eb",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7597:6:2",
														"type": ""
													}
												],
												"src": "7499:157:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7808:219:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7818:73:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7884:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7889:1:2",
																		"type": "",
																		"value": "7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7825:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7825:66:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7818:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7989:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_bdd2b11e12b62ec1dcb7f0672fc8eae42b5d96c951242139ad2dbc8a2569e4eb",
																	"nodeType": "YulIdentifier",
																	"src": "7900:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7900:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7900:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8002:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8013:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8018:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8009:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8009:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8002:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_bdd2b11e12b62ec1dcb7f0672fc8eae42b5d96c951242139ad2dbc8a2569e4eb_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7796:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7804:3:2",
														"type": ""
													}
												],
												"src": "7662:365:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8204:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8214:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8226:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8237:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8222:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8222:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8214:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8261:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8272:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8257:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8257:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8280:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8286:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8276:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8276:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8250:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8250:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8250:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8306:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8440:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_bdd2b11e12b62ec1dcb7f0672fc8eae42b5d96c951242139ad2dbc8a2569e4eb_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8314:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8314:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8306:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bdd2b11e12b62ec1dcb7f0672fc8eae42b5d96c951242139ad2dbc8a2569e4eb__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8184:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8199:4:2",
														"type": ""
													}
												],
												"src": "8033:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8564:54:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8586:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8594:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8582:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8582:14:2"
																	},
																	{
																		"hexValue": "6e6f742073656c6c6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8598:12:2",
																		"type": "",
																		"value": "not seller"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8575:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8575:36:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8575:36:2"
														}
													]
												},
												"name": "store_literal_in_memory_e77c4a3978235c31fbb1be138ac60a8db876003712c1b04acc56e7b9ab046577",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8556:6:2",
														"type": ""
													}
												],
												"src": "8458:160:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8770:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8780:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8846:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8851:2:2",
																		"type": "",
																		"value": "10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8787:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8787:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8780:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8952:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e77c4a3978235c31fbb1be138ac60a8db876003712c1b04acc56e7b9ab046577",
																	"nodeType": "YulIdentifier",
																	"src": "8863:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8863:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8863:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8965:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8976:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8981:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8972:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8972:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8965:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e77c4a3978235c31fbb1be138ac60a8db876003712c1b04acc56e7b9ab046577_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8758:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8766:3:2",
														"type": ""
													}
												],
												"src": "8624:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9167:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9177:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9189:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9200:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9185:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9185:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9177:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9224:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9235:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9220:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9220:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9243:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9249:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9239:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9239:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9213:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9213:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9213:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9269:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9403:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e77c4a3978235c31fbb1be138ac60a8db876003712c1b04acc56e7b9ab046577_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9277:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9277:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9269:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e77c4a3978235c31fbb1be138ac60a8db876003712c1b04acc56e7b9ab046577__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9147:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9162:4:2",
														"type": ""
													}
												],
												"src": "8996:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9474:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9484:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "9495:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "9484:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_1_by_1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9456:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "9466:7:2",
														"type": ""
													}
												],
												"src": "9421:85:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9580:90:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9590:74:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "9656:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_1_by_1",
																					"nodeType": "YulIdentifier",
																					"src": "9630:25:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9630:32:2"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "9621:8:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9621:42:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9603:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9603:61:2"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "9590:9:2"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_1_by_1_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9560:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "9570:9:2",
														"type": ""
													}
												],
												"src": "9512:158:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9749:74:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9766:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9810:5:2"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_1_by_1_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "9771:38:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9771:45:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9759:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9759:58:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9759:58:2"
														}
													]
												},
												"name": "abi_encode_t_rational_1_by_1_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9737:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9744:3:2",
														"type": ""
													}
												],
												"src": "9676:147:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9991:296:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10001:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10013:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10024:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10009:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10009:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10001:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10081:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10094:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10105:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10090:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10090:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10037:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10037:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10037:71:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "10162:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10175:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10186:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10171:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10171:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10118:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10118:72:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10118:72:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "10252:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10265:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10276:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10261:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10261:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_1_by_1_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10200:51:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10200:80:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10200:80:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_rational_1_by_1__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9947:9:2",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9959:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9967:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9975:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9986:4:2",
														"type": ""
													}
												],
												"src": "9829:458:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10399:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10421:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10429:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10417:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10417:14:2"
																	},
																	{
																		"hexValue": "6e6f7420656e646564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10433:11:2",
																		"type": "",
																		"value": "not ended"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10410:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10410:35:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10410:35:2"
														}
													]
												},
												"name": "store_literal_in_memory_fe213338447dee258dda5d3a02d31ea70e15ad015964487270bd940bd1a17ab4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10391:6:2",
														"type": ""
													}
												],
												"src": "10293:159:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10604:219:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10614:73:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10680:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10685:1:2",
																		"type": "",
																		"value": "9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10621:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10621:66:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10614:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10785:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_fe213338447dee258dda5d3a02d31ea70e15ad015964487270bd940bd1a17ab4",
																	"nodeType": "YulIdentifier",
																	"src": "10696:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10696:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10696:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10798:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10809:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10814:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10805:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10805:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10798:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_fe213338447dee258dda5d3a02d31ea70e15ad015964487270bd940bd1a17ab4_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10592:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10600:3:2",
														"type": ""
													}
												],
												"src": "10458:365:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11000:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11010:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11022:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11033:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11018:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11018:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11010:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11057:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11068:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11053:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11053:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11076:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11082:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11072:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11072:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11046:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11046:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11046:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11102:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11236:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_fe213338447dee258dda5d3a02d31ea70e15ad015964487270bd940bd1a17ab4_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11110:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11110:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11102:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fe213338447dee258dda5d3a02d31ea70e15ad015964487270bd940bd1a17ab4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10980:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10995:4:2",
														"type": ""
													}
												],
												"src": "10829:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11282:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11299:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11302:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11292:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11292:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11292:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11396:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11399:4:2",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11389:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11389:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11389:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11420:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11423:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11413:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11413:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11413:15:2"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "11254:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11482:141:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11492:32:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11518:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint64",
																	"nodeType": "YulIdentifier",
																	"src": "11501:16:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11501:23:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "11492:5:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11566:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11568:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11568:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11568:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11539:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11546:18:2",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "11536:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11536:29:2"
															},
															"nodeType": "YulIf",
															"src": "11533:55:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11597:20:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11608:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11615:1:2",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11604:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11604:13:2"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "11597:3:2"
																}
															]
														}
													]
												},
												"name": "increment_t_uint64",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11468:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "11478:3:2",
														"type": ""
													}
												],
												"src": "11440:183:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11657:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11674:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11677:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11667:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11667:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11667:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11771:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11774:4:2",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11764:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11764:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11764:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11795:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11798:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11788:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11788:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11788:15:2"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "11629:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11857:143:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11867:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11890:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11872:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11872:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "11867:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11901:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11924:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11906:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11906:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "11901:1:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11948:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "11950:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11950:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11950:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11945:1:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11938:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11938:9:2"
															},
															"nodeType": "YulIf",
															"src": "11935:35:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11980:14:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11989:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11992:1:2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "11985:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11985:9:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "11980:1:2"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11846:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11849:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "11855:1:2",
														"type": ""
													}
												],
												"src": "11815:185:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12160:288:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12170:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12182:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12193:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12178:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12178:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12170:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12250:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12263:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12274:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12259:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12259:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12206:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12206:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12206:71:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "12331:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12344:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12355:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12340:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12340:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12287:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12287:72:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12287:72:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "12413:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12426:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12437:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12422:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12422:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12369:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12369:72:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12369:72:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12116:9:2",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "12128:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12136:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12144:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12155:4:2",
														"type": ""
													}
												],
												"src": "12006:442:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12525:40:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12536:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12552:5:2"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "12546:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12546:12:2"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "12536:6:2"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_address_$dyn_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12508:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12518:6:2",
														"type": ""
													}
												],
												"src": "12454:111:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12682:73:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12699:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12704:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12692:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12692:19:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12692:19:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12720:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12739:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12744:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12735:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12735:14:2"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "12720:11:2"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12654:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12659:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "12670:11:2",
														"type": ""
													}
												],
												"src": "12571:184:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12830:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12840:11:2",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "12848:3:2"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "12840:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12868:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "12871:3:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12861:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12861:14:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12861:14:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12884:26:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12902:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12905:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "12892:9:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12892:18:2"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "12884:4:2"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_address_$dyn_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "12817:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "12825:4:2",
														"type": ""
													}
												],
												"src": "12761:156:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12978:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12995:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13018:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "13000:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13000:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12988:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12988:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12988:37:2"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12966:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12973:3:2",
														"type": ""
													}
												],
												"src": "12923:108:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13117:99:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13161:6:2"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13169:3:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "13127:33:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "13127:46:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13127:46:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13182:28:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13200:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13205:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13196:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "13196:14:2"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "13182:10:2"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_address_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13090:6:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13098:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "13106:10:2",
														"type": ""
													}
												],
												"src": "13037:179:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13273:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13283:34:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13308:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13311:5:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "13304:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "13304:13:2"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "13283:8:2"
																}
															]
														}
													]
												},
												"name": "shift_right_0_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13254:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "13264:8:2",
														"type": ""
													}
												],
												"src": "13222:102:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13388:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13398:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13413:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13420:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "13409:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "13409:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "13398:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_from_storage_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13370:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "13380:7:2",
														"type": ""
													}
												],
												"src": "13330:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13550:91:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13560:75:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot_value",
																				"nodeType": "YulIdentifier",
																				"src": "13623:10:2"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_0_unsigned",
																			"nodeType": "YulIdentifier",
																			"src": "13600:22:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13600:34:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_from_storage_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "13569:30:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "13569:66:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "13560:5:2"
																}
															]
														}
													]
												},
												"name": "extract_from_storage_value_offset_0t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot_value",
														"nodeType": "YulTypedName",
														"src": "13529:10:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13544:5:2",
														"type": ""
													}
												],
												"src": "13475:166:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13708:83:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13718:66:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "13778:4:2"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "13772:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13772:11:2"
																	}
																],
																"functionName": {
																	"name": "extract_from_storage_value_offset_0t_address",
																	"nodeType": "YulIdentifier",
																	"src": "13727:44:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "13727:57:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "13718:5:2"
																}
															]
														}
													]
												},
												"name": "read_from_storage_offset_0_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "13693:4:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13702:5:2",
														"type": ""
													}
												],
												"src": "13647:144:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13869:38:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13879:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "13891:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13896:4:2",
																		"type": "",
																		"value": "0x01"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13887:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "13887:14:2"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "13879:4:2"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_address_$dyn_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "13856:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "13864:4:2",
														"type": ""
													}
												],
												"src": "13797:110:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14064:630:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14074:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14133:5:2"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_address_$dyn_storage",
																	"nodeType": "YulIdentifier",
																	"src": "14088:44:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "14088:51:2"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "14078:6:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14148:93:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14229:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14234:6:2"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14155:73:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "14155:86:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14148:3:2"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14250:68:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14312:5:2"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_address_$dyn_storage",
																	"nodeType": "YulIdentifier",
																	"src": "14265:46:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "14265:53:2"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "14254:7:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14327:21:2",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "14341:7:2"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "14331:6:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14417:252:2",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "14431:65:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "14489:6:2"
																				}
																			],
																			"functionName": {
																				"name": "read_from_storage_offset_0_t_address",
																				"nodeType": "YulIdentifier",
																				"src": "14452:36:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14452:44:2"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "14435:13:2",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "14509:70:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "14560:13:2"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "14575:3:2"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_address_to_t_address",
																				"nodeType": "YulIdentifier",
																				"src": "14516:43:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14516:63:2"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "14509:3:2"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "14592:67:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "14652:6:2"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_address_$dyn_storage",
																				"nodeType": "YulIdentifier",
																				"src": "14602:49:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14602:57:2"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14592:6:2"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "14379:1:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14382:6:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "14376:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "14376:13:2"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "14390:18:2",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "14392:14:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "14401:1:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14404:1:2",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "14397:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14397:9:2"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "14392:1:2"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "14361:14:2",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "14363:10:2",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "14372:1:2",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "14367:1:2",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "14357:312:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14678:10:2",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "14685:3:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14678:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_address_$dyn_storage_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14043:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14050:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14059:3:2",
														"type": ""
													}
												],
												"src": "13943:751:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14771:40:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14782:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14798:5:2"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "14792:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "14792:12:2"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "14782:6:2"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint256_$dyn_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14754:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "14764:6:2",
														"type": ""
													}
												],
												"src": "14700:111:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14928:73:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14945:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14950:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14938:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "14938:19:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14938:19:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14966:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14985:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14990:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14981:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "14981:14:2"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "14966:11:2"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14900:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "14905:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "14916:11:2",
														"type": ""
													}
												],
												"src": "14817:184:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15076:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15086:11:2",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "15094:3:2"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "15086:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15114:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "15117:3:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15107:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "15107:14:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15107:14:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15130:26:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15148:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15151:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "15138:9:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "15138:18:2"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "15130:4:2"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint256_$dyn_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "15063:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "15071:4:2",
														"type": ""
													}
												],
												"src": "15007:156:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15224:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15241:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "15264:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "15246:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15246:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15234:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "15234:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15234:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15212:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15219:3:2",
														"type": ""
													}
												],
												"src": "15169:108:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15363:99:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "15407:6:2"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15415:3:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "15373:33:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "15373:46:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15373:46:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15428:28:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15446:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15451:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15442:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "15442:14:2"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "15428:10:2"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15336:6:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15344:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "15352:10:2",
														"type": ""
													}
												],
												"src": "15283:179:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15526:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15536:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "15547:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "15536:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_from_storage_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15508:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "15518:7:2",
														"type": ""
													}
												],
												"src": "15468:90:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15639:91:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15649:75:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot_value",
																				"nodeType": "YulIdentifier",
																				"src": "15712:10:2"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_0_unsigned",
																			"nodeType": "YulIdentifier",
																			"src": "15689:22:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15689:34:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_from_storage_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "15658:30:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "15658:66:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "15649:5:2"
																}
															]
														}
													]
												},
												"name": "extract_from_storage_value_offset_0t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot_value",
														"nodeType": "YulTypedName",
														"src": "15618:10:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15633:5:2",
														"type": ""
													}
												],
												"src": "15564:166:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15797:83:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15807:66:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "15867:4:2"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "15861:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15861:11:2"
																	}
																],
																"functionName": {
																	"name": "extract_from_storage_value_offset_0t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "15816:44:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "15816:57:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "15807:5:2"
																}
															]
														}
													]
												},
												"name": "read_from_storage_offset_0_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "15782:4:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15791:5:2",
														"type": ""
													}
												],
												"src": "15736:144:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15958:38:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15968:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "15980:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15985:4:2",
																		"type": "",
																		"value": "0x01"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15976:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "15976:14:2"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "15968:4:2"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint256_$dyn_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "15945:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "15953:4:2",
														"type": ""
													}
												],
												"src": "15886:110:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16153:630:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16163:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16222:5:2"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint256_$dyn_storage",
																	"nodeType": "YulIdentifier",
																	"src": "16177:44:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "16177:51:2"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "16167:6:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "16237:93:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16318:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16323:6:2"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16244:73:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "16244:86:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16237:3:2"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16339:68:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16401:5:2"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint256_$dyn_storage",
																	"nodeType": "YulIdentifier",
																	"src": "16354:46:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "16354:53:2"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "16343:7:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16416:21:2",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "16430:7:2"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "16420:6:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16506:252:2",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "16520:65:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "16578:6:2"
																				}
																			],
																			"functionName": {
																				"name": "read_from_storage_offset_0_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "16541:36:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16541:44:2"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "16524:13:2",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "16598:70:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "16649:13:2"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "16664:3:2"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "16605:43:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16605:63:2"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "16598:3:2"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "16681:67:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "16741:6:2"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint256_$dyn_storage",
																				"nodeType": "YulIdentifier",
																				"src": "16691:49:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16691:57:2"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16681:6:2"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "16468:1:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16471:6:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "16465:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "16465:13:2"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "16479:18:2",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "16481:14:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "16490:1:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16493:1:2",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "16486:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16486:9:2"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "16481:1:2"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "16450:14:2",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "16452:10:2",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "16461:1:2",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "16456:1:2",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "16446:312:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16767:10:2",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "16774:3:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "16767:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn_storage_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16132:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16139:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16148:3:2",
														"type": ""
													}
												],
												"src": "16032:751:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17009:402:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17019:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17031:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17042:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17027:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "17027:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17019:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17066:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17077:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17062:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17062:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17085:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17091:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17081:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17081:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17055:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "17055:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17055:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17111:113:2",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "17210:6:2"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17219:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_address_$dyn_storage_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17119:90:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "17119:105:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17111:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17245:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17256:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17241:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17241:18:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17265:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17271:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17261:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17261:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17234:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "17234:48:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17234:48:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17291:113:2",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "17390:6:2"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17399:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_storage_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17299:90:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "17299:105:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17291:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_address_$dyn_storage_t_array$_t_uint256_$dyn_storage__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16973:9:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "16985:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16993:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17004:4:2",
														"type": ""
													}
												],
												"src": "16789:622:2"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function abi_encode_t_uint64_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_KarbonMoneta_$22_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_KarbonMoneta_$22_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_KarbonMoneta_$22_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_KarbonMoneta_$22__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_KarbonMoneta_$22_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_e77010d1cd84746d4d55bc64a3553056b308493098e3085151b4455976f44694(memPtr) {\n\n        mstore(add(memPtr, 0), \"not started\")\n\n    }\n\n    function abi_encode_t_stringliteral_e77010d1cd84746d4d55bc64a3553056b308493098e3085151b4455976f44694_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 11)\n        store_literal_in_memory_e77010d1cd84746d4d55bc64a3553056b308493098e3085151b4455976f44694(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e77010d1cd84746d4d55bc64a3553056b308493098e3085151b4455976f44694__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e77010d1cd84746d4d55bc64a3553056b308493098e3085151b4455976f44694_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_eda95f959a2930889a9a5ac20593327fae0cbcf35fa43e612c4ff964430edb38(memPtr) {\n\n        mstore(add(memPtr, 0), \"ended\")\n\n    }\n\n    function abi_encode_t_stringliteral_eda95f959a2930889a9a5ac20593327fae0cbcf35fa43e612c4ff964430edb38_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 5)\n        store_literal_in_memory_eda95f959a2930889a9a5ac20593327fae0cbcf35fa43e612c4ff964430edb38(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_eda95f959a2930889a9a5ac20593327fae0cbcf35fa43e612c4ff964430edb38__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_eda95f959a2930889a9a5ac20593327fae0cbcf35fa43e612c4ff964430edb38_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function store_literal_in_memory_bdd2b11e12b62ec1dcb7f0672fc8eae42b5d96c951242139ad2dbc8a2569e4eb(memPtr) {\n\n        mstore(add(memPtr, 0), \"started\")\n\n    }\n\n    function abi_encode_t_stringliteral_bdd2b11e12b62ec1dcb7f0672fc8eae42b5d96c951242139ad2dbc8a2569e4eb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 7)\n        store_literal_in_memory_bdd2b11e12b62ec1dcb7f0672fc8eae42b5d96c951242139ad2dbc8a2569e4eb(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_bdd2b11e12b62ec1dcb7f0672fc8eae42b5d96c951242139ad2dbc8a2569e4eb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_bdd2b11e12b62ec1dcb7f0672fc8eae42b5d96c951242139ad2dbc8a2569e4eb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_e77c4a3978235c31fbb1be138ac60a8db876003712c1b04acc56e7b9ab046577(memPtr) {\n\n        mstore(add(memPtr, 0), \"not seller\")\n\n    }\n\n    function abi_encode_t_stringliteral_e77c4a3978235c31fbb1be138ac60a8db876003712c1b04acc56e7b9ab046577_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 10)\n        store_literal_in_memory_e77c4a3978235c31fbb1be138ac60a8db876003712c1b04acc56e7b9ab046577(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e77c4a3978235c31fbb1be138ac60a8db876003712c1b04acc56e7b9ab046577__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e77c4a3978235c31fbb1be138ac60a8db876003712c1b04acc56e7b9ab046577_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_rational_1_by_1__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_rational_1_by_1_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_fe213338447dee258dda5d3a02d31ea70e15ad015964487270bd940bd1a17ab4(memPtr) {\n\n        mstore(add(memPtr, 0), \"not ended\")\n\n    }\n\n    function abi_encode_t_stringliteral_fe213338447dee258dda5d3a02d31ea70e15ad015964487270bd940bd1a17ab4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 9)\n        store_literal_in_memory_fe213338447dee258dda5d3a02d31ea70e15ad015964487270bd940bd1a17ab4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fe213338447dee258dda5d3a02d31ea70e15ad015964487270bd940bd1a17ab4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fe213338447dee258dda5d3a02d31ea70e15ad015964487270bd940bd1a17ab4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint64(value) -> ret {\n        value := cleanup_t_uint64(value)\n        if eq(value, 0xffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_length_t_array$_t_address_$dyn_storage(value) -> length {\n\n        length := sload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_address_$dyn_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function shift_right_0_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(0, value)\n\n    }\n\n    function cleanup_from_storage_t_address(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function extract_from_storage_value_offset_0t_address(slot_value) -> value {\n        value := cleanup_from_storage_t_address(shift_right_0_unsigned(slot_value))\n    }\n\n    function read_from_storage_offset_0_t_address(slot) -> value {\n        value := extract_from_storage_value_offset_0t_address(sload(slot))\n\n    }\n\n    function array_nextElement_t_array$_t_address_$dyn_storage(ptr) -> next {\n        next := add(ptr, 0x01)\n    }\n\n    // address[] -> address[]\n    function abi_encode_t_array$_t_address_$dyn_storage_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_address_$dyn_storage(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_storage(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := read_from_storage_offset_0_t_address(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_storage(srcPtr)\n        }\n        end := pos\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_storage(value) -> length {\n\n        length := sload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function cleanup_from_storage_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function extract_from_storage_value_offset_0t_uint256(slot_value) -> value {\n        value := cleanup_from_storage_t_uint256(shift_right_0_unsigned(slot_value))\n    }\n\n    function read_from_storage_offset_0_t_uint256(slot) -> value {\n        value := extract_from_storage_value_offset_0t_uint256(sload(slot))\n\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_storage(ptr) -> next {\n        next := add(ptr, 0x01)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_storage_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_storage(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_storage(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := read_from_storage_offset_0_t_uint256(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_storage(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_address_$dyn_storage_t_array$_t_uint256_$dyn_storage__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_storage_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_storage_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA7 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x62EA82DB GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x62EA82DB EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0x77484AAE EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0x7C6C5720 EQ PUSH2 0x219 JUMPI DUP1 PUSH4 0x7CC3AE8C EQ PUSH2 0x244 JUMPI DUP1 PUSH4 0xBE9A6555 EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0xEFBE1C1C EQ PUSH2 0x286 JUMPI PUSH2 0xA7 JUMP JUMPDEST DUP1 PUSH4 0x8551A53 EQ PUSH2 0xAC JUMPI DUP1 PUSH4 0x111CB258 EQ PUSH2 0xD7 JUMPI DUP1 PUSH4 0x12FA6FEB EQ PUSH2 0x114 JUMPI DUP1 PUSH4 0x1998AEEF EQ PUSH2 0x13F JUMPI DUP1 PUSH4 0x1F2698AB EQ PUSH2 0x149 JUMPI DUP1 PUSH4 0x2D07091F EQ PUSH2 0x174 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC1 PUSH2 0x29D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCE SWAP2 SWAP1 PUSH2 0xA10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF9 SWAP2 SWAP1 PUSH2 0xA66 JUMP JUMPDEST PUSH2 0x2C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10B SWAP2 SWAP1 PUSH2 0xAA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x129 PUSH2 0x2E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x136 SWAP2 SWAP1 PUSH2 0xAD8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x147 PUSH2 0x2FA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x155 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15E PUSH2 0x433 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16B SWAP2 SWAP1 PUSH2 0xAD8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x180 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x189 PUSH2 0x446 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x196 SWAP2 SWAP1 PUSH2 0xB16 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C1 SWAP2 SWAP1 PUSH2 0xB6F JUMP JUMPDEST PUSH2 0x460 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D3 SWAP2 SWAP1 PUSH2 0xAA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x203 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FE SWAP2 SWAP1 PUSH2 0xA66 JUMP JUMPDEST PUSH2 0x478 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x210 SWAP2 SWAP1 PUSH2 0xBAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x225 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22E PUSH2 0x4B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23B SWAP2 SWAP1 PUSH2 0xC25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x250 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x259 PUSH2 0x4DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x266 SWAP2 SWAP1 PUSH2 0xAA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x284 PUSH2 0x4E1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x292 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29B PUSH2 0x6AF JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x349 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x340 SWAP1 PUSH2 0xC9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD TIMESTAMP LT PUSH2 0x38D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x384 SWAP1 PUSH2 0xD09 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3DC SWAP2 SWAP1 PUSH2 0xD58 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE684A55F31B79ECA403DF938249029212A5925EC6BE8012E099B45BC1019E5D2 CALLVALUE PUSH1 0x40 MLOAD PUSH2 0x429 SWAP2 SWAP1 PUSH2 0xAA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x488 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x531 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x528 SWAP1 PUSH2 0xDFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5C1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B8 SWAP1 PUSH2 0xE66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS PUSH1 0x1 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x61F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xEC1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x639 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x64D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH3 0x93A80 TIMESTAMP PUSH2 0x67B SWAP2 SWAP1 PUSH2 0xD58 JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH32 0x1B55BA3AA851A46BE3B365AEE5B5C140EDD620D578922F3E8466D2CBD96F954B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x6FE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F5 SWAP1 PUSH2 0xC9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD TIMESTAMP LT ISZERO PUSH2 0x743 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x73A SWAP1 PUSH2 0xF44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x793 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x78A SWAP1 PUSH2 0xD09 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x4 DUP1 SLOAD SWAP1 POP DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0x871 JUMPI PUSH1 0x6 PUSH1 0x0 PUSH1 0x4 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 SLOAD DUP2 LT PUSH2 0x7EB JUMPI PUSH2 0x7EA PUSH2 0xF64 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 PUSH2 0x85C SWAP2 SWAP1 PUSH2 0xD58 JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH2 0x869 SWAP1 PUSH2 0xF93 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x7B2 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x4 DUP1 SLOAD SWAP1 POP EQ PUSH2 0x991 JUMPI PUSH1 0x0 JUMPDEST PUSH1 0x4 DUP1 SLOAD SWAP1 POP DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0x98F JUMPI PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42842E0E ADDRESS PUSH1 0x4 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 SLOAD DUP2 LT PUSH2 0x8F4 JUMPI PUSH2 0x8F3 PUSH2 0xF64 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x1 PUSH2 0x92C SWAP2 SWAP1 PUSH2 0xFF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x94A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1024 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x964 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x978 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 DUP1 PUSH2 0x987 SWAP1 PUSH2 0xF93 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x882 JUMP JUMPDEST POP JUMPDEST PUSH32 0xD629DB0AB1E7A966B4F646BCD3CE5AE4A0B2C91819E7CA456F3064C7AF6B8233 PUSH1 0x4 PUSH1 0x5 PUSH1 0x40 MLOAD PUSH2 0x9C4 SWAP3 SWAP2 SWAP1 PUSH2 0x1280 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9FA DUP3 PUSH2 0x9CF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA0A DUP2 PUSH2 0x9EF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA25 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA01 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA43 DUP2 PUSH2 0xA30 JUMP JUMPDEST DUP2 EQ PUSH2 0xA4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA60 DUP2 PUSH2 0xA3A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA7C JUMPI PUSH2 0xA7B PUSH2 0xA2B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA8A DUP5 DUP3 DUP6 ADD PUSH2 0xA51 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA9C DUP2 PUSH2 0xA30 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAB7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA93 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAD2 DUP2 PUSH2 0xABD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAED PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xAC9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB10 DUP2 PUSH2 0xAF3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB2B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB07 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB3C DUP3 PUSH2 0x9CF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB4C DUP2 PUSH2 0xB31 JUMP JUMPDEST DUP2 EQ PUSH2 0xB57 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB69 DUP2 PUSH2 0xB43 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB85 JUMPI PUSH2 0xB84 PUSH2 0xA2B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB93 DUP5 DUP3 DUP6 ADD PUSH2 0xB5A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBA5 DUP2 PUSH2 0xB31 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBC0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB9C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBEB PUSH2 0xBE6 PUSH2 0xBE1 DUP5 PUSH2 0x9CF JUMP JUMPDEST PUSH2 0xBC6 JUMP JUMPDEST PUSH2 0x9CF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBFD DUP3 PUSH2 0xBD0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC0F DUP3 PUSH2 0xBF2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC1F DUP2 PUSH2 0xC04 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC3A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC16 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6E6F742073746172746564000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC87 PUSH1 0xB DUP4 PUSH2 0xC40 JUMP JUMPDEST SWAP2 POP PUSH2 0xC92 DUP3 PUSH2 0xC51 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xCB6 DUP2 PUSH2 0xC7A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x656E646564000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCF3 PUSH1 0x5 DUP4 PUSH2 0xC40 JUMP JUMPDEST SWAP2 POP PUSH2 0xCFE DUP3 PUSH2 0xCBD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD22 DUP2 PUSH2 0xCE6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD63 DUP3 PUSH2 0xA30 JUMP JUMPDEST SWAP2 POP PUSH2 0xD6E DUP4 PUSH2 0xA30 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xDA3 JUMPI PUSH2 0xDA2 PUSH2 0xD29 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x7374617274656400000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDE4 PUSH1 0x7 DUP4 PUSH2 0xC40 JUMP JUMPDEST SWAP2 POP PUSH2 0xDEF DUP3 PUSH2 0xDAE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE13 DUP2 PUSH2 0xDD7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6E6F742073656C6C657200000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE50 PUSH1 0xA DUP4 PUSH2 0xC40 JUMP JUMPDEST SWAP2 POP PUSH2 0xE5B DUP3 PUSH2 0xE1A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE7F DUP2 PUSH2 0xE43 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEAB PUSH2 0xEA6 PUSH2 0xEA1 DUP5 PUSH2 0xE86 JUMP JUMPDEST PUSH2 0xBC6 JUMP JUMPDEST PUSH2 0xA30 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEBB DUP2 PUSH2 0xE90 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xED6 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xB9C JUMP JUMPDEST PUSH2 0xEE3 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xB9C JUMP JUMPDEST PUSH2 0xEF0 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xEB2 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x6E6F7420656E6465640000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF2E PUSH1 0x9 DUP4 PUSH2 0xC40 JUMP JUMPDEST SWAP2 POP PUSH2 0xF39 DUP3 PUSH2 0xEF8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF5D DUP2 PUSH2 0xF21 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xF9E DUP3 PUSH2 0xAF3 JUMP JUMPDEST SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0xFB9 JUMPI PUSH2 0xFB8 PUSH2 0xD29 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xFFE DUP3 PUSH2 0xA30 JUMP JUMPDEST SWAP2 POP PUSH2 0x1009 DUP4 PUSH2 0xA30 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1019 JUMPI PUSH2 0x1018 PUSH2 0xFC4 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1039 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xB9C JUMP JUMPDEST PUSH2 0x1046 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xB9C JUMP JUMPDEST PUSH2 0x1053 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xA93 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1095 DUP2 PUSH2 0xB31 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10A7 DUP4 DUP4 PUSH2 0x108C JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10F3 PUSH2 0x10EE DUP4 PUSH2 0x10B3 JUMP JUMPDEST PUSH2 0x10C0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1106 DUP3 SLOAD PUSH2 0x10E0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1125 DUP3 PUSH2 0x105B JUMP JUMPDEST PUSH2 0x112F DUP2 DUP6 PUSH2 0x1066 JUMP JUMPDEST SWAP4 POP PUSH2 0x113A DUP4 PUSH2 0x1077 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1172 JUMPI PUSH2 0x114F DUP3 PUSH2 0x10FA JUMP JUMPDEST PUSH2 0x1159 DUP9 DUP3 PUSH2 0x109B JUMP JUMPDEST SWAP8 POP PUSH2 0x1164 DUP4 PUSH2 0x110D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x113E JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11B9 DUP2 PUSH2 0xA30 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11CB DUP4 DUP4 PUSH2 0x11B0 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11F4 PUSH2 0x11EF DUP4 PUSH2 0x10B3 JUMP JUMPDEST PUSH2 0x11D7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1207 DUP3 SLOAD PUSH2 0x11E1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1226 DUP3 PUSH2 0x117F JUMP JUMPDEST PUSH2 0x1230 DUP2 DUP6 PUSH2 0x118A JUMP JUMPDEST SWAP4 POP PUSH2 0x123B DUP4 PUSH2 0x119B JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1273 JUMPI PUSH2 0x1250 DUP3 PUSH2 0x11FB JUMP JUMPDEST PUSH2 0x125A DUP9 DUP3 PUSH2 0x11BF JUMP JUMPDEST SWAP8 POP PUSH2 0x1265 DUP4 PUSH2 0x120E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x123F JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x129A DUP2 DUP6 PUSH2 0x111A JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x12AE DUP2 DUP5 PUSH2 0x121B JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 0xDF 0x5D 0xE8 0xD4 0xBF 0x4C 0x27 RETURNDATACOPY CALLER 0x4C SWAP10 0xF EXTCODEHASH 0xE4 PUSH29 0xCAB516C1DA336BBF641DFBAC79E439E864736F6C634300080900330000 ",
							"sourceMap": "447:2035:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;685:29;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;838:28;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;774:17;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1466:218;;;:::i;:::-;;748:19;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;655:23;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;873:39;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;800:31;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;609:39;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;721:20;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1161:297;;;;;;;;;;;;;:::i;:::-;;1692:787;;;;;;;;;;;;;:::i;:::-;;685:29;;;;;;;;;;;;;:::o;838:28::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;774:17::-;;;;;;;;;;;;;:::o;1466:218::-;1517:7;;;;;;;;;;;1509:31;;;;;;;;;;;;:::i;:::-;;;;;;;;;1577:5;;1559:15;:23;1551:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;1623:9;1603:4;:16;1608:10;1603:16;;;;;;;;;;;;;;;;:29;;;;;;;:::i;:::-;;;;;;;;1654:10;1650:26;;;1666:9;1650:26;;;;;;:::i;:::-;;;;;;;;1466:218::o;748:19::-;;;;;;;;;;;;;:::o;655:23::-;;;;;;;;;;;;;:::o;873:39::-;;;;;;;;;;;;;;;;;:::o;800:31::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;609:39::-;;;;;;;;;;;;:::o;721:20::-;;;;:::o;1161:297::-;1207:7;;;;;;;;;;;1206:8;1198:28;;;;;;;;;;;;:::i;:::-;;;;;;;;;1259:6;;;;;;;;;;;1245:20;;:10;:20;;;1237:43;;;;;;;;;;;;:::i;:::-;;;;;;;;;1293:19;;;;;;;;;;:32;;;1326:10;1346:4;1353:1;1293:62;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1378:4;1368:7;;:14;;;;;;;;;;;;;;;;;;1419:6;1401:15;:24;;;;:::i;:::-;1393:5;:32;;;;1443:7;;;;;;;;;;1161:297::o;1692:787::-;1735:7;;;;;;;;;;;1727:31;;;;;;;;;;;;:::i;:::-;;;;;;;;;1796:5;;1777:15;:24;;1769:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;1835:5;;;;;;;;;;;1834:6;1826:24;;;;;;;;;;;;:::i;:::-;;;;;;;;;1871:4;1863:5;;:12;;;;;;;;;;;;;;;;;;1931:25;1976:8;1971:122;1994:14;:21;;;;1990:1;:25;;;1971:122;;;2058:4;:23;2063:14;2078:1;2063:17;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2058:23;;;;;;;;;;;;;;;;2037:44;;;;;:::i;:::-;;;2017:3;;;;;:::i;:::-;;;;1971:122;;;;2132:1;2107:14;:21;;;;:26;2103:319;;2155:8;2150:261;2173:14;:21;;;;2169:1;:25;;;2150:261;;;2220:19;;;;;;;;;;:36;;;2287:4;2315:14;2330:1;2315:17;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2359;2355:1;:21;;;;:::i;:::-;2220:175;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2196:3;;;;;:::i;:::-;;;;2150:261;;;;2103:319;2439:32;2443:14;2459:11;2439:32;;;;;;;:::i;:::-;;;;;;;;1716:763;1692:787::o;7:126:2:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:104::-;184:7;213:24;231:5;213:24;:::i;:::-;202:35;;139:104;;;:::o;249:142::-;352:32;378:5;352:32;:::i;:::-;347:3;340:45;249:142;;:::o;397:254::-;506:4;544:2;533:9;529:18;521:26;;557:87;641:1;630:9;626:17;617:6;557:87;:::i;:::-;397:254;;;;:::o;738:117::-;847:1;844;837:12;984:77;1021:7;1050:5;1039:16;;984:77;;;:::o;1067:122::-;1140:24;1158:5;1140:24;:::i;:::-;1133:5;1130:35;1120:63;;1179:1;1176;1169:12;1120:63;1067:122;:::o;1195:139::-;1241:5;1279:6;1266:20;1257:29;;1295:33;1322:5;1295:33;:::i;:::-;1195:139;;;;:::o;1340:329::-;1399:6;1448:2;1436:9;1427:7;1423:23;1419:32;1416:119;;;1454:79;;:::i;:::-;1416:119;1574:1;1599:53;1644:7;1635:6;1624:9;1620:22;1599:53;:::i;:::-;1589:63;;1545:117;1340:329;;;;:::o;1675:118::-;1762:24;1780:5;1762:24;:::i;:::-;1757:3;1750:37;1675:118;;:::o;1799:222::-;1892:4;1930:2;1919:9;1915:18;1907:26;;1943:71;2011:1;2000:9;1996:17;1987:6;1943:71;:::i;:::-;1799:222;;;;:::o;2027:90::-;2061:7;2104:5;2097:13;2090:21;2079:32;;2027:90;;;:::o;2123:109::-;2204:21;2219:5;2204:21;:::i;:::-;2199:3;2192:34;2123:109;;:::o;2238:210::-;2325:4;2363:2;2352:9;2348:18;2340:26;;2376:65;2438:1;2427:9;2423:17;2414:6;2376:65;:::i;:::-;2238:210;;;;:::o;2454:101::-;2490:7;2530:18;2523:5;2519:30;2508:41;;2454:101;;;:::o;2561:115::-;2646:23;2663:5;2646:23;:::i;:::-;2641:3;2634:36;2561:115;;:::o;2682:218::-;2773:4;2811:2;2800:9;2796:18;2788:26;;2824:69;2890:1;2879:9;2875:17;2866:6;2824:69;:::i;:::-;2682:218;;;;:::o;2906:96::-;2943:7;2972:24;2990:5;2972:24;:::i;:::-;2961:35;;2906:96;;;:::o;3008:122::-;3081:24;3099:5;3081:24;:::i;:::-;3074:5;3071:35;3061:63;;3120:1;3117;3110:12;3061:63;3008:122;:::o;3136:139::-;3182:5;3220:6;3207:20;3198:29;;3236:33;3263:5;3236:33;:::i;:::-;3136:139;;;;:::o;3281:329::-;3340:6;3389:2;3377:9;3368:7;3364:23;3360:32;3357:119;;;3395:79;;:::i;:::-;3357:119;3515:1;3540:53;3585:7;3576:6;3565:9;3561:22;3540:53;:::i;:::-;3530:63;;3486:117;3281:329;;;;:::o;3616:118::-;3703:24;3721:5;3703:24;:::i;:::-;3698:3;3691:37;3616:118;;:::o;3740:222::-;3833:4;3871:2;3860:9;3856:18;3848:26;;3884:71;3952:1;3941:9;3937:17;3928:6;3884:71;:::i;:::-;3740:222;;;;:::o;3968:60::-;3996:3;4017:5;4010:12;;3968:60;;;:::o;4034:142::-;4084:9;4117:53;4135:34;4144:24;4162:5;4144:24;:::i;:::-;4135:34;:::i;:::-;4117:53;:::i;:::-;4104:66;;4034:142;;;:::o;4182:126::-;4232:9;4265:37;4296:5;4265:37;:::i;:::-;4252:50;;4182:126;;;:::o;4314:145::-;4383:9;4416:37;4447:5;4416:37;:::i;:::-;4403:50;;4314:145;;;:::o;4465:169::-;4571:56;4621:5;4571:56;:::i;:::-;4566:3;4559:69;4465:169;;:::o;4640:260::-;4752:4;4790:2;4779:9;4775:18;4767:26;;4803:90;4890:1;4879:9;4875:17;4866:6;4803:90;:::i;:::-;4640:260;;;;:::o;4906:169::-;4990:11;5024:6;5019:3;5012:19;5064:4;5059:3;5055:14;5040:29;;4906:169;;;;:::o;5081:161::-;5221:13;5217:1;5209:6;5205:14;5198:37;5081:161;:::o;5248:366::-;5390:3;5411:67;5475:2;5470:3;5411:67;:::i;:::-;5404:74;;5487:93;5576:3;5487:93;:::i;:::-;5605:2;5600:3;5596:12;5589:19;;5248:366;;;:::o;5620:419::-;5786:4;5824:2;5813:9;5809:18;5801:26;;5873:9;5867:4;5863:20;5859:1;5848:9;5844:17;5837:47;5901:131;6027:4;5901:131;:::i;:::-;5893:139;;5620:419;;;:::o;6045:155::-;6185:7;6181:1;6173:6;6169:14;6162:31;6045:155;:::o;6206:365::-;6348:3;6369:66;6433:1;6428:3;6369:66;:::i;:::-;6362:73;;6444:93;6533:3;6444:93;:::i;:::-;6562:2;6557:3;6553:12;6546:19;;6206:365;;;:::o;6577:419::-;6743:4;6781:2;6770:9;6766:18;6758:26;;6830:9;6824:4;6820:20;6816:1;6805:9;6801:17;6794:47;6858:131;6984:4;6858:131;:::i;:::-;6850:139;;6577:419;;;:::o;7002:180::-;7050:77;7047:1;7040:88;7147:4;7144:1;7137:15;7171:4;7168:1;7161:15;7188:305;7228:3;7247:20;7265:1;7247:20;:::i;:::-;7242:25;;7281:20;7299:1;7281:20;:::i;:::-;7276:25;;7435:1;7367:66;7363:74;7360:1;7357:81;7354:107;;;7441:18;;:::i;:::-;7354:107;7485:1;7482;7478:9;7471:16;;7188:305;;;;:::o;7499:157::-;7639:9;7635:1;7627:6;7623:14;7616:33;7499:157;:::o;7662:365::-;7804:3;7825:66;7889:1;7884:3;7825:66;:::i;:::-;7818:73;;7900:93;7989:3;7900:93;:::i;:::-;8018:2;8013:3;8009:12;8002:19;;7662:365;;;:::o;8033:419::-;8199:4;8237:2;8226:9;8222:18;8214:26;;8286:9;8280:4;8276:20;8272:1;8261:9;8257:17;8250:47;8314:131;8440:4;8314:131;:::i;:::-;8306:139;;8033:419;;;:::o;8458:160::-;8598:12;8594:1;8586:6;8582:14;8575:36;8458:160;:::o;8624:366::-;8766:3;8787:67;8851:2;8846:3;8787:67;:::i;:::-;8780:74;;8863:93;8952:3;8863:93;:::i;:::-;8981:2;8976:3;8972:12;8965:19;;8624:366;;;:::o;8996:419::-;9162:4;9200:2;9189:9;9185:18;9177:26;;9249:9;9243:4;9239:20;9235:1;9224:9;9220:17;9213:47;9277:131;9403:4;9277:131;:::i;:::-;9269:139;;8996:419;;;:::o;9421:85::-;9466:7;9495:5;9484:16;;9421:85;;;:::o;9512:158::-;9570:9;9603:61;9621:42;9630:32;9656:5;9630:32;:::i;:::-;9621:42;:::i;:::-;9603:61;:::i;:::-;9590:74;;9512:158;;;:::o;9676:147::-;9771:45;9810:5;9771:45;:::i;:::-;9766:3;9759:58;9676:147;;:::o;9829:458::-;9986:4;10024:2;10013:9;10009:18;10001:26;;10037:71;10105:1;10094:9;10090:17;10081:6;10037:71;:::i;:::-;10118:72;10186:2;10175:9;10171:18;10162:6;10118:72;:::i;:::-;10200:80;10276:2;10265:9;10261:18;10252:6;10200:80;:::i;:::-;9829:458;;;;;;:::o;10293:159::-;10433:11;10429:1;10421:6;10417:14;10410:35;10293:159;:::o;10458:365::-;10600:3;10621:66;10685:1;10680:3;10621:66;:::i;:::-;10614:73;;10696:93;10785:3;10696:93;:::i;:::-;10814:2;10809:3;10805:12;10798:19;;10458:365;;;:::o;10829:419::-;10995:4;11033:2;11022:9;11018:18;11010:26;;11082:9;11076:4;11072:20;11068:1;11057:9;11053:17;11046:47;11110:131;11236:4;11110:131;:::i;:::-;11102:139;;10829:419;;;:::o;11254:180::-;11302:77;11299:1;11292:88;11399:4;11396:1;11389:15;11423:4;11420:1;11413:15;11440:183;11478:3;11501:23;11518:5;11501:23;:::i;:::-;11492:32;;11546:18;11539:5;11536:29;11533:55;;;11568:18;;:::i;:::-;11533:55;11615:1;11608:5;11604:13;11597:20;;11440:183;;;:::o;11629:180::-;11677:77;11674:1;11667:88;11774:4;11771:1;11764:15;11798:4;11795:1;11788:15;11815:185;11855:1;11872:20;11890:1;11872:20;:::i;:::-;11867:25;;11906:20;11924:1;11906:20;:::i;:::-;11901:25;;11945:1;11935:35;;11950:18;;:::i;:::-;11935:35;11992:1;11989;11985:9;11980:14;;11815:185;;;;:::o;12006:442::-;12155:4;12193:2;12182:9;12178:18;12170:26;;12206:71;12274:1;12263:9;12259:17;12250:6;12206:71;:::i;:::-;12287:72;12355:2;12344:9;12340:18;12331:6;12287:72;:::i;:::-;12369;12437:2;12426:9;12422:18;12413:6;12369:72;:::i;:::-;12006:442;;;;;;:::o;12454:111::-;12518:6;12552:5;12546:12;12536:22;;12454:111;;;:::o;12571:184::-;12670:11;12704:6;12699:3;12692:19;12744:4;12739:3;12735:14;12720:29;;12571:184;;;;:::o;12761:156::-;12825:4;12848:3;12840:11;;12871:3;12868:1;12861:14;12905:4;12902:1;12892:18;12884:26;;12761:156;;;:::o;12923:108::-;13000:24;13018:5;13000:24;:::i;:::-;12995:3;12988:37;12923:108;;:::o;13037:179::-;13106:10;13127:46;13169:3;13161:6;13127:46;:::i;:::-;13205:4;13200:3;13196:14;13182:28;;13037:179;;;;:::o;13222:102::-;13264:8;13311:5;13308:1;13304:13;13283:34;;13222:102;;;:::o;13330:139::-;13380:7;13420:42;13413:5;13409:54;13398:65;;13330:139;;;:::o;13475:166::-;13544:5;13569:66;13600:34;13623:10;13600:34;:::i;:::-;13569:66;:::i;:::-;13560:75;;13475:166;;;:::o;13647:144::-;13702:5;13727:57;13778:4;13772:11;13727:57;:::i;:::-;13718:66;;13647:144;;;:::o;13797:110::-;13864:4;13896;13891:3;13887:14;13879:22;;13797:110;;;:::o;13943:751::-;14059:3;14088:51;14133:5;14088:51;:::i;:::-;14155:86;14234:6;14229:3;14155:86;:::i;:::-;14148:93;;14265:53;14312:5;14265:53;:::i;:::-;14341:7;14372:1;14357:312;14382:6;14379:1;14376:13;14357:312;;;14452:44;14489:6;14452:44;:::i;:::-;14516:63;14575:3;14560:13;14516:63;:::i;:::-;14509:70;;14602:57;14652:6;14602:57;:::i;:::-;14592:67;;14417:252;14404:1;14401;14397:9;14392:14;;14357:312;;;14361:14;14685:3;14678:10;;14064:630;;;13943:751;;;;:::o;14700:111::-;14764:6;14798:5;14792:12;14782:22;;14700:111;;;:::o;14817:184::-;14916:11;14950:6;14945:3;14938:19;14990:4;14985:3;14981:14;14966:29;;14817:184;;;;:::o;15007:156::-;15071:4;15094:3;15086:11;;15117:3;15114:1;15107:14;15151:4;15148:1;15138:18;15130:26;;15007:156;;;:::o;15169:108::-;15246:24;15264:5;15246:24;:::i;:::-;15241:3;15234:37;15169:108;;:::o;15283:179::-;15352:10;15373:46;15415:3;15407:6;15373:46;:::i;:::-;15451:4;15446:3;15442:14;15428:28;;15283:179;;;;:::o;15468:90::-;15518:7;15547:5;15536:16;;15468:90;;;:::o;15564:166::-;15633:5;15658:66;15689:34;15712:10;15689:34;:::i;:::-;15658:66;:::i;:::-;15649:75;;15564:166;;;:::o;15736:144::-;15791:5;15816:57;15867:4;15861:11;15816:57;:::i;:::-;15807:66;;15736:144;;;:::o;15886:110::-;15953:4;15985;15980:3;15976:14;15968:22;;15886:110;;;:::o;16032:751::-;16148:3;16177:51;16222:5;16177:51;:::i;:::-;16244:86;16323:6;16318:3;16244:86;:::i;:::-;16237:93;;16354:53;16401:5;16354:53;:::i;:::-;16430:7;16461:1;16446:312;16471:6;16468:1;16465:13;16446:312;;;16541:44;16578:6;16541:44;:::i;:::-;16605:63;16664:3;16649:13;16605:63;:::i;:::-;16598:70;;16691:57;16741:6;16691:57;:::i;:::-;16681:67;;16506:252;16493:1;16490;16486:9;16481:14;;16446:312;;;16450:14;16774:3;16767:10;;16153:630;;;16032:751;;;;:::o;16789:622::-;17004:4;17042:2;17031:9;17027:18;17019:26;;17091:9;17085:4;17081:20;17077:1;17066:9;17062:17;17055:47;17119:105;17219:4;17210:6;17119:105;:::i;:::-;17111:113;;17271:9;17265:4;17261:20;17256:2;17245:9;17241:18;17234:48;17299:105;17399:4;17390:6;17299:105;:::i;:::-;17291:113;;16789:622;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "969000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"auctionID()": "2632",
								"bid()": "infinite",
								"bids(address)": "2814",
								"end()": "infinite",
								"endAt()": "2495",
								"ended()": "2566",
								"highestBidders(uint256)": "4978",
								"highestBids(uint256)": "infinite",
								"seller()": "2515",
								"start()": "infinite",
								"started()": "2560",
								"tokenToBeAttributed()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 447,
									"end": 2482,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 921,
									"end": 1153,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 921,
									"end": 1153,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 921,
									"end": 1153,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 921,
									"end": 1153,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 921,
									"end": 1153,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 921,
									"end": 1153,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 921,
									"end": 1153,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 921,
									"end": 1153,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 921,
									"end": 1153,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 921,
									"end": 1153,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 921,
									"end": 1153,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 921,
									"end": 1153,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 921,
									"end": 1153,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 921,
									"end": 1153,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 921,
									"end": 1153,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 921,
									"end": 1153,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 921,
									"end": 1153,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 921,
									"end": 1153,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 921,
									"end": 1153,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 921,
									"end": 1153,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 921,
									"end": 1153,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 921,
									"end": 1153,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 921,
									"end": 1153,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 921,
									"end": 1153,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 921,
									"end": 1153,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 921,
									"end": 1153,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 921,
									"end": 1153,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 921,
									"end": 1153,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 921,
									"end": 1153,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 921,
									"end": 1153,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 921,
									"end": 1153,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 921,
									"end": 1153,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 921,
									"end": 1153,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 921,
									"end": 1153,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 921,
									"end": 1153,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1025,
									"end": 1038,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 990,
									"end": 1009,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 990,
									"end": 1009,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 990,
									"end": 1039,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 990,
									"end": 1039,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 990,
									"end": 1039,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 990,
									"end": 1039,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 990,
									"end": 1039,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 990,
									"end": 1039,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 990,
									"end": 1039,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 990,
									"end": 1039,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 990,
									"end": 1039,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 990,
									"end": 1039,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 990,
									"end": 1039,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 990,
									"end": 1039,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 990,
									"end": 1039,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 990,
									"end": 1039,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 990,
									"end": 1039,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 990,
									"end": 1039,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 990,
									"end": 1039,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 990,
									"end": 1039,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1062,
									"end": 1076,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1050,
									"end": 1059,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1050,
									"end": 1059,
									"name": "PUSH",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1050,
									"end": 1076,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 1050,
									"end": 1076,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 1050,
									"end": 1076,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1050,
									"end": 1076,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1050,
									"end": 1076,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1050,
									"end": 1076,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1050,
									"end": 1076,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1050,
									"end": 1076,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 1050,
									"end": 1076,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1050,
									"end": 1076,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1050,
									"end": 1076,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1050,
									"end": 1076,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1050,
									"end": 1076,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1050,
									"end": 1076,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1050,
									"end": 1076,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1050,
									"end": 1076,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1050,
									"end": 1076,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1050,
									"end": 1076,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1106,
									"end": 1116,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 1089,
									"end": 1095,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1089,
									"end": 1095,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1089,
									"end": 1117,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 1089,
									"end": 1117,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 1089,
									"end": 1117,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1089,
									"end": 1117,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1089,
									"end": 1117,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1089,
									"end": 1117,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1089,
									"end": 1117,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1089,
									"end": 1117,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 1089,
									"end": 1117,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1089,
									"end": 1117,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1089,
									"end": 1117,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1089,
									"end": 1117,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1089,
									"end": 1117,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1089,
									"end": 1117,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1089,
									"end": 1117,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1089,
									"end": 1117,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1089,
									"end": 1117,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1089,
									"end": 1117,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1128,
									"end": 1145,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1128,
									"end": 1145,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1128,
									"end": 1145,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1128,
									"end": 1145,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1128,
									"end": 1145,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1128,
									"end": 1145,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1128,
									"end": 1145,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1128,
									"end": 1145,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1143,
									"end": 1144,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1128,
									"end": 1145,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 1128,
									"end": 1145,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1128,
									"end": 1145,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1128,
									"end": 1145,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1128,
									"end": 1145,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1128,
									"end": 1139,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1128,
									"end": 1145,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1128,
									"end": 1145,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1128,
									"end": 1145,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1128,
									"end": 1145,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 1128,
									"end": 1145,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1128,
									"end": 1145,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1128,
									"end": 1145,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1128,
									"end": 1145,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1128,
									"end": 1145,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1128,
									"end": 1145,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1128,
									"end": 1145,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 921,
									"end": 1153,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 921,
									"end": 1153,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 845,
									"end": 946,
									"name": "tag",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 845,
									"end": 946,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 881,
									"end": 888,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 914,
									"end": 919,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 910,
									"end": 940,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 899,
									"end": 940,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 899,
									"end": 940,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 845,
									"end": 946,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 845,
									"end": 946,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 845,
									"end": 946,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 845,
									"end": 946,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 952,
									"end": 1072,
									"name": "tag",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 952,
									"end": 1072,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1024,
									"end": 1047,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1041,
									"end": 1046,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1024,
									"end": 1047,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 1024,
									"end": 1047,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1024,
									"end": 1047,
									"name": "tag",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1024,
									"end": 1047,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1017,
									"end": 1022,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1014,
									"end": 1048,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 1004,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "41"
								},
								{
									"begin": 1004,
									"end": 1066,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1062,
									"end": 1063,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1059,
									"end": 1060,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1052,
									"end": 1064,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1004,
									"end": 1066,
									"name": "tag",
									"source": 2,
									"value": "41"
								},
								{
									"begin": 1004,
									"end": 1066,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 952,
									"end": 1072,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 952,
									"end": 1072,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 1078,
									"end": 1219,
									"name": "tag",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 1078,
									"end": 1219,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1134,
									"end": 1139,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1165,
									"end": 1171,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1159,
									"end": 1172,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1150,
									"end": 1172,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1150,
									"end": 1172,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1181,
									"end": 1213,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "43"
								},
								{
									"begin": 1207,
									"end": 1212,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1181,
									"end": 1213,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 1181,
									"end": 1213,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1181,
									"end": 1213,
									"name": "tag",
									"source": 2,
									"value": "43"
								},
								{
									"begin": 1181,
									"end": 1213,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1078,
									"end": 1219,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1078,
									"end": 1219,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1078,
									"end": 1219,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1078,
									"end": 1219,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1078,
									"end": 1219,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 1225,
									"end": 1730,
									"name": "tag",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1225,
									"end": 1730,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1303,
									"end": 1309,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1311,
									"end": 1317,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1360,
									"end": 1362,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1348,
									"end": 1357,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1339,
									"end": 1346,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 1335,
									"end": 1358,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1331,
									"end": 1363,
									"name": "SLT",
									"source": 2
								},
								{
									"begin": 1328,
									"end": 1447,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1328,
									"end": 1447,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "45"
								},
								{
									"begin": 1328,
									"end": 1447,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1366,
									"end": 1445,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "46"
								},
								{
									"begin": 1366,
									"end": 1445,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 1366,
									"end": 1445,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1366,
									"end": 1445,
									"name": "tag",
									"source": 2,
									"value": "46"
								},
								{
									"begin": 1366,
									"end": 1445,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1328,
									"end": 1447,
									"name": "tag",
									"source": 2,
									"value": "45"
								},
								{
									"begin": 1328,
									"end": 1447,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1486,
									"end": 1487,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1511,
									"end": 1575,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "47"
								},
								{
									"begin": 1567,
									"end": 1574,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 1558,
									"end": 1564,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1547,
									"end": 1556,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 1543,
									"end": 1565,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1511,
									"end": 1575,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 1511,
									"end": 1575,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1511,
									"end": 1575,
									"name": "tag",
									"source": 2,
									"value": "47"
								},
								{
									"begin": 1511,
									"end": 1575,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1501,
									"end": 1575,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1501,
									"end": 1575,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1457,
									"end": 1585,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1624,
									"end": 1626,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1650,
									"end": 1713,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "48"
								},
								{
									"begin": 1705,
									"end": 1712,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 1696,
									"end": 1702,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1685,
									"end": 1694,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 1681,
									"end": 1703,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1650,
									"end": 1713,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 1650,
									"end": 1713,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1650,
									"end": 1713,
									"name": "tag",
									"source": 2,
									"value": "48"
								},
								{
									"begin": 1650,
									"end": 1713,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1640,
									"end": 1713,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1640,
									"end": 1713,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1595,
									"end": 1723,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1225,
									"end": 1730,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1225,
									"end": 1730,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1225,
									"end": 1730,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1225,
									"end": 1730,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1225,
									"end": 1730,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1225,
									"end": 1730,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 447,
									"end": 2482,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e1df5de8d4bf4c273e334c990f3fe47ccab516c1da336bbf641dfbac79e439e864736f6c63430008090033",
									".code": [
										{
											"begin": 447,
											"end": 2482,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 447,
											"end": 2482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 447,
											"end": 2482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 447,
											"end": 2482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 447,
											"end": 2482,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 447,
											"end": 2482,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 447,
											"end": 2482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 447,
											"end": 2482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 447,
											"end": 2482,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 447,
											"end": 2482,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 447,
											"end": 2482,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 447,
											"end": 2482,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 447,
											"end": 2482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 447,
											"end": 2482,
											"name": "PUSH",
											"source": 0,
											"value": "62EA82DB"
										},
										{
											"begin": 447,
											"end": 2482,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 447,
											"end": 2482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 447,
											"end": 2482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 447,
											"end": 2482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 447,
											"end": 2482,
											"name": "PUSH",
											"source": 0,
											"value": "62EA82DB"
										},
										{
											"begin": 447,
											"end": 2482,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 447,
											"end": 2482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 447,
											"end": 2482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 447,
											"end": 2482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 447,
											"end": 2482,
											"name": "PUSH",
											"source": 0,
											"value": "77484AAE"
										},
										{
											"begin": 447,
											"end": 2482,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 447,
											"end": 2482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 447,
											"end": 2482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 447,
											"end": 2482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 447,
											"end": 2482,
											"name": "PUSH",
											"source": 0,
											"value": "7C6C5720"
										},
										{
											"begin": 447,
											"end": 2482,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 447,
											"end": 2482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 447,
											"end": 2482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 447,
											"end": 2482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 447,
											"end": 2482,
											"name": "PUSH",
											"source": 0,
											"value": "7CC3AE8C"
										},
										{
											"begin": 447,
											"end": 2482,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 447,
											"end": 2482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 447,
											"end": 2482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 447,
											"end": 2482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 447,
											"end": 2482,
											"name": "PUSH",
											"source": 0,
											"value": "BE9A6555"
										},
										{
											"begin": 447,
											"end": 2482,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 447,
											"end": 2482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 447,
											"end": 2482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 447,
											"end": 2482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 447,
											"end": 2482,
											"name": "PUSH",
											"source": 0,
											"value": "EFBE1C1C"
										},
										{
											"begin": 447,
											"end": 2482,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 447,
											"end": 2482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 447,
											"end": 2482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 447,
											"end": 2482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 447,
											"end": 2482,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 447,
											"end": 2482,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 447,
											"end": 2482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 447,
											"end": 2482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 447,
											"end": 2482,
											"name": "PUSH",
											"source": 0,
											"value": "8551A53"
										},
										{
											"begin": 447,
											"end": 2482,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 447,
											"end": 2482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 447,
											"end": 2482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 447,
											"end": 2482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 447,
											"end": 2482,
											"name": "PUSH",
											"source": 0,
											"value": "111CB258"
										},
										{
											"begin": 447,
											"end": 2482,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 447,
											"end": 2482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 447,
											"end": 2482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 447,
											"end": 2482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 447,
											"end": 2482,
											"name": "PUSH",
											"source": 0,
											"value": "12FA6FEB"
										},
										{
											"begin": 447,
											"end": 2482,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 447,
											"end": 2482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 447,
											"end": 2482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 447,
											"end": 2482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 447,
											"end": 2482,
											"name": "PUSH",
											"source": 0,
											"value": "1998AEEF"
										},
										{
											"begin": 447,
											"end": 2482,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 447,
											"end": 2482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 447,
											"end": 2482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 447,
											"end": 2482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 447,
											"end": 2482,
											"name": "PUSH",
											"source": 0,
											"value": "1F2698AB"
										},
										{
											"begin": 447,
											"end": 2482,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 447,
											"end": 2482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 447,
											"end": 2482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 447,
											"end": 2482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 447,
											"end": 2482,
											"name": "PUSH",
											"source": 0,
											"value": "2D07091F"
										},
										{
											"begin": 447,
											"end": 2482,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 447,
											"end": 2482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 447,
											"end": 2482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 447,
											"end": 2482,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 447,
											"end": 2482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 447,
											"end": 2482,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 447,
											"end": 2482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 447,
											"end": 2482,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 685,
											"end": 714,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 685,
											"end": 714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 685,
											"end": 714,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 685,
											"end": 714,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 685,
											"end": 714,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 685,
											"end": 714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 685,
											"end": 714,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 685,
											"end": 714,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 685,
											"end": 714,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 685,
											"end": 714,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 685,
											"end": 714,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 685,
											"end": 714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 685,
											"end": 714,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 685,
											"end": 714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 685,
											"end": 714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 685,
											"end": 714,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 685,
											"end": 714,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 685,
											"end": 714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 685,
											"end": 714,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 685,
											"end": 714,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 685,
											"end": 714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 685,
											"end": 714,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 685,
											"end": 714,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 685,
											"end": 714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 685,
											"end": 714,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 685,
											"end": 714,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 685,
											"end": 714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 685,
											"end": 714,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 685,
											"end": 714,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 685,
											"end": 714,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 685,
											"end": 714,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 685,
											"end": 714,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 685,
											"end": 714,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 685,
											"end": 714,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 838,
											"end": 866,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 838,
											"end": 866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 838,
											"end": 866,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 838,
											"end": 866,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 838,
											"end": 866,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 838,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 838,
											"end": 866,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 838,
											"end": 866,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 838,
											"end": 866,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 838,
											"end": 866,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 838,
											"end": 866,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 838,
											"end": 866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 838,
											"end": 866,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 838,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 838,
											"end": 866,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 838,
											"end": 866,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 838,
											"end": 866,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 838,
											"end": 866,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 838,
											"end": 866,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 838,
											"end": 866,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 838,
											"end": 866,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 838,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 838,
											"end": 866,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 838,
											"end": 866,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 838,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 838,
											"end": 866,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 838,
											"end": 866,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 838,
											"end": 866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 838,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 838,
											"end": 866,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 838,
											"end": 866,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 838,
											"end": 866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 838,
											"end": 866,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 838,
											"end": 866,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 838,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 838,
											"end": 866,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 838,
											"end": 866,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 838,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 838,
											"end": 866,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 838,
											"end": 866,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 838,
											"end": 866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 838,
											"end": 866,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 838,
											"end": 866,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 838,
											"end": 866,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 838,
											"end": 866,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 838,
											"end": 866,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 838,
											"end": 866,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 838,
											"end": 866,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 774,
											"end": 791,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 774,
											"end": 791,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 774,
											"end": 791,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 774,
											"end": 791,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 774,
											"end": 791,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 774,
											"end": 791,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 774,
											"end": 791,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 774,
											"end": 791,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 774,
											"end": 791,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 774,
											"end": 791,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 774,
											"end": 791,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 774,
											"end": 791,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 774,
											"end": 791,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 774,
											"end": 791,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 774,
											"end": 791,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 774,
											"end": 791,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 774,
											"end": 791,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 774,
											"end": 791,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 774,
											"end": 791,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 774,
											"end": 791,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 774,
											"end": 791,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 774,
											"end": 791,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 774,
											"end": 791,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 774,
											"end": 791,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 774,
											"end": 791,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 774,
											"end": 791,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 774,
											"end": 791,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 774,
											"end": 791,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 774,
											"end": 791,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 774,
											"end": 791,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 774,
											"end": 791,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 774,
											"end": 791,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 774,
											"end": 791,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 774,
											"end": 791,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1466,
											"end": 1684,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1466,
											"end": 1684,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1466,
											"end": 1684,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1466,
											"end": 1684,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1466,
											"end": 1684,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1466,
											"end": 1684,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1466,
											"end": 1684,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1466,
											"end": 1684,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 748,
											"end": 767,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 748,
											"end": 767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 748,
											"end": 767,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 748,
											"end": 767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 748,
											"end": 767,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 748,
											"end": 767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 748,
											"end": 767,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 748,
											"end": 767,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 748,
											"end": 767,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 748,
											"end": 767,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 748,
											"end": 767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 748,
											"end": 767,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 748,
											"end": 767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 748,
											"end": 767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 748,
											"end": 767,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 748,
											"end": 767,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 748,
											"end": 767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 748,
											"end": 767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 748,
											"end": 767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 748,
											"end": 767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 748,
											"end": 767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 748,
											"end": 767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 748,
											"end": 767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 748,
											"end": 767,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 748,
											"end": 767,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 748,
											"end": 767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 748,
											"end": 767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 748,
											"end": 767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 748,
											"end": 767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 748,
											"end": 767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 748,
											"end": 767,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 748,
											"end": 767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 748,
											"end": 767,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 655,
											"end": 678,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 655,
											"end": 678,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 655,
											"end": 678,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 655,
											"end": 678,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 655,
											"end": 678,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 655,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 655,
											"end": 678,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 655,
											"end": 678,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 655,
											"end": 678,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 655,
											"end": 678,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 655,
											"end": 678,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 655,
											"end": 678,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 655,
											"end": 678,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 655,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 655,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 655,
											"end": 678,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 655,
											"end": 678,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 655,
											"end": 678,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 655,
											"end": 678,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 655,
											"end": 678,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 655,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 655,
											"end": 678,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 655,
											"end": 678,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 655,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 655,
											"end": 678,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 655,
											"end": 678,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 655,
											"end": 678,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 655,
											"end": 678,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 655,
											"end": 678,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 655,
											"end": 678,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 655,
											"end": 678,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 655,
											"end": 678,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 655,
											"end": 678,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 655,
											"end": 678,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 873,
											"end": 912,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 873,
											"end": 912,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 873,
											"end": 912,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 873,
											"end": 912,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 873,
											"end": 912,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 873,
											"end": 912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 873,
											"end": 912,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 873,
											"end": 912,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 873,
											"end": 912,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 873,
											"end": 912,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 873,
											"end": 912,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 873,
											"end": 912,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 873,
											"end": 912,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 873,
											"end": 912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 873,
											"end": 912,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 873,
											"end": 912,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 873,
											"end": 912,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 873,
											"end": 912,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 873,
											"end": 912,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 873,
											"end": 912,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 873,
											"end": 912,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 873,
											"end": 912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 873,
											"end": 912,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 873,
											"end": 912,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 873,
											"end": 912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 873,
											"end": 912,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 873,
											"end": 912,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 873,
											"end": 912,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 873,
											"end": 912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 873,
											"end": 912,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 873,
											"end": 912,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 873,
											"end": 912,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 873,
											"end": 912,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 873,
											"end": 912,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 873,
											"end": 912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 873,
											"end": 912,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 873,
											"end": 912,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 873,
											"end": 912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 873,
											"end": 912,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 873,
											"end": 912,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 873,
											"end": 912,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 873,
											"end": 912,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 873,
											"end": 912,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 873,
											"end": 912,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 873,
											"end": 912,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 873,
											"end": 912,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 873,
											"end": 912,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 873,
											"end": 912,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 800,
											"end": 831,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 800,
											"end": 831,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 800,
											"end": 831,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 800,
											"end": 831,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 800,
											"end": 831,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 800,
											"end": 831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 800,
											"end": 831,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 800,
											"end": 831,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 800,
											"end": 831,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 800,
											"end": 831,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 800,
											"end": 831,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 800,
											"end": 831,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 800,
											"end": 831,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 800,
											"end": 831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 800,
											"end": 831,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 800,
											"end": 831,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 800,
											"end": 831,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 800,
											"end": 831,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 800,
											"end": 831,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 800,
											"end": 831,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 800,
											"end": 831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 800,
											"end": 831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 800,
											"end": 831,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 800,
											"end": 831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 800,
											"end": 831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 800,
											"end": 831,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 800,
											"end": 831,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 800,
											"end": 831,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 800,
											"end": 831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 800,
											"end": 831,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 800,
											"end": 831,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 800,
											"end": 831,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 800,
											"end": 831,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 800,
											"end": 831,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 800,
											"end": 831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 800,
											"end": 831,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 800,
											"end": 831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 800,
											"end": 831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 800,
											"end": 831,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 800,
											"end": 831,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 800,
											"end": 831,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 800,
											"end": 831,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 800,
											"end": 831,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 800,
											"end": 831,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 800,
											"end": 831,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 800,
											"end": 831,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 800,
											"end": 831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 800,
											"end": 831,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 609,
											"end": 648,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 609,
											"end": 648,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 609,
											"end": 648,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 609,
											"end": 648,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 609,
											"end": 648,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 609,
											"end": 648,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 609,
											"end": 648,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 609,
											"end": 648,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 609,
											"end": 648,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 609,
											"end": 648,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 609,
											"end": 648,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 609,
											"end": 648,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 609,
											"end": 648,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 609,
											"end": 648,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 609,
											"end": 648,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 609,
											"end": 648,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 609,
											"end": 648,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 609,
											"end": 648,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 609,
											"end": 648,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 609,
											"end": 648,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 609,
											"end": 648,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 609,
											"end": 648,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 609,
											"end": 648,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 609,
											"end": 648,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 609,
											"end": 648,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 609,
											"end": 648,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 609,
											"end": 648,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 609,
											"end": 648,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 609,
											"end": 648,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 609,
											"end": 648,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 609,
											"end": 648,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 609,
											"end": 648,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 609,
											"end": 648,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 609,
											"end": 648,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 721,
											"end": 741,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 721,
											"end": 741,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 721,
											"end": 741,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 721,
											"end": 741,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 721,
											"end": 741,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 721,
											"end": 741,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 721,
											"end": 741,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 721,
											"end": 741,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 721,
											"end": 741,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 721,
											"end": 741,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 721,
											"end": 741,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 721,
											"end": 741,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 721,
											"end": 741,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 721,
											"end": 741,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 721,
											"end": 741,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 721,
											"end": 741,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 721,
											"end": 741,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 721,
											"end": 741,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 721,
											"end": 741,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 721,
											"end": 741,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 721,
											"end": 741,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 721,
											"end": 741,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 721,
											"end": 741,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 721,
											"end": 741,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 721,
											"end": 741,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 721,
											"end": 741,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 721,
											"end": 741,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 721,
											"end": 741,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 721,
											"end": 741,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 721,
											"end": 741,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 721,
											"end": 741,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 721,
											"end": 741,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 721,
											"end": 741,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 721,
											"end": 741,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1161,
											"end": 1458,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1161,
											"end": 1458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1161,
											"end": 1458,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1161,
											"end": 1458,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1161,
											"end": 1458,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1161,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1161,
											"end": 1458,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1161,
											"end": 1458,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1161,
											"end": 1458,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1161,
											"end": 1458,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1161,
											"end": 1458,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1161,
											"end": 1458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1161,
											"end": 1458,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1161,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1161,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1161,
											"end": 1458,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1161,
											"end": 1458,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1161,
											"end": 1458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1161,
											"end": 1458,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1692,
											"end": 2479,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1692,
											"end": 2479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1692,
											"end": 2479,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1692,
											"end": 2479,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1692,
											"end": 2479,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1692,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1692,
											"end": 2479,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1692,
											"end": 2479,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1692,
											"end": 2479,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1692,
											"end": 2479,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1692,
											"end": 2479,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1692,
											"end": 2479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1692,
											"end": 2479,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1692,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1692,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1692,
											"end": 2479,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1692,
											"end": 2479,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1692,
											"end": 2479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1692,
											"end": 2479,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 685,
											"end": 714,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 685,
											"end": 714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 685,
											"end": 714,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 685,
											"end": 714,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 685,
											"end": 714,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 685,
											"end": 714,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 685,
											"end": 714,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 685,
											"end": 714,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 685,
											"end": 714,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 685,
											"end": 714,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 685,
											"end": 714,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 685,
											"end": 714,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 685,
											"end": 714,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 685,
											"end": 714,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 685,
											"end": 714,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 838,
											"end": 866,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 838,
											"end": 866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 838,
											"end": 866,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 838,
											"end": 866,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 838,
											"end": 866,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 838,
											"end": 866,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 838,
											"end": 866,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 838,
											"end": 866,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 838,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 838,
											"end": 866,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 838,
											"end": 866,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 838,
											"end": 866,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 838,
											"end": 866,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 838,
											"end": 866,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 838,
											"end": 866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 838,
											"end": 866,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 838,
											"end": 866,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 838,
											"end": 866,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 838,
											"end": 866,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 838,
											"end": 866,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 838,
											"end": 866,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 838,
											"end": 866,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 838,
											"end": 866,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 838,
											"end": 866,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 838,
											"end": 866,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 838,
											"end": 866,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 838,
											"end": 866,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 838,
											"end": 866,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 838,
											"end": 866,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 838,
											"end": 866,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 774,
											"end": 791,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 774,
											"end": 791,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 774,
											"end": 791,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 774,
											"end": 791,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 774,
											"end": 791,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 774,
											"end": 791,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 774,
											"end": 791,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 774,
											"end": 791,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 774,
											"end": 791,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 774,
											"end": 791,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 774,
											"end": 791,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 774,
											"end": 791,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 774,
											"end": 791,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 774,
											"end": 791,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 774,
											"end": 791,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1466,
											"end": 1684,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1466,
											"end": 1684,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1517,
											"end": 1524,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1517,
											"end": 1524,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1517,
											"end": 1524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1517,
											"end": 1524,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1517,
											"end": 1524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1517,
											"end": 1524,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1517,
											"end": 1524,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1517,
											"end": 1524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1517,
											"end": 1524,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1517,
											"end": 1524,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1517,
											"end": 1524,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1509,
											"end": 1540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1509,
											"end": 1540,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1509,
											"end": 1540,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1509,
											"end": 1540,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1509,
											"end": 1540,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1509,
											"end": 1540,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1509,
											"end": 1540,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1509,
											"end": 1540,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1509,
											"end": 1540,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1509,
											"end": 1540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1509,
											"end": 1540,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1509,
											"end": 1540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1509,
											"end": 1540,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1509,
											"end": 1540,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1509,
											"end": 1540,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1509,
											"end": 1540,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1509,
											"end": 1540,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1509,
											"end": 1540,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1509,
											"end": 1540,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1509,
											"end": 1540,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1509,
											"end": 1540,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1509,
											"end": 1540,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1509,
											"end": 1540,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1509,
											"end": 1540,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1577,
											"end": 1582,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1577,
											"end": 1582,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1559,
											"end": 1574,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 1559,
											"end": 1582,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1551,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1551,
											"end": 1592,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1551,
											"end": 1592,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1551,
											"end": 1592,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1551,
											"end": 1592,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1551,
											"end": 1592,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1551,
											"end": 1592,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1551,
											"end": 1592,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1551,
											"end": 1592,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1551,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1551,
											"end": 1592,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1551,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1551,
											"end": 1592,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1551,
											"end": 1592,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1551,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1551,
											"end": 1592,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1551,
											"end": 1592,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1551,
											"end": 1592,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1551,
											"end": 1592,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1551,
											"end": 1592,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1551,
											"end": 1592,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1551,
											"end": 1592,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1551,
											"end": 1592,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1551,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1623,
											"end": 1632,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1607,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1603,
											"end": 1619,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1608,
											"end": 1618,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1619,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1603,
											"end": 1619,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1619,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1603,
											"end": 1619,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1619,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1619,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1619,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1603,
											"end": 1619,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1619,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1619,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1619,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1619,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1603,
											"end": 1619,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1619,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1603,
											"end": 1619,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1619,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1603,
											"end": 1632,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1632,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1632,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1632,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1603,
											"end": 1632,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1632,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1632,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1603,
											"end": 1632,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1603,
											"end": 1632,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1603,
											"end": 1632,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1632,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1632,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1632,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1632,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1632,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1632,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1632,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1654,
											"end": 1664,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1676,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1650,
											"end": 1676,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1676,
											"name": "PUSH",
											"source": 0,
											"value": "E684A55F31B79ECA403DF938249029212A5925EC6BE8012E099B45BC1019E5D2"
										},
										{
											"begin": 1666,
											"end": 1675,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1676,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1650,
											"end": 1676,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1650,
											"end": 1676,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1676,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1650,
											"end": 1676,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1650,
											"end": 1676,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1650,
											"end": 1676,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1676,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1650,
											"end": 1676,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1676,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1676,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1676,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1676,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 1466,
											"end": 1684,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 748,
											"end": 767,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 748,
											"end": 767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 748,
											"end": 767,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 748,
											"end": 767,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 748,
											"end": 767,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 748,
											"end": 767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 748,
											"end": 767,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 748,
											"end": 767,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 748,
											"end": 767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 748,
											"end": 767,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 748,
											"end": 767,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 748,
											"end": 767,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 748,
											"end": 767,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 748,
											"end": 767,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 655,
											"end": 678,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 655,
											"end": 678,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 655,
											"end": 678,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 655,
											"end": 678,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 655,
											"end": 678,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 655,
											"end": 678,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 655,
											"end": 678,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 655,
											"end": 678,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 655,
											"end": 678,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 655,
											"end": 678,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 655,
											"end": 678,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 655,
											"end": 678,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 655,
											"end": 678,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 655,
											"end": 678,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 655,
											"end": 678,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 873,
											"end": 912,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 873,
											"end": 912,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 873,
											"end": 912,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 873,
											"end": 912,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 873,
											"end": 912,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 873,
											"end": 912,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 873,
											"end": 912,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 873,
											"end": 912,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 873,
											"end": 912,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 873,
											"end": 912,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 873,
											"end": 912,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 873,
											"end": 912,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 873,
											"end": 912,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 873,
											"end": 912,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 873,
											"end": 912,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 873,
											"end": 912,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 873,
											"end": 912,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 873,
											"end": 912,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 873,
											"end": 912,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 800,
											"end": 831,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 800,
											"end": 831,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 800,
											"end": 831,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 800,
											"end": 831,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 800,
											"end": 831,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 800,
											"end": 831,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 800,
											"end": 831,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 800,
											"end": 831,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 800,
											"end": 831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 800,
											"end": 831,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 800,
											"end": 831,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 800,
											"end": 831,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 800,
											"end": 831,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 800,
											"end": 831,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 800,
											"end": 831,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 800,
											"end": 831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 800,
											"end": 831,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 800,
											"end": 831,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 800,
											"end": 831,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 800,
											"end": 831,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 800,
											"end": 831,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 800,
											"end": 831,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 800,
											"end": 831,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 800,
											"end": 831,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 800,
											"end": 831,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 800,
											"end": 831,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 800,
											"end": 831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 800,
											"end": 831,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 800,
											"end": 831,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 800,
											"end": 831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 800,
											"end": 831,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 800,
											"end": 831,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 800,
											"end": 831,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 800,
											"end": 831,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 800,
											"end": 831,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 609,
											"end": 648,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 609,
											"end": 648,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 609,
											"end": 648,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 609,
											"end": 648,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 609,
											"end": 648,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 609,
											"end": 648,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 609,
											"end": 648,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 609,
											"end": 648,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 609,
											"end": 648,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 609,
											"end": 648,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 609,
											"end": 648,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 609,
											"end": 648,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 609,
											"end": 648,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 609,
											"end": 648,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 721,
											"end": 741,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 721,
											"end": 741,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 721,
											"end": 741,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 721,
											"end": 741,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 721,
											"end": 741,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 721,
											"end": 741,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1161,
											"end": 1458,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1161,
											"end": 1458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1207,
											"end": 1214,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1207,
											"end": 1214,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 1214,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1207,
											"end": 1214,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1207,
											"end": 1214,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1207,
											"end": 1214,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1207,
											"end": 1214,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1207,
											"end": 1214,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1207,
											"end": 1214,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1207,
											"end": 1214,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1207,
											"end": 1214,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1206,
											"end": 1214,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1198,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1198,
											"end": 1226,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1198,
											"end": 1226,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1198,
											"end": 1226,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1198,
											"end": 1226,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1198,
											"end": 1226,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1198,
											"end": 1226,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1198,
											"end": 1226,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1198,
											"end": 1226,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1198,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1198,
											"end": 1226,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1198,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1198,
											"end": 1226,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1198,
											"end": 1226,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1198,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1198,
											"end": 1226,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1198,
											"end": 1226,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1198,
											"end": 1226,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1198,
											"end": 1226,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1198,
											"end": 1226,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1198,
											"end": 1226,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1198,
											"end": 1226,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1198,
											"end": 1226,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1198,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1265,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1259,
											"end": 1265,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1259,
											"end": 1265,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1265,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1265,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1265,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1259,
											"end": 1265,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1265,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1265,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1265,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1259,
											"end": 1265,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1265,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1245,
											"end": 1265,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1255,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1265,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1245,
											"end": 1265,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1265,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1293,
											"end": 1312,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1293,
											"end": 1312,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1293,
											"end": 1312,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1293,
											"end": 1312,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1293,
											"end": 1312,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1293,
											"end": 1312,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1293,
											"end": 1312,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1293,
											"end": 1312,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1293,
											"end": 1312,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1293,
											"end": 1312,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1293,
											"end": 1325,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1293,
											"end": 1325,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1293,
											"end": 1325,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 1326,
											"end": 1336,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1346,
											"end": 1350,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 1353,
											"end": 1354,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1293,
											"end": 1355,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1293,
											"end": 1355,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1293,
											"end": 1355,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1293,
											"end": 1355,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1293,
											"end": 1355,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1293,
											"end": 1355,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1293,
											"end": 1355,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1293,
											"end": 1355,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1293,
											"end": 1355,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1293,
											"end": 1355,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1293,
											"end": 1355,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1293,
											"end": 1355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1293,
											"end": 1355,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1293,
											"end": 1355,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1293,
											"end": 1355,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1293,
											"end": 1355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1293,
											"end": 1355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1293,
											"end": 1355,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1293,
											"end": 1355,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1293,
											"end": 1355,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1293,
											"end": 1355,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1293,
											"end": 1355,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1293,
											"end": 1355,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1293,
											"end": 1355,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1293,
											"end": 1355,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1293,
											"end": 1355,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1293,
											"end": 1355,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1293,
											"end": 1355,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1293,
											"end": 1355,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 1293,
											"end": 1355,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1293,
											"end": 1355,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 1293,
											"end": 1355,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1293,
											"end": 1355,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1293,
											"end": 1355,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1293,
											"end": 1355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1293,
											"end": 1355,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1293,
											"end": 1355,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1293,
											"end": 1355,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1293,
											"end": 1355,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1293,
											"end": 1355,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1293,
											"end": 1355,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1293,
											"end": 1355,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1293,
											"end": 1355,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 1293,
											"end": 1355,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 1293,
											"end": 1355,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1293,
											"end": 1355,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1293,
											"end": 1355,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1293,
											"end": 1355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1293,
											"end": 1355,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1293,
											"end": 1355,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1293,
											"end": 1355,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1293,
											"end": 1355,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1293,
											"end": 1355,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1293,
											"end": 1355,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1293,
											"end": 1355,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1293,
											"end": 1355,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1293,
											"end": 1355,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1293,
											"end": 1355,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1293,
											"end": 1355,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1293,
											"end": 1355,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1293,
											"end": 1355,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1293,
											"end": 1355,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1378,
											"end": 1382,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1368,
											"end": 1375,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1368,
											"end": 1375,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1368,
											"end": 1382,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1368,
											"end": 1382,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1382,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1382,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1382,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1382,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1368,
											"end": 1382,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1382,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1382,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1382,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1382,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1382,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1382,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1382,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1382,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1382,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1382,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1382,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1419,
											"end": 1425,
											"name": "PUSH",
											"source": 0,
											"value": "93A80"
										},
										{
											"begin": 1401,
											"end": 1416,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 1425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1401,
											"end": 1425,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 1425,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 1425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1401,
											"end": 1425,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1401,
											"end": 1425,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1401,
											"end": 1425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1393,
											"end": 1398,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1393,
											"end": 1425,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1393,
											"end": 1425,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1393,
											"end": 1425,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1393,
											"end": 1425,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 1450,
											"name": "PUSH",
											"source": 0,
											"value": "1B55BA3AA851A46BE3B365AEE5B5C140EDD620D578922F3E8466D2CBD96F954B"
										},
										{
											"begin": 1443,
											"end": 1450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1443,
											"end": 1450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 1450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1443,
											"end": 1450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 1450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 1450,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 1450,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 1450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 1450,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 1161,
											"end": 1458,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1692,
											"end": 2479,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1692,
											"end": 2479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1735,
											"end": 1742,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1735,
											"end": 1742,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1735,
											"end": 1742,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1735,
											"end": 1742,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1735,
											"end": 1742,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1735,
											"end": 1742,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1735,
											"end": 1742,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1735,
											"end": 1742,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1735,
											"end": 1742,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1735,
											"end": 1742,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1735,
											"end": 1742,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1727,
											"end": 1758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1727,
											"end": 1758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1727,
											"end": 1758,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1727,
											"end": 1758,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1727,
											"end": 1758,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1727,
											"end": 1758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1727,
											"end": 1758,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1727,
											"end": 1758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1727,
											"end": 1758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1727,
											"end": 1758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1727,
											"end": 1758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1727,
											"end": 1758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1727,
											"end": 1758,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1727,
											"end": 1758,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1727,
											"end": 1758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1727,
											"end": 1758,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1727,
											"end": 1758,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1727,
											"end": 1758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1727,
											"end": 1758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1727,
											"end": 1758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1727,
											"end": 1758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1727,
											"end": 1758,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1727,
											"end": 1758,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1727,
											"end": 1758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1801,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1796,
											"end": 1801,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1777,
											"end": 1792,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 1777,
											"end": 1801,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1777,
											"end": 1801,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1769,
											"end": 1815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1769,
											"end": 1815,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1769,
											"end": 1815,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1769,
											"end": 1815,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1769,
											"end": 1815,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1769,
											"end": 1815,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1769,
											"end": 1815,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1769,
											"end": 1815,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1769,
											"end": 1815,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1769,
											"end": 1815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1769,
											"end": 1815,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1769,
											"end": 1815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1769,
											"end": 1815,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1769,
											"end": 1815,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1769,
											"end": 1815,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1769,
											"end": 1815,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1769,
											"end": 1815,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1769,
											"end": 1815,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1769,
											"end": 1815,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1769,
											"end": 1815,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1769,
											"end": 1815,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1769,
											"end": 1815,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1769,
											"end": 1815,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1769,
											"end": 1815,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1835,
											"end": 1840,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1835,
											"end": 1840,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1835,
											"end": 1840,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1835,
											"end": 1840,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1835,
											"end": 1840,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1835,
											"end": 1840,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1835,
											"end": 1840,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1835,
											"end": 1840,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1835,
											"end": 1840,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1835,
											"end": 1840,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1835,
											"end": 1840,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1834,
											"end": 1840,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1826,
											"end": 1850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1826,
											"end": 1850,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1826,
											"end": 1850,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1826,
											"end": 1850,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1826,
											"end": 1850,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1826,
											"end": 1850,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1826,
											"end": 1850,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1826,
											"end": 1850,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1826,
											"end": 1850,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1826,
											"end": 1850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1826,
											"end": 1850,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1826,
											"end": 1850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1826,
											"end": 1850,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1826,
											"end": 1850,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1826,
											"end": 1850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1826,
											"end": 1850,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1826,
											"end": 1850,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1826,
											"end": 1850,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1826,
											"end": 1850,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1826,
											"end": 1850,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1826,
											"end": 1850,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1826,
											"end": 1850,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1826,
											"end": 1850,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1826,
											"end": 1850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1871,
											"end": 1875,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1863,
											"end": 1868,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1863,
											"end": 1868,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1863,
											"end": 1875,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1863,
											"end": 1875,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1863,
											"end": 1875,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1863,
											"end": 1875,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1863,
											"end": 1875,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1863,
											"end": 1875,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1863,
											"end": 1875,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1863,
											"end": 1875,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1863,
											"end": 1875,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1863,
											"end": 1875,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1863,
											"end": 1875,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1863,
											"end": 1875,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1863,
											"end": 1875,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1863,
											"end": 1875,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1863,
											"end": 1875,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1863,
											"end": 1875,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1863,
											"end": 1875,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1863,
											"end": 1875,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1931,
											"end": 1956,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1976,
											"end": 1984,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1971,
											"end": 2093,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1971,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1994,
											"end": 2008,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1994,
											"end": 2015,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1994,
											"end": 2015,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1994,
											"end": 2015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1994,
											"end": 2015,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 1991,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1971,
											"end": 2093,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1971,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1971,
											"end": 2093,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2058,
											"end": 2062,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2058,
											"end": 2081,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2063,
											"end": 2077,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2078,
											"end": 2079,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2080,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2063,
											"end": 2080,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2080,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2080,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2080,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2080,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2063,
											"end": 2080,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2063,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2063,
											"end": 2080,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2063,
											"end": 2080,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2063,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2080,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2063,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2080,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2080,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2063,
											"end": 2080,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2080,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2063,
											"end": 2080,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2063,
											"end": 2080,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2080,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2080,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2063,
											"end": 2080,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2080,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2080,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2080,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2063,
											"end": 2080,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2080,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2080,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2080,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2063,
											"end": 2080,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2058,
											"end": 2081,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2058,
											"end": 2081,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2058,
											"end": 2081,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2058,
											"end": 2081,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2058,
											"end": 2081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2058,
											"end": 2081,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2058,
											"end": 2081,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2058,
											"end": 2081,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2058,
											"end": 2081,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2058,
											"end": 2081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2058,
											"end": 2081,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2058,
											"end": 2081,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2058,
											"end": 2081,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2058,
											"end": 2081,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2058,
											"end": 2081,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2058,
											"end": 2081,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2037,
											"end": 2081,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2037,
											"end": 2081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2037,
											"end": 2081,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2037,
											"end": 2081,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2037,
											"end": 2081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2037,
											"end": 2081,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2037,
											"end": 2081,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2037,
											"end": 2081,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2037,
											"end": 2081,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2037,
											"end": 2081,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2017,
											"end": 2020,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2017,
											"end": 2020,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2017,
											"end": 2020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2017,
											"end": 2020,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2017,
											"end": 2020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2017,
											"end": 2020,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2017,
											"end": 2020,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2017,
											"end": 2020,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2017,
											"end": 2020,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2017,
											"end": 2020,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2017,
											"end": 2020,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1971,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1971,
											"end": 2093,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1971,
											"end": 2093,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1971,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1971,
											"end": 2093,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2132,
											"end": 2133,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2107,
											"end": 2121,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2107,
											"end": 2128,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2107,
											"end": 2128,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2107,
											"end": 2128,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2107,
											"end": 2128,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2107,
											"end": 2133,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2103,
											"end": 2422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2103,
											"end": 2422,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2155,
											"end": 2163,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2150,
											"end": 2411,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2150,
											"end": 2411,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2187,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2173,
											"end": 2194,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2194,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2194,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2194,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2170,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2194,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2194,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2194,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2150,
											"end": 2411,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2150,
											"end": 2411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2150,
											"end": 2411,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2239,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2220,
											"end": 2239,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2239,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2239,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2239,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2220,
											"end": 2239,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2239,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2239,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2239,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2220,
											"end": 2239,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2256,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2220,
											"end": 2256,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2256,
											"name": "PUSH",
											"source": 0,
											"value": "42842E0E"
										},
										{
											"begin": 2287,
											"end": 2291,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 2315,
											"end": 2329,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2330,
											"end": 2331,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2315,
											"end": 2332,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2315,
											"end": 2332,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2315,
											"end": 2332,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2315,
											"end": 2332,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2315,
											"end": 2332,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2315,
											"end": 2332,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2315,
											"end": 2332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2315,
											"end": 2332,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2315,
											"end": 2332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2315,
											"end": 2332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2315,
											"end": 2332,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2315,
											"end": 2332,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2315,
											"end": 2332,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2315,
											"end": 2332,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2315,
											"end": 2332,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2315,
											"end": 2332,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2315,
											"end": 2332,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2315,
											"end": 2332,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2315,
											"end": 2332,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2315,
											"end": 2332,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2315,
											"end": 2332,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2315,
											"end": 2332,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2315,
											"end": 2332,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2315,
											"end": 2332,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2315,
											"end": 2332,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2315,
											"end": 2332,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2315,
											"end": 2332,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2315,
											"end": 2332,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2315,
											"end": 2332,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2315,
											"end": 2332,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2315,
											"end": 2332,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2315,
											"end": 2332,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2359,
											"end": 2376,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2355,
											"end": 2356,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2355,
											"end": 2376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2355,
											"end": 2376,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2355,
											"end": 2376,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2355,
											"end": 2376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2355,
											"end": 2376,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2355,
											"end": 2376,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2355,
											"end": 2376,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2220,
											"end": 2395,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2395,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2220,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 2220,
											"end": 2395,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2395,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2220,
											"end": 2395,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2395,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2220,
											"end": 2395,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2395,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2395,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2395,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 2220,
											"end": 2395,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2220,
											"end": 2395,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2220,
											"end": 2395,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2220,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2220,
											"end": 2395,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2395,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2395,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2220,
											"end": 2395,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2395,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2395,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2395,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2395,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2395,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2395,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 2220,
											"end": 2395,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2220,
											"end": 2395,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2395,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2395,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 2220,
											"end": 2395,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2395,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2395,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2395,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2395,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2395,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2395,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2395,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2220,
											"end": 2395,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2395,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2220,
											"end": 2395,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2395,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2395,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2220,
											"end": 2395,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2395,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2220,
											"end": 2395,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2395,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2395,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2395,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2395,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2199,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2199,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2196,
											"end": 2199,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2196,
											"end": 2199,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2196,
											"end": 2199,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2196,
											"end": 2199,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2199,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2199,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2199,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2150,
											"end": 2411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2150,
											"end": 2411,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2150,
											"end": 2411,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2150,
											"end": 2411,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2150,
											"end": 2411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2103,
											"end": 2422,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2103,
											"end": 2422,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2439,
											"end": 2471,
											"name": "PUSH",
											"source": 0,
											"value": "D629DB0AB1E7A966B4F646BCD3CE5AE4A0B2C91819E7CA456F3064C7AF6B8233"
										},
										{
											"begin": 2443,
											"end": 2457,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2459,
											"end": 2470,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2439,
											"end": 2471,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2439,
											"end": 2471,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2439,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 2439,
											"end": 2471,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2439,
											"end": 2471,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2439,
											"end": 2471,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2439,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2439,
											"end": 2471,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2439,
											"end": 2471,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 2439,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2439,
											"end": 2471,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2439,
											"end": 2471,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2439,
											"end": 2471,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2439,
											"end": 2471,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2439,
											"end": 2471,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2439,
											"end": 2471,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2439,
											"end": 2471,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 1716,
											"end": 2479,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1692,
											"end": 2479,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 139,
											"end": 243,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 139,
											"end": 243,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 184,
											"end": 191,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 213,
											"end": 237,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 231,
											"end": 236,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 213,
											"end": 237,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 213,
											"end": 237,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 213,
											"end": 237,
											"name": "tag",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 213,
											"end": 237,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 202,
											"end": 237,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 202,
											"end": 237,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 139,
											"end": 243,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 139,
											"end": 243,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 139,
											"end": 243,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 139,
											"end": 243,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 249,
											"end": 391,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 249,
											"end": 391,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 352,
											"end": 384,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 378,
											"end": 383,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 352,
											"end": 384,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 352,
											"end": 384,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 352,
											"end": 384,
											"name": "tag",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 352,
											"end": 384,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 347,
											"end": 350,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 340,
											"end": 385,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 249,
											"end": 391,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 249,
											"end": 391,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 249,
											"end": 391,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 397,
											"end": 651,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 397,
											"end": 651,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 506,
											"end": 510,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 544,
											"end": 546,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 533,
											"end": 542,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 529,
											"end": 547,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 521,
											"end": 547,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 521,
											"end": 547,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 557,
											"end": 644,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 641,
											"end": 642,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 630,
											"end": 639,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 626,
											"end": 643,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 617,
											"end": 623,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 557,
											"end": 644,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 557,
											"end": 644,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 557,
											"end": 644,
											"name": "tag",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 557,
											"end": 644,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 397,
											"end": 651,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 397,
											"end": 651,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 397,
											"end": 651,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 397,
											"end": 651,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 397,
											"end": 651,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 738,
											"end": 855,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 738,
											"end": 855,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 847,
											"end": 848,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 844,
											"end": 845,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 837,
											"end": 849,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 984,
											"end": 1061,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 984,
											"end": 1061,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1021,
											"end": 1028,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1050,
											"end": 1055,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1039,
											"end": 1055,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1039,
											"end": 1055,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 984,
											"end": 1061,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 984,
											"end": 1061,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 984,
											"end": 1061,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 984,
											"end": 1061,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1067,
											"end": 1189,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 1067,
											"end": 1189,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1140,
											"end": 1164,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 1158,
											"end": 1163,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1140,
											"end": 1164,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 1140,
											"end": 1164,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1140,
											"end": 1164,
											"name": "tag",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 1140,
											"end": 1164,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1133,
											"end": 1138,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1130,
											"end": 1165,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1120,
											"end": 1183,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 1120,
											"end": 1183,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1179,
											"end": 1180,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1176,
											"end": 1177,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1169,
											"end": 1181,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1120,
											"end": 1183,
											"name": "tag",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 1120,
											"end": 1183,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1067,
											"end": 1189,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1067,
											"end": 1189,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1195,
											"end": 1334,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 1195,
											"end": 1334,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1241,
											"end": 1246,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1279,
											"end": 1285,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1266,
											"end": 1286,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1257,
											"end": 1286,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1257,
											"end": 1286,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1295,
											"end": 1328,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 1322,
											"end": 1327,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1295,
											"end": 1328,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 1295,
											"end": 1328,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1295,
											"end": 1328,
											"name": "tag",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 1295,
											"end": 1328,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1195,
											"end": 1334,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1195,
											"end": 1334,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1195,
											"end": 1334,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1195,
											"end": 1334,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1195,
											"end": 1334,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1340,
											"end": 1669,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1340,
											"end": 1669,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1405,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1448,
											"end": 1450,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1436,
											"end": 1445,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1434,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1423,
											"end": 1446,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1419,
											"end": 1451,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1416,
											"end": 1535,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1416,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 1416,
											"end": 1535,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1533,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 1454,
											"end": 1533,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 1454,
											"end": 1533,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1454,
											"end": 1533,
											"name": "tag",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 1454,
											"end": 1533,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1416,
											"end": 1535,
											"name": "tag",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 1416,
											"end": 1535,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1574,
											"end": 1575,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1599,
											"end": 1652,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 1644,
											"end": 1651,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1635,
											"end": 1641,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1624,
											"end": 1633,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1620,
											"end": 1642,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1599,
											"end": 1652,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 1599,
											"end": 1652,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1599,
											"end": 1652,
											"name": "tag",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 1599,
											"end": 1652,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1589,
											"end": 1652,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1589,
											"end": 1652,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1545,
											"end": 1662,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1340,
											"end": 1669,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1340,
											"end": 1669,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1340,
											"end": 1669,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1340,
											"end": 1669,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1340,
											"end": 1669,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1675,
											"end": 1793,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 1675,
											"end": 1793,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1762,
											"end": 1786,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 1780,
											"end": 1785,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1762,
											"end": 1786,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 1762,
											"end": 1786,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1762,
											"end": 1786,
											"name": "tag",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 1762,
											"end": 1786,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1757,
											"end": 1760,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1787,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1675,
											"end": 1793,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1675,
											"end": 1793,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1675,
											"end": 1793,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1799,
											"end": 2021,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1799,
											"end": 2021,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1892,
											"end": 1896,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1930,
											"end": 1932,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1919,
											"end": 1928,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1915,
											"end": 1933,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1933,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1933,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 2014,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 2011,
											"end": 2012,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1996,
											"end": 2013,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 1993,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 2014,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 1943,
											"end": 2014,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1943,
											"end": 2014,
											"name": "tag",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 1943,
											"end": 2014,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1799,
											"end": 2021,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1799,
											"end": 2021,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1799,
											"end": 2021,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1799,
											"end": 2021,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1799,
											"end": 2021,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2027,
											"end": 2117,
											"name": "tag",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 2027,
											"end": 2117,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2068,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2104,
											"end": 2109,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2097,
											"end": 2110,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2090,
											"end": 2111,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2079,
											"end": 2111,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2079,
											"end": 2111,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2027,
											"end": 2117,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2027,
											"end": 2117,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2027,
											"end": 2117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2027,
											"end": 2117,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2123,
											"end": 2232,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 2123,
											"end": 2232,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2204,
											"end": 2225,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 2219,
											"end": 2224,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2204,
											"end": 2225,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 2204,
											"end": 2225,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2204,
											"end": 2225,
											"name": "tag",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 2204,
											"end": 2225,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2199,
											"end": 2202,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2192,
											"end": 2226,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2123,
											"end": 2232,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2123,
											"end": 2232,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2123,
											"end": 2232,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2238,
											"end": 2448,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2238,
											"end": 2448,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2325,
											"end": 2329,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2363,
											"end": 2365,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2352,
											"end": 2361,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2366,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2340,
											"end": 2366,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2340,
											"end": 2366,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2376,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 2438,
											"end": 2439,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2427,
											"end": 2436,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2423,
											"end": 2440,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2414,
											"end": 2420,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2376,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 2376,
											"end": 2441,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2376,
											"end": 2441,
											"name": "tag",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 2376,
											"end": 2441,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2448,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2448,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2448,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2448,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2448,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2454,
											"end": 2555,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 2454,
											"end": 2555,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2490,
											"end": 2497,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2530,
											"end": 2548,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2523,
											"end": 2528,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2519,
											"end": 2549,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2508,
											"end": 2549,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2508,
											"end": 2549,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2454,
											"end": 2555,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2454,
											"end": 2555,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2454,
											"end": 2555,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2454,
											"end": 2555,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2561,
											"end": 2676,
											"name": "tag",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 2561,
											"end": 2676,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2646,
											"end": 2669,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 2663,
											"end": 2668,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2646,
											"end": 2669,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 2646,
											"end": 2669,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2646,
											"end": 2669,
											"name": "tag",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 2646,
											"end": 2669,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2641,
											"end": 2644,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2634,
											"end": 2670,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2676,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2676,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2676,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2682,
											"end": 2900,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2682,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2773,
											"end": 2777,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2811,
											"end": 2813,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2800,
											"end": 2809,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2796,
											"end": 2814,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2788,
											"end": 2814,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2788,
											"end": 2814,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2824,
											"end": 2893,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 2890,
											"end": 2891,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2879,
											"end": 2888,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2875,
											"end": 2892,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2866,
											"end": 2872,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2824,
											"end": 2893,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 2824,
											"end": 2893,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2824,
											"end": 2893,
											"name": "tag",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 2824,
											"end": 2893,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2682,
											"end": 2900,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2682,
											"end": 2900,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2682,
											"end": 2900,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2682,
											"end": 2900,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2682,
											"end": 2900,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2906,
											"end": 3002,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 2906,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2943,
											"end": 2950,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2972,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 2990,
											"end": 2995,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2972,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 2972,
											"end": 2996,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2972,
											"end": 2996,
											"name": "tag",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 2972,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2961,
											"end": 2996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2961,
											"end": 2996,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2906,
											"end": 3002,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2906,
											"end": 3002,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2906,
											"end": 3002,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2906,
											"end": 3002,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3008,
											"end": 3130,
											"name": "tag",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 3008,
											"end": 3130,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3081,
											"end": 3105,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 3099,
											"end": 3104,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3081,
											"end": 3105,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 3081,
											"end": 3105,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3081,
											"end": 3105,
											"name": "tag",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 3081,
											"end": 3105,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3074,
											"end": 3079,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3071,
											"end": 3106,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3061,
											"end": 3124,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 3061,
											"end": 3124,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3120,
											"end": 3121,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3117,
											"end": 3118,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3110,
											"end": 3122,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3061,
											"end": 3124,
											"name": "tag",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 3061,
											"end": 3124,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3130,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3130,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3136,
											"end": 3275,
											"name": "tag",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 3136,
											"end": 3275,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3182,
											"end": 3187,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3220,
											"end": 3226,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3207,
											"end": 3227,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 3198,
											"end": 3227,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3198,
											"end": 3227,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3236,
											"end": 3269,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 3263,
											"end": 3268,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3236,
											"end": 3269,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 3236,
											"end": 3269,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3236,
											"end": 3269,
											"name": "tag",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 3236,
											"end": 3269,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3136,
											"end": 3275,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3136,
											"end": 3275,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3136,
											"end": 3275,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3136,
											"end": 3275,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3136,
											"end": 3275,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3281,
											"end": 3610,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3281,
											"end": 3610,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3340,
											"end": 3346,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3389,
											"end": 3391,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3377,
											"end": 3386,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3368,
											"end": 3375,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3364,
											"end": 3387,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3360,
											"end": 3392,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 3357,
											"end": 3476,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3357,
											"end": 3476,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 3357,
											"end": 3476,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3395,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 3395,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 3395,
											"end": 3474,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3395,
											"end": 3474,
											"name": "tag",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 3395,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3357,
											"end": 3476,
											"name": "tag",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 3357,
											"end": 3476,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3515,
											"end": 3516,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3540,
											"end": 3593,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 3585,
											"end": 3592,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3576,
											"end": 3582,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3565,
											"end": 3574,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3583,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3540,
											"end": 3593,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 3540,
											"end": 3593,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3540,
											"end": 3593,
											"name": "tag",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 3540,
											"end": 3593,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3530,
											"end": 3593,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3530,
											"end": 3593,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3486,
											"end": 3603,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3281,
											"end": 3610,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3281,
											"end": 3610,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3281,
											"end": 3610,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3281,
											"end": 3610,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3281,
											"end": 3610,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3616,
											"end": 3734,
											"name": "tag",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 3616,
											"end": 3734,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3703,
											"end": 3727,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 3721,
											"end": 3726,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3703,
											"end": 3727,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 3703,
											"end": 3727,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3703,
											"end": 3727,
											"name": "tag",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 3703,
											"end": 3727,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3698,
											"end": 3701,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3691,
											"end": 3728,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3616,
											"end": 3734,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3616,
											"end": 3734,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3616,
											"end": 3734,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3740,
											"end": 3962,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 3740,
											"end": 3962,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3833,
											"end": 3837,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3871,
											"end": 3873,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3860,
											"end": 3869,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3856,
											"end": 3874,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3848,
											"end": 3874,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3848,
											"end": 3874,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3884,
											"end": 3955,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 3952,
											"end": 3953,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3950,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3937,
											"end": 3954,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 3934,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3884,
											"end": 3955,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 3884,
											"end": 3955,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3884,
											"end": 3955,
											"name": "tag",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 3884,
											"end": 3955,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3962,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3962,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3962,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3962,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3962,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3968,
											"end": 4028,
											"name": "tag",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 3968,
											"end": 4028,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3996,
											"end": 3999,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4017,
											"end": 4022,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4010,
											"end": 4022,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4010,
											"end": 4022,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3968,
											"end": 4028,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3968,
											"end": 4028,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3968,
											"end": 4028,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3968,
											"end": 4028,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4034,
											"end": 4176,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 4034,
											"end": 4176,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4084,
											"end": 4093,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4117,
											"end": 4170,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 4135,
											"end": 4169,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 4144,
											"end": 4168,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 4162,
											"end": 4167,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4144,
											"end": 4168,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 4144,
											"end": 4168,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4144,
											"end": 4168,
											"name": "tag",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 4144,
											"end": 4168,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4135,
											"end": 4169,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 4135,
											"end": 4169,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4135,
											"end": 4169,
											"name": "tag",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 4135,
											"end": 4169,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4117,
											"end": 4170,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 4117,
											"end": 4170,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4117,
											"end": 4170,
											"name": "tag",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 4117,
											"end": 4170,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4104,
											"end": 4170,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4104,
											"end": 4170,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4034,
											"end": 4176,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4034,
											"end": 4176,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4034,
											"end": 4176,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4034,
											"end": 4176,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4182,
											"end": 4308,
											"name": "tag",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 4182,
											"end": 4308,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4232,
											"end": 4241,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4265,
											"end": 4302,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 4296,
											"end": 4301,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4302,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 4265,
											"end": 4302,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4265,
											"end": 4302,
											"name": "tag",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 4265,
											"end": 4302,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4252,
											"end": 4302,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4252,
											"end": 4302,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4182,
											"end": 4308,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4182,
											"end": 4308,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4182,
											"end": 4308,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4182,
											"end": 4308,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4314,
											"end": 4459,
											"name": "tag",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 4314,
											"end": 4459,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4383,
											"end": 4392,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4416,
											"end": 4453,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 4447,
											"end": 4452,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4416,
											"end": 4453,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 4416,
											"end": 4453,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4416,
											"end": 4453,
											"name": "tag",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 4416,
											"end": 4453,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4453,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4453,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4314,
											"end": 4459,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4314,
											"end": 4459,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4314,
											"end": 4459,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4314,
											"end": 4459,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4465,
											"end": 4634,
											"name": "tag",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 4465,
											"end": 4634,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4571,
											"end": 4627,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 4621,
											"end": 4626,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4571,
											"end": 4627,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 4571,
											"end": 4627,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4571,
											"end": 4627,
											"name": "tag",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 4571,
											"end": 4627,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4566,
											"end": 4569,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4559,
											"end": 4628,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4465,
											"end": 4634,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4465,
											"end": 4634,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4465,
											"end": 4634,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4640,
											"end": 4900,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 4640,
											"end": 4900,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4752,
											"end": 4756,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4790,
											"end": 4792,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4779,
											"end": 4788,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4775,
											"end": 4793,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4767,
											"end": 4793,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4767,
											"end": 4793,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4803,
											"end": 4893,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 4890,
											"end": 4891,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4879,
											"end": 4888,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4875,
											"end": 4892,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4866,
											"end": 4872,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4803,
											"end": 4893,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 4803,
											"end": 4893,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4803,
											"end": 4893,
											"name": "tag",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 4803,
											"end": 4893,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4640,
											"end": 4900,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4640,
											"end": 4900,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4640,
											"end": 4900,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4640,
											"end": 4900,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4640,
											"end": 4900,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4906,
											"end": 5075,
											"name": "tag",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 4906,
											"end": 5075,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4990,
											"end": 5001,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5024,
											"end": 5030,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5019,
											"end": 5022,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5012,
											"end": 5031,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5064,
											"end": 5068,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5059,
											"end": 5062,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5055,
											"end": 5069,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5040,
											"end": 5069,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5040,
											"end": 5069,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4906,
											"end": 5075,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4906,
											"end": 5075,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4906,
											"end": 5075,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4906,
											"end": 5075,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4906,
											"end": 5075,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5081,
											"end": 5242,
											"name": "tag",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 5081,
											"end": 5242,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5221,
											"end": 5234,
											"name": "PUSH",
											"source": 2,
											"value": "6E6F742073746172746564000000000000000000000000000000000000000000"
										},
										{
											"begin": 5217,
											"end": 5218,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5209,
											"end": 5215,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5205,
											"end": 5219,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5198,
											"end": 5235,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5081,
											"end": 5242,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5081,
											"end": 5242,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5248,
											"end": 5614,
											"name": "tag",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 5248,
											"end": 5614,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5390,
											"end": 5393,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5411,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 5475,
											"end": 5477,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 5470,
											"end": 5473,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5411,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 5411,
											"end": 5478,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5411,
											"end": 5478,
											"name": "tag",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 5411,
											"end": 5478,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5404,
											"end": 5478,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5404,
											"end": 5478,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5487,
											"end": 5580,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 5576,
											"end": 5579,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5487,
											"end": 5580,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 5487,
											"end": 5580,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5487,
											"end": 5580,
											"name": "tag",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 5487,
											"end": 5580,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5605,
											"end": 5607,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5600,
											"end": 5603,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5596,
											"end": 5608,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5608,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5248,
											"end": 5614,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5248,
											"end": 5614,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5248,
											"end": 5614,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5248,
											"end": 5614,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5620,
											"end": 6039,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 5620,
											"end": 6039,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5786,
											"end": 5790,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5824,
											"end": 5826,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5813,
											"end": 5822,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5809,
											"end": 5827,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5801,
											"end": 5827,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5801,
											"end": 5827,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5882,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5867,
											"end": 5871,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5863,
											"end": 5883,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5859,
											"end": 5860,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5848,
											"end": 5857,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5844,
											"end": 5861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5837,
											"end": 5884,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5901,
											"end": 6032,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 6027,
											"end": 6031,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5901,
											"end": 6032,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 5901,
											"end": 6032,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5901,
											"end": 6032,
											"name": "tag",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 5901,
											"end": 6032,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5893,
											"end": 6032,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5893,
											"end": 6032,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5620,
											"end": 6039,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5620,
											"end": 6039,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5620,
											"end": 6039,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5620,
											"end": 6039,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 6045,
											"end": 6200,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 6045,
											"end": 6200,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6185,
											"end": 6192,
											"name": "PUSH",
											"source": 2,
											"value": "656E646564000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6181,
											"end": 6182,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6173,
											"end": 6179,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6169,
											"end": 6183,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6162,
											"end": 6193,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6045,
											"end": 6200,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6045,
											"end": 6200,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 6206,
											"end": 6571,
											"name": "tag",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 6206,
											"end": 6571,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6348,
											"end": 6351,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6369,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 6433,
											"end": 6434,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 6428,
											"end": 6431,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6369,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 6369,
											"end": 6435,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6369,
											"end": 6435,
											"name": "tag",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 6369,
											"end": 6435,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6435,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6435,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6444,
											"end": 6537,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 6533,
											"end": 6536,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6444,
											"end": 6537,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 6444,
											"end": 6537,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6444,
											"end": 6537,
											"name": "tag",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 6444,
											"end": 6537,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6562,
											"end": 6564,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6557,
											"end": 6560,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6553,
											"end": 6565,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6546,
											"end": 6565,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6546,
											"end": 6565,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6206,
											"end": 6571,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6206,
											"end": 6571,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6206,
											"end": 6571,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6206,
											"end": 6571,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 6577,
											"end": 6996,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 6577,
											"end": 6996,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6743,
											"end": 6747,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6781,
											"end": 6783,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6770,
											"end": 6779,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6766,
											"end": 6784,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6758,
											"end": 6784,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6758,
											"end": 6784,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6830,
											"end": 6839,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6824,
											"end": 6828,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6820,
											"end": 6840,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6816,
											"end": 6817,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6805,
											"end": 6814,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6801,
											"end": 6818,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6794,
											"end": 6841,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6858,
											"end": 6989,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 6984,
											"end": 6988,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6858,
											"end": 6989,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 6858,
											"end": 6989,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6858,
											"end": 6989,
											"name": "tag",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 6858,
											"end": 6989,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6850,
											"end": 6989,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6850,
											"end": 6989,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6577,
											"end": 6996,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6577,
											"end": 6996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6577,
											"end": 6996,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6577,
											"end": 6996,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7002,
											"end": 7182,
											"name": "tag",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 7002,
											"end": 7182,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7050,
											"end": 7127,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7047,
											"end": 7048,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7040,
											"end": 7128,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7147,
											"end": 7151,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 7144,
											"end": 7145,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7137,
											"end": 7152,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7171,
											"end": 7175,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 7168,
											"end": 7169,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7161,
											"end": 7176,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7188,
											"end": 7493,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 7188,
											"end": 7493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7228,
											"end": 7231,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7247,
											"end": 7267,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 7265,
											"end": 7266,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7247,
											"end": 7267,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 7247,
											"end": 7267,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7247,
											"end": 7267,
											"name": "tag",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 7247,
											"end": 7267,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7242,
											"end": 7267,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7242,
											"end": 7267,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7281,
											"end": 7301,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 7299,
											"end": 7300,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7281,
											"end": 7301,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 7281,
											"end": 7301,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7281,
											"end": 7301,
											"name": "tag",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 7281,
											"end": 7301,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7435,
											"end": 7436,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7367,
											"end": 7433,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7363,
											"end": 7437,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7360,
											"end": 7361,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7357,
											"end": 7438,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 7354,
											"end": 7461,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7354,
											"end": 7461,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 7354,
											"end": 7461,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7441,
											"end": 7459,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 7441,
											"end": 7459,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 7441,
											"end": 7459,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7441,
											"end": 7459,
											"name": "tag",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 7441,
											"end": 7459,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7354,
											"end": 7461,
											"name": "tag",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 7354,
											"end": 7461,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7485,
											"end": 7486,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7482,
											"end": 7483,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7478,
											"end": 7487,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7471,
											"end": 7487,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7471,
											"end": 7487,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7188,
											"end": 7493,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7188,
											"end": 7493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7188,
											"end": 7493,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7188,
											"end": 7493,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7188,
											"end": 7493,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7499,
											"end": 7656,
											"name": "tag",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 7499,
											"end": 7656,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7639,
											"end": 7648,
											"name": "PUSH",
											"source": 2,
											"value": "7374617274656400000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7635,
											"end": 7636,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7627,
											"end": 7633,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7623,
											"end": 7637,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7616,
											"end": 7649,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7499,
											"end": 7656,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7499,
											"end": 7656,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7662,
											"end": 8027,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 7662,
											"end": 8027,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7804,
											"end": 7807,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7825,
											"end": 7891,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "276"
										},
										{
											"begin": 7889,
											"end": 7890,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 7884,
											"end": 7887,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7825,
											"end": 7891,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 7825,
											"end": 7891,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7825,
											"end": 7891,
											"name": "tag",
											"source": 2,
											"value": "276"
										},
										{
											"begin": 7825,
											"end": 7891,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7818,
											"end": 7891,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7818,
											"end": 7891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7900,
											"end": 7993,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 7989,
											"end": 7992,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7900,
											"end": 7993,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 7900,
											"end": 7993,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7900,
											"end": 7993,
											"name": "tag",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 7900,
											"end": 7993,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8018,
											"end": 8020,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8013,
											"end": 8016,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8009,
											"end": 8021,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8002,
											"end": 8021,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8002,
											"end": 8021,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7662,
											"end": 8027,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7662,
											"end": 8027,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7662,
											"end": 8027,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7662,
											"end": 8027,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 8033,
											"end": 8452,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 8033,
											"end": 8452,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8199,
											"end": 8203,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8237,
											"end": 8239,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8226,
											"end": 8235,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8222,
											"end": 8240,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8214,
											"end": 8240,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8214,
											"end": 8240,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8286,
											"end": 8295,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8280,
											"end": 8284,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8276,
											"end": 8296,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8272,
											"end": 8273,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8261,
											"end": 8270,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8257,
											"end": 8274,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8250,
											"end": 8297,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8314,
											"end": 8445,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 8440,
											"end": 8444,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8314,
											"end": 8445,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 8314,
											"end": 8445,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8314,
											"end": 8445,
											"name": "tag",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 8314,
											"end": 8445,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8306,
											"end": 8445,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8306,
											"end": 8445,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8033,
											"end": 8452,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8033,
											"end": 8452,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8033,
											"end": 8452,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8033,
											"end": 8452,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 8458,
											"end": 8618,
											"name": "tag",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 8458,
											"end": 8618,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8598,
											"end": 8610,
											"name": "PUSH",
											"source": 2,
											"value": "6E6F742073656C6C657200000000000000000000000000000000000000000000"
										},
										{
											"begin": 8594,
											"end": 8595,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8586,
											"end": 8592,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8582,
											"end": 8596,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8575,
											"end": 8611,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8458,
											"end": 8618,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8458,
											"end": 8618,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 8624,
											"end": 8990,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 8624,
											"end": 8990,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8766,
											"end": 8769,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8787,
											"end": 8854,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 8851,
											"end": 8853,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 8846,
											"end": 8849,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8787,
											"end": 8854,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 8787,
											"end": 8854,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8787,
											"end": 8854,
											"name": "tag",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 8787,
											"end": 8854,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8780,
											"end": 8854,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8780,
											"end": 8854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8863,
											"end": 8956,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "283"
										},
										{
											"begin": 8952,
											"end": 8955,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8863,
											"end": 8956,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 8863,
											"end": 8956,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8863,
											"end": 8956,
											"name": "tag",
											"source": 2,
											"value": "283"
										},
										{
											"begin": 8863,
											"end": 8956,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8981,
											"end": 8983,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8976,
											"end": 8979,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8972,
											"end": 8984,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8965,
											"end": 8984,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8965,
											"end": 8984,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8624,
											"end": 8990,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8624,
											"end": 8990,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8624,
											"end": 8990,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8624,
											"end": 8990,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 8996,
											"end": 9415,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 8996,
											"end": 9415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9162,
											"end": 9166,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9200,
											"end": 9202,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9189,
											"end": 9198,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9185,
											"end": 9203,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9177,
											"end": 9203,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9177,
											"end": 9203,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9249,
											"end": 9258,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9243,
											"end": 9247,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9239,
											"end": 9259,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9235,
											"end": 9236,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9224,
											"end": 9233,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9220,
											"end": 9237,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9213,
											"end": 9260,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9277,
											"end": 9408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "285"
										},
										{
											"begin": 9403,
											"end": 9407,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9277,
											"end": 9408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 9277,
											"end": 9408,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9277,
											"end": 9408,
											"name": "tag",
											"source": 2,
											"value": "285"
										},
										{
											"begin": 9277,
											"end": 9408,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9269,
											"end": 9408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9269,
											"end": 9408,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8996,
											"end": 9415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8996,
											"end": 9415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8996,
											"end": 9415,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8996,
											"end": 9415,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 9421,
											"end": 9506,
											"name": "tag",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 9421,
											"end": 9506,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9466,
											"end": 9473,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9495,
											"end": 9500,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9484,
											"end": 9500,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9484,
											"end": 9500,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9421,
											"end": 9506,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9421,
											"end": 9506,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9421,
											"end": 9506,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9421,
											"end": 9506,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 9512,
											"end": 9670,
											"name": "tag",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 9512,
											"end": 9670,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9570,
											"end": 9579,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9603,
											"end": 9664,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "288"
										},
										{
											"begin": 9621,
											"end": 9663,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 9630,
											"end": 9662,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 9656,
											"end": 9661,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9630,
											"end": 9662,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 9630,
											"end": 9662,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9630,
											"end": 9662,
											"name": "tag",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 9630,
											"end": 9662,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9621,
											"end": 9663,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 9621,
											"end": 9663,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9621,
											"end": 9663,
											"name": "tag",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 9621,
											"end": 9663,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9603,
											"end": 9664,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 9603,
											"end": 9664,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9603,
											"end": 9664,
											"name": "tag",
											"source": 2,
											"value": "288"
										},
										{
											"begin": 9603,
											"end": 9664,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9590,
											"end": 9664,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9590,
											"end": 9664,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9512,
											"end": 9670,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9512,
											"end": 9670,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9512,
											"end": 9670,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9512,
											"end": 9670,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 9676,
											"end": 9823,
											"name": "tag",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 9676,
											"end": 9823,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9771,
											"end": 9816,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "292"
										},
										{
											"begin": 9810,
											"end": 9815,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9771,
											"end": 9816,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 9771,
											"end": 9816,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9771,
											"end": 9816,
											"name": "tag",
											"source": 2,
											"value": "292"
										},
										{
											"begin": 9771,
											"end": 9816,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9766,
											"end": 9769,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9817,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9676,
											"end": 9823,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9676,
											"end": 9823,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9676,
											"end": 9823,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 9829,
											"end": 10287,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 9829,
											"end": 10287,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9986,
											"end": 9990,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10024,
											"end": 10026,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 10013,
											"end": 10022,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10009,
											"end": 10027,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10001,
											"end": 10027,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10001,
											"end": 10027,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10037,
											"end": 10108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 10105,
											"end": 10106,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10094,
											"end": 10103,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10090,
											"end": 10107,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10081,
											"end": 10087,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 10037,
											"end": 10108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 10037,
											"end": 10108,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10037,
											"end": 10108,
											"name": "tag",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 10037,
											"end": 10108,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10118,
											"end": 10190,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "295"
										},
										{
											"begin": 10186,
											"end": 10188,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10175,
											"end": 10184,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10171,
											"end": 10189,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10162,
											"end": 10168,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10118,
											"end": 10190,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 10118,
											"end": 10190,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10118,
											"end": 10190,
											"name": "tag",
											"source": 2,
											"value": "295"
										},
										{
											"begin": 10118,
											"end": 10190,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10200,
											"end": 10280,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 10276,
											"end": 10278,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10265,
											"end": 10274,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10261,
											"end": 10279,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10252,
											"end": 10258,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10200,
											"end": 10280,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 10200,
											"end": 10280,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10200,
											"end": 10280,
											"name": "tag",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 10200,
											"end": 10280,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9829,
											"end": 10287,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 9829,
											"end": 10287,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 9829,
											"end": 10287,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9829,
											"end": 10287,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9829,
											"end": 10287,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9829,
											"end": 10287,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9829,
											"end": 10287,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 10293,
											"end": 10452,
											"name": "tag",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 10293,
											"end": 10452,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10433,
											"end": 10444,
											"name": "PUSH",
											"source": 2,
											"value": "6E6F7420656E6465640000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10429,
											"end": 10430,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10421,
											"end": 10427,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10417,
											"end": 10431,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10410,
											"end": 10445,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10293,
											"end": 10452,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10293,
											"end": 10452,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 10458,
											"end": 10823,
											"name": "tag",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 10458,
											"end": 10823,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10600,
											"end": 10603,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10621,
											"end": 10687,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "299"
										},
										{
											"begin": 10685,
											"end": 10686,
											"name": "PUSH",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 10680,
											"end": 10683,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10621,
											"end": 10687,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 10621,
											"end": 10687,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10621,
											"end": 10687,
											"name": "tag",
											"source": 2,
											"value": "299"
										},
										{
											"begin": 10621,
											"end": 10687,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10614,
											"end": 10687,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10614,
											"end": 10687,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10696,
											"end": 10789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "300"
										},
										{
											"begin": 10785,
											"end": 10788,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10696,
											"end": 10789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 10696,
											"end": 10789,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10696,
											"end": 10789,
											"name": "tag",
											"source": 2,
											"value": "300"
										},
										{
											"begin": 10696,
											"end": 10789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10814,
											"end": 10816,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10809,
											"end": 10812,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10805,
											"end": 10817,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10798,
											"end": 10817,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10798,
											"end": 10817,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10458,
											"end": 10823,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10458,
											"end": 10823,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10458,
											"end": 10823,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10458,
											"end": 10823,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 10829,
											"end": 11248,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 10829,
											"end": 11248,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10995,
											"end": 10999,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11033,
											"end": 11035,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11022,
											"end": 11031,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11018,
											"end": 11036,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11010,
											"end": 11036,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11010,
											"end": 11036,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11082,
											"end": 11091,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11076,
											"end": 11080,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11072,
											"end": 11092,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11068,
											"end": 11069,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11057,
											"end": 11066,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11053,
											"end": 11070,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11046,
											"end": 11093,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11110,
											"end": 11241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "302"
										},
										{
											"begin": 11236,
											"end": 11240,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11110,
											"end": 11241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 11110,
											"end": 11241,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11110,
											"end": 11241,
											"name": "tag",
											"source": 2,
											"value": "302"
										},
										{
											"begin": 11110,
											"end": 11241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11102,
											"end": 11241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11102,
											"end": 11241,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10829,
											"end": 11248,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10829,
											"end": 11248,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10829,
											"end": 11248,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10829,
											"end": 11248,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 11254,
											"end": 11434,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 11254,
											"end": 11434,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11302,
											"end": 11379,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11299,
											"end": 11300,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11292,
											"end": 11380,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11399,
											"end": 11403,
											"name": "PUSH",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 11396,
											"end": 11397,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11389,
											"end": 11404,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11423,
											"end": 11427,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 11420,
											"end": 11421,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11413,
											"end": 11428,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 11440,
											"end": 11623,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 11440,
											"end": 11623,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11478,
											"end": 11481,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11501,
											"end": 11524,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "305"
										},
										{
											"begin": 11518,
											"end": 11523,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11501,
											"end": 11524,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 11501,
											"end": 11524,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11501,
											"end": 11524,
											"name": "tag",
											"source": 2,
											"value": "305"
										},
										{
											"begin": 11501,
											"end": 11524,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11492,
											"end": 11524,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11492,
											"end": 11524,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11546,
											"end": 11564,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11539,
											"end": 11544,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11536,
											"end": 11565,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 11533,
											"end": 11588,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11533,
											"end": 11588,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "306"
										},
										{
											"begin": 11533,
											"end": 11588,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11568,
											"end": 11586,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "307"
										},
										{
											"begin": 11568,
											"end": 11586,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 11568,
											"end": 11586,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11568,
											"end": 11586,
											"name": "tag",
											"source": 2,
											"value": "307"
										},
										{
											"begin": 11568,
											"end": 11586,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11533,
											"end": 11588,
											"name": "tag",
											"source": 2,
											"value": "306"
										},
										{
											"begin": 11533,
											"end": 11588,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11615,
											"end": 11616,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 11608,
											"end": 11613,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11604,
											"end": 11617,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11597,
											"end": 11617,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11597,
											"end": 11617,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11440,
											"end": 11623,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11440,
											"end": 11623,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11440,
											"end": 11623,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11440,
											"end": 11623,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 11629,
											"end": 11809,
											"name": "tag",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 11629,
											"end": 11809,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11677,
											"end": 11754,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11674,
											"end": 11675,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11667,
											"end": 11755,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11774,
											"end": 11778,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 11771,
											"end": 11772,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11764,
											"end": 11779,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11798,
											"end": 11802,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 11795,
											"end": 11796,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11788,
											"end": 11803,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 11815,
											"end": 12000,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 11815,
											"end": 12000,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11855,
											"end": 11856,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11872,
											"end": 11892,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "310"
										},
										{
											"begin": 11890,
											"end": 11891,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11872,
											"end": 11892,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 11872,
											"end": 11892,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11872,
											"end": 11892,
											"name": "tag",
											"source": 2,
											"value": "310"
										},
										{
											"begin": 11872,
											"end": 11892,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11867,
											"end": 11892,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11867,
											"end": 11892,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11906,
											"end": 11926,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "311"
										},
										{
											"begin": 11924,
											"end": 11925,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11906,
											"end": 11926,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 11906,
											"end": 11926,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11906,
											"end": 11926,
											"name": "tag",
											"source": 2,
											"value": "311"
										},
										{
											"begin": 11906,
											"end": 11926,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11901,
											"end": 11926,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 11901,
											"end": 11926,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11945,
											"end": 11946,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11935,
											"end": 11970,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "312"
										},
										{
											"begin": 11935,
											"end": 11970,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11950,
											"end": 11968,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "313"
										},
										{
											"begin": 11950,
											"end": 11968,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 11950,
											"end": 11968,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11950,
											"end": 11968,
											"name": "tag",
											"source": 2,
											"value": "313"
										},
										{
											"begin": 11950,
											"end": 11968,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11935,
											"end": 11970,
											"name": "tag",
											"source": 2,
											"value": "312"
										},
										{
											"begin": 11935,
											"end": 11970,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11992,
											"end": 11993,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11989,
											"end": 11990,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11985,
											"end": 11994,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 11980,
											"end": 11994,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11980,
											"end": 11994,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11815,
											"end": 12000,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 11815,
											"end": 12000,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11815,
											"end": 12000,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11815,
											"end": 12000,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11815,
											"end": 12000,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 12006,
											"end": 12448,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 12006,
											"end": 12448,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12155,
											"end": 12159,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12193,
											"end": 12195,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 12182,
											"end": 12191,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12178,
											"end": 12196,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12170,
											"end": 12196,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12170,
											"end": 12196,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12206,
											"end": 12277,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "315"
										},
										{
											"begin": 12274,
											"end": 12275,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12263,
											"end": 12272,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12259,
											"end": 12276,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12250,
											"end": 12256,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 12206,
											"end": 12277,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 12206,
											"end": 12277,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 12206,
											"end": 12277,
											"name": "tag",
											"source": 2,
											"value": "315"
										},
										{
											"begin": 12206,
											"end": 12277,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12287,
											"end": 12359,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "316"
										},
										{
											"begin": 12355,
											"end": 12357,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12344,
											"end": 12353,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12340,
											"end": 12358,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12331,
											"end": 12337,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 12287,
											"end": 12359,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 12287,
											"end": 12359,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 12287,
											"end": 12359,
											"name": "tag",
											"source": 2,
											"value": "316"
										},
										{
											"begin": 12287,
											"end": 12359,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12369,
											"end": 12441,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "317"
										},
										{
											"begin": 12437,
											"end": 12439,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12426,
											"end": 12435,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12422,
											"end": 12440,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12413,
											"end": 12419,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12369,
											"end": 12441,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 12369,
											"end": 12441,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 12369,
											"end": 12441,
											"name": "tag",
											"source": 2,
											"value": "317"
										},
										{
											"begin": 12369,
											"end": 12441,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12006,
											"end": 12448,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 12006,
											"end": 12448,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 12006,
											"end": 12448,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12006,
											"end": 12448,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12006,
											"end": 12448,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12006,
											"end": 12448,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12006,
											"end": 12448,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 12454,
											"end": 12565,
											"name": "tag",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 12454,
											"end": 12565,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12518,
											"end": 12524,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12552,
											"end": 12557,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12546,
											"end": 12558,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12536,
											"end": 12558,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12536,
											"end": 12558,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12454,
											"end": 12565,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12454,
											"end": 12565,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12454,
											"end": 12565,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12454,
											"end": 12565,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 12571,
											"end": 12755,
											"name": "tag",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 12571,
											"end": 12755,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12670,
											"end": 12681,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12704,
											"end": 12710,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12699,
											"end": 12702,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12692,
											"end": 12711,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12744,
											"end": 12748,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12739,
											"end": 12742,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12735,
											"end": 12749,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12720,
											"end": 12749,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12720,
											"end": 12749,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12571,
											"end": 12755,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 12571,
											"end": 12755,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12571,
											"end": 12755,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12571,
											"end": 12755,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12571,
											"end": 12755,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 12761,
											"end": 12917,
											"name": "tag",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 12761,
											"end": 12917,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12825,
											"end": 12829,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12848,
											"end": 12851,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12840,
											"end": 12851,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12840,
											"end": 12851,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12871,
											"end": 12874,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12868,
											"end": 12869,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12861,
											"end": 12875,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12905,
											"end": 12909,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12902,
											"end": 12903,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12892,
											"end": 12910,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 12884,
											"end": 12910,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12884,
											"end": 12910,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12761,
											"end": 12917,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12761,
											"end": 12917,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12761,
											"end": 12917,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12761,
											"end": 12917,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 12923,
											"end": 13031,
											"name": "tag",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 12923,
											"end": 13031,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13000,
											"end": 13024,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "322"
										},
										{
											"begin": 13018,
											"end": 13023,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13000,
											"end": 13024,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 13000,
											"end": 13024,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 13000,
											"end": 13024,
											"name": "tag",
											"source": 2,
											"value": "322"
										},
										{
											"begin": 13000,
											"end": 13024,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12995,
											"end": 12998,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12988,
											"end": 13025,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12923,
											"end": 13031,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12923,
											"end": 13031,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12923,
											"end": 13031,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 13037,
											"end": 13216,
											"name": "tag",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 13037,
											"end": 13216,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13106,
											"end": 13116,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13127,
											"end": 13173,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "324"
										},
										{
											"begin": 13169,
											"end": 13172,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13161,
											"end": 13167,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13127,
											"end": 13173,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 13127,
											"end": 13173,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 13127,
											"end": 13173,
											"name": "tag",
											"source": 2,
											"value": "324"
										},
										{
											"begin": 13127,
											"end": 13173,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13205,
											"end": 13209,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13200,
											"end": 13203,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13196,
											"end": 13210,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13182,
											"end": 13210,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13182,
											"end": 13210,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13037,
											"end": 13216,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 13037,
											"end": 13216,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13037,
											"end": 13216,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13037,
											"end": 13216,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13037,
											"end": 13216,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 13222,
											"end": 13324,
											"name": "tag",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 13222,
											"end": 13324,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13264,
											"end": 13272,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13311,
											"end": 13316,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13308,
											"end": 13309,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13304,
											"end": 13317,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 13283,
											"end": 13317,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13283,
											"end": 13317,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13222,
											"end": 13324,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13222,
											"end": 13324,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13222,
											"end": 13324,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13222,
											"end": 13324,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 13330,
											"end": 13469,
											"name": "tag",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 13330,
											"end": 13469,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13380,
											"end": 13387,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13420,
											"end": 13462,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13413,
											"end": 13418,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13409,
											"end": 13463,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13398,
											"end": 13463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13398,
											"end": 13463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13330,
											"end": 13469,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13330,
											"end": 13469,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13330,
											"end": 13469,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13330,
											"end": 13469,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 13475,
											"end": 13641,
											"name": "tag",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 13475,
											"end": 13641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13544,
											"end": 13549,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13569,
											"end": 13635,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "328"
										},
										{
											"begin": 13600,
											"end": 13634,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "329"
										},
										{
											"begin": 13623,
											"end": 13633,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13600,
											"end": 13634,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 13600,
											"end": 13634,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 13600,
											"end": 13634,
											"name": "tag",
											"source": 2,
											"value": "329"
										},
										{
											"begin": 13600,
											"end": 13634,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13569,
											"end": 13635,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 13569,
											"end": 13635,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 13569,
											"end": 13635,
											"name": "tag",
											"source": 2,
											"value": "328"
										},
										{
											"begin": 13569,
											"end": 13635,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13560,
											"end": 13635,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13560,
											"end": 13635,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13475,
											"end": 13641,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13475,
											"end": 13641,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13475,
											"end": 13641,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13475,
											"end": 13641,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 13647,
											"end": 13791,
											"name": "tag",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 13647,
											"end": 13791,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13702,
											"end": 13707,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13727,
											"end": 13784,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "331"
										},
										{
											"begin": 13778,
											"end": 13782,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13772,
											"end": 13783,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 13727,
											"end": 13784,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 13727,
											"end": 13784,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 13727,
											"end": 13784,
											"name": "tag",
											"source": 2,
											"value": "331"
										},
										{
											"begin": 13727,
											"end": 13784,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13718,
											"end": 13784,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13718,
											"end": 13784,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13647,
											"end": 13791,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13647,
											"end": 13791,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13647,
											"end": 13791,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13647,
											"end": 13791,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 13797,
											"end": 13907,
											"name": "tag",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 13797,
											"end": 13907,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13864,
											"end": 13868,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13896,
											"end": 13900,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 13891,
											"end": 13894,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13887,
											"end": 13901,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13879,
											"end": 13901,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13879,
											"end": 13901,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13797,
											"end": 13907,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13797,
											"end": 13907,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13797,
											"end": 13907,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13797,
											"end": 13907,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 13943,
											"end": 14694,
											"name": "tag",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 13943,
											"end": 14694,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14059,
											"end": 14062,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14088,
											"end": 14139,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "334"
										},
										{
											"begin": 14133,
											"end": 14138,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14088,
											"end": 14139,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 14088,
											"end": 14139,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14088,
											"end": 14139,
											"name": "tag",
											"source": 2,
											"value": "334"
										},
										{
											"begin": 14088,
											"end": 14139,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14155,
											"end": 14241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "335"
										},
										{
											"begin": 14234,
											"end": 14240,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14229,
											"end": 14232,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 14155,
											"end": 14241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 14155,
											"end": 14241,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14155,
											"end": 14241,
											"name": "tag",
											"source": 2,
											"value": "335"
										},
										{
											"begin": 14155,
											"end": 14241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14148,
											"end": 14241,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 14148,
											"end": 14241,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14265,
											"end": 14318,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "336"
										},
										{
											"begin": 14312,
											"end": 14317,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14265,
											"end": 14318,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 14265,
											"end": 14318,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14265,
											"end": 14318,
											"name": "tag",
											"source": 2,
											"value": "336"
										},
										{
											"begin": 14265,
											"end": 14318,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14341,
											"end": 14348,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14372,
											"end": 14373,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14357,
											"end": 14669,
											"name": "tag",
											"source": 2,
											"value": "337"
										},
										{
											"begin": 14357,
											"end": 14669,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14382,
											"end": 14388,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14379,
											"end": 14380,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14376,
											"end": 14389,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 14357,
											"end": 14669,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14357,
											"end": 14669,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "339"
										},
										{
											"begin": 14357,
											"end": 14669,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14452,
											"end": 14496,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "340"
										},
										{
											"begin": 14489,
											"end": 14495,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14452,
											"end": 14496,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 14452,
											"end": 14496,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14452,
											"end": 14496,
											"name": "tag",
											"source": 2,
											"value": "340"
										},
										{
											"begin": 14452,
											"end": 14496,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14516,
											"end": 14579,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "341"
										},
										{
											"begin": 14575,
											"end": 14578,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 14560,
											"end": 14573,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14516,
											"end": 14579,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 14516,
											"end": 14579,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14516,
											"end": 14579,
											"name": "tag",
											"source": 2,
											"value": "341"
										},
										{
											"begin": 14516,
											"end": 14579,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14509,
											"end": 14579,
											"name": "SWAP8",
											"source": 2
										},
										{
											"begin": 14509,
											"end": 14579,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14602,
											"end": 14659,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "342"
										},
										{
											"begin": 14652,
											"end": 14658,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14602,
											"end": 14659,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 14602,
											"end": 14659,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14602,
											"end": 14659,
											"name": "tag",
											"source": 2,
											"value": "342"
										},
										{
											"begin": 14602,
											"end": 14659,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14592,
											"end": 14659,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 14592,
											"end": 14659,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14669,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14404,
											"end": 14405,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 14401,
											"end": 14402,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14397,
											"end": 14406,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14392,
											"end": 14406,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14392,
											"end": 14406,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14357,
											"end": 14669,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "337"
										},
										{
											"begin": 14357,
											"end": 14669,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14357,
											"end": 14669,
											"name": "tag",
											"source": 2,
											"value": "339"
										},
										{
											"begin": 14357,
											"end": 14669,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14361,
											"end": 14375,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14685,
											"end": 14688,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 14678,
											"end": 14688,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 14678,
											"end": 14688,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14064,
											"end": 14694,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14064,
											"end": 14694,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14064,
											"end": 14694,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13943,
											"end": 14694,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 13943,
											"end": 14694,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13943,
											"end": 14694,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13943,
											"end": 14694,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13943,
											"end": 14694,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 14700,
											"end": 14811,
											"name": "tag",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 14700,
											"end": 14811,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14764,
											"end": 14770,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14798,
											"end": 14803,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14792,
											"end": 14804,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 14782,
											"end": 14804,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14782,
											"end": 14804,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14700,
											"end": 14811,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14700,
											"end": 14811,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14700,
											"end": 14811,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14700,
											"end": 14811,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 14817,
											"end": 15001,
											"name": "tag",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 14817,
											"end": 15001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14916,
											"end": 14927,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14950,
											"end": 14956,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14945,
											"end": 14948,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14938,
											"end": 14957,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14990,
											"end": 14994,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14985,
											"end": 14988,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14981,
											"end": 14995,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14966,
											"end": 14995,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14966,
											"end": 14995,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14817,
											"end": 15001,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 14817,
											"end": 15001,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14817,
											"end": 15001,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14817,
											"end": 15001,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14817,
											"end": 15001,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 15007,
											"end": 15163,
											"name": "tag",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 15007,
											"end": 15163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15071,
											"end": 15075,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15094,
											"end": 15097,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15086,
											"end": 15097,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15086,
											"end": 15097,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15117,
											"end": 15120,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15114,
											"end": 15115,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15107,
											"end": 15121,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15151,
											"end": 15155,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15148,
											"end": 15149,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15138,
											"end": 15156,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 15130,
											"end": 15156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15130,
											"end": 15156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15007,
											"end": 15163,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15007,
											"end": 15163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15007,
											"end": 15163,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15007,
											"end": 15163,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 15169,
											"end": 15277,
											"name": "tag",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 15169,
											"end": 15277,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15246,
											"end": 15270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "347"
										},
										{
											"begin": 15264,
											"end": 15269,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15246,
											"end": 15270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 15246,
											"end": 15270,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 15246,
											"end": 15270,
											"name": "tag",
											"source": 2,
											"value": "347"
										},
										{
											"begin": 15246,
											"end": 15270,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15241,
											"end": 15244,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15234,
											"end": 15271,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15169,
											"end": 15277,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15169,
											"end": 15277,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15169,
											"end": 15277,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 15283,
											"end": 15462,
											"name": "tag",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 15283,
											"end": 15462,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15352,
											"end": 15362,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15373,
											"end": 15419,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "349"
										},
										{
											"begin": 15415,
											"end": 15418,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15407,
											"end": 15413,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15373,
											"end": 15419,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 15373,
											"end": 15419,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 15373,
											"end": 15419,
											"name": "tag",
											"source": 2,
											"value": "349"
										},
										{
											"begin": 15373,
											"end": 15419,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15451,
											"end": 15455,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15446,
											"end": 15449,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15442,
											"end": 15456,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15428,
											"end": 15456,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15428,
											"end": 15456,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15283,
											"end": 15462,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 15283,
											"end": 15462,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15283,
											"end": 15462,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15283,
											"end": 15462,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15283,
											"end": 15462,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 15468,
											"end": 15558,
											"name": "tag",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 15468,
											"end": 15558,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15518,
											"end": 15525,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15547,
											"end": 15552,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15536,
											"end": 15552,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15536,
											"end": 15552,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15468,
											"end": 15558,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15468,
											"end": 15558,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15468,
											"end": 15558,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15468,
											"end": 15558,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 15564,
											"end": 15730,
											"name": "tag",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 15564,
											"end": 15730,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15633,
											"end": 15638,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15658,
											"end": 15724,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "352"
										},
										{
											"begin": 15689,
											"end": 15723,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "353"
										},
										{
											"begin": 15712,
											"end": 15722,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15689,
											"end": 15723,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 15689,
											"end": 15723,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 15689,
											"end": 15723,
											"name": "tag",
											"source": 2,
											"value": "353"
										},
										{
											"begin": 15689,
											"end": 15723,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15658,
											"end": 15724,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 15658,
											"end": 15724,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 15658,
											"end": 15724,
											"name": "tag",
											"source": 2,
											"value": "352"
										},
										{
											"begin": 15658,
											"end": 15724,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15649,
											"end": 15724,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15649,
											"end": 15724,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15564,
											"end": 15730,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15564,
											"end": 15730,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15564,
											"end": 15730,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15564,
											"end": 15730,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 15736,
											"end": 15880,
											"name": "tag",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 15736,
											"end": 15880,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15791,
											"end": 15796,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15816,
											"end": 15873,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "355"
										},
										{
											"begin": 15867,
											"end": 15871,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15861,
											"end": 15872,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 15816,
											"end": 15873,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 15816,
											"end": 15873,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 15816,
											"end": 15873,
											"name": "tag",
											"source": 2,
											"value": "355"
										},
										{
											"begin": 15816,
											"end": 15873,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15807,
											"end": 15873,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15807,
											"end": 15873,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15736,
											"end": 15880,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15736,
											"end": 15880,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15736,
											"end": 15880,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15736,
											"end": 15880,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 15886,
											"end": 15996,
											"name": "tag",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 15886,
											"end": 15996,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15953,
											"end": 15957,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15985,
											"end": 15989,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 15980,
											"end": 15983,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15976,
											"end": 15990,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15968,
											"end": 15990,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15968,
											"end": 15990,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15886,
											"end": 15996,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15886,
											"end": 15996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15886,
											"end": 15996,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15886,
											"end": 15996,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 16032,
											"end": 16783,
											"name": "tag",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 16032,
											"end": 16783,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16148,
											"end": 16151,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16177,
											"end": 16228,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "358"
										},
										{
											"begin": 16222,
											"end": 16227,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 16177,
											"end": 16228,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 16177,
											"end": 16228,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 16177,
											"end": 16228,
											"name": "tag",
											"source": 2,
											"value": "358"
										},
										{
											"begin": 16177,
											"end": 16228,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16244,
											"end": 16330,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "359"
										},
										{
											"begin": 16323,
											"end": 16329,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16318,
											"end": 16321,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 16244,
											"end": 16330,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 16244,
											"end": 16330,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 16244,
											"end": 16330,
											"name": "tag",
											"source": 2,
											"value": "359"
										},
										{
											"begin": 16244,
											"end": 16330,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16237,
											"end": 16330,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 16237,
											"end": 16330,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16354,
											"end": 16407,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "360"
										},
										{
											"begin": 16401,
											"end": 16406,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 16354,
											"end": 16407,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 16354,
											"end": 16407,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 16354,
											"end": 16407,
											"name": "tag",
											"source": 2,
											"value": "360"
										},
										{
											"begin": 16354,
											"end": 16407,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16430,
											"end": 16437,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16461,
											"end": 16462,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16446,
											"end": 16758,
											"name": "tag",
											"source": 2,
											"value": "361"
										},
										{
											"begin": 16446,
											"end": 16758,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16471,
											"end": 16477,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 16468,
											"end": 16469,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16465,
											"end": 16478,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 16446,
											"end": 16758,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 16446,
											"end": 16758,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "363"
										},
										{
											"begin": 16446,
											"end": 16758,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 16541,
											"end": 16585,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "364"
										},
										{
											"begin": 16578,
											"end": 16584,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 16541,
											"end": 16585,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 16541,
											"end": 16585,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 16541,
											"end": 16585,
											"name": "tag",
											"source": 2,
											"value": "364"
										},
										{
											"begin": 16541,
											"end": 16585,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16605,
											"end": 16668,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "365"
										},
										{
											"begin": 16664,
											"end": 16667,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 16649,
											"end": 16662,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 16605,
											"end": 16668,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 16605,
											"end": 16668,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 16605,
											"end": 16668,
											"name": "tag",
											"source": 2,
											"value": "365"
										},
										{
											"begin": 16605,
											"end": 16668,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16598,
											"end": 16668,
											"name": "SWAP8",
											"source": 2
										},
										{
											"begin": 16598,
											"end": 16668,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16691,
											"end": 16748,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "366"
										},
										{
											"begin": 16741,
											"end": 16747,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 16691,
											"end": 16748,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 16691,
											"end": 16748,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 16691,
											"end": 16748,
											"name": "tag",
											"source": 2,
											"value": "366"
										},
										{
											"begin": 16691,
											"end": 16748,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16681,
											"end": 16748,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 16681,
											"end": 16748,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16506,
											"end": 16758,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16493,
											"end": 16494,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 16490,
											"end": 16491,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16486,
											"end": 16495,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16481,
											"end": 16495,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16481,
											"end": 16495,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16446,
											"end": 16758,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "361"
										},
										{
											"begin": 16446,
											"end": 16758,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16446,
											"end": 16758,
											"name": "tag",
											"source": 2,
											"value": "363"
										},
										{
											"begin": 16446,
											"end": 16758,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16450,
											"end": 16464,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16774,
											"end": 16777,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 16767,
											"end": 16777,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 16767,
											"end": 16777,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16153,
											"end": 16783,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16153,
											"end": 16783,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16153,
											"end": 16783,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16032,
											"end": 16783,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 16032,
											"end": 16783,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16032,
											"end": 16783,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16032,
											"end": 16783,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16032,
											"end": 16783,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 16789,
											"end": 17411,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 16789,
											"end": 17411,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17004,
											"end": 17008,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17042,
											"end": 17044,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17031,
											"end": 17040,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17027,
											"end": 17045,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17019,
											"end": 17045,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17019,
											"end": 17045,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17091,
											"end": 17100,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17085,
											"end": 17089,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17081,
											"end": 17101,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 17077,
											"end": 17078,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17066,
											"end": 17075,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 17062,
											"end": 17079,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17055,
											"end": 17102,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17119,
											"end": 17224,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "368"
										},
										{
											"begin": 17219,
											"end": 17223,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17210,
											"end": 17216,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 17119,
											"end": 17224,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 17119,
											"end": 17224,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 17119,
											"end": 17224,
											"name": "tag",
											"source": 2,
											"value": "368"
										},
										{
											"begin": 17119,
											"end": 17224,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17111,
											"end": 17224,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17111,
											"end": 17224,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17271,
											"end": 17280,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17265,
											"end": 17269,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17261,
											"end": 17281,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 17256,
											"end": 17258,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 17245,
											"end": 17254,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 17241,
											"end": 17259,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17234,
											"end": 17282,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17299,
											"end": 17404,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "369"
										},
										{
											"begin": 17399,
											"end": 17403,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17390,
											"end": 17396,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 17299,
											"end": 17404,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 17299,
											"end": 17404,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 17299,
											"end": 17404,
											"name": "tag",
											"source": 2,
											"value": "369"
										},
										{
											"begin": 17299,
											"end": 17404,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17291,
											"end": 17404,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17291,
											"end": 17404,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16789,
											"end": 17411,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 16789,
											"end": 17411,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 16789,
											"end": 17411,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16789,
											"end": 17411,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16789,
											"end": 17411,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16789,
											"end": 17411,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"auctionID()": "2d07091f",
							"bid()": "1998aeef",
							"bids(address)": "62ea82db",
							"end()": "efbe1c1c",
							"endAt()": "7cc3ae8c",
							"ended()": "12fa6feb",
							"highestBidders(uint256)": "77484aae",
							"highestBids(uint256)": "111cb258",
							"seller()": "08551a53",
							"start()": "be9a6555",
							"started()": "1f2698ab",
							"tokenToBeAttributed()": "7c6c5720"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"_auctionNumber\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Bid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"winners\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"amount\",\"type\":\"uint256[]\"}],\"name\":\"End\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Start\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"auctionID\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bid\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"bids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"end\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ended\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"highestBidders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"highestBids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"seller\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"started\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenToBeAttributed\",\"outputs\":[{\"internalType\":\"contract KarbonMoneta\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SmartContracts/Auction2/auction.sol\":\"EnglishAuction\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"SmartContracts/Auction2/auction.sol\":{\"keccak256\":\"0xb464baab37ec042d6b4be5df617e4054b3ab16a0872f045dd4328b5f1a0f9730\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea5dbd5973f96ef11fa5c80b6d1782ec8a6937c3d3904b3947ab874a11550bee\",\"dweb:/ipfs/Qmei4VEFN5iu9thvycLKF6M5itPV4E5rc715yKVwUjHmmH\"]},\"https://github.com/hashgraph/hedera-smart-contracts/contracts/hts-precompile/IHederaTokenService.sol\":{\"keccak256\":\"0xfdb882a4883cca98de0904d3a74405c210c891d7dab3666f635b3917988781e2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://bcdb3f8e6c966d249922e69246fe93dcbc9a89f858f747f3814a696aa3ca2e55\",\"dweb:/ipfs/QmYMYDS8cawToJBzjepLN7MLmoL49rxrhJTmiWMRKEQTYZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 41,
								"contract": "SmartContracts/Auction2/auction.sol:EnglishAuction",
								"label": "tokenToBeAttributed",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(KarbonMoneta)22"
							},
							{
								"astId": 43,
								"contract": "SmartContracts/Auction2/auction.sol:EnglishAuction",
								"label": "auctionID",
								"offset": 20,
								"slot": "0",
								"type": "t_uint64"
							},
							{
								"astId": 45,
								"contract": "SmartContracts/Auction2/auction.sol:EnglishAuction",
								"label": "seller",
								"offset": 0,
								"slot": "1",
								"type": "t_address_payable"
							},
							{
								"astId": 47,
								"contract": "SmartContracts/Auction2/auction.sol:EnglishAuction",
								"label": "endAt",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 49,
								"contract": "SmartContracts/Auction2/auction.sol:EnglishAuction",
								"label": "started",
								"offset": 0,
								"slot": "3",
								"type": "t_bool"
							},
							{
								"astId": 51,
								"contract": "SmartContracts/Auction2/auction.sol:EnglishAuction",
								"label": "ended",
								"offset": 1,
								"slot": "3",
								"type": "t_bool"
							},
							{
								"astId": 54,
								"contract": "SmartContracts/Auction2/auction.sol:EnglishAuction",
								"label": "highestBidders",
								"offset": 0,
								"slot": "4",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 57,
								"contract": "SmartContracts/Auction2/auction.sol:EnglishAuction",
								"label": "highestBids",
								"offset": 0,
								"slot": "5",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 61,
								"contract": "SmartContracts/Auction2/auction.sol:EnglishAuction",
								"label": "bids",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(KarbonMoneta)22": {
								"encoding": "inplace",
								"label": "contract KarbonMoneta",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint64": {
								"encoding": "inplace",
								"label": "uint64",
								"numberOfBytes": "8"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"KarbonMoneta": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SmartContracts/Auction2/auction.sol\":\"KarbonMoneta\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"SmartContracts/Auction2/auction.sol\":{\"keccak256\":\"0xb464baab37ec042d6b4be5df617e4054b3ab16a0872f045dd4328b5f1a0f9730\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea5dbd5973f96ef11fa5c80b6d1782ec8a6937c3d3904b3947ab874a11550bee\",\"dweb:/ipfs/Qmei4VEFN5iu9thvycLKF6M5itPV4E5rc715yKVwUjHmmH\"]},\"https://github.com/hashgraph/hedera-smart-contracts/contracts/hts-precompile/IHederaTokenService.sol\":{\"keccak256\":\"0xfdb882a4883cca98de0904d3a74405c210c891d7dab3666f635b3917988781e2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://bcdb3f8e6c966d249922e69246fe93dcbc9a89f858f747f3814a696aa3ca2e55\",\"dweb:/ipfs/QmYMYDS8cawToJBzjepLN7MLmoL49rxrhJTmiWMRKEQTYZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/hashgraph/hedera-smart-contracts/contracts/hts-precompile/IHederaTokenService.sol": {
				"IHederaTokenService": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "int64",
									"name": "responseCode",
									"type": "int64"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "int64",
									"name": "responseCode",
									"type": "int64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "serialNumber",
									"type": "uint256"
								}
							],
							"name": "approveNFT",
							"outputs": [
								{
									"internalType": "int64",
									"name": "responseCode",
									"type": "int64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "associateToken",
							"outputs": [
								{
									"internalType": "int64",
									"name": "responseCode",
									"type": "int64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address[]",
									"name": "tokens",
									"type": "address[]"
								}
							],
							"name": "associateTokens",
							"outputs": [
								{
									"internalType": "int64",
									"name": "responseCode",
									"type": "int64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint64",
									"name": "amount",
									"type": "uint64"
								},
								{
									"internalType": "int64[]",
									"name": "serialNumbers",
									"type": "int64[]"
								}
							],
							"name": "burnToken",
							"outputs": [
								{
									"internalType": "int64",
									"name": "responseCode",
									"type": "int64"
								},
								{
									"internalType": "uint64",
									"name": "newTotalSupply",
									"type": "uint64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "string",
											"name": "name",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "symbol",
											"type": "string"
										},
										{
											"internalType": "address",
											"name": "treasury",
											"type": "address"
										},
										{
											"internalType": "string",
											"name": "memo",
											"type": "string"
										},
										{
											"internalType": "bool",
											"name": "tokenSupplyType",
											"type": "bool"
										},
										{
											"internalType": "int64",
											"name": "maxSupply",
											"type": "int64"
										},
										{
											"internalType": "bool",
											"name": "freezeDefault",
											"type": "bool"
										},
										{
											"components": [
												{
													"internalType": "uint256",
													"name": "keyType",
													"type": "uint256"
												},
												{
													"components": [
														{
															"internalType": "bool",
															"name": "inheritAccountKey",
															"type": "bool"
														},
														{
															"internalType": "address",
															"name": "contractId",
															"type": "address"
														},
														{
															"internalType": "bytes",
															"name": "ed25519",
															"type": "bytes"
														},
														{
															"internalType": "bytes",
															"name": "ECDSA_secp256k1",
															"type": "bytes"
														},
														{
															"internalType": "address",
															"name": "delegatableContractId",
															"type": "address"
														}
													],
													"internalType": "struct IHederaTokenService.KeyValue",
													"name": "key",
													"type": "tuple"
												}
											],
											"internalType": "struct IHederaTokenService.TokenKey[]",
											"name": "tokenKeys",
											"type": "tuple[]"
										},
										{
											"components": [
												{
													"internalType": "uint32",
													"name": "second",
													"type": "uint32"
												},
												{
													"internalType": "address",
													"name": "autoRenewAccount",
													"type": "address"
												},
												{
													"internalType": "uint32",
													"name": "autoRenewPeriod",
													"type": "uint32"
												}
											],
											"internalType": "struct IHederaTokenService.Expiry",
											"name": "expiry",
											"type": "tuple"
										}
									],
									"internalType": "struct IHederaTokenService.HederaToken",
									"name": "token",
									"type": "tuple"
								},
								{
									"internalType": "uint64",
									"name": "initialTotalSupply",
									"type": "uint64"
								},
								{
									"internalType": "uint32",
									"name": "decimals",
									"type": "uint32"
								}
							],
							"name": "createFungibleToken",
							"outputs": [
								{
									"internalType": "int64",
									"name": "responseCode",
									"type": "int64"
								},
								{
									"internalType": "address",
									"name": "tokenAddress",
									"type": "address"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "string",
											"name": "name",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "symbol",
											"type": "string"
										},
										{
											"internalType": "address",
											"name": "treasury",
											"type": "address"
										},
										{
											"internalType": "string",
											"name": "memo",
											"type": "string"
										},
										{
											"internalType": "bool",
											"name": "tokenSupplyType",
											"type": "bool"
										},
										{
											"internalType": "int64",
											"name": "maxSupply",
											"type": "int64"
										},
										{
											"internalType": "bool",
											"name": "freezeDefault",
											"type": "bool"
										},
										{
											"components": [
												{
													"internalType": "uint256",
													"name": "keyType",
													"type": "uint256"
												},
												{
													"components": [
														{
															"internalType": "bool",
															"name": "inheritAccountKey",
															"type": "bool"
														},
														{
															"internalType": "address",
															"name": "contractId",
															"type": "address"
														},
														{
															"internalType": "bytes",
															"name": "ed25519",
															"type": "bytes"
														},
														{
															"internalType": "bytes",
															"name": "ECDSA_secp256k1",
															"type": "bytes"
														},
														{
															"internalType": "address",
															"name": "delegatableContractId",
															"type": "address"
														}
													],
													"internalType": "struct IHederaTokenService.KeyValue",
													"name": "key",
													"type": "tuple"
												}
											],
											"internalType": "struct IHederaTokenService.TokenKey[]",
											"name": "tokenKeys",
											"type": "tuple[]"
										},
										{
											"components": [
												{
													"internalType": "uint32",
													"name": "second",
													"type": "uint32"
												},
												{
													"internalType": "address",
													"name": "autoRenewAccount",
													"type": "address"
												},
												{
													"internalType": "uint32",
													"name": "autoRenewPeriod",
													"type": "uint32"
												}
											],
											"internalType": "struct IHederaTokenService.Expiry",
											"name": "expiry",
											"type": "tuple"
										}
									],
									"internalType": "struct IHederaTokenService.HederaToken",
									"name": "token",
									"type": "tuple"
								},
								{
									"internalType": "uint64",
									"name": "initialTotalSupply",
									"type": "uint64"
								},
								{
									"internalType": "uint32",
									"name": "decimals",
									"type": "uint32"
								},
								{
									"components": [
										{
											"internalType": "uint32",
											"name": "amount",
											"type": "uint32"
										},
										{
											"internalType": "address",
											"name": "tokenId",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "useHbarsForPayment",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "useCurrentTokenForPayment",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "feeCollector",
											"type": "address"
										}
									],
									"internalType": "struct IHederaTokenService.FixedFee[]",
									"name": "fixedFees",
									"type": "tuple[]"
								},
								{
									"components": [
										{
											"internalType": "uint32",
											"name": "numerator",
											"type": "uint32"
										},
										{
											"internalType": "uint32",
											"name": "denominator",
											"type": "uint32"
										},
										{
											"internalType": "uint32",
											"name": "minimumAmount",
											"type": "uint32"
										},
										{
											"internalType": "uint32",
											"name": "maximumAmount",
											"type": "uint32"
										},
										{
											"internalType": "bool",
											"name": "netOfTransfers",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "feeCollector",
											"type": "address"
										}
									],
									"internalType": "struct IHederaTokenService.FractionalFee[]",
									"name": "fractionalFees",
									"type": "tuple[]"
								}
							],
							"name": "createFungibleTokenWithCustomFees",
							"outputs": [
								{
									"internalType": "int64",
									"name": "responseCode",
									"type": "int64"
								},
								{
									"internalType": "address",
									"name": "tokenAddress",
									"type": "address"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "string",
											"name": "name",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "symbol",
											"type": "string"
										},
										{
											"internalType": "address",
											"name": "treasury",
											"type": "address"
										},
										{
											"internalType": "string",
											"name": "memo",
											"type": "string"
										},
										{
											"internalType": "bool",
											"name": "tokenSupplyType",
											"type": "bool"
										},
										{
											"internalType": "int64",
											"name": "maxSupply",
											"type": "int64"
										},
										{
											"internalType": "bool",
											"name": "freezeDefault",
											"type": "bool"
										},
										{
											"components": [
												{
													"internalType": "uint256",
													"name": "keyType",
													"type": "uint256"
												},
												{
													"components": [
														{
															"internalType": "bool",
															"name": "inheritAccountKey",
															"type": "bool"
														},
														{
															"internalType": "address",
															"name": "contractId",
															"type": "address"
														},
														{
															"internalType": "bytes",
															"name": "ed25519",
															"type": "bytes"
														},
														{
															"internalType": "bytes",
															"name": "ECDSA_secp256k1",
															"type": "bytes"
														},
														{
															"internalType": "address",
															"name": "delegatableContractId",
															"type": "address"
														}
													],
													"internalType": "struct IHederaTokenService.KeyValue",
													"name": "key",
													"type": "tuple"
												}
											],
											"internalType": "struct IHederaTokenService.TokenKey[]",
											"name": "tokenKeys",
											"type": "tuple[]"
										},
										{
											"components": [
												{
													"internalType": "uint32",
													"name": "second",
													"type": "uint32"
												},
												{
													"internalType": "address",
													"name": "autoRenewAccount",
													"type": "address"
												},
												{
													"internalType": "uint32",
													"name": "autoRenewPeriod",
													"type": "uint32"
												}
											],
											"internalType": "struct IHederaTokenService.Expiry",
											"name": "expiry",
											"type": "tuple"
										}
									],
									"internalType": "struct IHederaTokenService.HederaToken",
									"name": "token",
									"type": "tuple"
								}
							],
							"name": "createNonFungibleToken",
							"outputs": [
								{
									"internalType": "int64",
									"name": "responseCode",
									"type": "int64"
								},
								{
									"internalType": "address",
									"name": "tokenAddress",
									"type": "address"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "string",
											"name": "name",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "symbol",
											"type": "string"
										},
										{
											"internalType": "address",
											"name": "treasury",
											"type": "address"
										},
										{
											"internalType": "string",
											"name": "memo",
											"type": "string"
										},
										{
											"internalType": "bool",
											"name": "tokenSupplyType",
											"type": "bool"
										},
										{
											"internalType": "int64",
											"name": "maxSupply",
											"type": "int64"
										},
										{
											"internalType": "bool",
											"name": "freezeDefault",
											"type": "bool"
										},
										{
											"components": [
												{
													"internalType": "uint256",
													"name": "keyType",
													"type": "uint256"
												},
												{
													"components": [
														{
															"internalType": "bool",
															"name": "inheritAccountKey",
															"type": "bool"
														},
														{
															"internalType": "address",
															"name": "contractId",
															"type": "address"
														},
														{
															"internalType": "bytes",
															"name": "ed25519",
															"type": "bytes"
														},
														{
															"internalType": "bytes",
															"name": "ECDSA_secp256k1",
															"type": "bytes"
														},
														{
															"internalType": "address",
															"name": "delegatableContractId",
															"type": "address"
														}
													],
													"internalType": "struct IHederaTokenService.KeyValue",
													"name": "key",
													"type": "tuple"
												}
											],
											"internalType": "struct IHederaTokenService.TokenKey[]",
											"name": "tokenKeys",
											"type": "tuple[]"
										},
										{
											"components": [
												{
													"internalType": "uint32",
													"name": "second",
													"type": "uint32"
												},
												{
													"internalType": "address",
													"name": "autoRenewAccount",
													"type": "address"
												},
												{
													"internalType": "uint32",
													"name": "autoRenewPeriod",
													"type": "uint32"
												}
											],
											"internalType": "struct IHederaTokenService.Expiry",
											"name": "expiry",
											"type": "tuple"
										}
									],
									"internalType": "struct IHederaTokenService.HederaToken",
									"name": "token",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "uint32",
											"name": "amount",
											"type": "uint32"
										},
										{
											"internalType": "address",
											"name": "tokenId",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "useHbarsForPayment",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "useCurrentTokenForPayment",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "feeCollector",
											"type": "address"
										}
									],
									"internalType": "struct IHederaTokenService.FixedFee[]",
									"name": "fixedFees",
									"type": "tuple[]"
								},
								{
									"components": [
										{
											"internalType": "uint32",
											"name": "numerator",
											"type": "uint32"
										},
										{
											"internalType": "uint32",
											"name": "denominator",
											"type": "uint32"
										},
										{
											"internalType": "uint32",
											"name": "amount",
											"type": "uint32"
										},
										{
											"internalType": "address",
											"name": "tokenId",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "useHbarsForPayment",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "feeCollector",
											"type": "address"
										}
									],
									"internalType": "struct IHederaTokenService.RoyaltyFee[]",
									"name": "royaltyFees",
									"type": "tuple[]"
								}
							],
							"name": "createNonFungibleTokenWithCustomFees",
							"outputs": [
								{
									"internalType": "int64",
									"name": "responseCode",
									"type": "int64"
								},
								{
									"internalType": "address",
									"name": "tokenAddress",
									"type": "address"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"components": [
												{
													"internalType": "address",
													"name": "accountID",
													"type": "address"
												},
												{
													"internalType": "int64",
													"name": "amount",
													"type": "int64"
												},
												{
													"internalType": "bool",
													"name": "isApproval",
													"type": "bool"
												}
											],
											"internalType": "struct IHederaTokenService.AccountAmount[]",
											"name": "transfers",
											"type": "tuple[]"
										}
									],
									"internalType": "struct IHederaTokenService.TransferList",
									"name": "transferList",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "address",
											"name": "token",
											"type": "address"
										},
										{
											"components": [
												{
													"internalType": "address",
													"name": "accountID",
													"type": "address"
												},
												{
													"internalType": "int64",
													"name": "amount",
													"type": "int64"
												},
												{
													"internalType": "bool",
													"name": "isApproval",
													"type": "bool"
												}
											],
											"internalType": "struct IHederaTokenService.AccountAmount[]",
											"name": "transfers",
											"type": "tuple[]"
										},
										{
											"components": [
												{
													"internalType": "address",
													"name": "senderAccountID",
													"type": "address"
												},
												{
													"internalType": "address",
													"name": "receiverAccountID",
													"type": "address"
												},
												{
													"internalType": "int64",
													"name": "serialNumber",
													"type": "int64"
												},
												{
													"internalType": "bool",
													"name": "isApproval",
													"type": "bool"
												}
											],
											"internalType": "struct IHederaTokenService.NftTransfer[]",
											"name": "nftTransfers",
											"type": "tuple[]"
										}
									],
									"internalType": "struct IHederaTokenService.TokenTransferList[]",
									"name": "tokenTransfers",
									"type": "tuple[]"
								}
							],
							"name": "cryptoTransfer",
							"outputs": [
								{
									"internalType": "int64",
									"name": "responseCode",
									"type": "int64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "deleteToken",
							"outputs": [
								{
									"internalType": "int64",
									"name": "responseCode",
									"type": "int64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "dissociateToken",
							"outputs": [
								{
									"internalType": "int64",
									"name": "responseCode",
									"type": "int64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address[]",
									"name": "tokens",
									"type": "address[]"
								}
							],
							"name": "dissociateTokens",
							"outputs": [
								{
									"internalType": "int64",
									"name": "responseCode",
									"type": "int64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "freezeToken",
							"outputs": [
								{
									"internalType": "int64",
									"name": "responseCode",
									"type": "int64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "serialNumber",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "int64",
									"name": "responseCode",
									"type": "int64"
								},
								{
									"internalType": "address",
									"name": "approved",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "getFungibleTokenInfo",
							"outputs": [
								{
									"internalType": "int64",
									"name": "responseCode",
									"type": "int64"
								},
								{
									"components": [
										{
											"components": [
												{
													"components": [
														{
															"internalType": "string",
															"name": "name",
															"type": "string"
														},
														{
															"internalType": "string",
															"name": "symbol",
															"type": "string"
														},
														{
															"internalType": "address",
															"name": "treasury",
															"type": "address"
														},
														{
															"internalType": "string",
															"name": "memo",
															"type": "string"
														},
														{
															"internalType": "bool",
															"name": "tokenSupplyType",
															"type": "bool"
														},
														{
															"internalType": "int64",
															"name": "maxSupply",
															"type": "int64"
														},
														{
															"internalType": "bool",
															"name": "freezeDefault",
															"type": "bool"
														},
														{
															"components": [
																{
																	"internalType": "uint256",
																	"name": "keyType",
																	"type": "uint256"
																},
																{
																	"components": [
																		{
																			"internalType": "bool",
																			"name": "inheritAccountKey",
																			"type": "bool"
																		},
																		{
																			"internalType": "address",
																			"name": "contractId",
																			"type": "address"
																		},
																		{
																			"internalType": "bytes",
																			"name": "ed25519",
																			"type": "bytes"
																		},
																		{
																			"internalType": "bytes",
																			"name": "ECDSA_secp256k1",
																			"type": "bytes"
																		},
																		{
																			"internalType": "address",
																			"name": "delegatableContractId",
																			"type": "address"
																		}
																	],
																	"internalType": "struct IHederaTokenService.KeyValue",
																	"name": "key",
																	"type": "tuple"
																}
															],
															"internalType": "struct IHederaTokenService.TokenKey[]",
															"name": "tokenKeys",
															"type": "tuple[]"
														},
														{
															"components": [
																{
																	"internalType": "uint32",
																	"name": "second",
																	"type": "uint32"
																},
																{
																	"internalType": "address",
																	"name": "autoRenewAccount",
																	"type": "address"
																},
																{
																	"internalType": "uint32",
																	"name": "autoRenewPeriod",
																	"type": "uint32"
																}
															],
															"internalType": "struct IHederaTokenService.Expiry",
															"name": "expiry",
															"type": "tuple"
														}
													],
													"internalType": "struct IHederaTokenService.HederaToken",
													"name": "token",
													"type": "tuple"
												},
												{
													"internalType": "uint64",
													"name": "totalSupply",
													"type": "uint64"
												},
												{
													"internalType": "bool",
													"name": "deleted",
													"type": "bool"
												},
												{
													"internalType": "bool",
													"name": "defaultKycStatus",
													"type": "bool"
												},
												{
													"internalType": "bool",
													"name": "pauseStatus",
													"type": "bool"
												},
												{
													"components": [
														{
															"internalType": "uint32",
															"name": "amount",
															"type": "uint32"
														},
														{
															"internalType": "address",
															"name": "tokenId",
															"type": "address"
														},
														{
															"internalType": "bool",
															"name": "useHbarsForPayment",
															"type": "bool"
														},
														{
															"internalType": "bool",
															"name": "useCurrentTokenForPayment",
															"type": "bool"
														},
														{
															"internalType": "address",
															"name": "feeCollector",
															"type": "address"
														}
													],
													"internalType": "struct IHederaTokenService.FixedFee[]",
													"name": "fixedFees",
													"type": "tuple[]"
												},
												{
													"components": [
														{
															"internalType": "uint32",
															"name": "numerator",
															"type": "uint32"
														},
														{
															"internalType": "uint32",
															"name": "denominator",
															"type": "uint32"
														},
														{
															"internalType": "uint32",
															"name": "minimumAmount",
															"type": "uint32"
														},
														{
															"internalType": "uint32",
															"name": "maximumAmount",
															"type": "uint32"
														},
														{
															"internalType": "bool",
															"name": "netOfTransfers",
															"type": "bool"
														},
														{
															"internalType": "address",
															"name": "feeCollector",
															"type": "address"
														}
													],
													"internalType": "struct IHederaTokenService.FractionalFee[]",
													"name": "fractionalFees",
													"type": "tuple[]"
												},
												{
													"components": [
														{
															"internalType": "uint32",
															"name": "numerator",
															"type": "uint32"
														},
														{
															"internalType": "uint32",
															"name": "denominator",
															"type": "uint32"
														},
														{
															"internalType": "uint32",
															"name": "amount",
															"type": "uint32"
														},
														{
															"internalType": "address",
															"name": "tokenId",
															"type": "address"
														},
														{
															"internalType": "bool",
															"name": "useHbarsForPayment",
															"type": "bool"
														},
														{
															"internalType": "address",
															"name": "feeCollector",
															"type": "address"
														}
													],
													"internalType": "struct IHederaTokenService.RoyaltyFee[]",
													"name": "royaltyFees",
													"type": "tuple[]"
												},
												{
													"internalType": "string",
													"name": "ledgerId",
													"type": "string"
												}
											],
											"internalType": "struct IHederaTokenService.TokenInfo",
											"name": "tokenInfo",
											"type": "tuple"
										},
										{
											"internalType": "uint32",
											"name": "decimals",
											"type": "uint32"
										}
									],
									"internalType": "struct IHederaTokenService.FungibleTokenInfo",
									"name": "fungibleTokenInfo",
									"type": "tuple"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "int64",
									"name": "serialNumber",
									"type": "int64"
								}
							],
							"name": "getNonFungibleTokenInfo",
							"outputs": [
								{
									"internalType": "int64",
									"name": "responseCode",
									"type": "int64"
								},
								{
									"components": [
										{
											"components": [
												{
													"components": [
														{
															"internalType": "string",
															"name": "name",
															"type": "string"
														},
														{
															"internalType": "string",
															"name": "symbol",
															"type": "string"
														},
														{
															"internalType": "address",
															"name": "treasury",
															"type": "address"
														},
														{
															"internalType": "string",
															"name": "memo",
															"type": "string"
														},
														{
															"internalType": "bool",
															"name": "tokenSupplyType",
															"type": "bool"
														},
														{
															"internalType": "int64",
															"name": "maxSupply",
															"type": "int64"
														},
														{
															"internalType": "bool",
															"name": "freezeDefault",
															"type": "bool"
														},
														{
															"components": [
																{
																	"internalType": "uint256",
																	"name": "keyType",
																	"type": "uint256"
																},
																{
																	"components": [
																		{
																			"internalType": "bool",
																			"name": "inheritAccountKey",
																			"type": "bool"
																		},
																		{
																			"internalType": "address",
																			"name": "contractId",
																			"type": "address"
																		},
																		{
																			"internalType": "bytes",
																			"name": "ed25519",
																			"type": "bytes"
																		},
																		{
																			"internalType": "bytes",
																			"name": "ECDSA_secp256k1",
																			"type": "bytes"
																		},
																		{
																			"internalType": "address",
																			"name": "delegatableContractId",
																			"type": "address"
																		}
																	],
																	"internalType": "struct IHederaTokenService.KeyValue",
																	"name": "key",
																	"type": "tuple"
																}
															],
															"internalType": "struct IHederaTokenService.TokenKey[]",
															"name": "tokenKeys",
															"type": "tuple[]"
														},
														{
															"components": [
																{
																	"internalType": "uint32",
																	"name": "second",
																	"type": "uint32"
																},
																{
																	"internalType": "address",
																	"name": "autoRenewAccount",
																	"type": "address"
																},
																{
																	"internalType": "uint32",
																	"name": "autoRenewPeriod",
																	"type": "uint32"
																}
															],
															"internalType": "struct IHederaTokenService.Expiry",
															"name": "expiry",
															"type": "tuple"
														}
													],
													"internalType": "struct IHederaTokenService.HederaToken",
													"name": "token",
													"type": "tuple"
												},
												{
													"internalType": "uint64",
													"name": "totalSupply",
													"type": "uint64"
												},
												{
													"internalType": "bool",
													"name": "deleted",
													"type": "bool"
												},
												{
													"internalType": "bool",
													"name": "defaultKycStatus",
													"type": "bool"
												},
												{
													"internalType": "bool",
													"name": "pauseStatus",
													"type": "bool"
												},
												{
													"components": [
														{
															"internalType": "uint32",
															"name": "amount",
															"type": "uint32"
														},
														{
															"internalType": "address",
															"name": "tokenId",
															"type": "address"
														},
														{
															"internalType": "bool",
															"name": "useHbarsForPayment",
															"type": "bool"
														},
														{
															"internalType": "bool",
															"name": "useCurrentTokenForPayment",
															"type": "bool"
														},
														{
															"internalType": "address",
															"name": "feeCollector",
															"type": "address"
														}
													],
													"internalType": "struct IHederaTokenService.FixedFee[]",
													"name": "fixedFees",
													"type": "tuple[]"
												},
												{
													"components": [
														{
															"internalType": "uint32",
															"name": "numerator",
															"type": "uint32"
														},
														{
															"internalType": "uint32",
															"name": "denominator",
															"type": "uint32"
														},
														{
															"internalType": "uint32",
															"name": "minimumAmount",
															"type": "uint32"
														},
														{
															"internalType": "uint32",
															"name": "maximumAmount",
															"type": "uint32"
														},
														{
															"internalType": "bool",
															"name": "netOfTransfers",
															"type": "bool"
														},
														{
															"internalType": "address",
															"name": "feeCollector",
															"type": "address"
														}
													],
													"internalType": "struct IHederaTokenService.FractionalFee[]",
													"name": "fractionalFees",
													"type": "tuple[]"
												},
												{
													"components": [
														{
															"internalType": "uint32",
															"name": "numerator",
															"type": "uint32"
														},
														{
															"internalType": "uint32",
															"name": "denominator",
															"type": "uint32"
														},
														{
															"internalType": "uint32",
															"name": "amount",
															"type": "uint32"
														},
														{
															"internalType": "address",
															"name": "tokenId",
															"type": "address"
														},
														{
															"internalType": "bool",
															"name": "useHbarsForPayment",
															"type": "bool"
														},
														{
															"internalType": "address",
															"name": "feeCollector",
															"type": "address"
														}
													],
													"internalType": "struct IHederaTokenService.RoyaltyFee[]",
													"name": "royaltyFees",
													"type": "tuple[]"
												},
												{
													"internalType": "string",
													"name": "ledgerId",
													"type": "string"
												}
											],
											"internalType": "struct IHederaTokenService.TokenInfo",
											"name": "tokenInfo",
											"type": "tuple"
										},
										{
											"internalType": "int64",
											"name": "serialNumber",
											"type": "int64"
										},
										{
											"internalType": "address",
											"name": "ownerId",
											"type": "address"
										},
										{
											"internalType": "int64",
											"name": "creationTime",
											"type": "int64"
										},
										{
											"internalType": "bytes",
											"name": "metadata",
											"type": "bytes"
										},
										{
											"internalType": "address",
											"name": "spenderId",
											"type": "address"
										}
									],
									"internalType": "struct IHederaTokenService.NonFungibleTokenInfo",
									"name": "nonFungibleTokenInfo",
									"type": "tuple"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "getTokenCustomFees",
							"outputs": [
								{
									"internalType": "int64",
									"name": "responseCode",
									"type": "int64"
								},
								{
									"components": [
										{
											"internalType": "uint32",
											"name": "amount",
											"type": "uint32"
										},
										{
											"internalType": "address",
											"name": "tokenId",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "useHbarsForPayment",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "useCurrentTokenForPayment",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "feeCollector",
											"type": "address"
										}
									],
									"internalType": "struct IHederaTokenService.FixedFee[]",
									"name": "fixedFees",
									"type": "tuple[]"
								},
								{
									"components": [
										{
											"internalType": "uint32",
											"name": "numerator",
											"type": "uint32"
										},
										{
											"internalType": "uint32",
											"name": "denominator",
											"type": "uint32"
										},
										{
											"internalType": "uint32",
											"name": "minimumAmount",
											"type": "uint32"
										},
										{
											"internalType": "uint32",
											"name": "maximumAmount",
											"type": "uint32"
										},
										{
											"internalType": "bool",
											"name": "netOfTransfers",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "feeCollector",
											"type": "address"
										}
									],
									"internalType": "struct IHederaTokenService.FractionalFee[]",
									"name": "fractionalFees",
									"type": "tuple[]"
								},
								{
									"components": [
										{
											"internalType": "uint32",
											"name": "numerator",
											"type": "uint32"
										},
										{
											"internalType": "uint32",
											"name": "denominator",
											"type": "uint32"
										},
										{
											"internalType": "uint32",
											"name": "amount",
											"type": "uint32"
										},
										{
											"internalType": "address",
											"name": "tokenId",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "useHbarsForPayment",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "feeCollector",
											"type": "address"
										}
									],
									"internalType": "struct IHederaTokenService.RoyaltyFee[]",
									"name": "royaltyFees",
									"type": "tuple[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "getTokenDefaultFreezeStatus",
							"outputs": [
								{
									"internalType": "int64",
									"name": "responseCode",
									"type": "int64"
								},
								{
									"internalType": "bool",
									"name": "defaultFreezeStatus",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "getTokenDefaultKycStatus",
							"outputs": [
								{
									"internalType": "int64",
									"name": "responseCode",
									"type": "int64"
								},
								{
									"internalType": "bool",
									"name": "defaultKycStatus",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "getTokenExpiryInfo",
							"outputs": [
								{
									"internalType": "int64",
									"name": "responseCode",
									"type": "int64"
								},
								{
									"components": [
										{
											"internalType": "uint32",
											"name": "second",
											"type": "uint32"
										},
										{
											"internalType": "address",
											"name": "autoRenewAccount",
											"type": "address"
										},
										{
											"internalType": "uint32",
											"name": "autoRenewPeriod",
											"type": "uint32"
										}
									],
									"internalType": "struct IHederaTokenService.Expiry",
									"name": "expiry",
									"type": "tuple"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "getTokenInfo",
							"outputs": [
								{
									"internalType": "int64",
									"name": "responseCode",
									"type": "int64"
								},
								{
									"components": [
										{
											"components": [
												{
													"internalType": "string",
													"name": "name",
													"type": "string"
												},
												{
													"internalType": "string",
													"name": "symbol",
													"type": "string"
												},
												{
													"internalType": "address",
													"name": "treasury",
													"type": "address"
												},
												{
													"internalType": "string",
													"name": "memo",
													"type": "string"
												},
												{
													"internalType": "bool",
													"name": "tokenSupplyType",
													"type": "bool"
												},
												{
													"internalType": "int64",
													"name": "maxSupply",
													"type": "int64"
												},
												{
													"internalType": "bool",
													"name": "freezeDefault",
													"type": "bool"
												},
												{
													"components": [
														{
															"internalType": "uint256",
															"name": "keyType",
															"type": "uint256"
														},
														{
															"components": [
																{
																	"internalType": "bool",
																	"name": "inheritAccountKey",
																	"type": "bool"
																},
																{
																	"internalType": "address",
																	"name": "contractId",
																	"type": "address"
																},
																{
																	"internalType": "bytes",
																	"name": "ed25519",
																	"type": "bytes"
																},
																{
																	"internalType": "bytes",
																	"name": "ECDSA_secp256k1",
																	"type": "bytes"
																},
																{
																	"internalType": "address",
																	"name": "delegatableContractId",
																	"type": "address"
																}
															],
															"internalType": "struct IHederaTokenService.KeyValue",
															"name": "key",
															"type": "tuple"
														}
													],
													"internalType": "struct IHederaTokenService.TokenKey[]",
													"name": "tokenKeys",
													"type": "tuple[]"
												},
												{
													"components": [
														{
															"internalType": "uint32",
															"name": "second",
															"type": "uint32"
														},
														{
															"internalType": "address",
															"name": "autoRenewAccount",
															"type": "address"
														},
														{
															"internalType": "uint32",
															"name": "autoRenewPeriod",
															"type": "uint32"
														}
													],
													"internalType": "struct IHederaTokenService.Expiry",
													"name": "expiry",
													"type": "tuple"
												}
											],
											"internalType": "struct IHederaTokenService.HederaToken",
											"name": "token",
											"type": "tuple"
										},
										{
											"internalType": "uint64",
											"name": "totalSupply",
											"type": "uint64"
										},
										{
											"internalType": "bool",
											"name": "deleted",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "defaultKycStatus",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "pauseStatus",
											"type": "bool"
										},
										{
											"components": [
												{
													"internalType": "uint32",
													"name": "amount",
													"type": "uint32"
												},
												{
													"internalType": "address",
													"name": "tokenId",
													"type": "address"
												},
												{
													"internalType": "bool",
													"name": "useHbarsForPayment",
													"type": "bool"
												},
												{
													"internalType": "bool",
													"name": "useCurrentTokenForPayment",
													"type": "bool"
												},
												{
													"internalType": "address",
													"name": "feeCollector",
													"type": "address"
												}
											],
											"internalType": "struct IHederaTokenService.FixedFee[]",
											"name": "fixedFees",
											"type": "tuple[]"
										},
										{
											"components": [
												{
													"internalType": "uint32",
													"name": "numerator",
													"type": "uint32"
												},
												{
													"internalType": "uint32",
													"name": "denominator",
													"type": "uint32"
												},
												{
													"internalType": "uint32",
													"name": "minimumAmount",
													"type": "uint32"
												},
												{
													"internalType": "uint32",
													"name": "maximumAmount",
													"type": "uint32"
												},
												{
													"internalType": "bool",
													"name": "netOfTransfers",
													"type": "bool"
												},
												{
													"internalType": "address",
													"name": "feeCollector",
													"type": "address"
												}
											],
											"internalType": "struct IHederaTokenService.FractionalFee[]",
											"name": "fractionalFees",
											"type": "tuple[]"
										},
										{
											"components": [
												{
													"internalType": "uint32",
													"name": "numerator",
													"type": "uint32"
												},
												{
													"internalType": "uint32",
													"name": "denominator",
													"type": "uint32"
												},
												{
													"internalType": "uint32",
													"name": "amount",
													"type": "uint32"
												},
												{
													"internalType": "address",
													"name": "tokenId",
													"type": "address"
												},
												{
													"internalType": "bool",
													"name": "useHbarsForPayment",
													"type": "bool"
												},
												{
													"internalType": "address",
													"name": "feeCollector",
													"type": "address"
												}
											],
											"internalType": "struct IHederaTokenService.RoyaltyFee[]",
											"name": "royaltyFees",
											"type": "tuple[]"
										},
										{
											"internalType": "string",
											"name": "ledgerId",
											"type": "string"
										}
									],
									"internalType": "struct IHederaTokenService.TokenInfo",
									"name": "tokenInfo",
									"type": "tuple"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "keyType",
									"type": "uint256"
								}
							],
							"name": "getTokenKey",
							"outputs": [
								{
									"internalType": "int64",
									"name": "responseCode",
									"type": "int64"
								},
								{
									"components": [
										{
											"internalType": "bool",
											"name": "inheritAccountKey",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "contractId",
											"type": "address"
										},
										{
											"internalType": "bytes",
											"name": "ed25519",
											"type": "bytes"
										},
										{
											"internalType": "bytes",
											"name": "ECDSA_secp256k1",
											"type": "bytes"
										},
										{
											"internalType": "address",
											"name": "delegatableContractId",
											"type": "address"
										}
									],
									"internalType": "struct IHederaTokenService.KeyValue",
									"name": "key",
									"type": "tuple"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "getTokenType",
							"outputs": [
								{
									"internalType": "int64",
									"name": "responseCode",
									"type": "int64"
								},
								{
									"internalType": "int32",
									"name": "tokenType",
									"type": "int32"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantTokenKyc",
							"outputs": [
								{
									"internalType": "int64",
									"name": "responseCode",
									"type": "int64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "int64",
									"name": "responseCode",
									"type": "int64"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isFrozen",
							"outputs": [
								{
									"internalType": "int64",
									"name": "responseCode",
									"type": "int64"
								},
								{
									"internalType": "bool",
									"name": "frozen",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isKyc",
							"outputs": [
								{
									"internalType": "int64",
									"name": "responseCode",
									"type": "int64"
								},
								{
									"internalType": "bool",
									"name": "kycGranted",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "isToken",
							"outputs": [
								{
									"internalType": "int64",
									"name": "responseCode",
									"type": "int64"
								},
								{
									"internalType": "bool",
									"name": "isToken",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint64",
									"name": "amount",
									"type": "uint64"
								},
								{
									"internalType": "bytes[]",
									"name": "metadata",
									"type": "bytes[]"
								}
							],
							"name": "mintToken",
							"outputs": [
								{
									"internalType": "int64",
									"name": "responseCode",
									"type": "int64"
								},
								{
									"internalType": "uint64",
									"name": "newTotalSupply",
									"type": "uint64"
								},
								{
									"internalType": "int64[]",
									"name": "serialNumbers",
									"type": "int64[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "pauseToken",
							"outputs": [
								{
									"internalType": "int64",
									"name": "responseCode",
									"type": "int64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeTokenKyc",
							"outputs": [
								{
									"internalType": "int64",
									"name": "responseCode",
									"type": "int64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [
								{
									"internalType": "int64",
									"name": "responseCode",
									"type": "int64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "int64",
									"name": "responseCode",
									"type": "int64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "serialNumber",
									"type": "uint256"
								}
							],
							"name": "transferFromNFT",
							"outputs": [
								{
									"internalType": "int64",
									"name": "responseCode",
									"type": "int64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int64",
									"name": "serialNumber",
									"type": "int64"
								}
							],
							"name": "transferNFT",
							"outputs": [
								{
									"internalType": "int64",
									"name": "responseCode",
									"type": "int64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address[]",
									"name": "sender",
									"type": "address[]"
								},
								{
									"internalType": "address[]",
									"name": "receiver",
									"type": "address[]"
								},
								{
									"internalType": "int64[]",
									"name": "serialNumber",
									"type": "int64[]"
								}
							],
							"name": "transferNFTs",
							"outputs": [
								{
									"internalType": "int64",
									"name": "responseCode",
									"type": "int64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int64",
									"name": "amount",
									"type": "int64"
								}
							],
							"name": "transferToken",
							"outputs": [
								{
									"internalType": "int64",
									"name": "responseCode",
									"type": "int64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address[]",
									"name": "accountId",
									"type": "address[]"
								},
								{
									"internalType": "int64[]",
									"name": "amount",
									"type": "int64[]"
								}
							],
							"name": "transferTokens",
							"outputs": [
								{
									"internalType": "int64",
									"name": "responseCode",
									"type": "int64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "unfreezeToken",
							"outputs": [
								{
									"internalType": "int64",
									"name": "responseCode",
									"type": "int64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "unpauseToken",
							"outputs": [
								{
									"internalType": "int64",
									"name": "responseCode",
									"type": "int64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"components": [
										{
											"internalType": "uint32",
											"name": "second",
											"type": "uint32"
										},
										{
											"internalType": "address",
											"name": "autoRenewAccount",
											"type": "address"
										},
										{
											"internalType": "uint32",
											"name": "autoRenewPeriod",
											"type": "uint32"
										}
									],
									"internalType": "struct IHederaTokenService.Expiry",
									"name": "expiryInfo",
									"type": "tuple"
								}
							],
							"name": "updateTokenExpiryInfo",
							"outputs": [
								{
									"internalType": "int64",
									"name": "responseCode",
									"type": "int64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"components": [
										{
											"internalType": "string",
											"name": "name",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "symbol",
											"type": "string"
										},
										{
											"internalType": "address",
											"name": "treasury",
											"type": "address"
										},
										{
											"internalType": "string",
											"name": "memo",
											"type": "string"
										},
										{
											"internalType": "bool",
											"name": "tokenSupplyType",
											"type": "bool"
										},
										{
											"internalType": "int64",
											"name": "maxSupply",
											"type": "int64"
										},
										{
											"internalType": "bool",
											"name": "freezeDefault",
											"type": "bool"
										},
										{
											"components": [
												{
													"internalType": "uint256",
													"name": "keyType",
													"type": "uint256"
												},
												{
													"components": [
														{
															"internalType": "bool",
															"name": "inheritAccountKey",
															"type": "bool"
														},
														{
															"internalType": "address",
															"name": "contractId",
															"type": "address"
														},
														{
															"internalType": "bytes",
															"name": "ed25519",
															"type": "bytes"
														},
														{
															"internalType": "bytes",
															"name": "ECDSA_secp256k1",
															"type": "bytes"
														},
														{
															"internalType": "address",
															"name": "delegatableContractId",
															"type": "address"
														}
													],
													"internalType": "struct IHederaTokenService.KeyValue",
													"name": "key",
													"type": "tuple"
												}
											],
											"internalType": "struct IHederaTokenService.TokenKey[]",
											"name": "tokenKeys",
											"type": "tuple[]"
										},
										{
											"components": [
												{
													"internalType": "uint32",
													"name": "second",
													"type": "uint32"
												},
												{
													"internalType": "address",
													"name": "autoRenewAccount",
													"type": "address"
												},
												{
													"internalType": "uint32",
													"name": "autoRenewPeriod",
													"type": "uint32"
												}
											],
											"internalType": "struct IHederaTokenService.Expiry",
											"name": "expiry",
											"type": "tuple"
										}
									],
									"internalType": "struct IHederaTokenService.HederaToken",
									"name": "tokenInfo",
									"type": "tuple"
								}
							],
							"name": "updateTokenInfo",
							"outputs": [
								{
									"internalType": "int64",
									"name": "responseCode",
									"type": "int64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "keyType",
											"type": "uint256"
										},
										{
											"components": [
												{
													"internalType": "bool",
													"name": "inheritAccountKey",
													"type": "bool"
												},
												{
													"internalType": "address",
													"name": "contractId",
													"type": "address"
												},
												{
													"internalType": "bytes",
													"name": "ed25519",
													"type": "bytes"
												},
												{
													"internalType": "bytes",
													"name": "ECDSA_secp256k1",
													"type": "bytes"
												},
												{
													"internalType": "address",
													"name": "delegatableContractId",
													"type": "address"
												}
											],
											"internalType": "struct IHederaTokenService.KeyValue",
											"name": "key",
											"type": "tuple"
										}
									],
									"internalType": "struct IHederaTokenService.TokenKey[]",
									"name": "keys",
									"type": "tuple[]"
								}
							],
							"name": "updateTokenKeys",
							"outputs": [
								{
									"internalType": "int64",
									"name": "responseCode",
									"type": "int64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint32",
									"name": "amount",
									"type": "uint32"
								}
							],
							"name": "wipeTokenAccount",
							"outputs": [
								{
									"internalType": "int64",
									"name": "responseCode",
									"type": "int64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "int64[]",
									"name": "serialNumbers",
									"type": "int64[]"
								}
							],
							"name": "wipeTokenAccountNFT",
							"outputs": [
								{
									"internalType": "int64",
									"name": "responseCode",
									"type": "int64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address,address)": {
								"params": {
									"owner": "the owner of the tokens to be spent",
									"spender": "the spender of the tokens",
									"token": "The Hedera token address to check the allowance of"
								},
								"returns": {
									"allowance": "The amount which spender is still allowed to withdraw from owner.",
									"responseCode": "The response code for the status of the request. SUCCESS is 22."
								}
							},
							"approve(address,address,uint256)": {
								"params": {
									"amount": "the amount of tokens authorized to spend.",
									"spender": "the account address authorized to spend",
									"token": "The hedera token address to approve"
								},
								"returns": {
									"responseCode": "The response code for the status of the request. SUCCESS is 22."
								}
							},
							"approveNFT(address,address,uint256)": {
								"params": {
									"approved": "The new approved NFT controller.  To revoke approvals pass in the zero address.",
									"serialNumber": "The NFT serial number  to approve",
									"token": "The Hedera NFT token address to approve"
								},
								"returns": {
									"responseCode": "The response code for the status of the request. SUCCESS is 22."
								}
							},
							"associateToken(address,address)": {
								"params": {
									"account": "The account to be associated with the provided token",
									"token": "The token to be associated with the provided account"
								}
							},
							"associateTokens(address,address[])": {
								"params": {
									"account": "The account to be associated with the provided tokens",
									"tokens": "The tokens to be associated with the provided account. In the case of NON_FUNGIBLE_UNIQUE               Type, once an account is associated, it can hold any number of NFTs (serial numbers) of that               token type"
								},
								"returns": {
									"responseCode": "The response code for the status of the request. SUCCESS is 22."
								}
							},
							"burnToken(address,uint64,int64[])": {
								"params": {
									"amount": "Applicable to tokens of type FUNGIBLE_COMMON. The amount to burn from the Treasury Account.                Amount must be a positive non-zero number, not bigger than the token balance of the treasury                account (0; balance], represented in the lowest denomination.",
									"serialNumbers": "Applicable to tokens of type NON_FUNGIBLE_UNIQUE. The list of serial numbers to be burned.",
									"token": "The token for which to burn tokens. If token does not exist, transaction results in              INVALID_TOKEN_ID"
								},
								"returns": {
									"newTotalSupply": "The new supply of tokens. For NFTs it is the total count of NFTs",
									"responseCode": "The response code for the status of the request. SUCCESS is 22."
								}
							},
							"createFungibleToken((string,string,address,string,bool,int64,bool,(uint256,(bool,address,bytes,bytes,address))[],(uint32,address,uint32)),uint64,uint32)": {
								"params": {
									"decimals": "the number of decimal places a token is divisible by",
									"initialTotalSupply": "Specifies the initial supply of tokens to be put in circulation. The initial supply is sent to the Treasury Account. The supply is in the lowest denomination possible.",
									"token": "the basic properties of the token being created"
								},
								"returns": {
									"responseCode": "The response code for the status of the request. SUCCESS is 22.",
									"tokenAddress": "the created token's address"
								}
							},
							"createFungibleTokenWithCustomFees((string,string,address,string,bool,int64,bool,(uint256,(bool,address,bytes,bytes,address))[],(uint32,address,uint32)),uint64,uint32,(uint32,address,bool,bool,address)[],(uint32,uint32,uint32,uint32,bool,address)[])": {
								"params": {
									"decimals": "the number of decimal places a token is divisible by.",
									"fixedFees": "list of fixed fees to apply to the token",
									"fractionalFees": "list of fractional fees to apply to the token",
									"initialTotalSupply": "Specifies the initial supply of tokens to be put in circulation. The initial supply is sent to the Treasury Account. The supply is in the lowest denomination possible.",
									"token": "the basic properties of the token being created"
								},
								"returns": {
									"responseCode": "The response code for the status of the request. SUCCESS is 22.",
									"tokenAddress": "the created token's address"
								}
							},
							"createNonFungibleToken((string,string,address,string,bool,int64,bool,(uint256,(bool,address,bytes,bytes,address))[],(uint32,address,uint32)))": {
								"params": {
									"token": "the basic properties of the token being created"
								},
								"returns": {
									"responseCode": "The response code for the status of the request. SUCCESS is 22.",
									"tokenAddress": "the created token's address"
								}
							},
							"createNonFungibleTokenWithCustomFees((string,string,address,string,bool,int64,bool,(uint256,(bool,address,bytes,bytes,address))[],(uint32,address,uint32)),(uint32,address,bool,bool,address)[],(uint32,uint32,uint32,address,bool,address)[])": {
								"params": {
									"fixedFees": "list of fixed fees to apply to the token",
									"royaltyFees": "list of royalty fees to apply to the token",
									"token": "the basic properties of the token being created"
								},
								"returns": {
									"responseCode": "The response code for the status of the request. SUCCESS is 22.",
									"tokenAddress": "the created token's address"
								}
							},
							"cryptoTransfer(((address,int64,bool)[]),(address,(address,int64,bool)[],(address,address,int64,bool)[])[])": {
								"custom:version": "0.3.0 the signature of the previous version was cryptoTransfer(TokenTransferList[] memory tokenTransfers)",
								"params": {
									"tokenTransfers": "the list of token transfers to do",
									"transferList": "the list of hbar transfers to do"
								}
							},
							"deleteToken(address)": {
								"params": {
									"token": "The token address to be deleted"
								},
								"returns": {
									"responseCode": "The response code for the status of the request. SUCCESS is 22."
								}
							},
							"dissociateToken(address,address)": {
								"params": {
									"account": "The account to be associated with the provided token",
									"token": "The token to be associated with the provided account"
								}
							},
							"dissociateTokens(address,address[])": {
								"params": {
									"account": "The account to be dissociated from the provided tokens",
									"tokens": "The tokens to be dissociated from the provided account."
								},
								"returns": {
									"responseCode": "The response code for the status of the request. SUCCESS is 22."
								}
							},
							"freezeToken(address,address)": {
								"params": {
									"account": "The account address to be frozen",
									"token": "The token address"
								},
								"returns": {
									"responseCode": "The response code for the status of the request. SUCCESS is 22."
								}
							},
							"getApproved(address,uint256)": {
								"params": {
									"serialNumber": "The NFT to find the approved address for",
									"token": "The Hedera NFT token address to check approval"
								},
								"returns": {
									"approved": "The approved address for this NFT, or the zero address if there is none",
									"responseCode": "The response code for the status of the request. SUCCESS is 22."
								}
							},
							"getFungibleTokenInfo(address)": {
								"params": {
									"token": "The token address to check"
								},
								"returns": {
									"fungibleTokenInfo": "FungibleTokenInfo info for `token`",
									"responseCode": "The response code for the status of the request. SUCCESS is 22."
								}
							},
							"getNonFungibleTokenInfo(address,int64)": {
								"params": {
									"serialNumber": "The NFT serialNumber to check",
									"token": "The token address to check"
								},
								"returns": {
									"nonFungibleTokenInfo": "NonFungibleTokenInfo info for `token` `serialNumber`",
									"responseCode": "The response code for the status of the request. SUCCESS is 22."
								}
							},
							"getTokenCustomFees(address)": {
								"params": {
									"token": "The token address to check"
								},
								"returns": {
									"fixedFees": "Set of fixed fees for `token`",
									"fractionalFees": "Set of fractional fees for `token`",
									"responseCode": "The response code for the status of the request. SUCCESS is 22.",
									"royaltyFees": "Set of royalty fees for `token`"
								}
							},
							"getTokenDefaultFreezeStatus(address)": {
								"params": {
									"token": "The token address to check"
								},
								"returns": {
									"defaultFreezeStatus": "True if `token` default freeze status is frozen.",
									"responseCode": "The response code for the status of the request. SUCCESS is 22."
								}
							},
							"getTokenDefaultKycStatus(address)": {
								"params": {
									"token": "The token address to check"
								},
								"returns": {
									"defaultKycStatus": "True if `token` default kyc status is KycNotApplicable and false if Revoked.",
									"responseCode": "The response code for the status of the request. SUCCESS is 22."
								}
							},
							"getTokenExpiryInfo(address)": {
								"params": {
									"token": "The token address to check"
								},
								"returns": {
									"expiry": "Expiry info for `token`",
									"responseCode": "The response code for the status of the request. SUCCESS is 22."
								}
							},
							"getTokenInfo(address)": {
								"params": {
									"token": "The token address to check"
								},
								"returns": {
									"responseCode": "The response code for the status of the request. SUCCESS is 22.",
									"tokenInfo": "TokenInfo info for `token`"
								}
							},
							"getTokenKey(address,uint256)": {
								"params": {
									"keyType": "The keyType of the desired KeyValue",
									"token": "The token address to check"
								},
								"returns": {
									"key": "KeyValue info for key of type `keyType`",
									"responseCode": "The response code for the status of the request. SUCCESS is 22."
								}
							},
							"getTokenType(address)": {
								"params": {
									"token": "The token address"
								},
								"returns": {
									"responseCode": "The response code for the status of the request. SUCCESS is 22.    ",
									"tokenType": "the token type. 0 is FUNGIBLE_COMMON, 1 is NON_FUNGIBLE_UNIQUE, -1 is UNRECOGNIZED   "
								}
							},
							"grantTokenKyc(address,address)": {
								"params": {
									"account": "The account address to grant kyc",
									"token": "The token address"
								},
								"returns": {
									"responseCode": "The response code for the status of the request. SUCCESS is 22."
								}
							},
							"isApprovedForAll(address,address,address)": {
								"params": {
									"operator": "The address that acts on behalf of the owner",
									"owner": "The address that owns the NFTs",
									"token": "The Hedera NFT token address to approve"
								},
								"returns": {
									"approved": "True if `operator` is an approved operator for `owner`, false otherwise",
									"responseCode": "The response code for the status of the request. SUCCESS is 22."
								}
							},
							"isFrozen(address,address)": {
								"params": {
									"account": "The account address associated with the token",
									"token": "The token address to check"
								},
								"returns": {
									"frozen": "True if `account` is frozen for `token`",
									"responseCode": "The response code for the status of the request. SUCCESS is 22."
								}
							},
							"isKyc(address,address)": {
								"params": {
									"account": "The account address associated with the token",
									"token": "The token address to check"
								},
								"returns": {
									"kycGranted": "True if `account` has kyc granted for `token`",
									"responseCode": "The response code for the status of the request. SUCCESS is 22."
								}
							},
							"isToken(address)": {
								"params": {
									"token": "The token address"
								},
								"returns": {
									"isToken": "True if valid token found for the given address     ",
									"responseCode": "The response code for the status of the request. SUCCESS is 22.    "
								}
							},
							"mintToken(address,uint64,bytes[])": {
								"params": {
									"amount": "Applicable to tokens of type FUNGIBLE_COMMON. The amount to mint to the Treasury Account.               Amount must be a positive non-zero number represented in the lowest denomination of the               token. The new supply must be lower than 2^63.",
									"metadata": "Applicable to tokens of type NON_FUNGIBLE_UNIQUE. A list of metadata that are being created.                 Maximum allowed size of each metadata is 100 bytes",
									"token": "The token for which to mint tokens. If token does not exist, transaction results in              INVALID_TOKEN_ID"
								},
								"returns": {
									"newTotalSupply": "The new supply of tokens. For NFTs it is the total count of NFTs",
									"responseCode": "The response code for the status of the request. SUCCESS is 22.",
									"serialNumbers": "If the token is an NFT the newly generate serial numbers, othersise empty."
								}
							},
							"pauseToken(address)": {
								"params": {
									"token": "The token address to be paused"
								},
								"returns": {
									"responseCode": "The response code for the status of the request. SUCCESS is 22."
								}
							},
							"revokeTokenKyc(address,address)": {
								"params": {
									"account": "The account address to revoke kyc",
									"token": "The token address"
								},
								"returns": {
									"responseCode": "The response code for the status of the request. SUCCESS is 22."
								}
							},
							"setApprovalForAll(address,address,bool)": {
								"params": {
									"approved": "True if the operator is approved, false to revoke approval",
									"operator": "Address to add to the set of authorized operators",
									"token": "The Hedera NFT token address to approve"
								},
								"returns": {
									"responseCode": "The response code for the status of the request. SUCCESS is 22."
								}
							},
							"transferFrom(address,address,address,uint256)": {
								"params": {
									"amount": "The amount of tokens to transfer from `from` to `to`",
									"from": "The account address of the owner of the token, on the behalf of which to transfer `amount` tokens",
									"to": "The account address of the receiver of the `amount` tokens",
									"token": "The address of the fungible Hedera token to transfer"
								},
								"returns": {
									"responseCode": "The response code for the status of the request. SUCCESS is 22."
								}
							},
							"transferFromNFT(address,address,address,uint256)": {
								"params": {
									"from": "The account address of the owner of `serialNumber` of `token`",
									"serialNumber": "The NFT serial number to transfer",
									"to": "The account address of the receiver of `serialNumber`",
									"token": "The address of the non-fungible Hedera token to transfer"
								},
								"returns": {
									"responseCode": "The response code for the status of the request. SUCCESS is 22."
								}
							},
							"transferNFT(address,address,address,int64)": {
								"params": {
									"recipient": "The receiver of the transaction",
									"sender": "The sender for the transaction",
									"serialNumber": "The serial number of the NFT to transfer.",
									"token": "The token to transfer to/from"
								}
							},
							"transferNFTs(address,address[],address[],int64[])": {
								"params": {
									"receiver": "the receiver of the nft sent by the same index at sender",
									"sender": "the sender of an nft",
									"serialNumber": "the serial number of the nft sent by the same index at sender",
									"token": "The ID of the token as a solidity address"
								}
							},
							"transferToken(address,address,address,int64)": {
								"params": {
									"amount": "Non-negative value to send. a negative value will result in a failure.",
									"recipient": "The receiver of the transaction",
									"sender": "The sender for the transaction",
									"token": "The token to transfer to/from"
								}
							},
							"transferTokens(address,address[],int64[])": {
								"params": {
									"accountId": "account to do a transfer to/from",
									"amount": "The amount from the accountId at the same index",
									"token": "The ID of the token as a solidity address"
								}
							},
							"unfreezeToken(address,address)": {
								"params": {
									"account": "The account address to be unfrozen",
									"token": "The token address"
								},
								"returns": {
									"responseCode": "The response code for the status of the request. SUCCESS is 22."
								}
							},
							"unpauseToken(address)": {
								"params": {
									"token": "The token address to be unpaused"
								},
								"returns": {
									"responseCode": "The response code for the status of the request. SUCCESS is 22."
								}
							},
							"updateTokenExpiryInfo(address,(uint32,address,uint32))": {
								"params": {
									"expiryInfo": "The hedera token expiry info",
									"token": "The token address"
								},
								"returns": {
									"responseCode": "The response code for the status of the request. SUCCESS is 22."
								}
							},
							"updateTokenInfo(address,(string,string,address,string,bool,int64,bool,(uint256,(bool,address,bytes,bytes,address))[],(uint32,address,uint32)))": {
								"params": {
									"token": "The token address",
									"tokenInfo": "The hedera token info to update token with"
								},
								"returns": {
									"responseCode": "The response code for the status of the request. SUCCESS is 22."
								}
							},
							"updateTokenKeys(address,(uint256,(bool,address,bytes,bytes,address))[])": {
								"params": {
									"keys": "The token keys",
									"token": "The token address"
								},
								"returns": {
									"responseCode": "The response code for the status of the request. SUCCESS is 22."
								}
							},
							"wipeTokenAccount(address,address,uint32)": {
								"params": {
									"account": "The account address to revoke kyc",
									"amount": "The number of tokens to wipe",
									"token": "The token address"
								},
								"returns": {
									"responseCode": "The response code for the status of the request. SUCCESS is 22."
								}
							},
							"wipeTokenAccountNFT(address,address,int64[])": {
								"params": {
									"account": "The account address to revoke kyc",
									"serialNumbers": "The serial numbers of token to wipe",
									"token": "The token address"
								},
								"returns": {
									"responseCode": "The response code for the status of the request. SUCCESS is 22."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address,address)": "927da105",
							"approve(address,address,uint256)": "e1f21c67",
							"approveNFT(address,address,uint256)": "7336aaf0",
							"associateToken(address,address)": "49146bde",
							"associateTokens(address,address[])": "2e63879b",
							"burnToken(address,uint64,int64[])": "acb9cff9",
							"createFungibleToken((string,string,address,string,bool,int64,bool,(uint256,(bool,address,bytes,bytes,address))[],(uint32,address,uint32)),uint64,uint32)": "c23baeb6",
							"createFungibleTokenWithCustomFees((string,string,address,string,bool,int64,bool,(uint256,(bool,address,bytes,bytes,address))[],(uint32,address,uint32)),uint64,uint32,(uint32,address,bool,bool,address)[],(uint32,uint32,uint32,uint32,bool,address)[])": "b937581a",
							"createNonFungibleToken((string,string,address,string,bool,int64,bool,(uint256,(bool,address,bytes,bytes,address))[],(uint32,address,uint32)))": "9c89bb35",
							"createNonFungibleTokenWithCustomFees((string,string,address,string,bool,int64,bool,(uint256,(bool,address,bytes,bytes,address))[],(uint32,address,uint32)),(uint32,address,bool,bool,address)[],(uint32,uint32,uint32,address,bool,address)[])": "45733969",
							"cryptoTransfer(((address,int64,bool)[]),(address,(address,int64,bool)[],(address,address,int64,bool)[])[])": "0e71804f",
							"deleteToken(address)": "f069f712",
							"dissociateToken(address,address)": "099794e8",
							"dissociateTokens(address,address[])": "78b63918",
							"freezeToken(address,address)": "5b8f8584",
							"getApproved(address,uint256)": "098f2366",
							"getFungibleTokenInfo(address)": "3f28a19b",
							"getNonFungibleTokenInfo(address,int64)": "287e1da8",
							"getTokenCustomFees(address)": "ae7611a0",
							"getTokenDefaultFreezeStatus(address)": "a7daa18d",
							"getTokenDefaultKycStatus(address)": "335e04c1",
							"getTokenExpiryInfo(address)": "d614cdb8",
							"getTokenInfo(address)": "1f69565f",
							"getTokenKey(address,uint256)": "3c4dd32e",
							"getTokenType(address)": "93272baf",
							"grantTokenKyc(address,address)": "8f8d7f99",
							"isApprovedForAll(address,address,address)": "f49f40db",
							"isFrozen(address,address)": "46de0fb1",
							"isKyc(address,address)": "f2c31ff4",
							"isToken(address)": "19f37361",
							"mintToken(address,uint64,bytes[])": "278e0b88",
							"pauseToken(address)": "7c41ad2c",
							"revokeTokenKyc(address,address)": "af99c633",
							"setApprovalForAll(address,address,bool)": "367605ca",
							"transferFrom(address,address,address,uint256)": "15dacbea",
							"transferFromNFT(address,address,address,uint256)": "9b23d3d9",
							"transferNFT(address,address,address,int64)": "5cfc9011",
							"transferNFTs(address,address[],address[],int64[])": "2c4ba191",
							"transferToken(address,address,address,int64)": "eca36917",
							"transferTokens(address,address[],int64[])": "82bba493",
							"unfreezeToken(address,address)": "52f91387",
							"unpauseToken(address)": "3b3bff0f",
							"updateTokenExpiryInfo(address,(uint32,address,uint32))": "593d6e82",
							"updateTokenInfo(address,(string,string,address,string,bool,int64,bool,(uint256,(bool,address,bytes,bytes,address))[],(uint32,address,uint32)))": "18370d34",
							"updateTokenKeys(address,(uint256,(bool,address,bytes,bytes,address))[])": "6fc3cbaf",
							"wipeTokenAccount(address,address,uint32)": "9790686d",
							"wipeTokenAccountNFT(address,address,int64[])": "f7f38e26"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"serialNumber\",\"type\":\"uint256\"}],\"name\":\"approveNFT\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"associateToken\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"associateTokens\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"amount\",\"type\":\"uint64\"},{\"internalType\":\"int64[]\",\"name\":\"serialNumbers\",\"type\":\"int64[]\"}],\"name\":\"burnToken\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"newTotalSupply\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"treasury\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"memo\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"tokenSupplyType\",\"type\":\"bool\"},{\"internalType\":\"int64\",\"name\":\"maxSupply\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"freezeDefault\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"inheritAccountKey\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"contractId\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"ed25519\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ECDSA_secp256k1\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"delegatableContractId\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.KeyValue\",\"name\":\"key\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.TokenKey[]\",\"name\":\"tokenKeys\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"second\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"autoRenewAccount\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"autoRenewPeriod\",\"type\":\"uint32\"}],\"internalType\":\"struct IHederaTokenService.Expiry\",\"name\":\"expiry\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.HederaToken\",\"name\":\"token\",\"type\":\"tuple\"},{\"internalType\":\"uint64\",\"name\":\"initialTotalSupply\",\"type\":\"uint64\"},{\"internalType\":\"uint32\",\"name\":\"decimals\",\"type\":\"uint32\"}],\"name\":\"createFungibleToken\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"treasury\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"memo\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"tokenSupplyType\",\"type\":\"bool\"},{\"internalType\":\"int64\",\"name\":\"maxSupply\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"freezeDefault\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"inheritAccountKey\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"contractId\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"ed25519\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ECDSA_secp256k1\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"delegatableContractId\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.KeyValue\",\"name\":\"key\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.TokenKey[]\",\"name\":\"tokenKeys\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"second\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"autoRenewAccount\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"autoRenewPeriod\",\"type\":\"uint32\"}],\"internalType\":\"struct IHederaTokenService.Expiry\",\"name\":\"expiry\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.HederaToken\",\"name\":\"token\",\"type\":\"tuple\"},{\"internalType\":\"uint64\",\"name\":\"initialTotalSupply\",\"type\":\"uint64\"},{\"internalType\":\"uint32\",\"name\":\"decimals\",\"type\":\"uint32\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"amount\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"useCurrentTokenForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FixedFee[]\",\"name\":\"fixedFees\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"numerator\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"denominator\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"minimumAmount\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"maximumAmount\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"netOfTransfers\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FractionalFee[]\",\"name\":\"fractionalFees\",\"type\":\"tuple[]\"}],\"name\":\"createFungibleTokenWithCustomFees\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"treasury\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"memo\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"tokenSupplyType\",\"type\":\"bool\"},{\"internalType\":\"int64\",\"name\":\"maxSupply\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"freezeDefault\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"inheritAccountKey\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"contractId\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"ed25519\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ECDSA_secp256k1\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"delegatableContractId\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.KeyValue\",\"name\":\"key\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.TokenKey[]\",\"name\":\"tokenKeys\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"second\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"autoRenewAccount\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"autoRenewPeriod\",\"type\":\"uint32\"}],\"internalType\":\"struct IHederaTokenService.Expiry\",\"name\":\"expiry\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.HederaToken\",\"name\":\"token\",\"type\":\"tuple\"}],\"name\":\"createNonFungibleToken\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"treasury\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"memo\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"tokenSupplyType\",\"type\":\"bool\"},{\"internalType\":\"int64\",\"name\":\"maxSupply\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"freezeDefault\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"inheritAccountKey\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"contractId\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"ed25519\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ECDSA_secp256k1\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"delegatableContractId\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.KeyValue\",\"name\":\"key\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.TokenKey[]\",\"name\":\"tokenKeys\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"second\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"autoRenewAccount\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"autoRenewPeriod\",\"type\":\"uint32\"}],\"internalType\":\"struct IHederaTokenService.Expiry\",\"name\":\"expiry\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.HederaToken\",\"name\":\"token\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"amount\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"useCurrentTokenForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FixedFee[]\",\"name\":\"fixedFees\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"numerator\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"denominator\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"amount\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.RoyaltyFee[]\",\"name\":\"royaltyFees\",\"type\":\"tuple[]\"}],\"name\":\"createNonFungibleTokenWithCustomFees\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"accountID\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"isApproval\",\"type\":\"bool\"}],\"internalType\":\"struct IHederaTokenService.AccountAmount[]\",\"name\":\"transfers\",\"type\":\"tuple[]\"}],\"internalType\":\"struct IHederaTokenService.TransferList\",\"name\":\"transferList\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"accountID\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"isApproval\",\"type\":\"bool\"}],\"internalType\":\"struct IHederaTokenService.AccountAmount[]\",\"name\":\"transfers\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"senderAccountID\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiverAccountID\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"serialNumber\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"isApproval\",\"type\":\"bool\"}],\"internalType\":\"struct IHederaTokenService.NftTransfer[]\",\"name\":\"nftTransfers\",\"type\":\"tuple[]\"}],\"internalType\":\"struct IHederaTokenService.TokenTransferList[]\",\"name\":\"tokenTransfers\",\"type\":\"tuple[]\"}],\"name\":\"cryptoTransfer\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"deleteToken\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"dissociateToken\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"dissociateTokens\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"freezeToken\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"serialNumber\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getFungibleTokenInfo\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"components\":[{\"components\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"treasury\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"memo\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"tokenSupplyType\",\"type\":\"bool\"},{\"internalType\":\"int64\",\"name\":\"maxSupply\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"freezeDefault\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"inheritAccountKey\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"contractId\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"ed25519\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ECDSA_secp256k1\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"delegatableContractId\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.KeyValue\",\"name\":\"key\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.TokenKey[]\",\"name\":\"tokenKeys\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"second\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"autoRenewAccount\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"autoRenewPeriod\",\"type\":\"uint32\"}],\"internalType\":\"struct IHederaTokenService.Expiry\",\"name\":\"expiry\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.HederaToken\",\"name\":\"token\",\"type\":\"tuple\"},{\"internalType\":\"uint64\",\"name\":\"totalSupply\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"deleted\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"defaultKycStatus\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"pauseStatus\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"amount\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"useCurrentTokenForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FixedFee[]\",\"name\":\"fixedFees\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"numerator\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"denominator\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"minimumAmount\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"maximumAmount\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"netOfTransfers\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FractionalFee[]\",\"name\":\"fractionalFees\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"numerator\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"denominator\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"amount\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.RoyaltyFee[]\",\"name\":\"royaltyFees\",\"type\":\"tuple[]\"},{\"internalType\":\"string\",\"name\":\"ledgerId\",\"type\":\"string\"}],\"internalType\":\"struct IHederaTokenService.TokenInfo\",\"name\":\"tokenInfo\",\"type\":\"tuple\"},{\"internalType\":\"uint32\",\"name\":\"decimals\",\"type\":\"uint32\"}],\"internalType\":\"struct IHederaTokenService.FungibleTokenInfo\",\"name\":\"fungibleTokenInfo\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"serialNumber\",\"type\":\"int64\"}],\"name\":\"getNonFungibleTokenInfo\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"components\":[{\"components\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"treasury\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"memo\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"tokenSupplyType\",\"type\":\"bool\"},{\"internalType\":\"int64\",\"name\":\"maxSupply\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"freezeDefault\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"inheritAccountKey\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"contractId\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"ed25519\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ECDSA_secp256k1\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"delegatableContractId\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.KeyValue\",\"name\":\"key\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.TokenKey[]\",\"name\":\"tokenKeys\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"second\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"autoRenewAccount\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"autoRenewPeriod\",\"type\":\"uint32\"}],\"internalType\":\"struct IHederaTokenService.Expiry\",\"name\":\"expiry\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.HederaToken\",\"name\":\"token\",\"type\":\"tuple\"},{\"internalType\":\"uint64\",\"name\":\"totalSupply\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"deleted\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"defaultKycStatus\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"pauseStatus\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"amount\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"useCurrentTokenForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FixedFee[]\",\"name\":\"fixedFees\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"numerator\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"denominator\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"minimumAmount\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"maximumAmount\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"netOfTransfers\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FractionalFee[]\",\"name\":\"fractionalFees\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"numerator\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"denominator\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"amount\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.RoyaltyFee[]\",\"name\":\"royaltyFees\",\"type\":\"tuple[]\"},{\"internalType\":\"string\",\"name\":\"ledgerId\",\"type\":\"string\"}],\"internalType\":\"struct IHederaTokenService.TokenInfo\",\"name\":\"tokenInfo\",\"type\":\"tuple\"},{\"internalType\":\"int64\",\"name\":\"serialNumber\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"ownerId\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"creationTime\",\"type\":\"int64\"},{\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"spenderId\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.NonFungibleTokenInfo\",\"name\":\"nonFungibleTokenInfo\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getTokenCustomFees\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"amount\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"useCurrentTokenForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FixedFee[]\",\"name\":\"fixedFees\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"numerator\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"denominator\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"minimumAmount\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"maximumAmount\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"netOfTransfers\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FractionalFee[]\",\"name\":\"fractionalFees\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"numerator\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"denominator\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"amount\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.RoyaltyFee[]\",\"name\":\"royaltyFees\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getTokenDefaultFreezeStatus\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"defaultFreezeStatus\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getTokenDefaultKycStatus\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"defaultKycStatus\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getTokenExpiryInfo\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"second\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"autoRenewAccount\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"autoRenewPeriod\",\"type\":\"uint32\"}],\"internalType\":\"struct IHederaTokenService.Expiry\",\"name\":\"expiry\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getTokenInfo\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"components\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"treasury\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"memo\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"tokenSupplyType\",\"type\":\"bool\"},{\"internalType\":\"int64\",\"name\":\"maxSupply\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"freezeDefault\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"inheritAccountKey\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"contractId\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"ed25519\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ECDSA_secp256k1\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"delegatableContractId\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.KeyValue\",\"name\":\"key\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.TokenKey[]\",\"name\":\"tokenKeys\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"second\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"autoRenewAccount\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"autoRenewPeriod\",\"type\":\"uint32\"}],\"internalType\":\"struct IHederaTokenService.Expiry\",\"name\":\"expiry\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.HederaToken\",\"name\":\"token\",\"type\":\"tuple\"},{\"internalType\":\"uint64\",\"name\":\"totalSupply\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"deleted\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"defaultKycStatus\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"pauseStatus\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"amount\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"useCurrentTokenForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FixedFee[]\",\"name\":\"fixedFees\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"numerator\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"denominator\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"minimumAmount\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"maximumAmount\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"netOfTransfers\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FractionalFee[]\",\"name\":\"fractionalFees\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"numerator\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"denominator\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"amount\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.RoyaltyFee[]\",\"name\":\"royaltyFees\",\"type\":\"tuple[]\"},{\"internalType\":\"string\",\"name\":\"ledgerId\",\"type\":\"string\"}],\"internalType\":\"struct IHederaTokenService.TokenInfo\",\"name\":\"tokenInfo\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"getTokenKey\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"inheritAccountKey\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"contractId\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"ed25519\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ECDSA_secp256k1\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"delegatableContractId\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.KeyValue\",\"name\":\"key\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getTokenType\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"internalType\":\"int32\",\"name\":\"tokenType\",\"type\":\"int32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantTokenKyc\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isFrozen\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"frozen\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isKyc\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"kycGranted\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"isToken\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"isToken\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"amount\",\"type\":\"uint64\"},{\"internalType\":\"bytes[]\",\"name\":\"metadata\",\"type\":\"bytes[]\"}],\"name\":\"mintToken\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"newTotalSupply\",\"type\":\"uint64\"},{\"internalType\":\"int64[]\",\"name\":\"serialNumbers\",\"type\":\"int64[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"pauseToken\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeTokenKyc\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"serialNumber\",\"type\":\"uint256\"}],\"name\":\"transferFromNFT\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"serialNumber\",\"type\":\"int64\"}],\"name\":\"transferNFT\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"sender\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"receiver\",\"type\":\"address[]\"},{\"internalType\":\"int64[]\",\"name\":\"serialNumber\",\"type\":\"int64[]\"}],\"name\":\"transferNFTs\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"}],\"name\":\"transferToken\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"accountId\",\"type\":\"address[]\"},{\"internalType\":\"int64[]\",\"name\":\"amount\",\"type\":\"int64[]\"}],\"name\":\"transferTokens\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"unfreezeToken\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"unpauseToken\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"second\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"autoRenewAccount\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"autoRenewPeriod\",\"type\":\"uint32\"}],\"internalType\":\"struct IHederaTokenService.Expiry\",\"name\":\"expiryInfo\",\"type\":\"tuple\"}],\"name\":\"updateTokenExpiryInfo\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"treasury\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"memo\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"tokenSupplyType\",\"type\":\"bool\"},{\"internalType\":\"int64\",\"name\":\"maxSupply\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"freezeDefault\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"inheritAccountKey\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"contractId\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"ed25519\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ECDSA_secp256k1\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"delegatableContractId\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.KeyValue\",\"name\":\"key\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.TokenKey[]\",\"name\":\"tokenKeys\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"second\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"autoRenewAccount\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"autoRenewPeriod\",\"type\":\"uint32\"}],\"internalType\":\"struct IHederaTokenService.Expiry\",\"name\":\"expiry\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.HederaToken\",\"name\":\"tokenInfo\",\"type\":\"tuple\"}],\"name\":\"updateTokenInfo\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"inheritAccountKey\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"contractId\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"ed25519\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ECDSA_secp256k1\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"delegatableContractId\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.KeyValue\",\"name\":\"key\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.TokenKey[]\",\"name\":\"keys\",\"type\":\"tuple[]\"}],\"name\":\"updateTokenKeys\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"amount\",\"type\":\"uint32\"}],\"name\":\"wipeTokenAccount\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"int64[]\",\"name\":\"serialNumbers\",\"type\":\"int64[]\"}],\"name\":\"wipeTokenAccountNFT\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address,address)\":{\"params\":{\"owner\":\"the owner of the tokens to be spent\",\"spender\":\"the spender of the tokens\",\"token\":\"The Hedera token address to check the allowance of\"},\"returns\":{\"allowance\":\"The amount which spender is still allowed to withdraw from owner.\",\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"approve(address,address,uint256)\":{\"params\":{\"amount\":\"the amount of tokens authorized to spend.\",\"spender\":\"the account address authorized to spend\",\"token\":\"The hedera token address to approve\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"approveNFT(address,address,uint256)\":{\"params\":{\"approved\":\"The new approved NFT controller.  To revoke approvals pass in the zero address.\",\"serialNumber\":\"The NFT serial number  to approve\",\"token\":\"The Hedera NFT token address to approve\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"associateToken(address,address)\":{\"params\":{\"account\":\"The account to be associated with the provided token\",\"token\":\"The token to be associated with the provided account\"}},\"associateTokens(address,address[])\":{\"params\":{\"account\":\"The account to be associated with the provided tokens\",\"tokens\":\"The tokens to be associated with the provided account. In the case of NON_FUNGIBLE_UNIQUE               Type, once an account is associated, it can hold any number of NFTs (serial numbers) of that               token type\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"burnToken(address,uint64,int64[])\":{\"params\":{\"amount\":\"Applicable to tokens of type FUNGIBLE_COMMON. The amount to burn from the Treasury Account.                Amount must be a positive non-zero number, not bigger than the token balance of the treasury                account (0; balance], represented in the lowest denomination.\",\"serialNumbers\":\"Applicable to tokens of type NON_FUNGIBLE_UNIQUE. The list of serial numbers to be burned.\",\"token\":\"The token for which to burn tokens. If token does not exist, transaction results in              INVALID_TOKEN_ID\"},\"returns\":{\"newTotalSupply\":\"The new supply of tokens. For NFTs it is the total count of NFTs\",\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"createFungibleToken((string,string,address,string,bool,int64,bool,(uint256,(bool,address,bytes,bytes,address))[],(uint32,address,uint32)),uint64,uint32)\":{\"params\":{\"decimals\":\"the number of decimal places a token is divisible by\",\"initialTotalSupply\":\"Specifies the initial supply of tokens to be put in circulation. The initial supply is sent to the Treasury Account. The supply is in the lowest denomination possible.\",\"token\":\"the basic properties of the token being created\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\",\"tokenAddress\":\"the created token's address\"}},\"createFungibleTokenWithCustomFees((string,string,address,string,bool,int64,bool,(uint256,(bool,address,bytes,bytes,address))[],(uint32,address,uint32)),uint64,uint32,(uint32,address,bool,bool,address)[],(uint32,uint32,uint32,uint32,bool,address)[])\":{\"params\":{\"decimals\":\"the number of decimal places a token is divisible by.\",\"fixedFees\":\"list of fixed fees to apply to the token\",\"fractionalFees\":\"list of fractional fees to apply to the token\",\"initialTotalSupply\":\"Specifies the initial supply of tokens to be put in circulation. The initial supply is sent to the Treasury Account. The supply is in the lowest denomination possible.\",\"token\":\"the basic properties of the token being created\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\",\"tokenAddress\":\"the created token's address\"}},\"createNonFungibleToken((string,string,address,string,bool,int64,bool,(uint256,(bool,address,bytes,bytes,address))[],(uint32,address,uint32)))\":{\"params\":{\"token\":\"the basic properties of the token being created\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\",\"tokenAddress\":\"the created token's address\"}},\"createNonFungibleTokenWithCustomFees((string,string,address,string,bool,int64,bool,(uint256,(bool,address,bytes,bytes,address))[],(uint32,address,uint32)),(uint32,address,bool,bool,address)[],(uint32,uint32,uint32,address,bool,address)[])\":{\"params\":{\"fixedFees\":\"list of fixed fees to apply to the token\",\"royaltyFees\":\"list of royalty fees to apply to the token\",\"token\":\"the basic properties of the token being created\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\",\"tokenAddress\":\"the created token's address\"}},\"cryptoTransfer(((address,int64,bool)[]),(address,(address,int64,bool)[],(address,address,int64,bool)[])[])\":{\"custom:version\":\"0.3.0 the signature of the previous version was cryptoTransfer(TokenTransferList[] memory tokenTransfers)\",\"params\":{\"tokenTransfers\":\"the list of token transfers to do\",\"transferList\":\"the list of hbar transfers to do\"}},\"deleteToken(address)\":{\"params\":{\"token\":\"The token address to be deleted\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"dissociateToken(address,address)\":{\"params\":{\"account\":\"The account to be associated with the provided token\",\"token\":\"The token to be associated with the provided account\"}},\"dissociateTokens(address,address[])\":{\"params\":{\"account\":\"The account to be dissociated from the provided tokens\",\"tokens\":\"The tokens to be dissociated from the provided account.\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"freezeToken(address,address)\":{\"params\":{\"account\":\"The account address to be frozen\",\"token\":\"The token address\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"getApproved(address,uint256)\":{\"params\":{\"serialNumber\":\"The NFT to find the approved address for\",\"token\":\"The Hedera NFT token address to check approval\"},\"returns\":{\"approved\":\"The approved address for this NFT, or the zero address if there is none\",\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"getFungibleTokenInfo(address)\":{\"params\":{\"token\":\"The token address to check\"},\"returns\":{\"fungibleTokenInfo\":\"FungibleTokenInfo info for `token`\",\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"getNonFungibleTokenInfo(address,int64)\":{\"params\":{\"serialNumber\":\"The NFT serialNumber to check\",\"token\":\"The token address to check\"},\"returns\":{\"nonFungibleTokenInfo\":\"NonFungibleTokenInfo info for `token` `serialNumber`\",\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"getTokenCustomFees(address)\":{\"params\":{\"token\":\"The token address to check\"},\"returns\":{\"fixedFees\":\"Set of fixed fees for `token`\",\"fractionalFees\":\"Set of fractional fees for `token`\",\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\",\"royaltyFees\":\"Set of royalty fees for `token`\"}},\"getTokenDefaultFreezeStatus(address)\":{\"params\":{\"token\":\"The token address to check\"},\"returns\":{\"defaultFreezeStatus\":\"True if `token` default freeze status is frozen.\",\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"getTokenDefaultKycStatus(address)\":{\"params\":{\"token\":\"The token address to check\"},\"returns\":{\"defaultKycStatus\":\"True if `token` default kyc status is KycNotApplicable and false if Revoked.\",\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"getTokenExpiryInfo(address)\":{\"params\":{\"token\":\"The token address to check\"},\"returns\":{\"expiry\":\"Expiry info for `token`\",\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"getTokenInfo(address)\":{\"params\":{\"token\":\"The token address to check\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\",\"tokenInfo\":\"TokenInfo info for `token`\"}},\"getTokenKey(address,uint256)\":{\"params\":{\"keyType\":\"The keyType of the desired KeyValue\",\"token\":\"The token address to check\"},\"returns\":{\"key\":\"KeyValue info for key of type `keyType`\",\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"getTokenType(address)\":{\"params\":{\"token\":\"The token address\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.    \",\"tokenType\":\"the token type. 0 is FUNGIBLE_COMMON, 1 is NON_FUNGIBLE_UNIQUE, -1 is UNRECOGNIZED   \"}},\"grantTokenKyc(address,address)\":{\"params\":{\"account\":\"The account address to grant kyc\",\"token\":\"The token address\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"isApprovedForAll(address,address,address)\":{\"params\":{\"operator\":\"The address that acts on behalf of the owner\",\"owner\":\"The address that owns the NFTs\",\"token\":\"The Hedera NFT token address to approve\"},\"returns\":{\"approved\":\"True if `operator` is an approved operator for `owner`, false otherwise\",\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"isFrozen(address,address)\":{\"params\":{\"account\":\"The account address associated with the token\",\"token\":\"The token address to check\"},\"returns\":{\"frozen\":\"True if `account` is frozen for `token`\",\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"isKyc(address,address)\":{\"params\":{\"account\":\"The account address associated with the token\",\"token\":\"The token address to check\"},\"returns\":{\"kycGranted\":\"True if `account` has kyc granted for `token`\",\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"isToken(address)\":{\"params\":{\"token\":\"The token address\"},\"returns\":{\"isToken\":\"True if valid token found for the given address     \",\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.    \"}},\"mintToken(address,uint64,bytes[])\":{\"params\":{\"amount\":\"Applicable to tokens of type FUNGIBLE_COMMON. The amount to mint to the Treasury Account.               Amount must be a positive non-zero number represented in the lowest denomination of the               token. The new supply must be lower than 2^63.\",\"metadata\":\"Applicable to tokens of type NON_FUNGIBLE_UNIQUE. A list of metadata that are being created.                 Maximum allowed size of each metadata is 100 bytes\",\"token\":\"The token for which to mint tokens. If token does not exist, transaction results in              INVALID_TOKEN_ID\"},\"returns\":{\"newTotalSupply\":\"The new supply of tokens. For NFTs it is the total count of NFTs\",\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\",\"serialNumbers\":\"If the token is an NFT the newly generate serial numbers, othersise empty.\"}},\"pauseToken(address)\":{\"params\":{\"token\":\"The token address to be paused\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"revokeTokenKyc(address,address)\":{\"params\":{\"account\":\"The account address to revoke kyc\",\"token\":\"The token address\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"setApprovalForAll(address,address,bool)\":{\"params\":{\"approved\":\"True if the operator is approved, false to revoke approval\",\"operator\":\"Address to add to the set of authorized operators\",\"token\":\"The Hedera NFT token address to approve\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"transferFrom(address,address,address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens to transfer from `from` to `to`\",\"from\":\"The account address of the owner of the token, on the behalf of which to transfer `amount` tokens\",\"to\":\"The account address of the receiver of the `amount` tokens\",\"token\":\"The address of the fungible Hedera token to transfer\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"transferFromNFT(address,address,address,uint256)\":{\"params\":{\"from\":\"The account address of the owner of `serialNumber` of `token`\",\"serialNumber\":\"The NFT serial number to transfer\",\"to\":\"The account address of the receiver of `serialNumber`\",\"token\":\"The address of the non-fungible Hedera token to transfer\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"transferNFT(address,address,address,int64)\":{\"params\":{\"recipient\":\"The receiver of the transaction\",\"sender\":\"The sender for the transaction\",\"serialNumber\":\"The serial number of the NFT to transfer.\",\"token\":\"The token to transfer to/from\"}},\"transferNFTs(address,address[],address[],int64[])\":{\"params\":{\"receiver\":\"the receiver of the nft sent by the same index at sender\",\"sender\":\"the sender of an nft\",\"serialNumber\":\"the serial number of the nft sent by the same index at sender\",\"token\":\"The ID of the token as a solidity address\"}},\"transferToken(address,address,address,int64)\":{\"params\":{\"amount\":\"Non-negative value to send. a negative value will result in a failure.\",\"recipient\":\"The receiver of the transaction\",\"sender\":\"The sender for the transaction\",\"token\":\"The token to transfer to/from\"}},\"transferTokens(address,address[],int64[])\":{\"params\":{\"accountId\":\"account to do a transfer to/from\",\"amount\":\"The amount from the accountId at the same index\",\"token\":\"The ID of the token as a solidity address\"}},\"unfreezeToken(address,address)\":{\"params\":{\"account\":\"The account address to be unfrozen\",\"token\":\"The token address\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"unpauseToken(address)\":{\"params\":{\"token\":\"The token address to be unpaused\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"updateTokenExpiryInfo(address,(uint32,address,uint32))\":{\"params\":{\"expiryInfo\":\"The hedera token expiry info\",\"token\":\"The token address\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"updateTokenInfo(address,(string,string,address,string,bool,int64,bool,(uint256,(bool,address,bytes,bytes,address))[],(uint32,address,uint32)))\":{\"params\":{\"token\":\"The token address\",\"tokenInfo\":\"The hedera token info to update token with\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"updateTokenKeys(address,(uint256,(bool,address,bytes,bytes,address))[])\":{\"params\":{\"keys\":\"The token keys\",\"token\":\"The token address\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"wipeTokenAccount(address,address,uint32)\":{\"params\":{\"account\":\"The account address to revoke kyc\",\"amount\":\"The number of tokens to wipe\",\"token\":\"The token address\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"wipeTokenAccountNFT(address,address,int64[])\":{\"params\":{\"account\":\"The account address to revoke kyc\",\"serialNumbers\":\"The serial numbers of token to wipe\",\"token\":\"The token address\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"allowance(address,address,address)\":{\"notice\":\"Returns the amount which spender is still allowed to withdraw from owner. Only Applicable to Fungible Tokens\"},\"approve(address,address,uint256)\":{\"notice\":\"Allows spender to withdraw from your account multiple times, up to the value amount. If this function is called again it overwrites the current allowance with value. Only Applicable to Fungible Tokens\"},\"approveNFT(address,address,uint256)\":{\"notice\":\"Allow or reaffirm the approved address to transfer an NFT the approved address does not own. Only Applicable to NFT Tokens\"},\"associateToken(address,address)\":{\"notice\":\"Single-token variant of associateTokens. Will be mapped to a single entry array call of associateTokens\"},\"associateTokens(address,address[])\":{\"notice\":\"Associates the provided account with the provided tokens. Must be signed by the provided  Account's key or called from the accounts contract key  If the provided account is not found, the transaction will resolve to INVALID_ACCOUNT_ID.  If the provided account has been deleted, the transaction will resolve to ACCOUNT_DELETED.  If any of the provided tokens is not found, the transaction will resolve to INVALID_TOKEN_REF.  If any of the provided tokens has been deleted, the transaction will resolve to TOKEN_WAS_DELETED.  If an association between the provided account and any of the tokens already exists, the  transaction will resolve to TOKEN_ALREADY_ASSOCIATED_TO_ACCOUNT.  If the provided account's associations count exceed the constraint of maximum token associations    per account, the transaction will resolve to TOKENS_PER_ACCOUNT_LIMIT_EXCEEDED.  On success, associations between the provided account and tokens are made and the account is    ready to interact with the tokens.\"},\"burnToken(address,uint64,int64[])\":{\"notice\":\"Burns an amount of the token from the defined treasury account\"},\"createFungibleToken((string,string,address,string,bool,int64,bool,(uint256,(bool,address,bytes,bytes,address))[],(uint32,address,uint32)),uint64,uint32)\":{\"notice\":\"Creates a Fungible Token with the specified properties\"},\"createFungibleTokenWithCustomFees((string,string,address,string,bool,int64,bool,(uint256,(bool,address,bytes,bytes,address))[],(uint32,address,uint32)),uint64,uint32,(uint32,address,bool,bool,address)[],(uint32,uint32,uint32,uint32,bool,address)[])\":{\"notice\":\"Creates a Fungible Token with the specified properties\"},\"createNonFungibleToken((string,string,address,string,bool,int64,bool,(uint256,(bool,address,bytes,bytes,address))[],(uint32,address,uint32)))\":{\"notice\":\"Creates an Non Fungible Unique Token with the specified properties\"},\"createNonFungibleTokenWithCustomFees((string,string,address,string,bool,int64,bool,(uint256,(bool,address,bytes,bytes,address))[],(uint32,address,uint32)),(uint32,address,bool,bool,address)[],(uint32,uint32,uint32,address,bool,address)[])\":{\"notice\":\"Creates an Non Fungible Unique Token with the specified properties\"},\"cryptoTransfer(((address,int64,bool)[]),(address,(address,int64,bool)[],(address,address,int64,bool)[])[])\":{\"notice\":\"Performs transfers among combinations of tokens and hbars\"},\"deleteToken(address)\":{\"notice\":\"Operation to delete token\"},\"dissociateToken(address,address)\":{\"notice\":\"Single-token variant of dissociateTokens. Will be mapped to a single entry array call of dissociateTokens\"},\"dissociateTokens(address,address[])\":{\"notice\":\"Dissociates the provided account with the provided tokens. Must be signed by the provided Account's key. If the provided account is not found, the transaction will resolve to INVALID_ACCOUNT_ID. If the provided account has been deleted, the transaction will resolve to ACCOUNT_DELETED. If any of the provided tokens is not found, the transaction will resolve to INVALID_TOKEN_REF. If any of the provided tokens has been deleted, the transaction will resolve to TOKEN_WAS_DELETED. If an association between the provided account and any of the tokens does not exist, the transaction will resolve to TOKEN_NOT_ASSOCIATED_TO_ACCOUNT. If a token has not been deleted and has not expired, and the user has a nonzero balance, the transaction will resolve to TRANSACTION_REQUIRES_ZERO_TOKEN_BALANCES. If a <b>fungible token</b> has expired, the user can disassociate even if their token balance is not zero. If a <b>non fungible token</b> has expired, the user can <b>not</b> disassociate if their token balance is not zero. The transaction will resolve to TRANSACTION_REQUIRED_ZERO_TOKEN_BALANCES. On success, associations between the provided account and tokens are removed.\"},\"freezeToken(address,address)\":{\"notice\":\"Operation to freeze token account\"},\"getApproved(address,uint256)\":{\"notice\":\"Get the approved address for a single NFT Only Applicable to NFT Tokens\"},\"getFungibleTokenInfo(address)\":{\"notice\":\"Query fungible token info\"},\"getNonFungibleTokenInfo(address,int64)\":{\"notice\":\"Query non fungible token info\"},\"getTokenCustomFees(address)\":{\"notice\":\"Query token custom fees\"},\"getTokenDefaultFreezeStatus(address)\":{\"notice\":\"Query token default freeze status\"},\"getTokenDefaultKycStatus(address)\":{\"notice\":\"Query token default kyc status\"},\"getTokenExpiryInfo(address)\":{\"notice\":\"Query token expiry info\"},\"getTokenInfo(address)\":{\"notice\":\"Query token info\"},\"getTokenKey(address,uint256)\":{\"notice\":\"Query token KeyValue\"},\"getTokenType(address)\":{\"notice\":\"Query to return the token type for a given address\"},\"grantTokenKyc(address,address)\":{\"notice\":\"Operation to grant kyc to token account\"},\"isApprovedForAll(address,address,address)\":{\"notice\":\"Query if an address is an authorized operator for another address Only Applicable to NFT Tokens\"},\"isFrozen(address,address)\":{\"notice\":\"Query if token account is frozen\"},\"isKyc(address,address)\":{\"notice\":\"Query if token account has kyc granted\"},\"isToken(address)\":{\"notice\":\"Query if valid token found for the given address\"},\"mintToken(address,uint64,bytes[])\":{\"notice\":\"Mints an amount of the token to the defined treasury account\"},\"pauseToken(address)\":{\"notice\":\"Operation to pause token\"},\"revokeTokenKyc(address,address)\":{\"notice\":\"Operation to revoke kyc to token account\"},\"setApprovalForAll(address,address,bool)\":{\"notice\":\"Enable or disable approval for a third party (\\\"operator\\\") to manage  all of `msg.sender`'s assets\"},\"transferFrom(address,address,address,uint256)\":{\"notice\":\"Only applicable to fungible tokens\"},\"transferFromNFT(address,address,address,uint256)\":{\"notice\":\"Transfers `serialNumber` of `token` from `from` to `to` using the allowance mechanism. Only applicable to NFT tokens\"},\"transferNFT(address,address,address,int64)\":{\"notice\":\"Transfers tokens where the calling account/contract is implicitly the first entry in the token transfer list, where the amount is the value needed to zero balance the transfers. Regular signing rules apply for sending (positive amount) or receiving (negative amount)\"},\"transferNFTs(address,address[],address[],int64[])\":{\"notice\":\"Initiates a Non-Fungable Token Transfer\"},\"transferToken(address,address,address,int64)\":{\"notice\":\"Transfers tokens where the calling account/contract is implicitly the first entry in the token transfer list, where the amount is the value needed to zero balance the transfers. Regular signing rules apply for sending (positive amount) or receiving (negative amount)\"},\"transferTokens(address,address[],int64[])\":{\"notice\":\"Initiates a Fungible Token Transfer\"},\"unfreezeToken(address,address)\":{\"notice\":\"Operation to unfreeze token account\"},\"unpauseToken(address)\":{\"notice\":\"Operation to unpause token\"},\"updateTokenExpiryInfo(address,(uint32,address,uint32))\":{\"notice\":\"Operation to update token expiry info\"},\"updateTokenInfo(address,(string,string,address,string,bool,int64,bool,(uint256,(bool,address,bytes,bytes,address))[],(uint32,address,uint32)))\":{\"notice\":\"Operation to update token info\"},\"updateTokenKeys(address,(uint256,(bool,address,bytes,bytes,address))[])\":{\"notice\":\"Operation to update token expiry info\"},\"wipeTokenAccount(address,address,uint32)\":{\"notice\":\"Operation to wipe fungible tokens from account\"},\"wipeTokenAccountNFT(address,address,int64[])\":{\"notice\":\"Operation to wipe non fungible tokens from account\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/hashgraph/hedera-smart-contracts/contracts/hts-precompile/IHederaTokenService.sol\":\"IHederaTokenService\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/hashgraph/hedera-smart-contracts/contracts/hts-precompile/IHederaTokenService.sol\":{\"keccak256\":\"0xfdb882a4883cca98de0904d3a74405c210c891d7dab3666f635b3917988781e2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://bcdb3f8e6c966d249922e69246fe93dcbc9a89f858f747f3814a696aa3ca2e55\",\"dweb:/ipfs/QmYMYDS8cawToJBzjepLN7MLmoL49rxrhJTmiWMRKEQTYZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"allowance(address,address,address)": {
								"notice": "Returns the amount which spender is still allowed to withdraw from owner. Only Applicable to Fungible Tokens"
							},
							"approve(address,address,uint256)": {
								"notice": "Allows spender to withdraw from your account multiple times, up to the value amount. If this function is called again it overwrites the current allowance with value. Only Applicable to Fungible Tokens"
							},
							"approveNFT(address,address,uint256)": {
								"notice": "Allow or reaffirm the approved address to transfer an NFT the approved address does not own. Only Applicable to NFT Tokens"
							},
							"associateToken(address,address)": {
								"notice": "Single-token variant of associateTokens. Will be mapped to a single entry array call of associateTokens"
							},
							"associateTokens(address,address[])": {
								"notice": "Associates the provided account with the provided tokens. Must be signed by the provided  Account's key or called from the accounts contract key  If the provided account is not found, the transaction will resolve to INVALID_ACCOUNT_ID.  If the provided account has been deleted, the transaction will resolve to ACCOUNT_DELETED.  If any of the provided tokens is not found, the transaction will resolve to INVALID_TOKEN_REF.  If any of the provided tokens has been deleted, the transaction will resolve to TOKEN_WAS_DELETED.  If an association between the provided account and any of the tokens already exists, the  transaction will resolve to TOKEN_ALREADY_ASSOCIATED_TO_ACCOUNT.  If the provided account's associations count exceed the constraint of maximum token associations    per account, the transaction will resolve to TOKENS_PER_ACCOUNT_LIMIT_EXCEEDED.  On success, associations between the provided account and tokens are made and the account is    ready to interact with the tokens."
							},
							"burnToken(address,uint64,int64[])": {
								"notice": "Burns an amount of the token from the defined treasury account"
							},
							"createFungibleToken((string,string,address,string,bool,int64,bool,(uint256,(bool,address,bytes,bytes,address))[],(uint32,address,uint32)),uint64,uint32)": {
								"notice": "Creates a Fungible Token with the specified properties"
							},
							"createFungibleTokenWithCustomFees((string,string,address,string,bool,int64,bool,(uint256,(bool,address,bytes,bytes,address))[],(uint32,address,uint32)),uint64,uint32,(uint32,address,bool,bool,address)[],(uint32,uint32,uint32,uint32,bool,address)[])": {
								"notice": "Creates a Fungible Token with the specified properties"
							},
							"createNonFungibleToken((string,string,address,string,bool,int64,bool,(uint256,(bool,address,bytes,bytes,address))[],(uint32,address,uint32)))": {
								"notice": "Creates an Non Fungible Unique Token with the specified properties"
							},
							"createNonFungibleTokenWithCustomFees((string,string,address,string,bool,int64,bool,(uint256,(bool,address,bytes,bytes,address))[],(uint32,address,uint32)),(uint32,address,bool,bool,address)[],(uint32,uint32,uint32,address,bool,address)[])": {
								"notice": "Creates an Non Fungible Unique Token with the specified properties"
							},
							"cryptoTransfer(((address,int64,bool)[]),(address,(address,int64,bool)[],(address,address,int64,bool)[])[])": {
								"notice": "Performs transfers among combinations of tokens and hbars"
							},
							"deleteToken(address)": {
								"notice": "Operation to delete token"
							},
							"dissociateToken(address,address)": {
								"notice": "Single-token variant of dissociateTokens. Will be mapped to a single entry array call of dissociateTokens"
							},
							"dissociateTokens(address,address[])": {
								"notice": "Dissociates the provided account with the provided tokens. Must be signed by the provided Account's key. If the provided account is not found, the transaction will resolve to INVALID_ACCOUNT_ID. If the provided account has been deleted, the transaction will resolve to ACCOUNT_DELETED. If any of the provided tokens is not found, the transaction will resolve to INVALID_TOKEN_REF. If any of the provided tokens has been deleted, the transaction will resolve to TOKEN_WAS_DELETED. If an association between the provided account and any of the tokens does not exist, the transaction will resolve to TOKEN_NOT_ASSOCIATED_TO_ACCOUNT. If a token has not been deleted and has not expired, and the user has a nonzero balance, the transaction will resolve to TRANSACTION_REQUIRES_ZERO_TOKEN_BALANCES. If a <b>fungible token</b> has expired, the user can disassociate even if their token balance is not zero. If a <b>non fungible token</b> has expired, the user can <b>not</b> disassociate if their token balance is not zero. The transaction will resolve to TRANSACTION_REQUIRED_ZERO_TOKEN_BALANCES. On success, associations between the provided account and tokens are removed."
							},
							"freezeToken(address,address)": {
								"notice": "Operation to freeze token account"
							},
							"getApproved(address,uint256)": {
								"notice": "Get the approved address for a single NFT Only Applicable to NFT Tokens"
							},
							"getFungibleTokenInfo(address)": {
								"notice": "Query fungible token info"
							},
							"getNonFungibleTokenInfo(address,int64)": {
								"notice": "Query non fungible token info"
							},
							"getTokenCustomFees(address)": {
								"notice": "Query token custom fees"
							},
							"getTokenDefaultFreezeStatus(address)": {
								"notice": "Query token default freeze status"
							},
							"getTokenDefaultKycStatus(address)": {
								"notice": "Query token default kyc status"
							},
							"getTokenExpiryInfo(address)": {
								"notice": "Query token expiry info"
							},
							"getTokenInfo(address)": {
								"notice": "Query token info"
							},
							"getTokenKey(address,uint256)": {
								"notice": "Query token KeyValue"
							},
							"getTokenType(address)": {
								"notice": "Query to return the token type for a given address"
							},
							"grantTokenKyc(address,address)": {
								"notice": "Operation to grant kyc to token account"
							},
							"isApprovedForAll(address,address,address)": {
								"notice": "Query if an address is an authorized operator for another address Only Applicable to NFT Tokens"
							},
							"isFrozen(address,address)": {
								"notice": "Query if token account is frozen"
							},
							"isKyc(address,address)": {
								"notice": "Query if token account has kyc granted"
							},
							"isToken(address)": {
								"notice": "Query if valid token found for the given address"
							},
							"mintToken(address,uint64,bytes[])": {
								"notice": "Mints an amount of the token to the defined treasury account"
							},
							"pauseToken(address)": {
								"notice": "Operation to pause token"
							},
							"revokeTokenKyc(address,address)": {
								"notice": "Operation to revoke kyc to token account"
							},
							"setApprovalForAll(address,address,bool)": {
								"notice": "Enable or disable approval for a third party (\"operator\") to manage  all of `msg.sender`'s assets"
							},
							"transferFrom(address,address,address,uint256)": {
								"notice": "Only applicable to fungible tokens"
							},
							"transferFromNFT(address,address,address,uint256)": {
								"notice": "Transfers `serialNumber` of `token` from `from` to `to` using the allowance mechanism. Only applicable to NFT tokens"
							},
							"transferNFT(address,address,address,int64)": {
								"notice": "Transfers tokens where the calling account/contract is implicitly the first entry in the token transfer list, where the amount is the value needed to zero balance the transfers. Regular signing rules apply for sending (positive amount) or receiving (negative amount)"
							},
							"transferNFTs(address,address[],address[],int64[])": {
								"notice": "Initiates a Non-Fungable Token Transfer"
							},
							"transferToken(address,address,address,int64)": {
								"notice": "Transfers tokens where the calling account/contract is implicitly the first entry in the token transfer list, where the amount is the value needed to zero balance the transfers. Regular signing rules apply for sending (positive amount) or receiving (negative amount)"
							},
							"transferTokens(address,address[],int64[])": {
								"notice": "Initiates a Fungible Token Transfer"
							},
							"unfreezeToken(address,address)": {
								"notice": "Operation to unfreeze token account"
							},
							"unpauseToken(address)": {
								"notice": "Operation to unpause token"
							},
							"updateTokenExpiryInfo(address,(uint32,address,uint32))": {
								"notice": "Operation to update token expiry info"
							},
							"updateTokenInfo(address,(string,string,address,string,bool,int64,bool,(uint256,(bool,address,bytes,bytes,address))[],(uint32,address,uint32)))": {
								"notice": "Operation to update token info"
							},
							"updateTokenKeys(address,(uint256,(bool,address,bytes,bytes,address))[])": {
								"notice": "Operation to update token expiry info"
							},
							"wipeTokenAccount(address,address,uint32)": {
								"notice": "Operation to wipe fungible tokens from account"
							},
							"wipeTokenAccountNFT(address,address,int64[])": {
								"notice": "Operation to wipe non fungible tokens from account"
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"SmartContracts/Auction2/auction.sol": {
				"ast": {
					"absolutePath": "SmartContracts/Auction2/auction.sol",
					"exportedSymbols": {
						"EnglishAuction": [
							260
						],
						"IHederaTokenService": [
							1027
						],
						"KarbonMoneta": [
							22
						]
					},
					"id": 261,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "33:22:0"
						},
						{
							"absolutePath": "https://github.com/hashgraph/hedera-smart-contracts/contracts/hts-precompile/IHederaTokenService.sol",
							"file": "https://github.com/hashgraph/hedera-smart-contracts/contracts/hts-precompile/IHederaTokenService.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 261,
							"sourceUnit": 1028,
							"src": "57:137:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IHederaTokenService",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "65:19:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "KarbonMoneta",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 22,
							"linearizedBaseContracts": [
								22
							],
							"name": "KarbonMoneta",
							"nameLocation": "208:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "42842e0e",
									"id": 12,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "237:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "272:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 12,
												"src": "264:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "264:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "295:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 12,
												"src": "287:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "287:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "316:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 12,
												"src": "308:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "308:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "253:77:0"
									},
									"returnParameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "339:0:0"
									},
									"scope": 22,
									"src": "228:112:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 21,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "357:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "380:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "380:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "398:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "398:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "416:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "416:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "369:61:0"
									},
									"returnParameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "439:0:0"
									},
									"scope": 22,
									"src": "348:92:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 261,
							"src": "198:245:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "EnglishAuction",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 260,
							"linearizedBaseContracts": [
								260
							],
							"name": "EnglishAuction",
							"nameLocation": "456:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 24,
									"name": "Start",
									"nameLocation": "484:5:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "489:2:0"
									},
									"src": "478:14:0"
								},
								{
									"anonymous": false,
									"id": 30,
									"name": "Bid",
									"nameLocation": "504:3:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 26,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "524:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "508:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 25,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "508:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "540:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "532:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "532:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "507:40:0"
									},
									"src": "498:50:0"
								},
								{
									"anonymous": false,
									"id": 38,
									"name": "End",
									"nameLocation": "560:3:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"indexed": false,
												"mutability": "mutable",
												"name": "winners",
												"nameLocation": "574:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 38,
												"src": "564:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 31,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "564:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 32,
													"nodeType": "ArrayTypeName",
													"src": "564:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 36,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "593:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 38,
												"src": "583:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 34,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "583:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 35,
													"nodeType": "ArrayTypeName",
													"src": "583:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "563:37:0"
									},
									"src": "554:47:0"
								},
								{
									"constant": false,
									"functionSelector": "7c6c5720",
									"id": 41,
									"mutability": "mutable",
									"name": "tokenToBeAttributed",
									"nameLocation": "629:19:0",
									"nodeType": "VariableDeclaration",
									"scope": 260,
									"src": "609:39:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_KarbonMoneta_$22",
										"typeString": "contract KarbonMoneta"
									},
									"typeName": {
										"id": 40,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 39,
											"name": "KarbonMoneta",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 22,
											"src": "609:12:0"
										},
										"referencedDeclaration": 22,
										"src": "609:12:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_KarbonMoneta_$22",
											"typeString": "contract KarbonMoneta"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2d07091f",
									"id": 43,
									"mutability": "mutable",
									"name": "auctionID",
									"nameLocation": "669:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 260,
									"src": "655:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint64",
										"typeString": "uint64"
									},
									"typeName": {
										"id": 42,
										"name": "uint64",
										"nodeType": "ElementaryTypeName",
										"src": "655:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint64",
											"typeString": "uint64"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "08551a53",
									"id": 45,
									"mutability": "mutable",
									"name": "seller",
									"nameLocation": "708:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 260,
									"src": "685:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 44,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "685:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7cc3ae8c",
									"id": 47,
									"mutability": "mutable",
									"name": "endAt",
									"nameLocation": "736:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 260,
									"src": "721:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 46,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "721:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1f2698ab",
									"id": 49,
									"mutability": "mutable",
									"name": "started",
									"nameLocation": "760:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 260,
									"src": "748:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 48,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "748:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "12fa6feb",
									"id": 51,
									"mutability": "mutable",
									"name": "ended",
									"nameLocation": "786:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 260,
									"src": "774:17:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 50,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "774:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "77484aae",
									"id": 54,
									"mutability": "mutable",
									"name": "highestBidders",
									"nameLocation": "817:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 260,
									"src": "800:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 52,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "800:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 53,
										"nodeType": "ArrayTypeName",
										"src": "800:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "111cb258",
									"id": 57,
									"mutability": "mutable",
									"name": "highestBids",
									"nameLocation": "855:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 260,
									"src": "838:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
										"typeString": "uint256[]"
									},
									"typeName": {
										"baseType": {
											"id": 55,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "838:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 56,
										"nodeType": "ArrayTypeName",
										"src": "838:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "62ea82db",
									"id": 61,
									"mutability": "mutable",
									"name": "bids",
									"nameLocation": "908:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 260,
									"src": "873:39:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 60,
										"keyType": {
											"id": 58,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "881:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "873:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 59,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "892:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 91,
										"nodeType": "Block",
										"src": "979:174:0",
										"statements": [
											{
												"expression": {
													"id": 72,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 68,
														"name": "tokenToBeAttributed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "990:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_KarbonMoneta_$22",
															"typeString": "contract KarbonMoneta"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 70,
																"name": "_tokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "1025:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 69,
															"name": "KarbonMoneta",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 22,
															"src": "1012:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_KarbonMoneta_$22_$",
																"typeString": "type(contract KarbonMoneta)"
															}
														},
														"id": 71,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1012:27:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_KarbonMoneta_$22",
															"typeString": "contract KarbonMoneta"
														}
													},
													"src": "990:49:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_KarbonMoneta_$22",
														"typeString": "contract KarbonMoneta"
													}
												},
												"id": 73,
												"nodeType": "ExpressionStatement",
												"src": "990:49:0"
											},
											{
												"expression": {
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 74,
														"name": "auctionID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 43,
														"src": "1050:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 75,
														"name": "_auctionNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 65,
														"src": "1062:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "1050:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "1050:26:0"
											},
											{
												"expression": {
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 78,
														"name": "seller",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 45,
														"src": "1089:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 81,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1106:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 82,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1106:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 80,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1098:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_payable_$",
																"typeString": "type(address payable)"
															},
															"typeName": {
																"id": 79,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1098:8:0",
																"stateMutability": "payable",
																"typeDescriptions": {}
															}
														},
														"id": 83,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1098:19:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1089:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "1089:28:0"
											},
											{
												"expression": {
													"id": 89,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 86,
														"name": "highestBids",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 57,
														"src": "1128:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"components": [
															{
																"hexValue": "30",
																"id": 87,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1143:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 88,
														"isConstant": false,
														"isInlineArray": true,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1142:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint8_$1_memory_ptr",
															"typeString": "uint8[1] memory"
														}
													},
													"src": "1128:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
														"typeString": "uint256[] storage ref"
													}
												},
												"id": 90,
												"nodeType": "ExpressionStatement",
												"src": "1128:17:0"
											}
										]
									},
									"id": 92,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "_tokenAddress",
												"nameLocation": "941:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "933:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "933:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "_auctionNumber",
												"nameLocation": "963:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "956:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 64,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "956:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "932:46:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "979:0:0"
									},
									"scope": 260,
									"src": "921:232:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 135,
										"nodeType": "Block",
										"src": "1187:271:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 97,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1206:8:0",
															"subExpression": {
																"id": 96,
																"name": "started",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 49,
																"src": "1207:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "73746172746564",
															"id": 98,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1216:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bdd2b11e12b62ec1dcb7f0672fc8eae42b5d96c951242139ad2dbc8a2569e4eb",
																"typeString": "literal_string \"started\""
															},
															"value": "started"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bdd2b11e12b62ec1dcb7f0672fc8eae42b5d96c951242139ad2dbc8a2569e4eb",
																"typeString": "literal_string \"started\""
															}
														],
														"id": 95,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1198:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1198:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 100,
												"nodeType": "ExpressionStatement",
												"src": "1198:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 105,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 102,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1245:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 103,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1245:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 104,
																"name": "seller",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 45,
																"src": "1259:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1245:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e6f742073656c6c6572",
															"id": 106,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1267:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e77c4a3978235c31fbb1be138ac60a8db876003712c1b04acc56e7b9ab046577",
																"typeString": "literal_string \"not seller\""
															},
															"value": "not seller"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e77c4a3978235c31fbb1be138ac60a8db876003712c1b04acc56e7b9ab046577",
																"typeString": "literal_string \"not seller\""
															}
														],
														"id": 101,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1237:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1237:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 108,
												"nodeType": "ExpressionStatement",
												"src": "1237:43:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 112,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1326:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 113,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1326:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 116,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1346:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_EnglishAuction_$260",
																		"typeString": "contract EnglishAuction"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_EnglishAuction_$260",
																		"typeString": "contract EnglishAuction"
																	}
																],
																"id": 115,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1338:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 114,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1338:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 117,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1338:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "31",
															"id": 118,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1353:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"expression": {
															"id": 109,
															"name": "tokenToBeAttributed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 41,
															"src": "1293:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_KarbonMoneta_$22",
																"typeString": "contract KarbonMoneta"
															}
														},
														"id": 111,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 21,
														"src": "1293:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1293:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 120,
												"nodeType": "ExpressionStatement",
												"src": "1293:62:0"
											},
											{
												"expression": {
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 121,
														"name": "started",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 49,
														"src": "1368:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 122,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1378:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1368:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "1368:14:0"
											},
											{
												"expression": {
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 125,
														"name": "endAt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 47,
														"src": "1393:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 129,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 126,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "1401:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 127,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "1401:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "37",
															"id": 128,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1419:6:0",
															"subdenomination": "days",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_604800_by_1",
																"typeString": "int_const 604800"
															},
															"value": "7"
														},
														"src": "1401:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1393:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 131,
												"nodeType": "ExpressionStatement",
												"src": "1393:32:0"
											},
											{
												"eventCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 132,
														"name": "Start",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "1443:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1443:7:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "EmitStatement",
												"src": "1438:12:0"
											}
										]
									},
									"functionSelector": "be9a6555",
									"id": 136,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "start",
									"nameLocation": "1170:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1175:2:0"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1187:0:0"
									},
									"scope": 260,
									"src": "1161:297:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 167,
										"nodeType": "Block",
										"src": "1498:186:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 140,
															"name": "started",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 49,
															"src": "1517:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e6f742073746172746564",
															"id": 141,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1526:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e77010d1cd84746d4d55bc64a3553056b308493098e3085151b4455976f44694",
																"typeString": "literal_string \"not started\""
															},
															"value": "not started"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e77010d1cd84746d4d55bc64a3553056b308493098e3085151b4455976f44694",
																"typeString": "literal_string \"not started\""
															}
														],
														"id": 139,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1509:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1509:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 143,
												"nodeType": "ExpressionStatement",
												"src": "1509:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 148,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 145,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "1559:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 146,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "1559:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 147,
																"name": "endAt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 47,
																"src": "1577:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1559:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "656e646564",
															"id": 149,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1584:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_eda95f959a2930889a9a5ac20593327fae0cbcf35fa43e612c4ff964430edb38",
																"typeString": "literal_string \"ended\""
															},
															"value": "ended"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_eda95f959a2930889a9a5ac20593327fae0cbcf35fa43e612c4ff964430edb38",
																"typeString": "literal_string \"ended\""
															}
														],
														"id": 144,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1551:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1551:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 151,
												"nodeType": "ExpressionStatement",
												"src": "1551:41:0"
											},
											{
												"expression": {
													"id": 158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 152,
															"name": "bids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 61,
															"src": "1603:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 155,
														"indexExpression": {
															"expression": {
																"id": 153,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1608:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 154,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1608:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1603:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 156,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1623:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 157,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "1623:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1603:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 159,
												"nodeType": "ExpressionStatement",
												"src": "1603:29:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 161,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1654:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 162,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1654:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 163,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1666:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 164,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "1666:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 160,
														"name": "Bid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "1650:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1650:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 166,
												"nodeType": "EmitStatement",
												"src": "1645:31:0"
											}
										]
									},
									"functionSelector": "1998aeef",
									"id": 168,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "bid",
									"nameLocation": "1475:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1478:2:0"
									},
									"returnParameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1498:0:0"
									},
									"scope": 260,
									"src": "1466:218:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 258,
										"nodeType": "Block",
										"src": "1716:763:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 172,
															"name": "started",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 49,
															"src": "1735:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e6f742073746172746564",
															"id": 173,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1744:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e77010d1cd84746d4d55bc64a3553056b308493098e3085151b4455976f44694",
																"typeString": "literal_string \"not started\""
															},
															"value": "not started"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e77010d1cd84746d4d55bc64a3553056b308493098e3085151b4455976f44694",
																"typeString": "literal_string \"not started\""
															}
														],
														"id": 171,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1727:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1727:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 175,
												"nodeType": "ExpressionStatement",
												"src": "1727:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 180,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 177,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "1777:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 178,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "1777:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 179,
																"name": "endAt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 47,
																"src": "1796:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1777:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e6f7420656e646564",
															"id": 181,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1803:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fe213338447dee258dda5d3a02d31ea70e15ad015964487270bd940bd1a17ab4",
																"typeString": "literal_string \"not ended\""
															},
															"value": "not ended"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fe213338447dee258dda5d3a02d31ea70e15ad015964487270bd940bd1a17ab4",
																"typeString": "literal_string \"not ended\""
															}
														],
														"id": 176,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1769:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1769:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 183,
												"nodeType": "ExpressionStatement",
												"src": "1769:46:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1834:6:0",
															"subExpression": {
																"id": 185,
																"name": "ended",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 51,
																"src": "1835:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "656e646564",
															"id": 187,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1842:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_eda95f959a2930889a9a5ac20593327fae0cbcf35fa43e612c4ff964430edb38",
																"typeString": "literal_string \"ended\""
															},
															"value": "ended"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_eda95f959a2930889a9a5ac20593327fae0cbcf35fa43e612c4ff964430edb38",
																"typeString": "literal_string \"ended\""
															}
														],
														"id": 184,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1826:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1826:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 189,
												"nodeType": "ExpressionStatement",
												"src": "1826:24:0"
											},
											{
												"expression": {
													"id": 192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 190,
														"name": "ended",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 51,
														"src": "1863:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 191,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1871:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1863:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 193,
												"nodeType": "ExpressionStatement",
												"src": "1863:12:0"
											},
											{
												"assignments": [
													195
												],
												"declarations": [
													{
														"constant": false,
														"id": 195,
														"mutability": "mutable",
														"name": "totalBiddedAmount",
														"nameLocation": "1939:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 258,
														"src": "1931:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 194,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1931:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 197,
												"initialValue": {
													"hexValue": "30",
													"id": 196,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1959:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1931:29:0"
											},
											{
												"body": {
													"id": 217,
													"nodeType": "Block",
													"src": "2022:71:0",
													"statements": [
														{
															"expression": {
																"id": 215,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 209,
																	"name": "totalBiddedAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 195,
																	"src": "2037:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 210,
																		"name": "bids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 61,
																		"src": "2058:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 214,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 211,
																			"name": "highestBidders",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 54,
																			"src": "2063:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_storage",
																				"typeString": "address[] storage ref"
																			}
																		},
																		"id": 213,
																		"indexExpression": {
																			"id": 212,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 199,
																			"src": "2078:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint64",
																				"typeString": "uint64"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2063:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2058:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2037:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 216,
															"nodeType": "ExpressionStatement",
															"src": "2037:44:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 202,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 199,
														"src": "1990:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 203,
															"name": "highestBidders",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 54,
															"src": "1994:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 204,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1994:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1990:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 218,
												"initializationExpression": {
													"assignments": [
														199
													],
													"declarations": [
														{
															"constant": false,
															"id": 199,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1983:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 218,
															"src": "1976:8:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															"typeName": {
																"id": 198,
																"name": "uint64",
																"nodeType": "ElementaryTypeName",
																"src": "1976:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 201,
													"initialValue": {
														"hexValue": "30",
														"id": 200,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1987:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1976:12:0"
												},
												"loopExpression": {
													"expression": {
														"id": 207,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2017:3:0",
														"subExpression": {
															"id": 206,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "2017:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"id": 208,
													"nodeType": "ExpressionStatement",
													"src": "2017:3:0"
												},
												"nodeType": "ForStatement",
												"src": "1971:122:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 219,
															"name": "highestBidders",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 54,
															"src": "2107:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 220,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2107:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 221,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2132:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2107:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 252,
												"nodeType": "IfStatement",
												"src": "2103:319:0",
												"trueBody": {
													"id": 251,
													"nodeType": "Block",
													"src": "2135:287:0",
													"statements": [
														{
															"body": {
																"id": 249,
																"nodeType": "Block",
																"src": "2201:210:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 239,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "2287:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_EnglishAuction_$260",
																								"typeString": "contract EnglishAuction"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_EnglishAuction_$260",
																								"typeString": "contract EnglishAuction"
																							}
																						],
																						"id": 238,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "2279:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 237,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "2279:7:0",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 240,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2279:13:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"baseExpression": {
																						"id": 241,
																						"name": "highestBidders",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 54,
																						"src": "2315:14:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_address_$dyn_storage",
																							"typeString": "address[] storage ref"
																						}
																					},
																					"id": 243,
																					"indexExpression": {
																						"id": 242,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 224,
																						"src": "2330:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint64",
																							"typeString": "uint64"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "2315:17:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 246,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 244,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "2355:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "/",
																					"rightExpression": {
																						"id": 245,
																						"name": "totalBiddedAmount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 195,
																						"src": "2359:17:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "2355:21:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 234,
																					"name": "tokenToBeAttributed",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 41,
																					"src": "2220:19:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_KarbonMoneta_$22",
																						"typeString": "contract KarbonMoneta"
																					}
																				},
																				"id": 236,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "safeTransferFrom",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 12,
																				"src": "2220:36:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256) external"
																				}
																			},
																			"id": 247,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2220:175:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 248,
																		"nodeType": "ExpressionStatement",
																		"src": "2220:175:0"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 230,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 227,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 224,
																	"src": "2169:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"id": 228,
																		"name": "highestBidders",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 54,
																		"src": "2173:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 229,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "2173:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2169:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 250,
															"initializationExpression": {
																"assignments": [
																	224
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 224,
																		"mutability": "mutable",
																		"name": "i",
																		"nameLocation": "2162:1:0",
																		"nodeType": "VariableDeclaration",
																		"scope": 250,
																		"src": "2155:8:0",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		},
																		"typeName": {
																			"id": 223,
																			"name": "uint64",
																			"nodeType": "ElementaryTypeName",
																			"src": "2155:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint64",
																				"typeString": "uint64"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 226,
																"initialValue": {
																	"hexValue": "30",
																	"id": 225,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2166:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "2155:12:0"
															},
															"loopExpression": {
																"expression": {
																	"id": 232,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "2196:3:0",
																	"subExpression": {
																		"id": 231,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "2196:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"id": 233,
																"nodeType": "ExpressionStatement",
																"src": "2196:3:0"
															},
															"nodeType": "ForStatement",
															"src": "2150:261:0"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 254,
															"name": "highestBidders",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 54,
															"src": "2443:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														{
															"id": 255,
															"name": "highestBids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 57,
															"src": "2459:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														],
														"id": 253,
														"name": "End",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 38,
														"src": "2439:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address[] memory,uint256[] memory)"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2439:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 257,
												"nodeType": "EmitStatement",
												"src": "2434:37:0"
											}
										]
									},
									"functionSelector": "efbe1c1c",
									"id": 259,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "end",
									"nameLocation": "1701:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1704:2:0"
									},
									"returnParameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1716:0:0"
									},
									"scope": 260,
									"src": "1692:787:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 261,
							"src": "447:2035:0",
							"usedErrors": []
						}
					],
					"src": "33:2451:0"
				},
				"id": 0
			},
			"https://github.com/hashgraph/hedera-smart-contracts/contracts/hts-precompile/IHederaTokenService.sol": {
				"ast": {
					"absolutePath": "https://github.com/hashgraph/hedera-smart-contracts/contracts/hts-precompile/IHederaTokenService.sol",
					"exportedSymbols": {
						"IHederaTokenService": [
							1027
						]
					},
					"id": 1028,
					"license": "Apache-2.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 262,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".9",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "39:31:1"
						},
						{
							"id": 263,
							"literals": [
								"experimental",
								"ABIEncoderV2"
							],
							"nodeType": "PragmaDirective",
							"src": "71:33:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IHederaTokenService",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1027,
							"linearizedBaseContracts": [
								1027
							],
							"name": "IHederaTokenService",
							"nameLocation": "116:19:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "IHederaTokenService.AccountAmount",
									"id": 270,
									"members": [
										{
											"constant": false,
											"id": 265,
											"mutability": "mutable",
											"name": "accountID",
											"nameLocation": "1270:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 270,
											"src": "1262:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 264,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1262:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 267,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "1431:6:1",
											"nodeType": "VariableDeclaration",
											"scope": 270,
											"src": "1425:12:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int64",
												"typeString": "int64"
											},
											"typeName": {
												"id": 266,
												"name": "int64",
												"nodeType": "ElementaryTypeName",
												"src": "1425:5:1",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 269,
											"mutability": "mutable",
											"name": "isApproval",
											"nameLocation": "1620:10:1",
											"nodeType": "VariableDeclaration",
											"scope": 270,
											"src": "1615:15:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 268,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1615:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AccountAmount",
									"nameLocation": "1143:13:1",
									"nodeType": "StructDefinition",
									"scope": 1027,
									"src": "1136:501:1",
									"visibility": "public"
								},
								{
									"canonicalName": "IHederaTokenService.NftTransfer",
									"id": 279,
									"members": [
										{
											"constant": false,
											"id": 272,
											"mutability": "mutable",
											"name": "senderAccountID",
											"nameLocation": "2096:15:1",
											"nodeType": "VariableDeclaration",
											"scope": 279,
											"src": "2088:23:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 271,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2088:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 274,
											"mutability": "mutable",
											"name": "receiverAccountID",
											"nameLocation": "2178:17:1",
											"nodeType": "VariableDeclaration",
											"scope": 279,
											"src": "2170:25:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 273,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2170:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 276,
											"mutability": "mutable",
											"name": "serialNumber",
											"nameLocation": "2252:12:1",
											"nodeType": "VariableDeclaration",
											"scope": 279,
											"src": "2246:18:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int64",
												"typeString": "int64"
											},
											"typeName": {
												"id": 275,
												"name": "int64",
												"nodeType": "ElementaryTypeName",
												"src": "2246:5:1",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 278,
											"mutability": "mutable",
											"name": "isApproval",
											"nameLocation": "2447:10:1",
											"nodeType": "VariableDeclaration",
											"scope": 279,
											"src": "2442:15:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 277,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2442:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "NftTransfer",
									"nameLocation": "2020:11:1",
									"nodeType": "StructDefinition",
									"scope": 1027,
									"src": "2013:451:1",
									"visibility": "public"
								},
								{
									"canonicalName": "IHederaTokenService.TokenTransferList",
									"id": 290,
									"members": [
										{
											"constant": false,
											"id": 281,
											"mutability": "mutable",
											"name": "token",
											"nameLocation": "2566:5:1",
											"nodeType": "VariableDeclaration",
											"scope": 290,
											"src": "2558:13:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 280,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2558:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 285,
											"mutability": "mutable",
											"name": "transfers",
											"nameLocation": "2740:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 290,
											"src": "2724:25:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_AccountAmount_$270_storage_$dyn_storage_ptr",
												"typeString": "struct IHederaTokenService.AccountAmount[]"
											},
											"typeName": {
												"baseType": {
													"id": 283,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 282,
														"name": "AccountAmount",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 270,
														"src": "2724:13:1"
													},
													"referencedDeclaration": 270,
													"src": "2724:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AccountAmount_$270_storage_ptr",
														"typeString": "struct IHederaTokenService.AccountAmount"
													}
												},
												"id": 284,
												"nodeType": "ArrayTypeName",
												"src": "2724:15:1",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_AccountAmount_$270_storage_$dyn_storage_ptr",
													"typeString": "struct IHederaTokenService.AccountAmount[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 289,
											"mutability": "mutable",
											"name": "nftTransfers",
											"nameLocation": "2965:12:1",
											"nodeType": "VariableDeclaration",
											"scope": 290,
											"src": "2951:26:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_NftTransfer_$279_storage_$dyn_storage_ptr",
												"typeString": "struct IHederaTokenService.NftTransfer[]"
											},
											"typeName": {
												"baseType": {
													"id": 287,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 286,
														"name": "NftTransfer",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 279,
														"src": "2951:11:1"
													},
													"referencedDeclaration": 279,
													"src": "2951:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_NftTransfer_$279_storage_ptr",
														"typeString": "struct IHederaTokenService.NftTransfer"
													}
												},
												"id": 288,
												"nodeType": "ArrayTypeName",
												"src": "2951:13:1",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_NftTransfer_$279_storage_$dyn_storage_ptr",
													"typeString": "struct IHederaTokenService.NftTransfer[]"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenTransferList",
									"nameLocation": "2477:17:1",
									"nodeType": "StructDefinition",
									"scope": 1027,
									"src": "2470:514:1",
									"visibility": "public"
								},
								{
									"canonicalName": "IHederaTokenService.TransferList",
									"id": 295,
									"members": [
										{
											"constant": false,
											"id": 294,
											"mutability": "mutable",
											"name": "transfers",
											"nameLocation": "3189:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 295,
											"src": "3173:25:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_AccountAmount_$270_storage_$dyn_storage_ptr",
												"typeString": "struct IHederaTokenService.AccountAmount[]"
											},
											"typeName": {
												"baseType": {
													"id": 292,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 291,
														"name": "AccountAmount",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 270,
														"src": "3173:13:1"
													},
													"referencedDeclaration": 270,
													"src": "3173:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AccountAmount_$270_storage_ptr",
														"typeString": "struct IHederaTokenService.AccountAmount"
													}
												},
												"id": 293,
												"nodeType": "ArrayTypeName",
												"src": "3173:15:1",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_AccountAmount_$270_storage_$dyn_storage_ptr",
													"typeString": "struct IHederaTokenService.AccountAmount[]"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TransferList",
									"nameLocation": "2997:12:1",
									"nodeType": "StructDefinition",
									"scope": 1027,
									"src": "2990:215:1",
									"visibility": "public"
								},
								{
									"canonicalName": "IHederaTokenService.Expiry",
									"id": 302,
									"members": [
										{
											"constant": false,
											"id": 297,
											"mutability": "mutable",
											"name": "second",
											"nameLocation": "3523:6:1",
											"nodeType": "VariableDeclaration",
											"scope": 302,
											"src": "3516:13:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 296,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "3516:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 299,
											"mutability": "mutable",
											"name": "autoRenewAccount",
											"nameLocation": "3717:16:1",
											"nodeType": "VariableDeclaration",
											"scope": 302,
											"src": "3709:24:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 298,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3709:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 301,
											"mutability": "mutable",
											"name": "autoRenewPeriod",
											"nameLocation": "3852:15:1",
											"nodeType": "VariableDeclaration",
											"scope": 302,
											"src": "3845:22:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 300,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "3845:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Expiry",
									"nameLocation": "3306:6:1",
									"nodeType": "StructDefinition",
									"scope": 1027,
									"src": "3299:575:1",
									"visibility": "public"
								},
								{
									"canonicalName": "IHederaTokenService.KeyValue",
									"id": 313,
									"members": [
										{
											"constant": false,
											"id": 304,
											"mutability": "mutable",
											"name": "inheritAccountKey",
											"nameLocation": "4874:17:1",
											"nodeType": "VariableDeclaration",
											"scope": 313,
											"src": "4869:22:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 303,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "4869:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 306,
											"mutability": "mutable",
											"name": "contractId",
											"nameLocation": "4995:10:1",
											"nodeType": "VariableDeclaration",
											"scope": 313,
											"src": "4987:18:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 305,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4987:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 308,
											"mutability": "mutable",
											"name": "ed25519",
											"nameLocation": "5058:7:1",
											"nodeType": "VariableDeclaration",
											"scope": 313,
											"src": "5052:13:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 307,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "5052:5:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 310,
											"mutability": "mutable",
											"name": "ECDSA_secp256k1",
											"nameLocation": "5138:15:1",
											"nodeType": "VariableDeclaration",
											"scope": 313,
											"src": "5132:21:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 309,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "5132:5:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 312,
											"mutability": "mutable",
											"name": "delegatableContractId",
											"nameLocation": "5708:21:1",
											"nodeType": "VariableDeclaration",
											"scope": 313,
											"src": "5700:29:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 311,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "5700:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "KeyValue",
									"nameLocation": "4749:8:1",
									"nodeType": "StructDefinition",
									"scope": 1027,
									"src": "4742:994:1",
									"visibility": "public"
								},
								{
									"canonicalName": "IHederaTokenService.TokenKey",
									"id": 319,
									"members": [
										{
											"constant": false,
											"id": 315,
											"mutability": "mutable",
											"name": "keyType",
											"nameLocation": "6244:7:1",
											"nodeType": "VariableDeclaration",
											"scope": 319,
											"src": "6239:12:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 314,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "6239:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 318,
											"mutability": "mutable",
											"name": "key",
											"nameLocation": "6325:3:1",
											"nodeType": "VariableDeclaration",
											"scope": 319,
											"src": "6316:12:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_KeyValue_$313_storage_ptr",
												"typeString": "struct IHederaTokenService.KeyValue"
											},
											"typeName": {
												"id": 317,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 316,
													"name": "KeyValue",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 313,
													"src": "6316:8:1"
												},
												"referencedDeclaration": 313,
												"src": "6316:8:1",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_KeyValue_$313_storage_ptr",
													"typeString": "struct IHederaTokenService.KeyValue"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenKey",
									"nameLocation": "5837:8:1",
									"nodeType": "StructDefinition",
									"scope": 1027,
									"src": "5830:505:1",
									"visibility": "public"
								},
								{
									"canonicalName": "IHederaTokenService.HederaToken",
									"id": 341,
									"members": [
										{
											"constant": false,
											"id": 321,
											"mutability": "mutable",
											"name": "name",
											"nameLocation": "6762:4:1",
											"nodeType": "VariableDeclaration",
											"scope": 341,
											"src": "6755:11:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 320,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "6755:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 323,
											"mutability": "mutable",
											"name": "symbol",
											"nameLocation": "6973:6:1",
											"nodeType": "VariableDeclaration",
											"scope": 341,
											"src": "6966:13:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 322,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "6966:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 325,
											"mutability": "mutable",
											"name": "treasury",
											"nameLocation": "7240:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 341,
											"src": "7232:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 324,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "7232:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 327,
											"mutability": "mutable",
											"name": "memo",
											"nameLocation": "7343:4:1",
											"nodeType": "VariableDeclaration",
											"scope": 341,
											"src": "7336:11:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 326,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "7336:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 329,
											"mutability": "mutable",
											"name": "tokenSupplyType",
											"nameLocation": "7447:15:1",
											"nodeType": "VariableDeclaration",
											"scope": 341,
											"src": "7442:20:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 328,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "7442:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 331,
											"mutability": "mutable",
											"name": "maxSupply",
											"nameLocation": "7791:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 341,
											"src": "7785:15:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int64",
												"typeString": "int64"
											},
											"typeName": {
												"id": 330,
												"name": "int64",
												"nodeType": "ElementaryTypeName",
												"src": "7785:5:1",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 333,
											"mutability": "mutable",
											"name": "freezeDefault",
											"nameLocation": "7997:13:1",
											"nodeType": "VariableDeclaration",
											"scope": 341,
											"src": "7992:18:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 332,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "7992:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 337,
											"mutability": "mutable",
											"name": "tokenKeys",
											"nameLocation": "8076:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 341,
											"src": "8065:20:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_TokenKey_$319_storage_$dyn_storage_ptr",
												"typeString": "struct IHederaTokenService.TokenKey[]"
											},
											"typeName": {
												"baseType": {
													"id": 335,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 334,
														"name": "TokenKey",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 319,
														"src": "8065:8:1"
													},
													"referencedDeclaration": 319,
													"src": "8065:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenKey_$319_storage_ptr",
														"typeString": "struct IHederaTokenService.TokenKey"
													}
												},
												"id": 336,
												"nodeType": "ArrayTypeName",
												"src": "8065:10:1",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_TokenKey_$319_storage_$dyn_storage_ptr",
													"typeString": "struct IHederaTokenService.TokenKey[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 340,
											"mutability": "mutable",
											"name": "expiry",
											"nameLocation": "8194:6:1",
											"nodeType": "VariableDeclaration",
											"scope": 341,
											"src": "8187:13:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Expiry_$302_storage_ptr",
												"typeString": "struct IHederaTokenService.Expiry"
											},
											"typeName": {
												"id": 339,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 338,
													"name": "Expiry",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 302,
													"src": "8187:6:1"
												},
												"referencedDeclaration": 302,
												"src": "8187:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Expiry_$302_storage_ptr",
													"typeString": "struct IHederaTokenService.Expiry"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "HederaToken",
									"nameLocation": "6541:11:1",
									"nodeType": "StructDefinition",
									"scope": 1027,
									"src": "6534:1673:1",
									"visibility": "public"
								},
								{
									"canonicalName": "IHederaTokenService.TokenInfo",
									"id": 376,
									"members": [
										{
											"constant": false,
											"id": 345,
											"mutability": "mutable",
											"name": "token",
											"nameLocation": "8388:5:1",
											"nodeType": "VariableDeclaration",
											"scope": 376,
											"src": "8376:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_HederaToken_$341_storage_ptr",
												"typeString": "struct IHederaTokenService.HederaToken"
											},
											"typeName": {
												"id": 344,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 343,
													"name": "HederaToken",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 341,
													"src": "8376:11:1"
												},
												"referencedDeclaration": 341,
												"src": "8376:11:1",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_HederaToken_$341_storage_ptr",
													"typeString": "struct IHederaTokenService.HederaToken"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 348,
											"mutability": "mutable",
											"name": "totalSupply",
											"nameLocation": "8494:11:1",
											"nodeType": "VariableDeclaration",
											"scope": 376,
											"src": "8487:18:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 347,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "8487:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 351,
											"mutability": "mutable",
											"name": "deleted",
											"nameLocation": "8579:7:1",
											"nodeType": "VariableDeclaration",
											"scope": 376,
											"src": "8574:12:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 350,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "8574:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 354,
											"mutability": "mutable",
											"name": "defaultKycStatus",
											"nameLocation": "8708:16:1",
											"nodeType": "VariableDeclaration",
											"scope": 376,
											"src": "8703:21:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 353,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "8703:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 357,
											"mutability": "mutable",
											"name": "pauseStatus",
											"nameLocation": "8807:11:1",
											"nodeType": "VariableDeclaration",
											"scope": 376,
											"src": "8802:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 356,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "8802:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 362,
											"mutability": "mutable",
											"name": "fixedFees",
											"nameLocation": "8905:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 376,
											"src": "8894:20:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_FixedFee_$415_storage_$dyn_storage_ptr",
												"typeString": "struct IHederaTokenService.FixedFee[]"
											},
											"typeName": {
												"baseType": {
													"id": 360,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 359,
														"name": "FixedFee",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 415,
														"src": "8894:8:1"
													},
													"referencedDeclaration": 415,
													"src": "8894:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedFee_$415_storage_ptr",
														"typeString": "struct IHederaTokenService.FixedFee"
													}
												},
												"id": 361,
												"nodeType": "ArrayTypeName",
												"src": "8894:10:1",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_FixedFee_$415_storage_$dyn_storage_ptr",
													"typeString": "struct IHederaTokenService.FixedFee[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 367,
											"mutability": "mutable",
											"name": "fractionalFees",
											"nameLocation": "9011:14:1",
											"nodeType": "VariableDeclaration",
											"scope": 376,
											"src": "8995:30:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_FractionalFee_$428_storage_$dyn_storage_ptr",
												"typeString": "struct IHederaTokenService.FractionalFee[]"
											},
											"typeName": {
												"baseType": {
													"id": 365,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 364,
														"name": "FractionalFee",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 428,
														"src": "8995:13:1"
													},
													"referencedDeclaration": 428,
													"src": "8995:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FractionalFee_$428_storage_ptr",
														"typeString": "struct IHederaTokenService.FractionalFee"
													}
												},
												"id": 366,
												"nodeType": "ArrayTypeName",
												"src": "8995:15:1",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_FractionalFee_$428_storage_$dyn_storage_ptr",
													"typeString": "struct IHederaTokenService.FractionalFee[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 372,
											"mutability": "mutable",
											"name": "royaltyFees",
											"nameLocation": "9116:11:1",
											"nodeType": "VariableDeclaration",
											"scope": 376,
											"src": "9103:24:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_RoyaltyFee_$441_storage_$dyn_storage_ptr",
												"typeString": "struct IHederaTokenService.RoyaltyFee[]"
											},
											"typeName": {
												"baseType": {
													"id": 370,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 369,
														"name": "RoyaltyFee",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 441,
														"src": "9103:10:1"
													},
													"referencedDeclaration": 441,
													"src": "9103:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RoyaltyFee_$441_storage_ptr",
														"typeString": "struct IHederaTokenService.RoyaltyFee"
													}
												},
												"id": 371,
												"nodeType": "ArrayTypeName",
												"src": "9103:12:1",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_RoyaltyFee_$441_storage_$dyn_storage_ptr",
													"typeString": "struct IHederaTokenService.RoyaltyFee[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 375,
											"mutability": "mutable",
											"name": "ledgerId",
											"nameLocation": "9186:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 376,
											"src": "9179:15:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 374,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "9179:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenInfo",
									"nameLocation": "8309:9:1",
									"nodeType": "StructDefinition",
									"scope": 1027,
									"src": "8302:899:1",
									"visibility": "public"
								},
								{
									"canonicalName": "IHederaTokenService.FungibleTokenInfo",
									"id": 384,
									"members": [
										{
											"constant": false,
											"id": 380,
											"mutability": "mutable",
											"name": "tokenInfo",
											"nameLocation": "9351:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 384,
											"src": "9341:19:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_TokenInfo_$376_storage_ptr",
												"typeString": "struct IHederaTokenService.TokenInfo"
											},
											"typeName": {
												"id": 379,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 378,
													"name": "TokenInfo",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 376,
													"src": "9341:9:1"
												},
												"referencedDeclaration": 376,
												"src": "9341:9:1",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenInfo_$376_storage_ptr",
													"typeString": "struct IHederaTokenService.TokenInfo"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 383,
											"mutability": "mutable",
											"name": "decimals",
											"nameLocation": "9443:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 384,
											"src": "9436:15:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 382,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "9436:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "FungibleTokenInfo",
									"nameLocation": "9272:17:1",
									"nodeType": "StructDefinition",
									"scope": 1027,
									"src": "9265:193:1",
									"visibility": "public"
								},
								{
									"canonicalName": "IHederaTokenService.NonFungibleTokenInfo",
									"id": 404,
									"members": [
										{
											"constant": false,
											"id": 388,
											"mutability": "mutable",
											"name": "tokenInfo",
											"nameLocation": "9615:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 404,
											"src": "9605:19:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_TokenInfo_$376_storage_ptr",
												"typeString": "struct IHederaTokenService.TokenInfo"
											},
											"typeName": {
												"id": 387,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 386,
													"name": "TokenInfo",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 376,
													"src": "9605:9:1"
												},
												"referencedDeclaration": 376,
												"src": "9605:9:1",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenInfo_$376_storage_ptr",
													"typeString": "struct IHederaTokenService.TokenInfo"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 391,
											"mutability": "mutable",
											"name": "serialNumber",
											"nameLocation": "9682:12:1",
											"nodeType": "VariableDeclaration",
											"scope": 404,
											"src": "9676:18:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int64",
												"typeString": "int64"
											},
											"typeName": {
												"id": 390,
												"name": "int64",
												"nodeType": "ElementaryTypeName",
												"src": "9676:5:1",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 394,
											"mutability": "mutable",
											"name": "ownerId",
											"nameLocation": "9787:7:1",
											"nodeType": "VariableDeclaration",
											"scope": 404,
											"src": "9779:15:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 393,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "9779:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 397,
											"mutability": "mutable",
											"name": "creationTime",
											"nameLocation": "9872:12:1",
											"nodeType": "VariableDeclaration",
											"scope": 404,
											"src": "9866:18:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int64",
												"typeString": "int64"
											},
											"typeName": {
												"id": 396,
												"name": "int64",
												"nodeType": "ElementaryTypeName",
												"src": "9866:5:1",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 400,
											"mutability": "mutable",
											"name": "metadata",
											"nameLocation": "9944:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 404,
											"src": "9938:14:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 399,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "9938:5:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 403,
											"mutability": "mutable",
											"name": "spenderId",
											"nameLocation": "10075:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 404,
											"src": "10067:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 402,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "10067:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "NonFungibleTokenInfo",
									"nameLocation": "9533:20:1",
									"nodeType": "StructDefinition",
									"scope": 1027,
									"src": "9526:565:1",
									"visibility": "public"
								},
								{
									"canonicalName": "IHederaTokenService.FixedFee",
									"id": 415,
									"members": [
										{
											"constant": false,
											"id": 406,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "10452:6:1",
											"nodeType": "VariableDeclaration",
											"scope": 415,
											"src": "10445:13:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 405,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "10445:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 408,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "10557:7:1",
											"nodeType": "VariableDeclaration",
											"scope": 415,
											"src": "10549:15:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 407,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "10549:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 410,
											"mutability": "mutable",
											"name": "useHbarsForPayment",
											"nameLocation": "10646:18:1",
											"nodeType": "VariableDeclaration",
											"scope": 415,
											"src": "10641:23:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 409,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "10641:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 412,
											"mutability": "mutable",
											"name": "useCurrentTokenForPayment",
											"nameLocation": "10775:25:1",
											"nodeType": "VariableDeclaration",
											"scope": 415,
											"src": "10770:30:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 411,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "10770:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 414,
											"mutability": "mutable",
											"name": "feeCollector",
											"nameLocation": "10911:12:1",
											"nodeType": "VariableDeclaration",
											"scope": 415,
											"src": "10903:20:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 413,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "10903:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "FixedFee",
									"nameLocation": "10425:8:1",
									"nodeType": "StructDefinition",
									"scope": 1027,
									"src": "10418:512:1",
									"visibility": "public"
								},
								{
									"canonicalName": "IHederaTokenService.FractionalFee",
									"id": 428,
									"members": [
										{
											"constant": false,
											"id": 417,
											"mutability": "mutable",
											"name": "numerator",
											"nameLocation": "11383:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 428,
											"src": "11376:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 416,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "11376:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 419,
											"mutability": "mutable",
											"name": "denominator",
											"nameLocation": "11524:11:1",
											"nodeType": "VariableDeclaration",
											"scope": 428,
											"src": "11517:18:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 418,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "11517:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 421,
											"mutability": "mutable",
											"name": "minimumAmount",
											"nameLocation": "11593:13:1",
											"nodeType": "VariableDeclaration",
											"scope": 428,
											"src": "11586:20:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 420,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "11586:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 423,
											"mutability": "mutable",
											"name": "maximumAmount",
											"nameLocation": "11690:13:1",
											"nodeType": "VariableDeclaration",
											"scope": 428,
											"src": "11683:20:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 422,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "11683:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 425,
											"mutability": "mutable",
											"name": "netOfTransfers",
											"nameLocation": "11718:14:1",
											"nodeType": "VariableDeclaration",
											"scope": 428,
											"src": "11713:19:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 424,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "11713:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 427,
											"mutability": "mutable",
											"name": "feeCollector",
											"nameLocation": "11843:12:1",
											"nodeType": "VariableDeclaration",
											"scope": 428,
											"src": "11835:20:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 426,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "11835:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "FractionalFee",
									"nameLocation": "11240:13:1",
									"nodeType": "StructDefinition",
									"scope": 1027,
									"src": "11233:629:1",
									"visibility": "public"
								},
								{
									"canonicalName": "IHederaTokenService.RoyaltyFee",
									"id": 441,
									"members": [
										{
											"constant": false,
											"id": 430,
											"mutability": "mutable",
											"name": "numerator",
											"nameLocation": "12493:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 441,
											"src": "12486:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 429,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "12486:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 432,
											"mutability": "mutable",
											"name": "denominator",
											"nameLocation": "12617:11:1",
											"nodeType": "VariableDeclaration",
											"scope": 441,
											"src": "12610:18:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 431,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "12610:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 434,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "13005:6:1",
											"nodeType": "VariableDeclaration",
											"scope": 441,
											"src": "12998:13:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 433,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "12998:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 436,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "13029:7:1",
											"nodeType": "VariableDeclaration",
											"scope": 441,
											"src": "13021:15:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 435,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "13021:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 438,
											"mutability": "mutable",
											"name": "useHbarsForPayment",
											"nameLocation": "13051:18:1",
											"nodeType": "VariableDeclaration",
											"scope": 441,
											"src": "13046:23:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 437,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "13046:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 440,
											"mutability": "mutable",
											"name": "feeCollector",
											"nameLocation": "13180:12:1",
											"nodeType": "VariableDeclaration",
											"scope": 441,
											"src": "13172:20:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 439,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "13172:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoyaltyFee",
									"nameLocation": "12370:10:1",
									"nodeType": "StructDefinition",
									"scope": 1027,
									"src": "12363:836:1",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 442,
										"nodeType": "StructuredDocumentation",
										"src": "13291:316:1",
										"text": "Performs transfers among combinations of tokens and hbars\n @param transferList the list of hbar transfers to do\n @param tokenTransfers the list of token transfers to do\n @custom:version 0.3.0 the signature of the previous version was cryptoTransfer(TokenTransferList[] memory tokenTransfers)"
									},
									"functionSelector": "0e71804f",
									"id": 454,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "cryptoTransfer",
									"nameLocation": "13621:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "transferList",
												"nameLocation": "13656:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "13636:32:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TransferList_$295_memory_ptr",
													"typeString": "struct IHederaTokenService.TransferList"
												},
												"typeName": {
													"id": 444,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 443,
														"name": "TransferList",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 295,
														"src": "13636:12:1"
													},
													"referencedDeclaration": 295,
													"src": "13636:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TransferList_$295_storage_ptr",
														"typeString": "struct IHederaTokenService.TransferList"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "tokenTransfers",
												"nameLocation": "13697:14:1",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "13670:41:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_TokenTransferList_$290_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IHederaTokenService.TokenTransferList[]"
												},
												"typeName": {
													"baseType": {
														"id": 447,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 446,
															"name": "TokenTransferList",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 290,
															"src": "13670:17:1"
														},
														"referencedDeclaration": 290,
														"src": "13670:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenTransferList_$290_storage_ptr",
															"typeString": "struct IHederaTokenService.TokenTransferList"
														}
													},
													"id": 448,
													"nodeType": "ArrayTypeName",
													"src": "13670:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_TokenTransferList_$290_storage_$dyn_storage_ptr",
														"typeString": "struct IHederaTokenService.TokenTransferList[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13635:77:1"
									},
									"returnParameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "13753:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "13747:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 451,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "13747:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13746:20:1"
									},
									"scope": 1027,
									"src": "13612:155:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 455,
										"nodeType": "StructuredDocumentation",
										"src": "13773:984:1",
										"text": "Mints an amount of the token to the defined treasury account\n @param token The token for which to mint tokens. If token does not exist, transaction results in\n              INVALID_TOKEN_ID\n @param amount Applicable to tokens of type FUNGIBLE_COMMON. The amount to mint to the Treasury Account.\n               Amount must be a positive non-zero number represented in the lowest denomination of the\n               token. The new supply must be lower than 2^63.\n @param metadata Applicable to tokens of type NON_FUNGIBLE_UNIQUE. A list of metadata that are being created.\n                 Maximum allowed size of each metadata is 100 bytes\n @return responseCode The response code for the status of the request. SUCCESS is 22.\n @return newTotalSupply The new supply of tokens. For NFTs it is the total count of NFTs\n @return serialNumbers If the token is an NFT the newly generate serial numbers, othersise empty."
									},
									"functionSelector": "278e0b88",
									"id": 472,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mintToken",
									"nameLocation": "14771:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "14798:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "14790:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14790:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "14820:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "14813:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 458,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "14813:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "metadata",
												"nameLocation": "14851:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "14836:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
													"typeString": "bytes[]"
												},
												"typeName": {
													"baseType": {
														"id": 460,
														"name": "bytes",
														"nodeType": "ElementaryTypeName",
														"src": "14836:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage_ptr",
															"typeString": "bytes"
														}
													},
													"id": 461,
													"nodeType": "ArrayTypeName",
													"src": "14836:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
														"typeString": "bytes[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14780:85:1"
									},
									"returnParameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "14919:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "14913:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 464,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "14913:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "newTotalSupply",
												"nameLocation": "14952:14:1",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "14945:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 466,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "14945:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "serialNumbers",
												"nameLocation": "14995:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "14980:28:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_int64_$dyn_memory_ptr",
													"typeString": "int64[]"
												},
												"typeName": {
													"baseType": {
														"id": 468,
														"name": "int64",
														"nodeType": "ElementaryTypeName",
														"src": "14980:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int64",
															"typeString": "int64"
														}
													},
													"id": 469,
													"nodeType": "ArrayTypeName",
													"src": "14980:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_int64_$dyn_storage_ptr",
														"typeString": "int64[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14899:119:1"
									},
									"scope": 1027,
									"src": "14762:257:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 473,
										"nodeType": "StructuredDocumentation",
										"src": "15025:834:1",
										"text": "Burns an amount of the token from the defined treasury account\n @param token The token for which to burn tokens. If token does not exist, transaction results in\n              INVALID_TOKEN_ID\n @param amount  Applicable to tokens of type FUNGIBLE_COMMON. The amount to burn from the Treasury Account.\n                Amount must be a positive non-zero number, not bigger than the token balance of the treasury\n                account (0; balance], represented in the lowest denomination.\n @param serialNumbers Applicable to tokens of type NON_FUNGIBLE_UNIQUE. The list of serial numbers to be burned.\n @return responseCode The response code for the status of the request. SUCCESS is 22.\n @return newTotalSupply The new supply of tokens. For NFTs it is the total count of NFTs"
									},
									"functionSelector": "acb9cff9",
									"id": 487,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burnToken",
									"nameLocation": "15873:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "15900:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "15892:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 474,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15892:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "15922:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "15915:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 476,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "15915:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "serialNumbers",
												"nameLocation": "15953:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "15938:28:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_int64_$dyn_memory_ptr",
													"typeString": "int64[]"
												},
												"typeName": {
													"baseType": {
														"id": 478,
														"name": "int64",
														"nodeType": "ElementaryTypeName",
														"src": "15938:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int64",
															"typeString": "int64"
														}
													},
													"id": 479,
													"nodeType": "ArrayTypeName",
													"src": "15938:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_int64_$dyn_storage_ptr",
														"typeString": "int64[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15882:90:1"
									},
									"returnParameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "15997:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "15991:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 482,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "15991:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "newTotalSupply",
												"nameLocation": "16018:14:1",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "16011:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 484,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "16011:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15990:43:1"
									},
									"scope": 1027,
									"src": "15864:170:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 488,
										"nodeType": "StructuredDocumentation",
										"src": "16040:1515:1",
										"text": "Associates the provided account with the provided tokens. Must be signed by the provided\n  Account's key or called from the accounts contract key\n  If the provided account is not found, the transaction will resolve to INVALID_ACCOUNT_ID.\n  If the provided account has been deleted, the transaction will resolve to ACCOUNT_DELETED.\n  If any of the provided tokens is not found, the transaction will resolve to INVALID_TOKEN_REF.\n  If any of the provided tokens has been deleted, the transaction will resolve to TOKEN_WAS_DELETED.\n  If an association between the provided account and any of the tokens already exists, the\n  transaction will resolve to TOKEN_ALREADY_ASSOCIATED_TO_ACCOUNT.\n  If the provided account's associations count exceed the constraint of maximum token associations\n    per account, the transaction will resolve to TOKENS_PER_ACCOUNT_LIMIT_EXCEEDED.\n  On success, associations between the provided account and tokens are made and the account is\n    ready to interact with the tokens.\n @param account The account to be associated with the provided tokens\n @param tokens The tokens to be associated with the provided account. In the case of NON_FUNGIBLE_UNIQUE\n               Type, once an account is associated, it can hold any number of NFTs (serial numbers) of that\n               token type\n @return responseCode The response code for the status of the request. SUCCESS is 22."
									},
									"functionSelector": "2e63879b",
									"id": 498,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "associateTokens",
									"nameLocation": "17569:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "17593:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "17585:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 489,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17585:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "tokens",
												"nameLocation": "17619:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "17602:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 491,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "17602:7:1",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 492,
													"nodeType": "ArrayTypeName",
													"src": "17602:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17584:42:1"
									},
									"returnParameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "17667:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "17661:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 495,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "17661:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17660:20:1"
									},
									"scope": 1027,
									"src": "17560:121:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 499,
										"nodeType": "StructuredDocumentation",
										"src": "17687:257:1",
										"text": "Single-token variant of associateTokens. Will be mapped to a single entry array call of associateTokens\n @param account The account to be associated with the provided token\n @param token The token to be associated with the provided account"
									},
									"functionSelector": "49146bde",
									"id": 508,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "associateToken",
									"nameLocation": "17958:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "17981:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "17973:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 500,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17973:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "17998:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "17990:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 502,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17990:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17972:32:1"
									},
									"returnParameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "18045:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "18039:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 505,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "18039:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18038:20:1"
									},
									"scope": 1027,
									"src": "17949:110:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 509,
										"nodeType": "StructuredDocumentation",
										"src": "18065:1533:1",
										"text": "Dissociates the provided account with the provided tokens. Must be signed by the provided\n Account's key.\n If the provided account is not found, the transaction will resolve to INVALID_ACCOUNT_ID.\n If the provided account has been deleted, the transaction will resolve to ACCOUNT_DELETED.\n If any of the provided tokens is not found, the transaction will resolve to INVALID_TOKEN_REF.\n If any of the provided tokens has been deleted, the transaction will resolve to TOKEN_WAS_DELETED.\n If an association between the provided account and any of the tokens does not exist, the\n transaction will resolve to TOKEN_NOT_ASSOCIATED_TO_ACCOUNT.\n If a token has not been deleted and has not expired, and the user has a nonzero balance, the\n transaction will resolve to TRANSACTION_REQUIRES_ZERO_TOKEN_BALANCES.\n If a <b>fungible token</b> has expired, the user can disassociate even if their token balance is\n not zero.\n If a <b>non fungible token</b> has expired, the user can <b>not</b> disassociate if their token\n balance is not zero. The transaction will resolve to TRANSACTION_REQUIRED_ZERO_TOKEN_BALANCES.\n On success, associations between the provided account and tokens are removed.\n @param account The account to be dissociated from the provided tokens\n @param tokens The tokens to be dissociated from the provided account.\n @return responseCode The response code for the status of the request. SUCCESS is 22."
									},
									"functionSelector": "78b63918",
									"id": 519,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "dissociateTokens",
									"nameLocation": "19612:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "19637:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "19629:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 510,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19629:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "tokens",
												"nameLocation": "19663:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "19646:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 512,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "19646:7:1",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 513,
													"nodeType": "ArrayTypeName",
													"src": "19646:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19628:42:1"
									},
									"returnParameters": {
										"id": 518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 517,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "19711:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "19705:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 516,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "19705:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19704:20:1"
									},
									"scope": 1027,
									"src": "19603:122:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 520,
										"nodeType": "StructuredDocumentation",
										"src": "19731:259:1",
										"text": "Single-token variant of dissociateTokens. Will be mapped to a single entry array call of dissociateTokens\n @param account The account to be associated with the provided token\n @param token The token to be associated with the provided account"
									},
									"functionSelector": "099794e8",
									"id": 529,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "dissociateToken",
									"nameLocation": "20004:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "20028:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "20020:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20020:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "20045:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "20037:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 523,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20037:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20019:32:1"
									},
									"returnParameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "20092:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "20086:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 526,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "20086:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20085:20:1"
									},
									"scope": 1027,
									"src": "19995:111:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "20112:564:1",
										"text": "Creates a Fungible Token with the specified properties\n @param token the basic properties of the token being created\n @param initialTotalSupply Specifies the initial supply of tokens to be put in circulation. The\n initial supply is sent to the Treasury Account. The supply is in the lowest denomination possible.\n @param decimals the number of decimal places a token is divisible by\n @return responseCode The response code for the status of the request. SUCCESS is 22.\n @return tokenAddress the created token's address"
									},
									"functionSelector": "c23baeb6",
									"id": 544,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createFungibleToken",
									"nameLocation": "20690:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "20738:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "20719:24:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_HederaToken_$341_memory_ptr",
													"typeString": "struct IHederaTokenService.HederaToken"
												},
												"typeName": {
													"id": 532,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 531,
														"name": "HederaToken",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 341,
														"src": "20719:11:1"
													},
													"referencedDeclaration": 341,
													"src": "20719:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_HederaToken_$341_storage_ptr",
														"typeString": "struct IHederaTokenService.HederaToken"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "initialTotalSupply",
												"nameLocation": "20760:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "20753:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 534,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "20753:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "decimals",
												"nameLocation": "20795:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "20788:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 536,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "20788:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20709:100:1"
									},
									"returnParameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "20842:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "20836:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 539,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "20836:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nameLocation": "20864:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "20856:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 541,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20856:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20835:42:1"
									},
									"scope": 1027,
									"src": "20681:197:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 545,
										"nodeType": "StructuredDocumentation",
										"src": "20884:707:1",
										"text": "Creates a Fungible Token with the specified properties\n @param token the basic properties of the token being created\n @param initialTotalSupply Specifies the initial supply of tokens to be put in circulation. The\n initial supply is sent to the Treasury Account. The supply is in the lowest denomination possible.\n @param decimals the number of decimal places a token is divisible by.\n @param fixedFees list of fixed fees to apply to the token\n @param fractionalFees list of fractional fees to apply to the token\n @return responseCode The response code for the status of the request. SUCCESS is 22.\n @return tokenAddress the created token's address"
									},
									"functionSelector": "b937581a",
									"id": 567,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createFungibleTokenWithCustomFees",
									"nameLocation": "21605:33:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "21667:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "21648:24:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_HederaToken_$341_memory_ptr",
													"typeString": "struct IHederaTokenService.HederaToken"
												},
												"typeName": {
													"id": 547,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 546,
														"name": "HederaToken",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 341,
														"src": "21648:11:1"
													},
													"referencedDeclaration": 341,
													"src": "21648:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_HederaToken_$341_storage_ptr",
														"typeString": "struct IHederaTokenService.HederaToken"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "initialTotalSupply",
												"nameLocation": "21689:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "21682:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 549,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "21682:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "decimals",
												"nameLocation": "21724:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "21717:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 551,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "21717:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "fixedFees",
												"nameLocation": "21760:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "21742:27:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_FixedFee_$415_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IHederaTokenService.FixedFee[]"
												},
												"typeName": {
													"baseType": {
														"id": 554,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 553,
															"name": "FixedFee",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 415,
															"src": "21742:8:1"
														},
														"referencedDeclaration": 415,
														"src": "21742:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FixedFee_$415_storage_ptr",
															"typeString": "struct IHederaTokenService.FixedFee"
														}
													},
													"id": 555,
													"nodeType": "ArrayTypeName",
													"src": "21742:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_FixedFee_$415_storage_$dyn_storage_ptr",
														"typeString": "struct IHederaTokenService.FixedFee[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "fractionalFees",
												"nameLocation": "21802:14:1",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "21779:37:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_FractionalFee_$428_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IHederaTokenService.FractionalFee[]"
												},
												"typeName": {
													"baseType": {
														"id": 558,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 557,
															"name": "FractionalFee",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 428,
															"src": "21779:13:1"
														},
														"referencedDeclaration": 428,
														"src": "21779:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FractionalFee_$428_storage_ptr",
															"typeString": "struct IHederaTokenService.FractionalFee"
														}
													},
													"id": 559,
													"nodeType": "ArrayTypeName",
													"src": "21779:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_FractionalFee_$428_storage_$dyn_storage_ptr",
														"typeString": "struct IHederaTokenService.FractionalFee[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21638:184:1"
									},
									"returnParameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "21855:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "21849:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 562,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "21849:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nameLocation": "21877:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "21869:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 564,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21869:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21848:42:1"
									},
									"scope": 1027,
									"src": "21596:295:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 568,
										"nodeType": "StructuredDocumentation",
										"src": "21897:289:1",
										"text": "Creates an Non Fungible Unique Token with the specified properties\n @param token the basic properties of the token being created\n @return responseCode The response code for the status of the request. SUCCESS is 22.\n @return tokenAddress the created token's address"
									},
									"functionSelector": "9c89bb35",
									"id": 578,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createNonFungibleToken",
									"nameLocation": "22200:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "22242:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "22223:24:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_HederaToken_$341_memory_ptr",
													"typeString": "struct IHederaTokenService.HederaToken"
												},
												"typeName": {
													"id": 570,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 569,
														"name": "HederaToken",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 341,
														"src": "22223:11:1"
													},
													"referencedDeclaration": 341,
													"src": "22223:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_HederaToken_$341_storage_ptr",
														"typeString": "struct IHederaTokenService.HederaToken"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22222:26:1"
									},
									"returnParameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "22305:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "22299:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 573,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "22299:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nameLocation": "22327:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "22319:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22319:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22298:42:1"
									},
									"scope": 1027,
									"src": "22191:150:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 579,
										"nodeType": "StructuredDocumentation",
										"src": "22347:425:1",
										"text": "Creates an Non Fungible Unique Token with the specified properties\n @param token the basic properties of the token being created\n @param fixedFees list of fixed fees to apply to the token\n @param royaltyFees list of royalty fees to apply to the token\n @return responseCode The response code for the status of the request. SUCCESS is 22.\n @return tokenAddress the created token's address"
									},
									"functionSelector": "45733969",
									"id": 597,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createNonFungibleTokenWithCustomFees",
									"nameLocation": "22786:36:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "22851:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "22832:24:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_HederaToken_$341_memory_ptr",
													"typeString": "struct IHederaTokenService.HederaToken"
												},
												"typeName": {
													"id": 581,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 580,
														"name": "HederaToken",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 341,
														"src": "22832:11:1"
													},
													"referencedDeclaration": 341,
													"src": "22832:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_HederaToken_$341_storage_ptr",
														"typeString": "struct IHederaTokenService.HederaToken"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "fixedFees",
												"nameLocation": "22884:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "22866:27:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_FixedFee_$415_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IHederaTokenService.FixedFee[]"
												},
												"typeName": {
													"baseType": {
														"id": 584,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 583,
															"name": "FixedFee",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 415,
															"src": "22866:8:1"
														},
														"referencedDeclaration": 415,
														"src": "22866:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FixedFee_$415_storage_ptr",
															"typeString": "struct IHederaTokenService.FixedFee"
														}
													},
													"id": 585,
													"nodeType": "ArrayTypeName",
													"src": "22866:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_FixedFee_$415_storage_$dyn_storage_ptr",
														"typeString": "struct IHederaTokenService.FixedFee[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "royaltyFees",
												"nameLocation": "22923:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "22903:31:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_RoyaltyFee_$441_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IHederaTokenService.RoyaltyFee[]"
												},
												"typeName": {
													"baseType": {
														"id": 588,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 587,
															"name": "RoyaltyFee",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 441,
															"src": "22903:10:1"
														},
														"referencedDeclaration": 441,
														"src": "22903:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoyaltyFee_$441_storage_ptr",
															"typeString": "struct IHederaTokenService.RoyaltyFee"
														}
													},
													"id": 589,
													"nodeType": "ArrayTypeName",
													"src": "22903:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_RoyaltyFee_$441_storage_$dyn_storage_ptr",
														"typeString": "struct IHederaTokenService.RoyaltyFee[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22822:118:1"
									},
									"returnParameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "22973:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "22967:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 592,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "22967:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nameLocation": "22995:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "22987:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 594,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22987:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22966:42:1"
									},
									"scope": 1027,
									"src": "22777:232:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 598,
										"nodeType": "StructuredDocumentation",
										"src": "23101:230:1",
										"text": "Initiates a Fungible Token Transfer\n @param token The ID of the token as a solidity address\n @param accountId account to do a transfer to/from\n @param amount The amount from the accountId at the same index"
									},
									"functionSelector": "82bba493",
									"id": 611,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferTokens",
									"nameLocation": "23345:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 600,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "23377:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "23369:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 599,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23369:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 603,
												"mutability": "mutable",
												"name": "accountId",
												"nameLocation": "23409:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "23392:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 601,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "23392:7:1",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 602,
													"nodeType": "ArrayTypeName",
													"src": "23392:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "23443:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "23428:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_int64_$dyn_memory_ptr",
													"typeString": "int64[]"
												},
												"typeName": {
													"baseType": {
														"id": 604,
														"name": "int64",
														"nodeType": "ElementaryTypeName",
														"src": "23428:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int64",
															"typeString": "int64"
														}
													},
													"id": 605,
													"nodeType": "ArrayTypeName",
													"src": "23428:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_int64_$dyn_storage_ptr",
														"typeString": "int64[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23359:96:1"
									},
									"returnParameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "23480:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "23474:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 608,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "23474:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23473:20:1"
									},
									"scope": 1027,
									"src": "23336:158:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 612,
										"nodeType": "StructuredDocumentation",
										"src": "23500:320:1",
										"text": "Initiates a Non-Fungable Token Transfer\n @param token The ID of the token as a solidity address\n @param sender the sender of an nft\n @param receiver the receiver of the nft sent by the same index at sender\n @param serialNumber the serial number of the nft sent by the same index at sender"
									},
									"functionSelector": "2c4ba191",
									"id": 628,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferNFTs",
									"nameLocation": "23834:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "23864:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "23856:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23856:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "23896:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "23879:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 615,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "23879:7:1",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 616,
													"nodeType": "ArrayTypeName",
													"src": "23879:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "23929:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "23912:25:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 618,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "23912:7:1",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 619,
													"nodeType": "ArrayTypeName",
													"src": "23912:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "serialNumber",
												"nameLocation": "23962:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "23947:27:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_int64_$dyn_memory_ptr",
													"typeString": "int64[]"
												},
												"typeName": {
													"baseType": {
														"id": 621,
														"name": "int64",
														"nodeType": "ElementaryTypeName",
														"src": "23947:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int64",
															"typeString": "int64"
														}
													},
													"id": 622,
													"nodeType": "ArrayTypeName",
													"src": "23947:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_int64_$dyn_storage_ptr",
														"typeString": "int64[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23846:134:1"
									},
									"returnParameters": {
										"id": 627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "24005:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "23999:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 625,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "23999:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23998:20:1"
									},
									"scope": 1027,
									"src": "23825:194:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 629,
										"nodeType": "StructuredDocumentation",
										"src": "24025:540:1",
										"text": "Transfers tokens where the calling account/contract is implicitly the first entry in the token transfer list,\n where the amount is the value needed to zero balance the transfers. Regular signing rules apply for sending\n (positive amount) or receiving (negative amount)\n @param token The token to transfer to/from\n @param sender The sender for the transaction\n @param recipient The receiver of the transaction\n @param amount Non-negative value to send. a negative value will result in a failure."
									},
									"functionSelector": "eca36917",
									"id": 642,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferToken",
									"nameLocation": "24579:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "24610:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "24602:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 630,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24602:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "24633:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "24625:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 632,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24625:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "24657:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "24649:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 634,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24649:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "24682:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "24676:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 636,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "24676:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24592:102:1"
									},
									"returnParameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "24719:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "24713:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 639,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "24713:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24712:20:1"
									},
									"scope": 1027,
									"src": "24570:163:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 643,
										"nodeType": "StructuredDocumentation",
										"src": "24739:517:1",
										"text": "Transfers tokens where the calling account/contract is implicitly the first entry in the token transfer list,\n where the amount is the value needed to zero balance the transfers. Regular signing rules apply for sending\n (positive amount) or receiving (negative amount)\n @param token The token to transfer to/from\n @param sender The sender for the transaction\n @param recipient The receiver of the transaction\n @param serialNumber The serial number of the NFT to transfer."
									},
									"functionSelector": "5cfc9011",
									"id": 656,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferNFT",
									"nameLocation": "25270:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "25299:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "25291:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 644,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25291:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "25322:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "25314:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 646,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25314:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "25346:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "25338:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25338:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "serialNumber",
												"nameLocation": "25371:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "25365:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 650,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "25365:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25281:108:1"
									},
									"returnParameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "25414:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "25408:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 653,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "25408:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25407:20:1"
									},
									"scope": 1027,
									"src": "25261:167:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 657,
										"nodeType": "StructuredDocumentation",
										"src": "25434:497:1",
										"text": "Allows spender to withdraw from your account multiple times, up to the value amount. If this function is called\n again it overwrites the current allowance with value.\n Only Applicable to Fungible Tokens\n @param token The hedera token address to approve\n @param spender the account address authorized to spend\n @param amount the amount of tokens authorized to spend.\n @return responseCode The response code for the status of the request. SUCCESS is 22."
									},
									"functionSelector": "e1f21c67",
									"id": 668,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "25945:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "25970:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 668,
												"src": "25962:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25962:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "25993:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 668,
												"src": "25985:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 660,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25985:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "26018:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 668,
												"src": "26010:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 662,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26010:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25952:78:1"
									},
									"returnParameters": {
										"id": 667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "26055:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 668,
												"src": "26049:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 665,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "26049:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26048:20:1"
									},
									"scope": 1027,
									"src": "25936:133:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 669,
										"nodeType": "StructuredDocumentation",
										"src": "26223:475:1",
										"text": "Only applicable to fungible tokens\n @param token The address of the fungible Hedera token to transfer\n @param from The account address of the owner of the token, on the behalf of which to transfer `amount` tokens\n @param to The account address of the receiver of the `amount` tokens\n @param amount The amount of tokens to transfer from `from` to `to`\n @return responseCode The response code for the status of the request. SUCCESS is 22."
									},
									"functionSelector": "15dacbea",
									"id": 682,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "26712:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "26733:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "26725:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 670,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26725:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "26748:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "26740:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 672,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26740:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "26762:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "26754:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26754:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "26774:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "26766:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 676,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26766:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26724:57:1"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "26806:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "26800:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 679,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "26800:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26799:20:1"
									},
									"scope": 1027,
									"src": "26703:117:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 683,
										"nodeType": "StructuredDocumentation",
										"src": "26826:483:1",
										"text": "Returns the amount which spender is still allowed to withdraw from owner.\n Only Applicable to Fungible Tokens\n @param token The Hedera token address to check the allowance of\n @param owner the owner of the tokens to be spent\n @param spender the spender of the tokens\n @return responseCode The response code for the status of the request. SUCCESS is 22.\n @return allowance The amount which spender is still allowed to withdraw from owner."
									},
									"functionSelector": "927da105",
									"id": 696,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "27323:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "27350:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "27342:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 684,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27342:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "27373:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "27365:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 686,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27365:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "27396:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "27388:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27388:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27332:77:1"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "27434:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "27428:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 691,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "27428:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "27456:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "27448:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 693,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27448:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27427:39:1"
									},
									"scope": 1027,
									"src": "27314:153:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "27473:454:1",
										"text": "Allow or reaffirm the approved address to transfer an NFT the approved address does not own.\n Only Applicable to NFT Tokens\n @param token The Hedera NFT token address to approve\n @param approved The new approved NFT controller.  To revoke approvals pass in the zero address.\n @param serialNumber The NFT serial number  to approve\n @return responseCode The response code for the status of the request. SUCCESS is 22."
									},
									"functionSelector": "7336aaf0",
									"id": 708,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveNFT",
									"nameLocation": "27941:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "27969:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "27961:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27961:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "27992:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "27984:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27984:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 703,
												"mutability": "mutable",
												"name": "serialNumber",
												"nameLocation": "28018:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "28010:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 702,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28010:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27951:85:1"
									},
									"returnParameters": {
										"id": 707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 706,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "28061:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "28055:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 705,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "28055:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28054:20:1"
									},
									"scope": 1027,
									"src": "27932:143:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 709,
										"nodeType": "StructuredDocumentation",
										"src": "28081:515:1",
										"text": "Transfers `serialNumber` of `token` from `from` to `to` using the allowance mechanism.\n Only applicable to NFT tokens\n @param token The address of the non-fungible Hedera token to transfer\n @param from The account address of the owner of `serialNumber` of `token`\n @param to The account address of the receiver of `serialNumber`\n @param serialNumber The NFT serial number to transfer\n @return responseCode The response code for the status of the request. SUCCESS is 22."
									},
									"functionSelector": "9b23d3d9",
									"id": 722,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromNFT",
									"nameLocation": "28610:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "28634:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "28626:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 710,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28626:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "28649:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "28641:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 712,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28641:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "28663:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "28655:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 714,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28655:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "serialNumber",
												"nameLocation": "28675:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "28667:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 716,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28667:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28625:63:1"
									},
									"returnParameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "28713:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "28707:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 719,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "28707:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28706:20:1"
									},
									"scope": 1027,
									"src": "28601:126:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 723,
										"nodeType": "StructuredDocumentation",
										"src": "28733:410:1",
										"text": "Get the approved address for a single NFT\n Only Applicable to NFT Tokens\n @param token The Hedera NFT token address to check approval\n @param serialNumber The NFT to find the approved address for\n @return responseCode The response code for the status of the request. SUCCESS is 22.\n @return approved The approved address for this NFT, or the zero address if there is none"
									},
									"functionSelector": "098f2366",
									"id": 734,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "29157:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "29177:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "29169:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 724,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29169:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "serialNumber",
												"nameLocation": "29192:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "29184:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 726,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29184:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29168:37:1"
									},
									"returnParameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "29246:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "29240:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 729,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "29240:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "29268:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "29260:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 731,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29260:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29239:38:1"
									},
									"scope": 1027,
									"src": "29148:130:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 735,
										"nodeType": "StructuredDocumentation",
										"src": "29284:420:1",
										"text": "Enable or disable approval for a third party (\"operator\") to manage\n  all of `msg.sender`'s assets\n @param token The Hedera NFT token address to approve\n @param operator Address to add to the set of authorized operators\n @param approved True if the operator is approved, false to revoke approval\n @return responseCode The response code for the status of the request. SUCCESS is 22."
									},
									"functionSelector": "367605ca",
									"id": 746,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "29718:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "29753:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "29745:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 736,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29745:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "29776:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "29768:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 738,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29768:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "29799:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "29794:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 740,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "29794:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29735:78:1"
									},
									"returnParameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "29838:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "29832:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 743,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "29832:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29831:20:1"
									},
									"scope": 1027,
									"src": "29709:143:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 747,
										"nodeType": "StructuredDocumentation",
										"src": "29858:479:1",
										"text": "Query if an address is an authorized operator for another address\n Only Applicable to NFT Tokens\n @param token The Hedera NFT token address to approve\n @param owner The address that owns the NFTs\n @param operator The address that acts on behalf of the owner\n @return responseCode The response code for the status of the request. SUCCESS is 22.\n @return approved True if `operator` is an approved operator for `owner`, false otherwise"
									},
									"functionSelector": "f49f40db",
									"id": 760,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "30351:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "30385:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "30377:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 748,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30377:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "30408:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "30400:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 750,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30400:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "30431:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "30423:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30423:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30367:78:1"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "30470:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "30464:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 755,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "30464:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "30489:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "30484:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 757,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "30484:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30463:35:1"
									},
									"scope": 1027,
									"src": "30342:157:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 761,
										"nodeType": "StructuredDocumentation",
										"src": "30505:309:1",
										"text": "Query if token account is frozen\n @param token The token address to check\n @param account The account address associated with the token\n @return responseCode The response code for the status of the request. SUCCESS is 22.\n @return frozen True if `account` is frozen for `token`"
									},
									"functionSelector": "46de0fb1",
									"id": 772,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isFrozen",
									"nameLocation": "30828:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "30845:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 772,
												"src": "30837:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 762,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30837:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "30860:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 772,
												"src": "30852:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 764,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30852:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30836:32:1"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "30909:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 772,
												"src": "30903:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 767,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "30903:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "frozen",
												"nameLocation": "30928:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 772,
												"src": "30923:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 769,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "30923:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30902:33:1"
									},
									"scope": 1027,
									"src": "30819:117:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 773,
										"nodeType": "StructuredDocumentation",
										"src": "30942:325:1",
										"text": "Query if token account has kyc granted\n @param token The token address to check\n @param account The account address associated with the token\n @return responseCode The response code for the status of the request. SUCCESS is 22.\n @return kycGranted True if `account` has kyc granted for `token`"
									},
									"functionSelector": "f2c31ff4",
									"id": 784,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isKyc",
									"nameLocation": "31281:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 778,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 775,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "31295:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "31287:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 774,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31287:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 777,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "31310:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "31302:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 776,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31302:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31286:32:1"
									},
									"returnParameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 780,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "31359:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "31353:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 779,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "31353:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 782,
												"mutability": "mutable",
												"name": "kycGranted",
												"nameLocation": "31378:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "31373:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 781,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "31373:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31352:37:1"
									},
									"scope": 1027,
									"src": "31272:118:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 785,
										"nodeType": "StructuredDocumentation",
										"src": "31396:175:1",
										"text": "Operation to delete token\n @param token The token address to be deleted\n @return responseCode The response code for the status of the request. SUCCESS is 22."
									},
									"functionSelector": "f069f712",
									"id": 792,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deleteToken",
									"nameLocation": "31585:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "31605:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "31597:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 786,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31597:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31596:15:1"
									},
									"returnParameters": {
										"id": 791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "31636:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "31630:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 789,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "31630:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31629:20:1"
									},
									"scope": 1027,
									"src": "31576:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 793,
										"nodeType": "StructuredDocumentation",
										"src": "31656:350:1",
										"text": "Query token custom fees\n @param token The token address to check\n @return responseCode The response code for the status of the request. SUCCESS is 22.\n @return fixedFees Set of fixed fees for `token`\n @return fractionalFees Set of fractional fees for `token`\n @return royaltyFees Set of royalty fees for `token`"
									},
									"functionSelector": "ae7611a0",
									"id": 812,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenCustomFees",
									"nameLocation": "32020:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "32047:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 812,
												"src": "32039:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 794,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32039:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32038:15:1"
									},
									"returnParameters": {
										"id": 811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 798,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "32094:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 812,
												"src": "32088:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 797,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "32088:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "fixedFees",
												"nameLocation": "32126:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 812,
												"src": "32108:27:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_FixedFee_$415_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IHederaTokenService.FixedFee[]"
												},
												"typeName": {
													"baseType": {
														"id": 800,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 799,
															"name": "FixedFee",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 415,
															"src": "32108:8:1"
														},
														"referencedDeclaration": 415,
														"src": "32108:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FixedFee_$415_storage_ptr",
															"typeString": "struct IHederaTokenService.FixedFee"
														}
													},
													"id": 801,
													"nodeType": "ArrayTypeName",
													"src": "32108:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_FixedFee_$415_storage_$dyn_storage_ptr",
														"typeString": "struct IHederaTokenService.FixedFee[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "fractionalFees",
												"nameLocation": "32160:14:1",
												"nodeType": "VariableDeclaration",
												"scope": 812,
												"src": "32137:37:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_FractionalFee_$428_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IHederaTokenService.FractionalFee[]"
												},
												"typeName": {
													"baseType": {
														"id": 804,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 803,
															"name": "FractionalFee",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 428,
															"src": "32137:13:1"
														},
														"referencedDeclaration": 428,
														"src": "32137:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FractionalFee_$428_storage_ptr",
															"typeString": "struct IHederaTokenService.FractionalFee"
														}
													},
													"id": 805,
													"nodeType": "ArrayTypeName",
													"src": "32137:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_FractionalFee_$428_storage_$dyn_storage_ptr",
														"typeString": "struct IHederaTokenService.FractionalFee[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "royaltyFees",
												"nameLocation": "32196:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 812,
												"src": "32176:31:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_RoyaltyFee_$441_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IHederaTokenService.RoyaltyFee[]"
												},
												"typeName": {
													"baseType": {
														"id": 808,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 807,
															"name": "RoyaltyFee",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 441,
															"src": "32176:10:1"
														},
														"referencedDeclaration": 441,
														"src": "32176:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoyaltyFee_$441_storage_ptr",
															"typeString": "struct IHederaTokenService.RoyaltyFee"
														}
													},
													"id": 809,
													"nodeType": "ArrayTypeName",
													"src": "32176:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_RoyaltyFee_$441_storage_$dyn_storage_ptr",
														"typeString": "struct IHederaTokenService.RoyaltyFee[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32087:121:1"
									},
									"scope": 1027,
									"src": "32011:198:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 813,
										"nodeType": "StructuredDocumentation",
										"src": "32215:263:1",
										"text": "Query token default freeze status\n @param token The token address to check\n @return responseCode The response code for the status of the request. SUCCESS is 22.\n @return defaultFreezeStatus True if `token` default freeze status is frozen."
									},
									"functionSelector": "a7daa18d",
									"id": 822,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenDefaultFreezeStatus",
									"nameLocation": "32492:27:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 815,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "32528:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "32520:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 814,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32520:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32519:15:1"
									},
									"returnParameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "32575:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "32569:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 817,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "32569:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "defaultFreezeStatus",
												"nameLocation": "32594:19:1",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "32589:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 819,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "32589:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32568:46:1"
									},
									"scope": 1027,
									"src": "32483:132:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 823,
										"nodeType": "StructuredDocumentation",
										"src": "32625:285:1",
										"text": "Query token default kyc status\n @param token The token address to check\n @return responseCode The response code for the status of the request. SUCCESS is 22.\n @return defaultKycStatus True if `token` default kyc status is KycNotApplicable and false if Revoked."
									},
									"functionSelector": "335e04c1",
									"id": 832,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenDefaultKycStatus",
									"nameLocation": "32924:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 825,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "32957:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 832,
												"src": "32949:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 824,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32949:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32948:15:1"
									},
									"returnParameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "33004:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 832,
												"src": "32998:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 827,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "32998:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "defaultKycStatus",
												"nameLocation": "33023:16:1",
												"nodeType": "VariableDeclaration",
												"scope": 832,
												"src": "33018:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 829,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "33018:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32997:43:1"
									},
									"scope": 1027,
									"src": "32915:126:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 833,
										"nodeType": "StructuredDocumentation",
										"src": "33047:215:1",
										"text": "Query token expiry info\n @param token The token address to check\n @return responseCode The response code for the status of the request. SUCCESS is 22.\n @return expiry Expiry info for `token`"
									},
									"functionSelector": "d614cdb8",
									"id": 843,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenExpiryInfo",
									"nameLocation": "33276:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "33303:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "33295:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 834,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33295:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33294:15:1"
									},
									"returnParameters": {
										"id": 842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "33350:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "33344:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 837,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "33344:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 841,
												"mutability": "mutable",
												"name": "expiry",
												"nameLocation": "33378:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "33364:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Expiry_$302_memory_ptr",
													"typeString": "struct IHederaTokenService.Expiry"
												},
												"typeName": {
													"id": 840,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 839,
														"name": "Expiry",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 302,
														"src": "33364:6:1"
													},
													"referencedDeclaration": 302,
													"src": "33364:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Expiry_$302_storage_ptr",
														"typeString": "struct IHederaTokenService.Expiry"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33343:42:1"
									},
									"scope": 1027,
									"src": "33267:119:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 844,
										"nodeType": "StructuredDocumentation",
										"src": "33392:239:1",
										"text": "Query fungible token info\n @param token The token address to check\n @return responseCode The response code for the status of the request. SUCCESS is 22.\n @return fungibleTokenInfo FungibleTokenInfo info for `token`"
									},
									"functionSelector": "3f28a19b",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getFungibleTokenInfo",
									"nameLocation": "33645:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 846,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "33674:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "33666:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 845,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33666:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33665:15:1"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "33721:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "33715:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 848,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "33715:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "fungibleTokenInfo",
												"nameLocation": "33760:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "33735:42:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FungibleTokenInfo_$384_memory_ptr",
													"typeString": "struct IHederaTokenService.FungibleTokenInfo"
												},
												"typeName": {
													"id": 851,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 850,
														"name": "FungibleTokenInfo",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 384,
														"src": "33735:17:1"
													},
													"referencedDeclaration": 384,
													"src": "33735:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FungibleTokenInfo_$384_storage_ptr",
														"typeString": "struct IHederaTokenService.FungibleTokenInfo"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33714:64:1"
									},
									"scope": 1027,
									"src": "33636:143:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "33785:214:1",
										"text": "Query token info\n @param token The token address to check\n @return responseCode The response code for the status of the request. SUCCESS is 22.\n @return tokenInfo TokenInfo info for `token`"
									},
									"functionSelector": "1f69565f",
									"id": 865,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenInfo",
									"nameLocation": "34013:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "34034:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "34026:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34026:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34025:15:1"
									},
									"returnParameters": {
										"id": 864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 860,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "34081:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "34075:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 859,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "34075:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 863,
												"mutability": "mutable",
												"name": "tokenInfo",
												"nameLocation": "34112:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "34095:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenInfo_$376_memory_ptr",
													"typeString": "struct IHederaTokenService.TokenInfo"
												},
												"typeName": {
													"id": 862,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 861,
														"name": "TokenInfo",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 376,
														"src": "34095:9:1"
													},
													"referencedDeclaration": 376,
													"src": "34095:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenInfo_$376_storage_ptr",
														"typeString": "struct IHederaTokenService.TokenInfo"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34074:48:1"
									},
									"scope": 1027,
									"src": "34004:119:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 866,
										"nodeType": "StructuredDocumentation",
										"src": "34129:284:1",
										"text": "Query token KeyValue\n @param token The token address to check\n @param keyType The keyType of the desired KeyValue\n @return responseCode The response code for the status of the request. SUCCESS is 22.\n @return key KeyValue info for key of type `keyType`"
									},
									"functionSelector": "3c4dd32e",
									"id": 878,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenKey",
									"nameLocation": "34427:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "34447:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "34439:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 867,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34439:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "keyType",
												"nameLocation": "34459:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "34454:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 869,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "34454:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34438:29:1"
									},
									"returnParameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "34508:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "34502:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 872,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "34502:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "34538:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "34522:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_KeyValue_$313_memory_ptr",
													"typeString": "struct IHederaTokenService.KeyValue"
												},
												"typeName": {
													"id": 875,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 874,
														"name": "KeyValue",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 313,
														"src": "34522:8:1"
													},
													"referencedDeclaration": 313,
													"src": "34522:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_KeyValue_$313_storage_ptr",
														"typeString": "struct IHederaTokenService.KeyValue"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34501:41:1"
									},
									"scope": 1027,
									"src": "34418:125:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 879,
										"nodeType": "StructuredDocumentation",
										"src": "34549:322:1",
										"text": "Query non fungible token info\n @param token The token address to check\n @param serialNumber The NFT serialNumber to check\n @return responseCode The response code for the status of the request. SUCCESS is 22.\n @return nonFungibleTokenInfo NonFungibleTokenInfo info for `token` `serialNumber`"
									},
									"functionSelector": "287e1da8",
									"id": 891,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getNonFungibleTokenInfo",
									"nameLocation": "34885:23:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 881,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "34917:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 891,
												"src": "34909:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 880,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34909:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "serialNumber",
												"nameLocation": "34930:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 891,
												"src": "34924:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 882,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "34924:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34908:35:1"
									},
									"returnParameters": {
										"id": 890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 886,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "34984:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 891,
												"src": "34978:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 885,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "34978:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "nonFungibleTokenInfo",
												"nameLocation": "35026:20:1",
												"nodeType": "VariableDeclaration",
												"scope": 891,
												"src": "34998:48:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_NonFungibleTokenInfo_$404_memory_ptr",
													"typeString": "struct IHederaTokenService.NonFungibleTokenInfo"
												},
												"typeName": {
													"id": 888,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 887,
														"name": "NonFungibleTokenInfo",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 404,
														"src": "34998:20:1"
													},
													"referencedDeclaration": 404,
													"src": "34998:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_NonFungibleTokenInfo_$404_storage_ptr",
														"typeString": "struct IHederaTokenService.NonFungibleTokenInfo"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34977:70:1"
									},
									"scope": 1027,
									"src": "34876:172:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 892,
										"nodeType": "StructuredDocumentation",
										"src": "35054:225:1",
										"text": "Operation to freeze token account\n @param token The token address\n @param account The account address to be frozen\n @return responseCode The response code for the status of the request. SUCCESS is 22."
									},
									"functionSelector": "5b8f8584",
									"id": 901,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "freezeToken",
									"nameLocation": "35293:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "35313:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "35305:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 893,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35305:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 896,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "35328:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "35320:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 895,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35320:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35304:32:1"
									},
									"returnParameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 899,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "35377:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "35371:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 898,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "35371:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35370:20:1"
									},
									"scope": 1027,
									"src": "35284:107:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 902,
										"nodeType": "StructuredDocumentation",
										"src": "35397:229:1",
										"text": "Operation to unfreeze token account\n @param token The token address\n @param account The account address to be unfrozen\n @return responseCode The response code for the status of the request. SUCCESS is 22."
									},
									"functionSelector": "52f91387",
									"id": 911,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "unfreezeToken",
									"nameLocation": "35640:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "35662:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 911,
												"src": "35654:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 903,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "35677:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 911,
												"src": "35669:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 905,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35653:32:1"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "35726:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 911,
												"src": "35720:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 908,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "35720:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35719:20:1"
									},
									"scope": 1027,
									"src": "35631:109:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 912,
										"nodeType": "StructuredDocumentation",
										"src": "35746:231:1",
										"text": "Operation to grant kyc to token account\n @param token The token address\n @param account The account address to grant kyc\n @return responseCode The response code for the status of the request. SUCCESS is 22."
									},
									"functionSelector": "8f8d7f99",
									"id": 921,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantTokenKyc",
									"nameLocation": "35991:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "36013:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "36005:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 913,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "36005:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 916,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "36028:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "36020:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 915,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "36020:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36004:32:1"
									},
									"returnParameters": {
										"id": 920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 919,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "36077:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "36071:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 918,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "36071:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36070:20:1"
									},
									"scope": 1027,
									"src": "35982:109:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 922,
										"nodeType": "StructuredDocumentation",
										"src": "36097:233:1",
										"text": "Operation to revoke kyc to token account\n @param token The token address\n @param account The account address to revoke kyc\n @return responseCode The response code for the status of the request. SUCCESS is 22."
									},
									"functionSelector": "af99c633",
									"id": 931,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeTokenKyc",
									"nameLocation": "36344:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 927,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "36367:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 931,
												"src": "36359:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 923,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "36359:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "36382:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 931,
												"src": "36374:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 925,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "36374:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36358:32:1"
									},
									"returnParameters": {
										"id": 930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 929,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "36431:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 931,
												"src": "36425:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 928,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "36425:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36424:20:1"
									},
									"scope": 1027,
									"src": "36335:110:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 932,
										"nodeType": "StructuredDocumentation",
										"src": "36451:173:1",
										"text": "Operation to pause token\n @param token The token address to be paused\n @return responseCode The response code for the status of the request. SUCCESS is 22."
									},
									"functionSelector": "7c41ad2c",
									"id": 939,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "pauseToken",
									"nameLocation": "36638:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "36657:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 939,
												"src": "36649:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 933,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "36649:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36648:15:1"
									},
									"returnParameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "36688:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 939,
												"src": "36682:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 936,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "36682:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36681:20:1"
									},
									"scope": 1027,
									"src": "36629:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 940,
										"nodeType": "StructuredDocumentation",
										"src": "36708:177:1",
										"text": "Operation to unpause token\n @param token The token address to be unpaused\n @return responseCode The response code for the status of the request. SUCCESS is 22."
									},
									"functionSelector": "3b3bff0f",
									"id": 947,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "unpauseToken",
									"nameLocation": "36899:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 942,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "36920:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "36912:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 941,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "36912:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36911:15:1"
									},
									"returnParameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "36951:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "36945:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 944,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "36945:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36944:20:1"
									},
									"scope": 1027,
									"src": "36890:75:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 948,
										"nodeType": "StructuredDocumentation",
										"src": "36971:290:1",
										"text": "Operation to wipe fungible tokens from account\n @param token The token address\n @param account The account address to revoke kyc\n @param amount The number of tokens to wipe\n @return responseCode The response code for the status of the request. SUCCESS is 22."
									},
									"functionSelector": "9790686d",
									"id": 959,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "wipeTokenAccount",
									"nameLocation": "37275:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "37309:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 959,
												"src": "37301:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 949,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37301:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "37332:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 959,
												"src": "37324:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 951,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37324:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 954,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "37356:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 959,
												"src": "37349:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 953,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "37349:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37291:77:1"
									},
									"returnParameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "37393:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 959,
												"src": "37387:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 956,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "37387:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37386:20:1"
									},
									"scope": 1027,
									"src": "37266:141:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 960,
										"nodeType": "StructuredDocumentation",
										"src": "37413:309:1",
										"text": "Operation to wipe non fungible tokens from account\n @param token The token address\n @param account The account address to revoke kyc\n @param  serialNumbers The serial numbers of token to wipe\n @return responseCode The response code for the status of the request. SUCCESS is 22."
									},
									"functionSelector": "f7f38e26",
									"id": 972,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "wipeTokenAccountNFT",
									"nameLocation": "37736:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "37773:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "37765:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 961,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37765:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "37796:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "37788:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 963,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37788:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "serialNumbers",
												"nameLocation": "37828:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "37813:28:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_int64_$dyn_memory_ptr",
													"typeString": "int64[]"
												},
												"typeName": {
													"baseType": {
														"id": 965,
														"name": "int64",
														"nodeType": "ElementaryTypeName",
														"src": "37813:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int64",
															"typeString": "int64"
														}
													},
													"id": 966,
													"nodeType": "ArrayTypeName",
													"src": "37813:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_int64_$dyn_storage_ptr",
														"typeString": "int64[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37755:92:1"
									},
									"returnParameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 970,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "37872:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "37866:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 969,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "37866:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37865:20:1"
									},
									"scope": 1027,
									"src": "37727:159:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 973,
										"nodeType": "StructuredDocumentation",
										"src": "37892:234:1",
										"text": "Operation to update token info\n @param token The token address\n @param tokenInfo The hedera token info to update token with\n @return responseCode The response code for the status of the request. SUCCESS is 22."
									},
									"functionSelector": "18370d34",
									"id": 983,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateTokenInfo",
									"nameLocation": "38140:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "38164:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 983,
												"src": "38156:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 974,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38156:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "tokenInfo",
												"nameLocation": "38190:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 983,
												"src": "38171:28:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_HederaToken_$341_memory_ptr",
													"typeString": "struct IHederaTokenService.HederaToken"
												},
												"typeName": {
													"id": 977,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 976,
														"name": "HederaToken",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 341,
														"src": "38171:11:1"
													},
													"referencedDeclaration": 341,
													"src": "38171:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_HederaToken_$341_storage_ptr",
														"typeString": "struct IHederaTokenService.HederaToken"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38155:45:1"
									},
									"returnParameters": {
										"id": 982,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 981,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "38241:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 983,
												"src": "38235:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 980,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "38235:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38234:20:1"
									},
									"scope": 1027,
									"src": "38131:124:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 984,
										"nodeType": "StructuredDocumentation",
										"src": "38261:228:1",
										"text": "Operation to update token expiry info\n @param token The token address\n @param expiryInfo The hedera token expiry info\n @return responseCode The response code for the status of the request. SUCCESS is 22."
									},
									"functionSelector": "593d6e82",
									"id": 994,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateTokenExpiryInfo",
									"nameLocation": "38503:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "38533:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "38525:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 985,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38525:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "expiryInfo",
												"nameLocation": "38554:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "38540:24:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Expiry_$302_memory_ptr",
													"typeString": "struct IHederaTokenService.Expiry"
												},
												"typeName": {
													"id": 988,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 987,
														"name": "Expiry",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 302,
														"src": "38540:6:1"
													},
													"referencedDeclaration": 302,
													"src": "38540:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Expiry_$302_storage_ptr",
														"typeString": "struct IHederaTokenService.Expiry"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38524:41:1"
									},
									"returnParameters": {
										"id": 993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "38606:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "38600:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 991,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "38600:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38599:20:1"
									},
									"scope": 1027,
									"src": "38494:126:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 995,
										"nodeType": "StructuredDocumentation",
										"src": "38626:208:1",
										"text": "Operation to update token expiry info\n @param token The token address\n @param keys The token keys\n @return responseCode The response code for the status of the request. SUCCESS is 22."
									},
									"functionSelector": "6fc3cbaf",
									"id": 1006,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateTokenKeys",
									"nameLocation": "38848:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1002,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "38872:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "38864:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 996,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38864:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1001,
												"mutability": "mutable",
												"name": "keys",
												"nameLocation": "38897:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "38879:22:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_TokenKey_$319_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IHederaTokenService.TokenKey[]"
												},
												"typeName": {
													"baseType": {
														"id": 999,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 998,
															"name": "TokenKey",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 319,
															"src": "38879:8:1"
														},
														"referencedDeclaration": 319,
														"src": "38879:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenKey_$319_storage_ptr",
															"typeString": "struct IHederaTokenService.TokenKey"
														}
													},
													"id": 1000,
													"nodeType": "ArrayTypeName",
													"src": "38879:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_TokenKey_$319_storage_$dyn_storage_ptr",
														"typeString": "struct IHederaTokenService.TokenKey[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38863:39:1"
									},
									"returnParameters": {
										"id": 1005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "38943:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "38937:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 1003,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "38937:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38936:20:1"
									},
									"scope": 1027,
									"src": "38839:118:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1007,
										"nodeType": "StructuredDocumentation",
										"src": "38963:265:1",
										"text": "Query if valid token found for the given address\n @param token The token address\n @return responseCode The response code for the status of the request. SUCCESS is 22.    \n @return isToken True if valid token found for the given address     "
									},
									"functionSelector": "19f37361",
									"id": 1016,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isToken",
									"nameLocation": "39242:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1010,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1009,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "39258:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "39250:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1008,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39250:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39249:15:1"
									},
									"returnParameters": {
										"id": 1015,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "39307:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "39301:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 1011,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "39301:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1014,
												"mutability": "mutable",
												"name": "isToken",
												"nameLocation": "39326:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "39321:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1013,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "39321:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39300:34:1"
									},
									"scope": 1027,
									"src": "39233:102:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1017,
										"nodeType": "StructuredDocumentation",
										"src": "39341:302:1",
										"text": "Query to return the token type for a given address\n @param token The token address\n @return responseCode The response code for the status of the request. SUCCESS is 22.    \n @return tokenType the token type. 0 is FUNGIBLE_COMMON, 1 is NON_FUNGIBLE_UNIQUE, -1 is UNRECOGNIZED   "
									},
									"functionSelector": "93272baf",
									"id": 1026,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenType",
									"nameLocation": "39657:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1020,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "39678:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "39670:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1018,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39670:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39669:15:1"
									},
									"returnParameters": {
										"id": 1025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "responseCode",
												"nameLocation": "39726:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "39720:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 1021,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "39720:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1024,
												"mutability": "mutable",
												"name": "tokenType",
												"nameLocation": "39746:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "39740:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int32",
													"typeString": "int32"
												},
												"typeName": {
													"id": 1023,
													"name": "int32",
													"nodeType": "ElementaryTypeName",
													"src": "39740:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int32",
														"typeString": "int32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39719:37:1"
									},
									"scope": 1027,
									"src": "39648:109:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1028,
							"src": "106:39653:1",
							"usedErrors": []
						}
					],
					"src": "39:39721:1"
				},
				"id": 1
			}
		}
	}
}